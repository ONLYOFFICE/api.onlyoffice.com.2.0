"use strict";(self.webpackChunk_docspace_components=self.webpackChunk_docspace_components||[]).push([[7957],{"./backdrop/backdrop.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),___WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./backdrop/index.js"),_button__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./button/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Backdrop",component:___WEBPACK_IMPORTED_MODULE_1__.Z,subcomponents:{Button:_button__WEBPACK_IMPORTED_MODULE_2__.Z},argTypes:{onClick:{action:"On Hide",table:{disable:!0}}},parameters:{docs:{description:{component:"Backdrop for displaying modal dialogs or other components"}}}},Default=(args=>{const[isVisible,setIsVisible]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(args.visible),toggleVisible=()=>setIsVisible(!isVisible);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_button__WEBPACK_IMPORTED_MODULE_2__.Z,{label:"Show Backdrop",primary:!0,size:"small",onClick:toggleVisible}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.Z,{...args,visible:isVisible,onClick:e=>{args.onClick(e),toggleVisible()}})]})}).bind({});Default.args={withBackground:!0},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'args => {\n  const [isVisible, setIsVisible] = useState(args.visible);\n  const toggleVisible = () => setIsVisible(!isVisible);\n  return <>\r\n      <Button label="Show Backdrop" primary size="small" onClick={toggleVisible} />\r\n      <Backdrop {...args} visible={isVisible} onClick={e => {\n      args.onClick(e);\n      toggleVisible(false);\n    }} />\r\n    </>;\n}',...Default.parameters?.docs?.source}}};const __namedExportsOrder=["Default"]}}]);