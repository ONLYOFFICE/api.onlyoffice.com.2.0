{"version":3,"file":"components-main-button-mobile-MainButtonMobile-stories.3678f15f.iframe.bundle.js","mappings":";;;AAwCA;;;;AAIA;;;;;;;;;;;;;;;;AAgBA;;;;;;;;;;;;;AAeA;;;;;AAMA;;;AAIA;AAGA;AACA;;;AAGA;AACA;AAGA;;;AAGA;;;AAGA;;;AAGA;;AAKA;AACA;AAGA;AACA;AACA;;;AAGA;AAGA;AACA;AAEA;;AAEA;;AAEA;;;;;;;;;AASA;AACA;;;AAGA;AACA;;;;;AAKA;;;;;;;;;;;;AAeA;;;;AAKA;;;;AAIA;;;;AAIA;;;;;AAKA;;;;;;AASA;;;;;AAQA;;;;;;AAUA;;AAEA;AAIA;AAGA;;;;AAMA;;AAOA;;;AAMA;AACA;AAMA;AAGA;;AAEA;;;AAQA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;;;;;;;;;;;;;;;;AAgBA;;;;AAIA;;;;;;;;;AAWA;;;;;;AAQA;;;AAKA;;;AAMA;AAGA;;;AAKA;;;;;;AAMA;AAIA;AAwBA;;;;AChUA;AAGA;;;;ACdA;;;;;;AAOA;AC1BA;AACA;AACA;;;;AAKA;;;;;;;AASA;;;;;;AAMA;;;;;;AAQA;;;;;;;AAUA;;;;;;AAMA;;;;;AASA;ACpDA;;;AAGA;;AAOA;;;AAKA;AAGA;;AAEA;;AAIA;AAGA;;AAEA;AAGA;;AAGA;AACA;;AAEA;;AAEA;AAGA;;;;;;AAUA","sources":["webpack://@docspace/shared/./components/main-button-mobile/MainButtonMobile.styled.ts","webpack://@docspace/shared/./components/main-button-mobile/MainButtonMobile.tsx","webpack://@docspace/shared/","webpack://@docspace/shared/./components/icon-button/IconButton.styled.ts","webpack://@docspace/shared/./components/text/Text.styled.ts"],"sourcesContent":["// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport styled, { css } from \"styled-components\";\r\nimport { isMobile } from \"react-device-detect\";\r\n\r\nimport { mobile, tablet } from \"../../utils\";\r\n\r\nimport { Base } from \"../../themes\";\r\nimport { DropDown } from \"../drop-down\";\r\nimport { DropDownItem } from \"../drop-down-item\";\r\nimport { FloatingButton } from \"../floating-button\";\r\nimport { ProgressBarMobileDefaultStyles } from \"./MainButtonMobile.types\";\r\n\r\nconst StyledFloatingButton = styled(FloatingButton)`\r\n  position: relative;\r\n  z-index: 1010;\r\n  background: ${(props) => props.theme.mainButtonMobile.buttonColor};\r\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n\r\n  .circle__background {\r\n    background: ${(props) => props.theme.mainButtonMobile.buttonColor};\r\n  }\r\n\r\n  .circle__mask + div {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    div {\r\n      padding-top: 0;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n    }\r\n  }\r\n\r\n  ${(props) =>\r\n    props.percent === 0 &&\r\n    css`\r\n      .circle__mask {\r\n        clip: none;\r\n      }\r\n\r\n      .circle__fill {\r\n        animation: none;\r\n        transform: none;\r\n        background: none !important;\r\n      }\r\n    `}\r\n\r\n  .circle__mask .circle__fill {\r\n    background-color: ${(props) =>\r\n      props.theme.mainButtonMobile.circleBackground};\r\n  }\r\n\r\n  svg {\r\n    path {\r\n      fill: ${(props) => props.theme.mainButtonMobile.iconFill};\r\n    }\r\n  }\r\n`;\r\nStyledFloatingButton.defaultProps = { theme: Base };\r\n\r\nconst mobileDropDown = css`\r\n  @media ${mobile} {\r\n    width: ${(props) => props.theme.mainButtonMobile.dropDown.mobile.width};\r\n  }\r\n\r\n  right: ${(props) => props.theme.mainButtonMobile.dropDown.mobile.right};\r\n  ${(props) =>\r\n    props.theme.interfaceDirection === \"rtl\" &&\r\n    css`\r\n      left: ${props.theme.mainButtonMobile.dropDown.mobile.right};\r\n      right: unset;\r\n    `}\r\n  bottom: ${(props) => props.theme.mainButtonMobile.dropDown.mobile.bottom};\r\n\r\n  .dialog-background-scroll {\r\n    background: ${(props) => props.theme.backgroundColor} !important;\r\n  }\r\n  .section-scroll {\r\n    background: ${(props) =>\r\n      props.theme.mainButtonMobile.buttonOptions.backgroundColor};\r\n  }\r\n`;\r\n\r\nconst StyledRenderItem = styled.div`\r\n  background: ${(props) => props.theme.backgroundColor};\r\n`;\r\n\r\nconst StyledDropDown = styled(DropDown)<{ heightProp?: string }>`\r\n  position: ${(props) => props.theme.mainButtonMobile.dropDown.position};\r\n  width: ${(props) => props.theme.mainButtonMobile.dropDown.width};\r\n  max-width: calc(100vw - 48px);\r\n\r\n  ${(props) =>\r\n    props.theme.interfaceDirection === \"rtl\"\r\n      ? css`\r\n          left: ${props.theme.mainButtonMobile.dropDown.right};\r\n        `\r\n      : css`\r\n          right: ${props.theme.mainButtonMobile.dropDown.right};\r\n        `}\r\n  bottom: ${(props) => props.theme.mainButtonMobile.dropDown.bottom};\r\n\r\n  z-index: ${(props) => props.theme.mainButtonMobile.dropDown.zIndex};\r\n  height: auto;\r\n\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n\r\n  padding: 0px;\r\n\r\n  @media ${tablet} {\r\n    height: ${(props) => props.heightProp};\r\n  }\r\n\r\n  @media ${mobile} {\r\n    ${mobileDropDown}\r\n  }\r\n\r\n  .section-scroll,\r\n  .scroll-body {\r\n    ${({ theme }) =>\r\n      theme.interfaceDirection === \"rtl\"\r\n        ? `padding-left: 0px !important;`\r\n        : `padding-right: 0px !important;`}\r\n  }\r\n\r\n  .separator-wrapper {\r\n    padding: 12px 24px;\r\n  }\r\n\r\n  .is-separator {\r\n    height: 1px !important;\r\n    width: calc(100% - 48px);\r\n    padding: 0 !important;\r\n    margin: 12px 24px !important;\r\n    background-color: ${(props) =>\r\n      props.theme.mainButtonMobile.dropDown.separatorBackground};\r\n  }\r\n\r\n  .drop-down-item-button {\r\n    color: ${(props) => props.theme.mainButtonMobile.dropDown.buttonColor};\r\n\r\n    svg {\r\n      path[fill] {\r\n        fill: ${(props) => props.theme.mainButtonMobile.dropDown.buttonColor};\r\n      }\r\n\r\n      path[stroke] {\r\n        stroke: ${(props) => props.theme.mainButtonMobile.dropDown.buttonColor};\r\n      }\r\n    }\r\n\r\n    &:hover {\r\n      background-color: ${(props) =>\r\n        isMobile\r\n          ? props.theme.mainButtonMobile.buttonOptions.backgroundColor\r\n          : props.theme.mainButtonMobile.dropDown.hoverButtonColor};\r\n    }\r\n  }\r\n\r\n  .action-mobile-button {\r\n    width: 100%;\r\n    background-color: ${(props) =>\r\n      props.theme.mainButtonMobile.dropDown.backgroundActionMobile};\r\n    border-radius: 3px;\r\n    font-size: 13px;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nStyledDropDown.defaultProps = { theme: Base };\r\n\r\nconst StyledDropDownItem = styled(DropDownItem)`\r\n  padding: 6px 23px;\r\n\r\n  .drop-down-icon {\r\n    height: 22px;\r\n  }\r\n`;\r\n\r\nconst StyledButtonOptions = styled.div<{ withoutButton?: boolean }>`\r\n  padding: 16px 0;\r\n  background-color: ${(props) =>\r\n    props.withoutButton\r\n      ? props.theme.mainButtonMobile.buttonWrapper.background\r\n      : props.theme.mainButtonMobile.buttonOptions.backgroundColor};\r\n  color: ${(props) => props.theme.mainButtonMobile.buttonOptions.color};\r\n`;\r\n\r\nStyledButtonOptions.defaultProps = { theme: Base };\r\n\r\nconst StyledContainerAction = styled.div`\r\n  padding: 16px 0px;\r\n\r\n  .sublevel {\r\n    ${({ theme }) =>\r\n      theme.interfaceDirection === \"rtl\"\r\n        ? `padding-right: 48px;`\r\n        : `padding-left: 48px;`}\r\n  }\r\n`;\r\n\r\nconst StyledButtonWrapper = styled.div<{\r\n  isOpenButton?: boolean;\r\n  isUploading?: boolean;\r\n}>`\r\n  padding: 0 24px 34px;\r\n\r\n  display: ${(props) => (props.isOpenButton ? \"none\" : \"block\")};\r\n  background-color: ${(props) =>\r\n    props.isUploading\r\n      ? props.theme.mainButtonMobile?.buttonWrapper.uploadingBackground\r\n      : props.theme.mainButtonMobile?.buttonWrapper.background};\r\n`;\r\n\r\nStyledButtonWrapper.defaultProps = { theme: Base };\r\n\r\nconst StyledProgressContainer = styled.div<{ isUploading?: boolean }>`\r\n  display: ${(props) => (props.isUploading ? \"flex\" : \"none\")};\r\n  flex-direction: column;\r\n  background-color: ${(props) =>\r\n    props.isUploading\r\n      ? props.theme.mainButtonMobile?.buttonWrapper.uploadingBackground\r\n      : props.theme.mainButtonMobile?.buttonWrapper.background};\r\n  cursor: default;\r\n  padding: 0 24px 34px;\r\n`;\r\n\r\nStyledProgressContainer.defaultProps = {\r\n  theme: Base,\r\n};\r\n\r\nStyledButtonWrapper.defaultProps = { theme: Base };\r\n\r\nconst StyledProgressBarContainer = styled.div<{ isUploading?: boolean }>`\r\n  display: ${(props) => (props.isUploading ? \"flex\" : \"none\")};\r\n\r\n  align-items: center;\r\n\r\n  flex-wrap: wrap;\r\n\r\n  width: 100%;\r\n\r\n  box-sizing: border-box;\r\n\r\n  height: 60px;\r\n  padding-top: 26px;\r\n\r\n  .progress-container {\r\n    width: 100%;\r\n\r\n    display: flex;\r\n\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    .progress-header {\r\n      width: 50%;\r\n\r\n      line-height: 16px;\r\n\r\n      color: ${(props) => props.theme.mainButtonMobile.textColor};\r\n      &:hover {\r\n        cursor: pointer;\r\n      }\r\n    }\r\n\r\n    .progress_info-container {\r\n      width: 50%;\r\n\r\n      display: flex;\r\n      align-items: center;\r\n\r\n      .progress_count {\r\n        width: calc(100% - 26px);\r\n\r\n        line-height: 16px;\r\n        color: ${(props) => props.theme.mainButtonMobile.textColor};\r\n\r\n        text-align: right;\r\n        margin-right: 12px;\r\n        ${(props) =>\r\n          props.theme.interfaceDirection === \"rtl\" &&\r\n          css`\r\n            margin-left: 12px;\r\n            margin-right: 0px;\r\n          `}\r\n      }\r\n\r\n      .progress_icon {\r\n        svg {\r\n          path {\r\n            fill: ${(props) => props.theme.mainButtonMobile.bar.icon};\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nStyledProgressBarContainer.defaultProps = { theme: Base };\r\n\r\nconst StyledMobileProgressBar = styled.div`\r\n  width: 100%;\r\n  height: 4px;\r\n  background-color: ${(props) =>\r\n    props.theme.mainButtonMobile.mobileProgressBarBackground};\r\n  border-radius: 2px;\r\n  margin-top: 14px;\r\n`;\r\n\r\nStyledMobileProgressBar.defaultProps = { theme: Base };\r\n\r\nconst StyledBar = styled.div<{ uploadPercent: number }>`\r\n  width: ${(props) => props.uploadPercent}%;\r\n  height: 4px;\r\n  opacity: 1;\r\n`;\r\n\r\nconst StyledAlertIcon = styled.div`\r\n  position: absolute;\r\n  z-index: 1010;\r\n  width: 12px;\r\n  height: 12px;\r\n  top: 10px;\r\n  ${(props) =>\r\n    props.theme.interfaceDirection === \"rtl\" ? \"left: 10px;\" : \"right: 10px;\"}\r\n`;\r\n\r\nStyledBar.defaultProps = { theme: Base };\r\n\r\nexport {\r\n  StyledFloatingButton,\r\n  StyledDropDown,\r\n  StyledDropDownItem,\r\n  StyledContainerAction,\r\n  StyledProgressBarContainer,\r\n  StyledMobileProgressBar,\r\n  StyledProgressContainer,\r\n  StyledBar,\r\n  StyledButtonWrapper,\r\n  StyledButtonOptions,\r\n  StyledAlertIcon,\r\n  StyledRenderItem,\r\n};\r\n\r\nconst getDefaultProgressStyles = ({\r\n  $currentColorScheme,\r\n  theme,\r\n  error,\r\n}: ProgressBarMobileDefaultStyles) =>\r\n  $currentColorScheme &&\r\n  css`\r\n    background: ${error\r\n      ? theme.mainButtonMobile.bar.errorBackground\r\n      : theme.isBase\r\n        ? $currentColorScheme?.main?.accent\r\n        : \"#FFFFFF\"};\r\n  `;\r\n\r\nconst StyledProgressBarTheme = styled(StyledBar)(getDefaultProgressStyles);\r\n\r\nexport { StyledProgressBarTheme };\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport React, { useState, useRef, useEffect, useLayoutEffect } from \"react\";\r\nimport { isIOS, isMobile } from \"react-device-detect\";\r\nimport styled from \"styled-components\";\r\n\r\nimport ButtonAlertReactSvg from \"PUBLIC_DIR/images/button.alert.react.svg\";\r\n\r\nimport { IconSizeType, classNames, commonIconsStyles } from \"../../utils\";\r\n\r\nimport { Scrollbar } from \"../scrollbar\";\r\nimport { Backdrop } from \"../backdrop\";\r\nimport { FloatingButtonIcons } from \"../floating-button\";\r\n\r\nimport {\r\n  StyledFloatingButton,\r\n  StyledDropDown,\r\n  StyledDropDownItem,\r\n  StyledContainerAction,\r\n  StyledProgressContainer,\r\n  StyledButtonOptions,\r\n  StyledAlertIcon,\r\n  StyledRenderItem,\r\n} from \"./MainButtonMobile.styled\";\r\n\r\nimport SubmenuItem from \"./sub-components/SubmenuItem\";\r\nimport {\r\n  ActionOption,\r\n  ButtonOption,\r\n  MainButtonMobileProps,\r\n  ProgressOption,\r\n} from \"./MainButtonMobile.types\";\r\nimport { ProgressBarMobile } from \"./sub-components/ProgressBar\";\r\n\r\nconst StyledButtonAlertIcon = styled(ButtonAlertReactSvg)`\r\n  cursor: pointer;\r\n  vertical-align: top !important;\r\n  ${commonIconsStyles};\r\n`;\r\n\r\nconst MainButtonMobile = (props: MainButtonMobileProps) => {\r\n  const {\r\n    className,\r\n    style,\r\n    opened,\r\n\r\n    actionOptions,\r\n    progressOptions,\r\n    buttonOptions,\r\n    percent,\r\n\r\n    withoutButton,\r\n    manualWidth,\r\n    isOpenButton,\r\n    onClose,\r\n\r\n    alert,\r\n    withMenu,\r\n    onClick,\r\n    onAlertClick,\r\n    withAlertClick,\r\n    dropdownStyle,\r\n  } = props;\r\n\r\n  const [isOpen, setIsOpen] = useState(opened);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [height, setHeight] = useState(`${window.innerHeight - 48}px`);\r\n  const [openedSubmenuKey, setOpenedSubmenuKey] = useState(\"\");\r\n\r\n  const divRef = useRef<HTMLDivElement | null>(null);\r\n  const ref = useRef<HTMLDivElement | null>(null);\r\n  const dropDownRef = useRef(null);\r\n\r\n  const scrollElem = useRef<null | HTMLElement>(null);\r\n  const currentPosition = useRef<null | number>(null);\r\n  const prevPosition = useRef<null | number>(null);\r\n  const buttonBackground = useRef<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    setIsOpen(opened);\r\n  }, [opened]);\r\n\r\n  const setDialogBackground = (scrollHeight: number) => {\r\n    if (!buttonBackground) {\r\n      document\r\n        .getElementsByClassName(\"section-scroll\")[0]\r\n        .classList.add(\"dialog-background-scroll\");\r\n    }\r\n    if (currentPosition.current && currentPosition.current < scrollHeight / 3) {\r\n      buttonBackground.current = false;\r\n    }\r\n  };\r\n\r\n  const setButtonBackground = React.useCallback(() => {\r\n    buttonBackground.current = true;\r\n    if (scrollElem.current)\r\n      scrollElem.current.classList.remove(\"dialog-background-scroll\");\r\n  }, []);\r\n\r\n  const scrollChangingBackground = React.useCallback(() => {\r\n    if (scrollElem.current) {\r\n      currentPosition.current = scrollElem.current.scrollTop;\r\n      const scrollHeight = scrollElem.current.scrollHeight;\r\n\r\n      if (currentPosition < prevPosition) {\r\n        setDialogBackground(scrollHeight);\r\n      } else if (\r\n        currentPosition.current &&\r\n        prevPosition.current &&\r\n        currentPosition.current > 0 &&\r\n        currentPosition.current > prevPosition.current\r\n      ) {\r\n        setButtonBackground();\r\n      }\r\n      prevPosition.current = currentPosition.current;\r\n    }\r\n  }, [setButtonBackground]);\r\n\r\n  useEffect(() => {\r\n    if (!isIOS) return;\r\n\r\n    scrollElem.current = document.getElementsByClassName(\r\n      \"section-scroll\",\r\n    )[0] as HTMLElement;\r\n\r\n    if (scrollElem.current && scrollElem.current.scrollTop === 0) {\r\n      scrollElem.current.classList.add(\"dialog-background-scroll\");\r\n    }\r\n\r\n    scrollElem.current.addEventListener(\"scroll\", scrollChangingBackground);\r\n\r\n    return () => {\r\n      if (scrollElem.current)\r\n        scrollElem.current.removeEventListener(\r\n          \"scroll\",\r\n          scrollChangingBackground,\r\n        );\r\n    };\r\n  }, [scrollChangingBackground]);\r\n\r\n  const onAlertClickAction = () => {\r\n    if (withAlertClick) onAlertClick?.();\r\n  };\r\n\r\n  const recalculateHeight = React.useCallback(() => {\r\n    if (divRef.current) {\r\n      const h =\r\n        divRef?.current?.getBoundingClientRect()?.height || window.innerHeight;\r\n\r\n      if (h >= window.innerHeight) setHeight(`${window.innerHeight - 48}px`);\r\n      else setHeight(`${h}px`);\r\n    }\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    if (divRef.current) {\r\n      const { height: h } = divRef.current.getBoundingClientRect();\r\n      setHeight(`${h}px`);\r\n    }\r\n  }, [isOpen]);\r\n\r\n  useLayoutEffect(() => {\r\n    recalculateHeight();\r\n  }, [isOpen, isOpenButton, isUploading, recalculateHeight]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", recalculateHeight);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", recalculateHeight);\r\n    };\r\n  }, [recalculateHeight]);\r\n\r\n  const toggle = (value: boolean) => {\r\n    if (isOpenButton && onClose) {\r\n      onClose();\r\n    }\r\n\r\n    return setIsOpen(value);\r\n  };\r\n\r\n  const onMainButtonClick = (e: React.MouseEvent) => {\r\n    if (!withMenu) {\r\n      onClick?.(e);\r\n      return;\r\n    }\r\n\r\n    toggle(!isOpen);\r\n  };\r\n\r\n  const outsideClick = (e: React.MouseEvent) => {\r\n    const target = e.target as HTMLElement;\r\n    if (isOpen && ref.current && ref.current.contains(target)) return;\r\n    toggle(false);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (progressOptions) {\r\n      const openProgressOptions = progressOptions.filter(\r\n        (option: ProgressOption) => option.open,\r\n      );\r\n\r\n      setIsUploading(openProgressOptions.length > 0);\r\n    }\r\n  }, [progressOptions]);\r\n\r\n  const noHover = isMobile;\r\n\r\n  const renderItems = () => {\r\n    return (\r\n      <StyledRenderItem ref={divRef}>\r\n        <StyledContainerAction>\r\n          {actionOptions?.map((option: ActionOption) => {\r\n            const optionOnClickAction = () => {\r\n              toggle(false);\r\n              option.onClick?.({ action: option.action });\r\n            };\r\n\r\n            if (option.items)\r\n              return (\r\n                <SubmenuItem\r\n                  key={option.key}\r\n                  option={option}\r\n                  toggle={toggle}\r\n                  noHover={noHover}\r\n                  recalculateHeight={recalculateHeight}\r\n                  openedSubmenuKey={openedSubmenuKey}\r\n                  setOpenedSubmenuKey={setOpenedSubmenuKey}\r\n                />\r\n              );\r\n\r\n            return (\r\n              <StyledDropDownItem\r\n                id={option.id}\r\n                key={option.key}\r\n                label={option.label}\r\n                className={\r\n                  classNames([\r\n                    option.className,\r\n                    option.isSeparator ? \"is-separator\" : \"\",\r\n                  ]) || \"\"\r\n                }\r\n                onClick={optionOnClickAction}\r\n                icon={option.icon ? option.icon : \"\"}\r\n                noHover={noHover}\r\n              />\r\n            );\r\n          })}\r\n        </StyledContainerAction>\r\n        <StyledProgressContainer isUploading={isUploading}>\r\n          {progressOptions &&\r\n            progressOptions.map((option: ProgressOption) => (\r\n              <ProgressBarMobile\r\n                key={option.key}\r\n                label={option.label}\r\n                icon={option.icon || \"\"}\r\n                className={option.className}\r\n                percent={option.percent || 0}\r\n                status={option.status}\r\n                open={option.open || false}\r\n                onCancel={option.onCancel}\r\n                onClickAction={option.onClick}\r\n                hideButton={() => toggle(false)}\r\n                error={option.error}\r\n              />\r\n            ))}\r\n        </StyledProgressContainer>\r\n\r\n        {buttonOptions && (\r\n          <StyledButtonOptions withoutButton={withoutButton}>\r\n            {buttonOptions.map((option: ButtonOption) =>\r\n              option.isSeparator ? (\r\n                <div key={option.key} className=\"separator-wrapper\">\r\n                  <div className=\"is-separator\" />\r\n                </div>\r\n              ) : (\r\n                <StyledDropDownItem\r\n                  id={option.id}\r\n                  className={`drop-down-item-button ${\r\n                    option.isSeparator ? \"is-separator\" : \"\"\r\n                  }`}\r\n                  key={option.key}\r\n                  label={option.label}\r\n                  onClick={option.onClick}\r\n                  icon={option.icon ? option.icon : \"\"}\r\n                  // action={option.action}\r\n                />\r\n              ),\r\n            )}\r\n          </StyledButtonOptions>\r\n        )}\r\n      </StyledRenderItem>\r\n    );\r\n  };\r\n\r\n  const children = renderItems();\r\n\r\n  return (\r\n    <>\r\n      <Backdrop zIndex={210} visible={isOpen || false} onClick={outsideClick} />\r\n      <div\r\n        ref={ref}\r\n        className={className}\r\n        style={{ zIndex: `${isOpen ? \"211\" : \"201\"}`, ...style }}\r\n        data-testid=\"main-button-mobile\"\r\n      >\r\n        <StyledFloatingButton\r\n          icon={isOpen ? FloatingButtonIcons.minus : FloatingButtonIcons.plus}\r\n          onClick={onMainButtonClick}\r\n          percent={percent}\r\n        />\r\n\r\n        <StyledDropDown\r\n          style={dropdownStyle}\r\n          open={isOpen}\r\n          withBackdrop={false}\r\n          manualWidth={manualWidth || \"400px\"}\r\n          directionY=\"top\"\r\n          directionX=\"right\"\r\n          fixedDirection\r\n          heightProp={height}\r\n          isDefaultMode={false}\r\n          className=\"mainBtnDropdown\"\r\n        >\r\n          {isMobile ? (\r\n            <Scrollbar\r\n              style={{ position: \"absolute\" }}\r\n              scrollclass=\"section-scroll\"\r\n              ref={dropDownRef}\r\n            >\r\n              {children}\r\n            </Scrollbar>\r\n          ) : (\r\n            children\r\n          )}\r\n        </StyledDropDown>\r\n\r\n        {alert && !isOpen && (\r\n          <StyledAlertIcon>\r\n            <StyledButtonAlertIcon\r\n              onClick={onAlertClickAction}\r\n              size={IconSizeType.small}\r\n            />\r\n          </StyledAlertIcon>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nMainButtonMobile.defaultProps = {\r\n  withMenu: true,\r\n};\r\n\r\nexport { MainButtonMobile };\r\n",null,"// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport styled, { css } from \"styled-components\";\r\nimport { Base } from \"../../themes\";\r\nimport { IconButtonProps } from \"./IconButton.types\";\r\n\r\nconst StyledOuter = styled.div<IconButtonProps>`\r\n  width: ${(props) => (props.size ? `${props.size}px` : \"20px\")};\r\n  height: ${(props) => (props.size ? `${props.size}px` : \"20px\")};\r\n  cursor: ${(props) =>\r\n    props.isDisabled || !props.isClickable ? \"default\" : \"pointer\"};\r\n  line-height: 0;\r\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n\r\n  ${(props) =>\r\n    props.isStroke &&\r\n    css`\r\n      svg {\r\n        &:not(:root) {\r\n          width: 100%;\r\n          height: 100%;\r\n        }\r\n        path {\r\n          stroke: ${props.color || props.theme.iconButton.color};\r\n        }\r\n      }\r\n      &:hover {\r\n        svg {\r\n          path {\r\n            stroke: ${props.isDisabled\r\n              ? props.theme.iconButton.color\r\n              : props.color || props.theme.iconButton.hoverColor};\r\n          }\r\n        }\r\n      }\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.isFill &&\r\n    !props.isStroke &&\r\n    css`\r\n      svg {\r\n        &:not(:root) {\r\n          width: 100%;\r\n          height: 100%;\r\n        }\r\n        path {\r\n          fill: ${props.color || props.theme.iconButton.color};\r\n        }\r\n      }\r\n      &:hover {\r\n        svg {\r\n          path {\r\n            fill: ${props.isDisabled\r\n              ? props.theme.iconButton.color\r\n              : props.color || props.theme.iconButton.hoverColor};\r\n          }\r\n        }\r\n      }\r\n    `}\r\n`;\r\n\r\nStyledOuter.defaultProps = { theme: Base };\r\n\r\nexport default StyledOuter;\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport styled, { css } from \"styled-components\";\r\n\r\nimport { Base } from \"../../themes\";\r\nimport { NoUserSelect, commonTextStyles } from \"../../utils\";\r\n\r\nimport { StyledTextProps, TextProps } from \"./Text.types\";\r\n\r\nconst styleCss = css<TextProps & StyledTextProps>`\r\n  font-size: ${(props) => props.fontSizeProp && props.fontSizeProp};\r\n  outline: 0 !important;\r\n  margin: 0;\r\n  font-weight: ${(props) =>\r\n    props.fontWeightProp\r\n      ? props.fontWeightProp\r\n      : props.isBold\r\n        ? 700\r\n        : props.theme.text.fontWeight};\r\n\r\n  ${(props) =>\r\n    props.isItalic &&\r\n    css`\r\n      font-style: italic;\r\n    `}\r\n  ${(props) =>\r\n    props.backgroundColor &&\r\n    css`\r\n      background-color: ${props.backgroundColor};\r\n    `}\r\n  ${(props) =>\r\n    props.isInline\r\n      ? css`\r\n          display: inline-block;\r\n        `\r\n      : props.display &&\r\n        css`\r\n          display: ${props.display};\r\n        `}\r\n  ${(props) =>\r\n    props.lineHeight &&\r\n    css`\r\n      line-height: ${props.lineHeight};\r\n    `}\r\n`;\r\nconst StyledText = styled.p<TextProps & StyledTextProps>`\r\n  ${styleCss};\r\n\r\n  ${commonTextStyles};\r\n\r\n  ${(props) => props.noSelect && NoUserSelect}\r\n`;\r\n\r\nStyledText.defaultProps = { theme: Base };\r\n\r\nexport const StyledAutoDirSpan = styled.span`\r\n  display: inherit;\r\n  white-space: inherit;\r\n  overflow: inherit;\r\n  text-overflow: inherit;\r\n  pointer-events: none;\r\n`;\r\n\r\nexport default StyledText;\r\n"],"names":[],"sourceRoot":""}