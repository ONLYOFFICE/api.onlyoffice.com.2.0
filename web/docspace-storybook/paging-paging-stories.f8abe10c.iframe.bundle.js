"use strict";(self.webpackChunk_docspace_components=self.webpackChunk_docspace_components||[]).push([[4120],{"./paging/paging.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),___WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./paging/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const disable={table:{disable:!0}},__WEBPACK_DEFAULT_EXPORT__={title:"Components/Paging",component:___WEBPACK_IMPORTED_MODULE_1__.Z,parameters:{docs:{description:{component:"Paging is used to navigate med content pages"}}},argTypes:{onSelectPage:{action:"onSelectPage"},onSelectCount:{action:"onSelectCount"},previousAction:{action:"onPrevious"},nextAction:{action:"onNext"},selectedCount:disable,pageCount:disable,displayItems:disable,displayCount:disable}},countItems=[{key:25,label:"25 per page"},{key:50,label:"50 per page"},{key:100,label:"100 per page"}],Template=({pageCount,displayItems,displayCount,nextAction,previousAction,onSelectPage,onSelectCount,selectedCount,...args})=>{const pageItems=(count=>{let pageItems=[];for(let i=1;i<=count;i++)pageItems.push({key:i,label:i+" of "+count});return pageItems})(pageCount),[selectedPageItem,setSelectedPageItems]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(pageItems[0]);(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{setSelectedPageItems(pageItems[0])}),[pageCount]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{style:{height:"100px"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.Z,{...args,pageItems:displayItems?pageItems:null,style:{justifyContent:"center",alignItems:"center"},countItems:displayCount?countItems:null,previousAction:()=>{previousAction("Prev"),(()=>{const currentPage=pageItems.filter((item=>item.key===selectedPageItem.key-1));currentPage[0]&&setSelectedPageItems(currentPage[0])})()},nextAction:()=>{(()=>{const currentPage=pageItems.filter((item=>item.key===selectedPageItem.key+1));currentPage[0]&&setSelectedPageItems(currentPage[0])})(),nextAction("Next")},onSelectPage:a=>onSelectPage(a),onSelectCount:a=>onSelectCount(a),selectedPageItem,selectedCountItem:(count=selectedCount,countItems.filter((item=>{if(item.key===count)return item})))[0]})});var count};Template.displayName="Template";const Default=Template.bind({});Default.args={previousLabel:"Previous",nextLabel:"Next",displayItems:!0,displayCount:!0,disablePrevious:!1,disableNext:!1,openDirection:"bottom",selectedCount:100,pageCount:10,selectedCountItem:{key:100,label:"100 per page"},selectedPageItem:{key:1,label:"1 of 10"}},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'({\n  pageCount,\n  displayItems,\n  displayCount,\n  nextAction,\n  previousAction,\n  onSelectPage,\n  onSelectCount,\n  selectedCount,\n  ...args\n}) => {\n  const pageItems = createPageItems(pageCount);\n  const [selectedPageItem, setSelectedPageItems] = useState(pageItems[0]);\n  useEffect(() => {\n    setSelectedPageItems(pageItems[0]);\n  }, [pageCount]);\n  const onSelectPageNextHandler = () => {\n    const currentPage = pageItems.filter(item => item.key === selectedPageItem.key + 1);\n    if (currentPage[0]) setSelectedPageItems(currentPage[0]);\n  };\n  const onSelectPagePrevHandler = () => {\n    const currentPage = pageItems.filter(item => item.key === selectedPageItem.key - 1);\n    if (currentPage[0]) setSelectedPageItems(currentPage[0]);\n  };\n  return <div style={{\n    height: "100px"\n  }}>\r\n      <Paging {...args} pageItems={displayItems ? pageItems : null} style={{\n      justifyContent: "center",\n      alignItems: "center"\n    }} countItems={displayCount ? countItems : null} previousAction={() => {\n      previousAction("Prev");\n      onSelectPagePrevHandler();\n    }} nextAction={() => {\n      onSelectPageNextHandler();\n      nextAction("Next");\n    }} onSelectPage={a => onSelectPage(a)} onSelectCount={a => onSelectCount(a)} selectedPageItem={selectedPageItem} selectedCountItem={selectedCountPageHandler(selectedCount)[0]} />\r\n    </div>;\n}',...Default.parameters?.docs?.source}}};const __namedExportsOrder=["Default"]}}]);