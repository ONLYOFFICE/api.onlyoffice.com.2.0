{"version":3,"file":"components-badge-badge-stories.5a4d8115.iframe.bundle.js","mappings":";;AAmCA;AAMA;;;;;;;;;AAWA;;;AAKA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;;AAGA;;AAEA;;AAEA;;;AAGA;;AAEA;AACA;;AAGA;AAUA;;AAKA;;AAEA;;AAEA;;;;AAIA;;;;;AAKA;AAGA;AAGA;AAEA;AAGA;AAwBA;AACA;;;AAKA;AACA;;;AAKA;AAEA;;;;;;AAQA;AAEA;;;;AC5IA;;;AAGA;;AAOA;;;AAKA;AAGA;;AAEA;;AAIA;AAGA;;AAEA;AAGA;;AAGA;AACA;;AAEA;;AAEA;AAGA;;;;;;;;AAYA","sources":["webpack://@docspace/shared/./components/badge/Badge.styled.ts","webpack://@docspace/shared/./components/text/Text.styled.ts"],"sourcesContent":["// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport styled, { css } from \"styled-components\";\r\nimport { Base, TColorScheme, TTheme } from \"../../themes\";\r\nimport { tablet } from \"../../utils\";\r\n\r\nimport { Text } from \"../text\";\r\nimport { BadgeProps } from \"./Badge.types\";\r\n\r\nconst hoveredCss = css<{ backgroundColor?: string }>`\r\n  cursor: pointer;\r\n  border-color: ${(props) =>\r\n    props.backgroundColor\r\n      ? props.backgroundColor\r\n      : props.theme.badge.backgroundColor};\r\n`;\r\n\r\nconst highCss = css`\r\n  cursor: default;\r\n  padding: 3px 10px;\r\n  border-radius: 6px;\r\n\r\n  p {\r\n    font-size: 13px;\r\n    font-weight: 400;\r\n  }\r\n`;\r\n\r\nconst noBorderCss = css`\r\n  border: none;\r\n  border-radius: 6px;\r\n`;\r\n\r\nconst StyledBadge = styled.div<BadgeProps>`\r\n  display: ${(props) => (props.label || props.label !== \"0\" ? \"flex\" : \"none\")};\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: ${(props) => props.theme.badge.border};\r\n\r\n  border-radius: ${(props) => props.borderRadius};\r\n  width: fit-content;\r\n  padding: ${(props) => props.theme.badge.padding};\r\n\r\n  height: ${(props) => props.height};\r\n\r\n  line-height: ${(props) => props.lineHeight};\r\n\r\n  overflow: ${(props) => props.theme.badge.overflow};\r\n  flex-shrink: 0;\r\n\r\n  border: ${(props) => props.border};\r\n\r\n  ${(props) => props.type === \"high\" && noBorderCss}\r\n  &:hover {\r\n    ${(props) => !props.noHover && hoveredCss};\r\n  }\r\n\r\n  ${(props) => !props.noHover && props.isHovered && hoveredCss};\r\n\r\n  @media ${tablet} {\r\n    ${({ isVersionBadge }) => isVersionBadge && `width: auto;`}\r\n  }\r\n`;\r\nStyledBadge.defaultProps = { theme: Base };\r\n\r\nconst StyledInner = styled.div<{\r\n  backgroundColor?: string;\r\n  borderRadius?: string;\r\n  maxWidth?: string;\r\n  padding?: string;\r\n  compact?: boolean;\r\n  type?: \"high\";\r\n}>`\r\n  background-color: ${(props) =>\r\n    props.backgroundColor\r\n      ? props.backgroundColor\r\n      : props.theme.badge.backgroundColor};\r\n\r\n  border-radius: ${(props) => props.borderRadius};\r\n\r\n  max-width: ${(props) => props.maxWidth};\r\n\r\n  padding: ${(props) => props.padding};\r\n  text-align: center;\r\n  user-select: none;\r\n\r\n  line-height: ${(props) => (props.compact ? \"0.8\" : \"1.5\")};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  ${(props) => props.type === \"high\" && highCss}\r\n`;\r\n\r\nStyledInner.defaultProps = { theme: Base };\r\n\r\nconst StyledText = styled(Text)<{ borderRadius?: string }>`\r\n  color: ${(props) =>\r\n    props.color ? props.color : props.theme.badge.color} !important;\r\n  border-radius: ${(props) => props.borderRadius};\r\n`;\r\n\r\nStyledText.defaultProps = { theme: Base };\r\n\r\nconst getDefaultStyles = ({\r\n  $currentColorScheme,\r\n  isVersionBadge,\r\n  backgroundColor,\r\n  color,\r\n  theme,\r\n  isPaidBadge,\r\n  isMutedBadge,\r\n  noHover,\r\n}: {\r\n  $currentColorScheme: TColorScheme;\r\n  isVersionBadge?: boolean;\r\n  backgroundColor?: string;\r\n  color?: string;\r\n  theme?: TTheme;\r\n  isPaidBadge?: boolean;\r\n  isMutedBadge?: boolean;\r\n  noHover?: boolean;\r\n}) =>\r\n  $currentColorScheme &&\r\n  !isVersionBadge &&\r\n  css`\r\n    ${StyledText} {\r\n      color: ${color || isPaidBadge\r\n        ? theme?.badge.color\r\n        : $currentColorScheme?.text?.accent} !important;\r\n    }\r\n\r\n    ${StyledInner} {\r\n      background-color: ${isMutedBadge\r\n        ? theme?.badge.disableBackgroundColor\r\n        : backgroundColor || $currentColorScheme?.main?.accent};\r\n\r\n      &:hover {\r\n        ${!noHover &&\r\n        css`\r\n          background-color: ${isMutedBadge\r\n            ? theme?.badge.disableBackgroundColor\r\n            : backgroundColor || $currentColorScheme?.main?.accent};\r\n        `}\r\n      }\r\n    }\r\n\r\n    &:hover {\r\n      ${!noHover &&\r\n      css`\r\n        border-color: ${isMutedBadge\r\n          ? theme?.badge.disableBackgroundColor\r\n          : backgroundColor || $currentColorScheme?.main?.accent};\r\n      `}\r\n    }\r\n  `;\r\n\r\nconst StyledBadgeTheme = styled(StyledBadge)(getDefaultStyles);\r\n\r\nexport { StyledBadge, StyledBadgeTheme, StyledInner, StyledText };\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport styled, { css } from \"styled-components\";\r\n\r\nimport { Base } from \"../../themes\";\r\nimport { NoUserSelect, commonTextStyles } from \"../../utils\";\r\n\r\nimport { StyledTextProps, TextProps } from \"./Text.types\";\r\n\r\nconst styleCss = css<TextProps & StyledTextProps>`\r\n  font-size: ${(props) => props.fontSizeProp && props.fontSizeProp};\r\n  outline: 0 !important;\r\n  margin: 0;\r\n  font-weight: ${(props) =>\r\n    props.fontWeightProp\r\n      ? props.fontWeightProp\r\n      : props.isBold\r\n        ? 700\r\n        : props.theme.text.fontWeight};\r\n\r\n  ${(props) =>\r\n    props.isItalic &&\r\n    css`\r\n      font-style: italic;\r\n    `}\r\n  ${(props) =>\r\n    props.backgroundColor &&\r\n    css`\r\n      background-color: ${props.backgroundColor};\r\n    `}\r\n  ${(props) =>\r\n    props.isInline\r\n      ? css`\r\n          display: inline-block;\r\n        `\r\n      : props.display &&\r\n        css`\r\n          display: ${props.display};\r\n        `}\r\n  ${(props) =>\r\n    props.lineHeight &&\r\n    css`\r\n      line-height: ${props.lineHeight};\r\n    `}\r\n`;\r\nconst StyledText = styled.p<TextProps & StyledTextProps>`\r\n  ${styleCss};\r\n\r\n  ${commonTextStyles};\r\n\r\n  ${(props) => props.noSelect && NoUserSelect}\r\n`;\r\n\r\nStyledText.defaultProps = { theme: Base };\r\n\r\nexport const StyledAutoDirSpan = styled.span`\r\n  display: inherit;\r\n  white-space: inherit;\r\n  overflow: inherit;\r\n  text-overflow: inherit;\r\n  pointer-events: none;\r\n  width: inherit;\r\n  max-width: inherit;\r\n`;\r\n\r\nexport default StyledText;\r\n"],"names":[],"sourceRoot":""}