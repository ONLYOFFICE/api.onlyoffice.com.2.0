{"version":3,"file":"components-link-with-dropdown-LinkWithDropdown-stories.a8bc8b98.iframe.bundle.js","mappings":";;;AAyEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AAGA;;AAEA;;;;AAIA;;;AAGA;;;AAMA;;AAIA;AAOA;AAGA;;;;;;;AAOA;;AAEA;AAGA;;;;AAIA;;AAGA;AACA;;;AAKA;AAGA;;;AAMA;AAEA;;;;;AAQA;;;AAMA;AAGA;;;AAMA;;;;;;;;;;AAYA;;;;;AAOA;;AAMA;;AAIA;;AAGA;;;;;;;;;;;AAuBA;;;AAGA;AACA;;;AAGA;;;;;AAKA;;AAEA;;;AAGA;;;;;AAKA;AAGA;AACA;;AAGA;ACjOA;;;AAGA;;AAOA;;;AAKA;AAGA;;AAEA;;AAIA;AAGA;;AAEA;AAGA;;AAGA;AACA;;AAEA;;AAEA;AAGA;;;;;;;;AAYA","sources":["webpack://@docspace/shared/./components/link-with-dropdown/LinkWithDropdown.styled.tsx","webpack://@docspace/shared/./components/text/Text.styled.ts"],"sourcesContent":["// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport ExpanderDownReactSvg from \"PUBLIC_DIR/images/expander-down.react.svg\";\r\n\r\nimport { Base } from \"../../themes\";\r\nimport { Text } from \"../text\";\r\nimport { TextProps } from \"../text/Text.types\";\r\n\r\n// import { transform } from \"lodash\";\r\nimport {\r\n  SimpleLinkWithDropdownProps,\r\n  TDropdownType,\r\n} from \"./LinkWithDropdown.types\";\r\n\r\nconst SimpleLinkWithDropdown = ({\r\n  isBold,\r\n  fontSize,\r\n  fontWeight,\r\n  isTextOverflow,\r\n  isHovered,\r\n  isSemitransparent,\r\n  color,\r\n  title,\r\n  dropdownType,\r\n  data,\r\n  isDisabled,\r\n  children,\r\n  ...props\r\n}: SimpleLinkWithDropdownProps) => <a {...props}>{children}</a>;\r\n\r\n// eslint-disable-next-line react/prop-types, no-unused-vars\r\nconst ExpanderDownIconWrapper = ({\r\n  isSemitransparent,\r\n  dropdownType,\r\n  isOpen,\r\n  isDisabled,\r\n  ...props\r\n}: {\r\n  isSemitransparent: boolean;\r\n  dropdownType: TDropdownType;\r\n  isOpen: boolean;\r\n  isDisabled: boolean;\r\n}) => <ExpanderDownReactSvg {...props} />;\r\n\r\nconst Caret = styled(ExpanderDownIconWrapper)<{ color?: string }>`\r\n  position: absolute;\r\n\r\n  width: ${(props) => props.theme.linkWithDropdown.caret.width};\r\n  min-width: ${(props) => props.theme.linkWithDropdown.caret.minWidth};\r\n  height: ${(props) => props.theme.linkWithDropdown.caret.height};\r\n  min-height: ${(props) => props.theme.linkWithDropdown.caret.minHeight};\r\n  margin-left: ${(props) => props.theme.linkWithDropdown.caret.marginLeft};\r\n  margin-top: ${(props) => props.theme.linkWithDropdown.caret.marginTop};\r\n\r\n  right: ${(props) => props.theme.linkWithDropdown.caret.right};\r\n  top: ${(props) => props.theme.linkWithDropdown.caret.top};\r\n  bottom: ${(props) => props.theme.linkWithDropdown.caret.bottom};\r\n\r\n  ${(props) =>\r\n    props.theme.interfaceDirection === \"rtl\" &&\r\n    css`\r\n      margin-right: ${props.theme.linkWithDropdown.caret.marginLeft};\r\n      margin-left: 0;\r\n      left: ${props.theme.linkWithDropdown.caret.right};\r\n      right: 0;\r\n    `}\r\n\r\n  margin: ${(props) => props.theme.linkWithDropdown.caret.margin};\r\n\r\n  path {\r\n    fill: ${(props) =>\r\n      props.isDisabled\r\n        ? props.theme.linkWithDropdown.disableColor\r\n        : props.color};\r\n  }\r\n\r\n  ${(props) =>\r\n    props.dropdownType === \"appearDashedAfterHover\" &&\r\n    `opacity: ${props.theme.linkWithDropdown.caret.opacity};`}\r\n\r\n  ${(props) =>\r\n    props.isOpen &&\r\n    `\r\n      bottom: ${props.theme.linkWithDropdown.caret.isOpenBottom};\r\n      transform: ${props.theme.linkWithDropdown.caret.transform};\r\n    `}\r\n`;\r\nCaret.defaultProps = { theme: Base };\r\n\r\nconst StyledLinkWithDropdown = styled(SimpleLinkWithDropdown)`\r\n  ${(props) => !props.isDisabled && \"cursor: pointer;\"}\r\n  text-decoration: none;\r\n  user-select: none;\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  padding-right: ${(props) => props.theme.linkWithDropdown.paddingRight};\r\n\r\n  ${(props) =>\r\n    props.theme.interfaceDirection === \"rtl\" &&\r\n    css`\r\n      padding-left: ${props.theme.linkWithDropdown.paddingRight};\r\n      padding-right: 0;\r\n    `}\r\n\r\n  color: ${(props) =>\r\n    props.isDisabled ? props.theme.linkWithDropdown.disableColor : props.color};\r\n\r\n  ${(props) => props.isSemitransparent && `opacity: 0.5`};\r\n  ${(props) =>\r\n    props.dropdownType === \"alwaysDashed\" &&\r\n    `text-decoration:  ${props.theme.linkWithDropdown.textDecoration};`};\r\n\r\n  &:not([href]):not([tabindex]) {\r\n    ${(props) =>\r\n      props.dropdownType === \"alwaysDashed\" &&\r\n      `text-decoration:  ${props.theme.linkWithDropdown.textDecoration};`};\r\n    color: ${(props) =>\r\n      props.isDisabled\r\n        ? props.theme.linkWithDropdown.disableColor\r\n        : props.color};\r\n\r\n    &:hover {\r\n      text-decoration: ${(props) =>\r\n        props.theme.linkWithDropdown.textDecoration};\r\n      color: ${(props) =>\r\n        props.isDisabled\r\n          ? props.theme.linkWithDropdown.disableColor\r\n          : props.color};\r\n    }\r\n  }\r\n\r\n  :hover {\r\n    color: ${(props) =>\r\n      props.isDisabled\r\n        ? props.theme.linkWithDropdown.disableColor\r\n        : props.color};\r\n\r\n    svg {\r\n      ${(props) =>\r\n        props.dropdownType === \"appearDashedAfterHover\" &&\r\n        `position: absolute; opacity: ${props.theme.linkWithDropdown.svg.opacity};`};\r\n      ${(props) =>\r\n        props.isSemitransparent &&\r\n        `opacity: ${props.theme.linkWithDropdown.svg.semiTransparentOpacity};`};\r\n    }\r\n  }\r\n`;\r\nStyledLinkWithDropdown.defaultProps = { theme: Base };\r\n\r\nconst StyledTextWithExpander = styled.div<{ isOpen?: boolean }>`\r\n  display: flex;\r\n  gap: 4px;\r\n\r\n  .expander {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 6.35px;\r\n    svg {\r\n      transform: ${(props) => (props.isOpen ? \"rotate(180deg)\" : \"rotate(0)\")};\r\n      width: 6.35px;\r\n      height: auto;\r\n    }\r\n  }\r\n`;\r\n\r\nconst SimpleText = ({ c, ...props }: TextProps & { c?: string }) => (\r\n  <Text as=\"span\" {...props} />\r\n);\r\n\r\nconst StyledText = styled(SimpleText)<{ isTextOverflow?: boolean }>`\r\n  color: inherit;\r\n  ${(props) =>\r\n    props.isTextOverflow &&\r\n    css`\r\n      display: inline-block;\r\n      max-width: ${props.theme.linkWithDropdown.text.maxWidth};\r\n    `};\r\n`;\r\nStyledText.defaultProps = { theme: Base };\r\n\r\n// const focusColor = css`\r\n//   color: ${(props) => props.theme.linkWithDropdown.color.focus};\r\n//   background: ${(props) => props.theme.linkWithDropdown.background.focus};\r\n//   .expander {\r\n//     path {\r\n//       fill: ${(props) => props.theme.linkWithDropdown.color.focus};\r\n//     }\r\n//   }\r\n// `;\r\n\r\nconst StyledSpan = styled.span<{ $isOpen?: boolean }>`\r\n  display: inline-block;\r\n  padding: 4px 8px;\r\n  border-radius: 3px;\r\n  position: relative;\r\n\r\n  .drop-down-item {\r\n    display: block;\r\n  }\r\n\r\n  .fixed-max-width {\r\n    max-width: ${(props) => props.theme.linkWithDropdown.text.maxWidth};\r\n  }\r\n\r\n  color: ${(props) => props.theme.linkWithDropdown.color.default};\r\n  background: ${(props) => props.theme.linkWithDropdown.background.default};\r\n  .expander {\r\n    path {\r\n      fill: ${(props) => props.theme.linkWithDropdown.color.default};\r\n    }\r\n  }\r\n\r\n  :hover {\r\n    color: ${(props) => props.theme.linkWithDropdown.color.hover};\r\n\r\n    background: ${(props) => props.theme.linkWithDropdown.background.hover};\r\n    .expander {\r\n      path {\r\n        fill: ${(props) => props.theme.linkWithDropdown.color.hover};\r\n      }\r\n    }\r\n  }\r\n\r\n  ${(props) =>\r\n    props.$isOpen &&\r\n    css`\r\n      color: ${props.theme.linkWithDropdown.color.hover};\r\n      background: ${props.theme.linkWithDropdown.background.hover};\r\n    `}\r\n`;\r\nStyledSpan.defaultProps = { theme: Base };\r\n\r\nexport {\r\n  StyledSpan,\r\n  StyledTextWithExpander,\r\n  StyledText,\r\n  StyledLinkWithDropdown,\r\n  Caret,\r\n};\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport styled, { css } from \"styled-components\";\r\n\r\nimport { Base } from \"../../themes\";\r\nimport { NoUserSelect, commonTextStyles } from \"../../utils\";\r\n\r\nimport { StyledTextProps, TextProps } from \"./Text.types\";\r\n\r\nconst styleCss = css<TextProps & StyledTextProps>`\r\n  font-size: ${(props) => props.fontSizeProp && props.fontSizeProp};\r\n  outline: 0 !important;\r\n  margin: 0;\r\n  font-weight: ${(props) =>\r\n    props.fontWeightProp\r\n      ? props.fontWeightProp\r\n      : props.isBold\r\n        ? 700\r\n        : props.theme.text.fontWeight};\r\n\r\n  ${(props) =>\r\n    props.isItalic &&\r\n    css`\r\n      font-style: italic;\r\n    `}\r\n  ${(props) =>\r\n    props.backgroundColor &&\r\n    css`\r\n      background-color: ${props.backgroundColor};\r\n    `}\r\n  ${(props) =>\r\n    props.isInline\r\n      ? css`\r\n          display: inline-block;\r\n        `\r\n      : props.display &&\r\n        css`\r\n          display: ${props.display};\r\n        `}\r\n  ${(props) =>\r\n    props.lineHeight &&\r\n    css`\r\n      line-height: ${props.lineHeight};\r\n    `}\r\n`;\r\nconst StyledText = styled.p<TextProps & StyledTextProps>`\r\n  ${styleCss};\r\n\r\n  ${commonTextStyles};\r\n\r\n  ${(props) => props.noSelect && NoUserSelect}\r\n`;\r\n\r\nStyledText.defaultProps = { theme: Base };\r\n\r\nexport const StyledAutoDirSpan = styled.span`\r\n  display: inherit;\r\n  white-space: inherit;\r\n  overflow: inherit;\r\n  text-overflow: inherit;\r\n  pointer-events: none;\r\n  width: inherit;\r\n  max-width: inherit;\r\n`;\r\n\r\nexport default StyledText;\r\n"],"names":[],"sourceRoot":""}