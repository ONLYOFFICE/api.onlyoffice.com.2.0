"use strict";(self.webpackChunk_docspace_shared=self.webpackChunk_docspace_shared||[]).push([[5285],{"./components/avatar/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{eu:()=>Avatar,q1:()=>Avatar_AvatarPure,q2:()=>AvatarRole,Pf:()=>AvatarSize});var react=__webpack_require__("../../node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("../../node_modules/styled-components/dist/styled-components.browser.esm.js");const pencil_reacturl_namespaceObject=__webpack_require__.p+"images/pencil.react.svg?hash=7b1050767036ee383c82";var _path,utils=__webpack_require__("./utils/index.ts"),icon_button=__webpack_require__("./components/icon-button/index.tsx"),components_text=__webpack_require__("./components/text/index.tsx"),tooltip=__webpack_require__("./components/tooltip/index.tsx"),themes=__webpack_require__("./themes/index.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const camera_react=function SvgCamerareact(props){return react.createElement("svg",_extends({width:72,height:72,viewBox:"0 0 72 72",fill:"none",xmlns:"http://www.w3.org/2000/svg"},props),_path||(_path=react.createElement("path",{d:"M36 25.125c-5.965 0-10.8 4.954-10.8 11.063 0 6.11 4.835 11.062 10.8 11.062 5.964 0 10.8-4.952 10.8-11.063 0-6.107-4.836-11.062-10.8-11.062zm28.8-11.063h-8.64c-1.188 0-2.468-.944-2.843-2.098l-2.234-6.866C50.707 3.944 49.428 3 48.24 3H23.76c-1.188 0-2.468.944-2.843 2.099l-2.234 6.865c-.376 1.154-1.655 2.098-2.843 2.098H7.2c-3.96 0-7.2 3.32-7.2 7.376v33.187C0 58.681 3.24 62 7.2 62h57.6c3.96 0 7.2-3.319 7.2-7.375V21.437c0-4.056-3.24-7.375-7.2-7.375zM36 54.626c-9.941 0-18-8.255-18-18.438 0-10.181 8.059-18.437 18-18.437 9.94 0 18 8.256 18 18.438 0 10.182-8.06 18.437-18 18.437zm26.28-28.03c-1.391 0-2.52-1.155-2.52-2.581 0-1.425 1.129-2.582 2.52-2.582 1.392 0 2.52 1.157 2.52 2.582 0 1.426-1.128 2.58-2.52 2.58z",fill:"#fff"})))};var _rect,_rect2,administrator_react_path;function administrator_react_extends(){return administrator_react_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},administrator_react_extends.apply(this,arguments)}const administrator_react=function SvgAdministratorreact(props){return react.createElement("svg",administrator_react_extends({width:16,height:16,viewBox:"0 0 16 16",fill:"none",xmlns:"http://www.w3.org/2000/svg"},props),_rect||(_rect=react.createElement("rect",{width:16,height:16,rx:8,fill:"#ED7309"})),_rect2||(_rect2=react.createElement("rect",{x:.5,y:.5,width:15,height:15,rx:7.5,stroke:"#333",strokeOpacity:.2})),administrator_react_path||(administrator_react_path=react.createElement("path",{d:"M9.67 12l-.386-1.472H6.732L6.335 12H4.004l2.562-7.885h2.83L11.991 12H9.67zm-.827-3.212L8.505 7.5l-.156-.596c-.068-.262-.136-.53-.204-.806-.064-.28-.115-.508-.15-.687-.033.179-.08.4-.14.666-.057.261-.118.52-.183.778-.06.258-.114.473-.16.645l-.34 1.29h1.671z",fill:"#fff"})))};var owner_react_rect,owner_react_rect2,owner_react_path;function owner_react_extends(){return owner_react_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},owner_react_extends.apply(this,arguments)}const owner_react=function SvgOwnerreact(props){return react.createElement("svg",owner_react_extends({width:16,height:16,viewBox:"0 0 16 16",fill:"none",xmlns:"http://www.w3.org/2000/svg"},props),owner_react_rect||(owner_react_rect=react.createElement("rect",{width:16,height:16,rx:8,fill:"#EDC409"})),owner_react_rect2||(owner_react_rect2=react.createElement("rect",{x:.5,y:.5,width:15,height:15,rx:7.5,stroke:"#333",strokeOpacity:.2})),owner_react_path||(owner_react_path=react.createElement("path",{d:"M11.813 8.063c0 .605-.073 1.157-.22 1.654-.143.494-.369.92-.677 1.279a3.005 3.005 0 01-1.187.827c-.483.19-1.061.284-1.734.284-.66 0-1.23-.095-1.714-.284A3.085 3.085 0 015.094 11a3.445 3.445 0 01-.693-1.284 5.745 5.745 0 01-.225-1.665c0-.816.134-1.525.403-2.127a3.01 3.01 0 011.256-1.402c.566-.333 1.29-.5 2.17-.5.896 0 1.622.167 2.181.5.562.333.974.803 1.235 1.408.262.605.393 1.316.393 2.132zm-5.403 0c0 .473.054.88.161 1.22.108.34.278.6.51.783.233.183.538.274.914.274.39 0 .7-.091.929-.274.233-.182.4-.444.5-.784.103-.34.155-.746.155-1.219 0-.709-.118-1.27-.354-1.681-.237-.412-.643-.618-1.22-.618-.383 0-.693.093-.929.28-.233.186-.403.45-.51.794a4.26 4.26 0 00-.156 1.225z",fill:"#fff"})))};let AvatarRole=function(AvatarRole){return AvatarRole.owner="owner",AvatarRole.admin="admin",AvatarRole.guest="guest",AvatarRole.user="user",AvatarRole.manager="manager",AvatarRole.collaborator="collaborator",AvatarRole.none="",AvatarRole}({}),AvatarSize=function(AvatarSize){return AvatarSize.max="max",AvatarSize.big="big",AvatarSize.medium="medium",AvatarSize.base="base",AvatarSize.small="small",AvatarSize.min="min",AvatarSize}({});const EmptyIcon=(0,styled_components_browser_esm.Ay)(camera_react)`
  ${utils.Ww}
  border-radius: ${props=>props.theme.avatar.image.borderRadius};
`;EmptyIcon.defaultProps={theme:themes.C6};const EditContainer=styled_components_browser_esm.Ay.div`
  position: absolute;
  display: flex;

  ${props=>"rtl"===props.theme.interfaceDirection?`left: ${props.theme.avatar.editContainer.right};`:`right: ${props.theme.avatar.editContainer.right};`}

  bottom: ${props=>props.theme.avatar.editContainer.bottom};
  background-color: ${props=>props.theme.avatar.editContainer.backgroundColor};
  border-radius: ${props=>props.theme.avatar.editContainer.borderRadius};
  height: ${props=>props.theme.avatar.editContainer.height};
  width: ${props=>props.theme.avatar.editContainer.width};
  align-items: center;
  justify-content: center;

  .edit_icon {
    svg {
      path {
        fill: ${props=>props.theme.avatar.editContainer.fill};
      }
    }
  }
`;EditContainer.defaultProps={theme:themes.C6};const AvatarWrapper=styled_components_browser_esm.Ay.div`
  border-radius: ${props=>props.theme.avatar.imageContainer.borderRadius};
  height: ${props=>props.theme.avatar.imageContainer.height};

  background-color: ${props=>props.source?props.theme.avatar.icon.background:props.isGroup&&props.userName?props.theme.avatar.imageContainer.groupBackground:props.userName?props.theme.avatar.imageContainer.backgroundImage:props.theme.avatar.imageContainer.background};

  & > svg {
    display: ${props=>props.theme.avatar.imageContainer.svg.display};
    width: ${props=>props.theme.avatar.imageContainer.svg.width} !important;
    height: ${props=>props.theme.avatar.imageContainer.svg.height} !important;
    margin: ${props=>props.theme.avatar.imageContainer.svg.margin};
    path {
      fill: ${props=>props.theme.avatar.imageContainer.svg.fill};
    }
  }
`;AvatarWrapper.defaultProps={theme:themes.C6};const rightStyle=props=>props.theme.avatar.roleWrapperContainer.right[props.size],RoleWrapper=styled_components_browser_esm.Ay.div`
  position: absolute;
  ${props=>"rtl"===props.theme.interfaceDirection?`left: ${rightStyle(props)};`:`right ${rightStyle(props)};`}

  bottom: ${props=>(props=>props.theme.avatar.roleWrapperContainer.bottom[props.size])(props)};

  display: flex;
  align-items: center;

  height: ${props=>props.size===AvatarSize.max&&props.theme.avatar.roleWrapperContainer.height.max||props.size===AvatarSize.medium&&props.theme.avatar.roleWrapperContainer.height.medium||"12px"};
  width: ${props=>props.size===AvatarSize.max&&props.theme.avatar.roleWrapperContainer.width.max||props.size===AvatarSize.medium&&props.theme.avatar.roleWrapperContainer.width.medium||"12px"};
  min-width: ${props=>props.size===AvatarSize.max&&props.theme.avatar.roleWrapperContainer.width.max||props.size===AvatarSize.medium&&props.theme.avatar.roleWrapperContainer.width.medium||"12px"};
`;RoleWrapper.defaultProps={theme:themes.C6};const NamedAvatar=styled_components_browser_esm.Ay.div`
  position: absolute;
  color: ${props=>props.isGroup?props.theme.avatar.initialsContainer.groupColor:props.theme.avatar.initialsContainer.color};
  left: ${props=>props.theme.avatar.initialsContainer.left};
  top: ${props=>props.theme.avatar.initialsContainer.top};
  transform: ${props=>props.theme.avatar.initialsContainer.transform};
  font-weight: ${props=>props.theme.avatar.initialsContainer[props.isGroup?"groupFontWeight":"fontWeight"]};
  font-size: ${props=>props.theme.getCorrectFontSize((({size,theme,isGroup})=>isGroup&&size===AvatarSize.big?theme.avatar.initialsContainer.fontSize.groupBig:theme.avatar.initialsContainer.fontSize[size])(props))};

  ${utils.h0}
`;NamedAvatar.defaultProps={theme:themes.C6};const StyledImage=styled_components_browser_esm.Ay.img`
  width: ${props=>props.theme.avatar.image.width};
  height: ${props=>props.theme.avatar.image.height};
  border-radius: ${props=>props.theme.avatar.image.borderRadius};
  // @ts-expect-error TS(2339): Property 'isDefault' does not exist on type 'Theme... Remove this comment to see the full error message
  content: ${props=>props.isDefault&&props.theme.avatar.defaultImage};
  ${utils.h0};
`;StyledImage.defaultProps={theme:themes.C6};const StyledIconWrapper=styled_components_browser_esm.Ay.div`
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;

  .icon,
  .icon:hover {
    width: 50%;
    height: 50%;
    path {
      fill: ${props=>props.theme.avatar.icon.color};
    }
  }
`;StyledIconWrapper.defaultProps={theme:themes.C6};const widthStyle=({size,theme})=>theme.avatar.width[size],StyledAvatar=styled_components_browser_esm.Ay.div`
  position: relative;
  width: ${props=>widthStyle(props)};
  min-width: ${props=>widthStyle(props)};
  height: ${props=>(({size,theme})=>theme.avatar.height[size])(props)};
  font-family: ${props=>props.theme.fontFamily};
  font-style: normal;

  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);

  .admin_icon {
    rect:nth-child(1) {
      fill: ${props=>props.theme.avatar.administrator.fill};
    }
    rect:nth-child(2) {
      stroke: ${props=>props.theme.avatar.administrator.stroke};
    }
    path {
      fill: ${props=>props.theme.avatar.administrator.color};
    }
  }

  .guest_icon {
    rect:nth-child(1) {
      fill: ${props=>props.theme.avatar.guest.fill};
    }
    rect:nth-child(2) {
      stroke: ${props=>props.theme.avatar.guest.stroke};
    }
    path {
      fill: ${props=>props.theme.avatar.guest.color};
    }
  }

  .owner_icon {
    rect:nth-child(1) {
      fill: ${props=>props.theme.avatar.owner.fill};
    }
    rect:nth-child(2) {
      stroke: ${props=>props.theme.avatar.owner.stroke};
    }
    path {
      fill: ${props=>props.theme.avatar.owner.color};
    }
  }
`;StyledAvatar.defaultProps={theme:themes.C6};var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const StyledAdministratorIcon=(0,styled_components_browser_esm.Ay)(administrator_react)`
  ${utils.Ww}
`,StyledOwnerIcon=(0,styled_components_browser_esm.Ay)(owner_react)`
  ${utils.Ww}
`,getInitials=(userName,isGroup)=>{const initials=userName.split(/\s/).reduce(((response,word)=>response+word.slice(0,1)),"").substring(0,2);return isGroup?initials.toUpperCase():initials},Initials=({userName,size,isGroup})=>(0,jsx_runtime.jsx)(NamedAvatar,{size,isGroup,children:getInitials(userName,isGroup)});Initials.displayName="Initials";const Avatar_AvatarPure=({size,source,userName,role,editing,editAction,isDefaultSource=!1,hideRoleIcon,tooltipContent,withTooltip,className,onClick,isGroup=!1,roleIcon:roleIconProp})=>{const defaultTheme=(0,styled_components_browser_esm.DP)(),interfaceDirection=defaultTheme?.interfaceDirection;let isDefault=!1,isIcon=!1;source?.includes("default_user_photo")?isDefault=!0:source?.includes(".svg")&&(isIcon=!0);const avatarContent=source?isIcon?(0,jsx_runtime.jsx)(StyledIconWrapper,{children:(0,jsx_runtime.jsx)(icon_button.K,{iconName:source,className:"icon",isDisabled:!0})}):(0,jsx_runtime.jsx)(StyledImage,{src:source,isDefault}):userName?(0,jsx_runtime.jsx)(Initials,{userName,size,isGroup}):isDefaultSource?(0,jsx_runtime.jsx)(StyledImage,{isDefault:!0}):(0,jsx_runtime.jsx)(EmptyIcon,{size:utils.rF.scale}),roleIcon=roleIconProp??(role=>{switch(role){case"admin":return(0,jsx_runtime.jsx)(StyledAdministratorIcon,{size:utils.rF.scale,className:"admin_icon"});case"owner":return(0,jsx_runtime.jsx)(StyledOwnerIcon,{size:utils.rF.scale,className:"owner_icon"});default:return null}})(role),uniqueTooltipId=withTooltip?`roleTooltip_${Math.random()}`:"",tooltipPlace="rtl"===interfaceDirection?"left":"right";return(0,jsx_runtime.jsxs)(StyledAvatar,{size,"data-testid":"avatar",className,onMouseDown:e=>{1===e.button&&onClick&&onClick(e)},onClick,children:[(0,jsx_runtime.jsx)(AvatarWrapper,{source,userName:userName||"",className:"avatar-wrapper",isGroup,children:avatarContent}),editing&&"max"===size?(0,jsx_runtime.jsx)(EditContainer,{children:(0,jsx_runtime.jsx)(icon_button.K,{className:"edit_icon",iconName:pencil_reacturl_namespaceObject,onClick:editAction,size:16})}):!hideRoleIcon&&(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(RoleWrapper,{size,"data-tooltip-id":uniqueTooltipId,"data-tooltip-content":tooltipContent,className:"avatar_role-wrapper",children:roleIcon}),withTooltip&&(0,jsx_runtime.jsx)(tooltip.m,{float:!0,id:uniqueTooltipId,getContent:({content})=>(0,jsx_runtime.jsx)(components_text.E,{fontSize:"12px",children:content}),place:tooltipPlace,opacity:1})]})]})};Avatar_AvatarPure.displayName="AvatarPure";const Avatar=(0,react.memo)(Avatar_AvatarPure);try{Avatar_AvatarPure.displayName="AvatarPure",Avatar_AvatarPure.__docgenInfo={description:"",displayName:"AvatarPure",props:{size:{defaultValue:null,description:"Size of avatar",name:"size",required:!0,type:{name:"enum",value:[{value:'"max"'},{value:'"big"'},{value:'"medium"'},{value:'"base"'},{value:'"small"'},{value:'"min"'}]}},role:{defaultValue:null,description:"Adds a table of user roles",name:"role",required:!0,type:{name:"enum",value:[{value:'"owner"'},{value:'"admin"'},{value:'"guest"'},{value:'"user"'},{value:'"manager"'},{value:'"collaborator"'},{value:'""'}]}},source:{defaultValue:null,description:"Displays as `Picture` in case the url is specified and as `Icon` in case the path to the .svg file is specified",name:"source",required:!0,type:{name:"string"}},userName:{defaultValue:null,description:"Allows to display a user name as initials when `source` is set to blank",name:"userName",required:!1,type:{name:"string"}},editing:{defaultValue:null,description:"Enables avatar editing",name:"editing",required:!1,type:{name:"boolean"}},isDefaultSource:{defaultValue:{value:"false"},description:"Allows to display as a default icon when `source` is set to blank",name:"isDefaultSource",required:!1,type:{name:"boolean"}},editAction:{defaultValue:null,description:"Function called when the avatar change button is pressed",name:"editAction",required:!1,type:{name:"(() => void)"}},hideRoleIcon:{defaultValue:null,description:"Hides user role",name:"hideRoleIcon",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"Accepts id",name:"id",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties"}},withTooltip:{defaultValue:null,description:"Show tooltip on hover role icon",name:"withTooltip",required:!1,type:{name:"boolean"}},tooltipContent:{defaultValue:null,description:"Tooltip content",name:"tooltipContent",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void)"}},isGroup:{defaultValue:{value:"false"},description:"Display initials for group when `source` is set to blank",name:"isGroup",required:!1,type:{name:"boolean"}},roleIcon:{defaultValue:null,description:"Accepts roleIcon",name:"roleIcon",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/avatar/Avatar.tsx#AvatarPure"]={docgenInfo:Avatar_AvatarPure.__docgenInfo,name:"AvatarPure",path:"components/avatar/Avatar.tsx#AvatarPure"})}catch(__react_docgen_typescript_loader_error){}try{Avatar_AvatarPure.displayName="AvatarPure",__function.__docgenInfo={description:"",displayName:"AvatarPure",props:{size:{defaultValue:null,description:"Size of avatar",name:"size",required:!0,type:{name:"AvatarSize"}},role:{defaultValue:null,description:"Adds a table of user roles",name:"role",required:!0,type:{name:"AvatarRole"}},source:{defaultValue:null,description:"Displays as `Picture` in case the url is specified and as `Icon` in case the path to the .svg file is specified",name:"source",required:!0,type:{name:"string"}},userName:{defaultValue:null,description:"Allows to display a user name as initials when `source` is set to blank",name:"userName",required:!1,type:{name:"string | undefined"}},editing:{defaultValue:null,description:"Enables avatar editing",name:"editing",required:!1,type:{name:"boolean | undefined"}},isDefaultSource:{defaultValue:{value:!1},description:"Allows to display as a default icon when `source` is set to blank",name:"isDefaultSource",required:!1,type:{name:"boolean | undefined"}},editAction:{defaultValue:null,description:"Function called when the avatar change button is pressed",name:"editAction",required:!1,type:{name:"(() => void) | undefined"}},hideRoleIcon:{defaultValue:null,description:"Hides user role",name:"hideRoleIcon",required:!1,type:{name:"boolean | undefined"}},className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string | undefined"}},id:{defaultValue:null,description:"Accepts id",name:"id",required:!1,type:{name:"string | undefined"}},style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties | undefined"}},withTooltip:{defaultValue:null,description:"Show tooltip on hover role icon",name:"withTooltip",required:!1,type:{name:"boolean | undefined"}},tooltipContent:{defaultValue:null,description:"Tooltip content",name:"tooltipContent",required:!1,type:{name:"string | undefined"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void) | undefined"}},isGroup:{defaultValue:{value:!1},description:"Display initials for group when `source` is set to blank",name:"isGroup",required:!1,type:{name:"boolean | undefined"}},roleIcon:{defaultValue:null,description:"Accepts roleIcon",name:"roleIcon",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>> | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/avatar/Avatar.tsx#AvatarPure"]={docgenInfo:Avatar_AvatarPure.__docgenInfo,name:"AvatarPure",path:"components/avatar/Avatar.tsx#AvatarPure"})}catch(__react_docgen_typescript_loader_error){}try{AvatarPure.displayName="AvatarPure",AvatarPure.__docgenInfo={description:"",displayName:"AvatarPure",props:{size:{defaultValue:null,description:"Size of avatar",name:"size",required:!0,type:{name:"enum",value:[{value:'"max"'},{value:'"big"'},{value:'"medium"'},{value:'"base"'},{value:'"small"'},{value:'"min"'}]}},role:{defaultValue:null,description:"Adds a table of user roles",name:"role",required:!0,type:{name:"enum",value:[{value:'"owner"'},{value:'"admin"'},{value:'"guest"'},{value:'"user"'},{value:'"manager"'},{value:'"collaborator"'},{value:'""'}]}},source:{defaultValue:null,description:"Displays as `Picture` in case the url is specified and as `Icon` in case the path to the .svg file is specified",name:"source",required:!0,type:{name:"string"}},userName:{defaultValue:null,description:"Allows to display a user name as initials when `source` is set to blank",name:"userName",required:!1,type:{name:"string"}},editing:{defaultValue:null,description:"Enables avatar editing",name:"editing",required:!1,type:{name:"boolean"}},isDefaultSource:{defaultValue:{value:"false"},description:"Allows to display as a default icon when `source` is set to blank",name:"isDefaultSource",required:!1,type:{name:"boolean"}},editAction:{defaultValue:null,description:"Function called when the avatar change button is pressed",name:"editAction",required:!1,type:{name:"(() => void)"}},hideRoleIcon:{defaultValue:null,description:"Hides user role",name:"hideRoleIcon",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"Accepts id",name:"id",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties"}},withTooltip:{defaultValue:null,description:"Show tooltip on hover role icon",name:"withTooltip",required:!1,type:{name:"boolean"}},tooltipContent:{defaultValue:null,description:"Tooltip content",name:"tooltipContent",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void)"}},isGroup:{defaultValue:{value:"false"},description:"Display initials for group when `source` is set to blank",name:"isGroup",required:!1,type:{name:"boolean"}},roleIcon:{defaultValue:null,description:"Accepts roleIcon",name:"roleIcon",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/avatar/index.tsx#AvatarPure"]={docgenInfo:AvatarPure.__docgenInfo,name:"AvatarPure",path:"components/avatar/index.tsx#AvatarPure"})}catch(__react_docgen_typescript_loader_error){}try{AvatarPure.displayName="AvatarPure",__function.__docgenInfo={description:"",displayName:"AvatarPure",props:{size:{defaultValue:null,description:"Size of avatar",name:"size",required:!0,type:{name:"AvatarSize"}},role:{defaultValue:null,description:"Adds a table of user roles",name:"role",required:!0,type:{name:"AvatarRole"}},source:{defaultValue:null,description:"Displays as `Picture` in case the url is specified and as `Icon` in case the path to the .svg file is specified",name:"source",required:!0,type:{name:"string"}},userName:{defaultValue:null,description:"Allows to display a user name as initials when `source` is set to blank",name:"userName",required:!1,type:{name:"string | undefined"}},editing:{defaultValue:null,description:"Enables avatar editing",name:"editing",required:!1,type:{name:"boolean | undefined"}},isDefaultSource:{defaultValue:{value:!1},description:"Allows to display as a default icon when `source` is set to blank",name:"isDefaultSource",required:!1,type:{name:"boolean | undefined"}},editAction:{defaultValue:null,description:"Function called when the avatar change button is pressed",name:"editAction",required:!1,type:{name:"(() => void) | undefined"}},hideRoleIcon:{defaultValue:null,description:"Hides user role",name:"hideRoleIcon",required:!1,type:{name:"boolean | undefined"}},className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string | undefined"}},id:{defaultValue:null,description:"Accepts id",name:"id",required:!1,type:{name:"string | undefined"}},style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties | undefined"}},withTooltip:{defaultValue:null,description:"Show tooltip on hover role icon",name:"withTooltip",required:!1,type:{name:"boolean | undefined"}},tooltipContent:{defaultValue:null,description:"Tooltip content",name:"tooltipContent",required:!1,type:{name:"string | undefined"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void) | undefined"}},isGroup:{defaultValue:{value:!1},description:"Display initials for group when `source` is set to blank",name:"isGroup",required:!1,type:{name:"boolean | undefined"}},roleIcon:{defaultValue:null,description:"Accepts roleIcon",name:"roleIcon",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>> | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/avatar/index.tsx#AvatarPure"]={docgenInfo:AvatarPure.__docgenInfo,name:"AvatarPure",path:"components/avatar/index.tsx#AvatarPure"})}catch(__react_docgen_typescript_loader_error){}},"./components/icon-button/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{K:()=>IconButton_IconButton});var react=__webpack_require__("../../node_modules/react/index.js"),react_svg_esm=__webpack_require__("../../node_modules/react-svg/dist/react-svg.esm.js"),styled_components_browser_esm=__webpack_require__("../../node_modules/styled-components/dist/styled-components.browser.esm.js"),themes=__webpack_require__("./themes/index.ts");const StyledOuter=styled_components_browser_esm.Ay.div`
  width: ${props=>props.size?`${props.size}px`:"20px"};
  height: ${props=>props.size?`${props.size}px`:"20px"};
  cursor: ${props=>props.isDisabled||!props.isClickable?"default":"pointer"};
  line-height: 0;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);

  ${props=>props.isStroke&&styled_components_browser_esm.AH`
      svg {
        &:not(:root) {
          width: 100%;
          height: 100%;
        }
        path {
          stroke: ${props.color||props.theme.iconButton.color};
        }
      }
      &:hover {
        svg {
          path {
            stroke: ${props.isDisabled?props.theme.iconButton.color:props.color||props.theme.iconButton.hoverColor};
          }
        }
      }
    `}

  ${props=>props.isFill&&!props.isStroke&&styled_components_browser_esm.AH`
      svg {
        &:not(:root) {
          width: 100%;
          height: 100%;
        }
        path {
          fill: ${props.color||props.theme.iconButton.color};
        }
      }
      &:hover {
        svg {
          path {
            fill: ${props.isDisabled?props.theme.iconButton.color:props.color||props.theme.iconButton.hoverColor};
          }
        }
      }
    `}
`;StyledOuter.defaultProps={theme:themes.C6};const IconButton_styled=StyledOuter;var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const IconButton_IconButton=({iconName,iconHoverName,iconClickName,iconNode,color,hoverColor,clickColor,isDisabled=!1,isFill=!0,isClickable=!1,className,size=25,title,id,style,dataTip="",isStroke=!1,onMouseEnter,onMouseLeave,onMouseDown,onMouseUp,onClick,...rest})=>{const[currentIconName,setCurrentIconName]=react.useState(iconName),[currentIconColor,setCurrentIconColor]=react.useState(iconName);return react.useEffect((()=>{setCurrentIconName(iconName),setCurrentIconColor(color||"")}),[iconName,color]),(0,jsx_runtime.jsx)(IconButton_styled,{className,size,title,isDisabled,onMouseEnter:e=>{isDisabled||("ontouchstart"in document.documentElement?(setCurrentIconName(iconName),setCurrentIconColor(hoverColor||color)):(setCurrentIconName(iconHoverName||iconName),setCurrentIconColor(hoverColor||color)),onMouseEnter?.(e))},onMouseLeave:e=>{isDisabled||(setCurrentIconName(iconName),setCurrentIconColor(color),onMouseLeave?.(e))},onMouseDown:e=>{isDisabled||("ontouchstart"in document.documentElement?(setCurrentIconName(iconName),setCurrentIconColor(clickColor||color)):(setCurrentIconName(iconClickName||iconName),setCurrentIconColor(clickColor||color)),onMouseDown?.(e))},onMouseUp:e=>{if(!isDisabled)switch(e.nativeEvent.button){case 1:"ontouchstart"in document.documentElement?(setCurrentIconName(iconName),setCurrentIconColor(hoverColor||color)):(setCurrentIconName(iconHoverName||iconName),setCurrentIconColor(hoverColor||color)),onMouseUp?.(e);break;case 2:onMouseUp?.(e)}},onClick:e=>{isDisabled||onClick?.(e)},isClickable:"function"==typeof onClick||isClickable,"data-tip":dataTip,"data-event":"click focus","data-for":id,id,style,color:currentIconColor,isFill,iconName,"data-testid":"icon-button",isStroke,...rest,children:iconNode||(0,jsx_runtime.jsx)(react_svg_esm.k,{className:"icon-button_svg not-selectable",src:currentIconName||""})})};IconButton_IconButton.displayName="IconButton";try{IconButton_IconButton.displayName="IconButton",IconButton_IconButton.__docgenInfo={description:"",displayName:"IconButton",props:{className:{defaultValue:null,description:"Sets component class",name:"className",required:!1,type:{name:"string"}},color:{defaultValue:null,description:"Icon color",name:"color",required:!1,type:{name:"string"}},hoverColor:{defaultValue:null,description:"Icon color on hover action",name:"hoverColor",required:!1,type:{name:"string"}},clickColor:{defaultValue:null,description:"Icon color on click action",name:"clickColor",required:!1,type:{name:"string"}},size:{defaultValue:{value:"25"},description:"Button height and width value",name:"size",required:!1,type:{name:"number | IconSizeType"}},isFill:{defaultValue:{value:"true"},description:"Determines if icon fill is needed",name:"isFill",required:!1,type:{name:"boolean"}},isStroke:{defaultValue:{value:"false"},description:"Determines if icon stroke is needed",name:"isStroke",required:!1,type:{name:"boolean"}},isDisabled:{defaultValue:{value:"false"},description:"Sets the button to present a disabled state",name:"isDisabled",required:!1,type:{name:"boolean"}},isClickable:{defaultValue:{value:"false"},description:"Sets cursor value",name:"isClickable",required:!1,type:{name:"boolean"}},iconNode:{defaultValue:null,description:"Icon node",name:"iconNode",required:!1,type:{name:"ReactNode"}},iconName:{defaultValue:null,description:"Icon name",name:"iconName",required:!1,type:{name:"string"}},iconHoverName:{defaultValue:null,description:"Icon name on hover action",name:"iconHoverName",required:!1,type:{name:"string"}},iconClickName:{defaultValue:null,description:"Icon name on click action",name:"iconClickName",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"Sets a button callback function triggered when the button is clicked",name:"onClick",required:!1,type:{name:"((e: MouseEvent<HTMLDivElement, MouseEvent>) => void)"}},onMouseEnter:{defaultValue:null,description:"Sets a button callback function triggered when the cursor enters the area",name:"onMouseEnter",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void)"}},onMouseDown:{defaultValue:null,description:"Sets a button callback function triggered when the cursor moves down",name:"onMouseDown",required:!1,type:{name:"((e: MouseEvent<HTMLDivElement, MouseEvent>) => void)"}},onMouseUp:{defaultValue:null,description:"Sets a button callback function triggered when the cursor moves up",name:"onMouseUp",required:!1,type:{name:"((e: MouseEvent<HTMLDivElement, MouseEvent>) => void)"}},onMouseLeave:{defaultValue:null,description:"Sets a button callback function triggered when the cursor leaves the icon",name:"onMouseLeave",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void)"}},id:{defaultValue:null,description:"Sets component id",name:"id",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties"}},dataTip:{defaultValue:{value:""},description:"The data-* attribute is used to store custom data private to the page or application. Required to display a tip over the hovered element",name:"dataTip",required:!1,type:{name:"string"}},title:{defaultValue:null,description:"Data when user hover on icon",name:"title",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/icon-button/IconButton.tsx#IconButton"]={docgenInfo:IconButton_IconButton.__docgenInfo,name:"IconButton",path:"components/icon-button/IconButton.tsx#IconButton"})}catch(__react_docgen_typescript_loader_error){}try{IconButton_IconButton.displayName="IconButton",__function.__docgenInfo={description:"",displayName:"IconButton",props:{className:{defaultValue:null,description:"Sets component class",name:"className",required:!1,type:{name:"string | undefined"}},color:{defaultValue:null,description:"Icon color",name:"color",required:!1,type:{name:"string | undefined"}},hoverColor:{defaultValue:null,description:"Icon color on hover action",name:"hoverColor",required:!1,type:{name:"string | undefined"}},clickColor:{defaultValue:null,description:"Icon color on click action",name:"clickColor",required:!1,type:{name:"string | undefined"}},size:{defaultValue:{value:25},description:"Button height and width value",name:"size",required:!1,type:{name:"number | IconSizeType | undefined"}},isFill:{defaultValue:{value:!0},description:"Determines if icon fill is needed",name:"isFill",required:!1,type:{name:"boolean | undefined"}},isStroke:{defaultValue:{value:!1},description:"Determines if icon stroke is needed",name:"isStroke",required:!1,type:{name:"boolean | undefined"}},isDisabled:{defaultValue:{value:!1},description:"Sets the button to present a disabled state",name:"isDisabled",required:!1,type:{name:"boolean | undefined"}},isClickable:{defaultValue:{value:!1},description:"Sets cursor value",name:"isClickable",required:!1,type:{name:"boolean | undefined"}},iconNode:{defaultValue:null,description:"Icon node",name:"iconNode",required:!1,type:{name:"ReactNode"}},iconName:{defaultValue:null,description:"Icon name",name:"iconName",required:!1,type:{name:"string | undefined"}},iconHoverName:{defaultValue:null,description:"Icon name on hover action",name:"iconHoverName",required:!1,type:{name:"string | undefined"}},iconClickName:{defaultValue:null,description:"Icon name on click action",name:"iconClickName",required:!1,type:{name:"string | undefined"}},onClick:{defaultValue:null,description:"Sets a button callback function triggered when the button is clicked",name:"onClick",required:!1,type:{name:"((e: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined"}},onMouseEnter:{defaultValue:null,description:"Sets a button callback function triggered when the cursor enters the area",name:"onMouseEnter",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void) | undefined"}},onMouseDown:{defaultValue:null,description:"Sets a button callback function triggered when the cursor moves down",name:"onMouseDown",required:!1,type:{name:"((e: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined"}},onMouseUp:{defaultValue:null,description:"Sets a button callback function triggered when the cursor moves up",name:"onMouseUp",required:!1,type:{name:"((e: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined"}},onMouseLeave:{defaultValue:null,description:"Sets a button callback function triggered when the cursor leaves the icon",name:"onMouseLeave",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void) | undefined"}},id:{defaultValue:null,description:"Sets component id",name:"id",required:!1,type:{name:"string | undefined"}},style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties | undefined"}},dataTip:{defaultValue:{value:""},description:"The data-* attribute is used to store custom data private to the page or application. Required to display a tip over the hovered element",name:"dataTip",required:!1,type:{name:"string | undefined"}},title:{defaultValue:null,description:"Data when user hover on icon",name:"title",required:!1,type:{name:"string | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/icon-button/IconButton.tsx#IconButton"]={docgenInfo:IconButton_IconButton.__docgenInfo,name:"IconButton",path:"components/icon-button/IconButton.tsx#IconButton"})}catch(__react_docgen_typescript_loader_error){}try{IconButton.displayName="IconButton",IconButton.__docgenInfo={description:"",displayName:"IconButton",props:{className:{defaultValue:null,description:"Sets component class",name:"className",required:!1,type:{name:"string"}},color:{defaultValue:null,description:"Icon color",name:"color",required:!1,type:{name:"string"}},hoverColor:{defaultValue:null,description:"Icon color on hover action",name:"hoverColor",required:!1,type:{name:"string"}},clickColor:{defaultValue:null,description:"Icon color on click action",name:"clickColor",required:!1,type:{name:"string"}},size:{defaultValue:{value:"25"},description:"Button height and width value",name:"size",required:!1,type:{name:"number | IconSizeType"}},isFill:{defaultValue:{value:"true"},description:"Determines if icon fill is needed",name:"isFill",required:!1,type:{name:"boolean"}},isStroke:{defaultValue:{value:"false"},description:"Determines if icon stroke is needed",name:"isStroke",required:!1,type:{name:"boolean"}},isDisabled:{defaultValue:{value:"false"},description:"Sets the button to present a disabled state",name:"isDisabled",required:!1,type:{name:"boolean"}},isClickable:{defaultValue:{value:"false"},description:"Sets cursor value",name:"isClickable",required:!1,type:{name:"boolean"}},iconNode:{defaultValue:null,description:"Icon node",name:"iconNode",required:!1,type:{name:"ReactNode"}},iconName:{defaultValue:null,description:"Icon name",name:"iconName",required:!1,type:{name:"string"}},iconHoverName:{defaultValue:null,description:"Icon name on hover action",name:"iconHoverName",required:!1,type:{name:"string"}},iconClickName:{defaultValue:null,description:"Icon name on click action",name:"iconClickName",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"Sets a button callback function triggered when the button is clicked",name:"onClick",required:!1,type:{name:"((e: MouseEvent<HTMLDivElement, MouseEvent>) => void)"}},onMouseEnter:{defaultValue:null,description:"Sets a button callback function triggered when the cursor enters the area",name:"onMouseEnter",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void)"}},onMouseDown:{defaultValue:null,description:"Sets a button callback function triggered when the cursor moves down",name:"onMouseDown",required:!1,type:{name:"((e: MouseEvent<HTMLDivElement, MouseEvent>) => void)"}},onMouseUp:{defaultValue:null,description:"Sets a button callback function triggered when the cursor moves up",name:"onMouseUp",required:!1,type:{name:"((e: MouseEvent<HTMLDivElement, MouseEvent>) => void)"}},onMouseLeave:{defaultValue:null,description:"Sets a button callback function triggered when the cursor leaves the icon",name:"onMouseLeave",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void)"}},id:{defaultValue:null,description:"Sets component id",name:"id",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties"}},dataTip:{defaultValue:{value:""},description:"The data-* attribute is used to store custom data private to the page or application. Required to display a tip over the hovered element",name:"dataTip",required:!1,type:{name:"string"}},title:{defaultValue:null,description:"Data when user hover on icon",name:"title",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/icon-button/index.tsx#IconButton"]={docgenInfo:IconButton.__docgenInfo,name:"IconButton",path:"components/icon-button/index.tsx#IconButton"})}catch(__react_docgen_typescript_loader_error){}try{IconButton.displayName="IconButton",__function.__docgenInfo={description:"",displayName:"IconButton",props:{className:{defaultValue:null,description:"Sets component class",name:"className",required:!1,type:{name:"string | undefined"}},color:{defaultValue:null,description:"Icon color",name:"color",required:!1,type:{name:"string | undefined"}},hoverColor:{defaultValue:null,description:"Icon color on hover action",name:"hoverColor",required:!1,type:{name:"string | undefined"}},clickColor:{defaultValue:null,description:"Icon color on click action",name:"clickColor",required:!1,type:{name:"string | undefined"}},size:{defaultValue:{value:25},description:"Button height and width value",name:"size",required:!1,type:{name:"number | IconSizeType | undefined"}},isFill:{defaultValue:{value:!0},description:"Determines if icon fill is needed",name:"isFill",required:!1,type:{name:"boolean | undefined"}},isStroke:{defaultValue:{value:!1},description:"Determines if icon stroke is needed",name:"isStroke",required:!1,type:{name:"boolean | undefined"}},isDisabled:{defaultValue:{value:!1},description:"Sets the button to present a disabled state",name:"isDisabled",required:!1,type:{name:"boolean | undefined"}},isClickable:{defaultValue:{value:!1},description:"Sets cursor value",name:"isClickable",required:!1,type:{name:"boolean | undefined"}},iconNode:{defaultValue:null,description:"Icon node",name:"iconNode",required:!1,type:{name:"ReactNode"}},iconName:{defaultValue:null,description:"Icon name",name:"iconName",required:!1,type:{name:"string | undefined"}},iconHoverName:{defaultValue:null,description:"Icon name on hover action",name:"iconHoverName",required:!1,type:{name:"string | undefined"}},iconClickName:{defaultValue:null,description:"Icon name on click action",name:"iconClickName",required:!1,type:{name:"string | undefined"}},onClick:{defaultValue:null,description:"Sets a button callback function triggered when the button is clicked",name:"onClick",required:!1,type:{name:"((e: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined"}},onMouseEnter:{defaultValue:null,description:"Sets a button callback function triggered when the cursor enters the area",name:"onMouseEnter",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void) | undefined"}},onMouseDown:{defaultValue:null,description:"Sets a button callback function triggered when the cursor moves down",name:"onMouseDown",required:!1,type:{name:"((e: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined"}},onMouseUp:{defaultValue:null,description:"Sets a button callback function triggered when the cursor moves up",name:"onMouseUp",required:!1,type:{name:"((e: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined"}},onMouseLeave:{defaultValue:null,description:"Sets a button callback function triggered when the cursor leaves the icon",name:"onMouseLeave",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void) | undefined"}},id:{defaultValue:null,description:"Sets component id",name:"id",required:!1,type:{name:"string | undefined"}},style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties | undefined"}},dataTip:{defaultValue:{value:""},description:"The data-* attribute is used to store custom data private to the page or application. Required to display a tip over the hovered element",name:"dataTip",required:!1,type:{name:"string | undefined"}},title:{defaultValue:null,description:"Data when user hover on icon",name:"title",required:!1,type:{name:"string | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/icon-button/index.tsx#IconButton"]={docgenInfo:IconButton.__docgenInfo,name:"IconButton",path:"components/icon-button/index.tsx#IconButton"})}catch(__react_docgen_typescript_loader_error){}},"./components/tooltip/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{m:()=>Tooltip_Tooltip});var react=__webpack_require__("../../node_modules/react/index.js"),floating_ui_core=__webpack_require__("../../node_modules/@floating-ui/core/dist/floating-ui.core.mjs"),floating_ui_dom=__webpack_require__("../../node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs"),react_tooltip_min=__webpack_require__("../../node_modules/react-tooltip/dist/react-tooltip.min.mjs"),portal=__webpack_require__("./components/portal/index.ts"),styled_components_browser_esm=__webpack_require__("../../node_modules/styled-components/dist/styled-components.browser.esm.js"),themes=__webpack_require__("./themes/index.ts");const StyledTooltip=styled_components_browser_esm.Ay.div`
  .__react_component_tooltip {
    background-color: ${props=>props.color?props.color:props.theme.tooltip.color};
    border-radius: ${props=>props.theme.tooltip.borderRadius};
    -moz-border-radius: ${props=>props.theme.tooltip.borderRadius};
    -webkit-border-radius: ${props=>props.theme.tooltip.borderRadius};
    box-shadow: ${props=>props.theme.tooltip.boxShadow};
    -moz-box-shadow: ${props=>props.theme.tooltip.boxShadow};
    -webkit-box-shadow: ${props=>props.theme.tooltip.boxShadow};
    padding: ${props=>props.theme.tooltip.padding};
    max-width: ${props=>`min(100vw, ${props.maxWidthProp?props.maxWidthProp:props.theme.tooltip.maxWidth})`};
    color: ${props=>props.theme.tooltip.textColor};
    z-index: 999;

    box-sizing: border-box;

    p,
    div,
    span {
      color: ${props=>props.theme.tooltip.textColor};
    }

    &:before {
      border: ${props=>props.theme.tooltip.before.border};
    }
    &:after {
      border: ${props=>props.theme.tooltip.after.border};
      background-color: ${props=>props.color?props.color:props.theme.tooltip.color} !important;
    }
  }

  .__react_component_tooltip.place-left::after {
    border-left: none !important;
  }

  .__react_component_tooltip.place-right::after {
    border-right: none !important;
  }

  .__react_component_tooltip.place-top::after {
    border-top: none !important;
  }

  .__react_component_tooltip.place-bottom::after {
    border-bottom: none !important;
  }

  .__react_component_tooltip.place-left::before {
    background: none !important;
  }

  .__react_component_tooltip.place-right::before {
    background: none !important;
  }

  .__react_component_tooltip.place-top::before {
    background: none !important;
  }

  .__react_component_tooltip.place-bottom::before {
    background: none !important;
  }

  .__react_component_tooltip.place-bottom::after,
  .__react_component_tooltip.place-top::after,
  .__react_component_tooltip.place-right::after,
  .__react_component_tooltip.place-left::after {
    display: none;
  }
`;StyledTooltip.defaultProps={theme:themes.C6};const Tooltip_styled=StyledTooltip;var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const globalCloseEvents={escape:!0,resize:!0,scroll:!0,clickOutsideAnchor:!0},Tooltip_Tooltip=react.forwardRef((({id,place="top",getContent,children,afterShow,afterHide,className,style,color,maxWidth,anchorSelect,clickable,openOnClick,isOpen,float,noArrow=!0,fallbackAxisSideDirection,opacity,imperativeModeOnly,...rest},ref)=>{const openEvents={click:openOnClick,mouseenter:!openOnClick},closeEvents={click:openOnClick,mouseleave:!openOnClick},tooltip=(0,jsx_runtime.jsx)(Tooltip_styled,{className,style,color,maxWidthProp:maxWidth,"data-testid":"tooltip",children:(0,jsx_runtime.jsx)(react_tooltip_min.m_,{ref,id,opacity,float,place,isOpen,noArrow,render:getContent,clickable,afterShow,afterHide,openEvents,positionStrategy:"fixed",closeEvents,openOnClick,anchorSelect,imperativeModeOnly,className:"__react_component_tooltip",globalCloseEvents,middlewares:[(0,floating_ui_core.cY)(rest.offset??4),(0,floating_ui_dom.UU)({crossAxis:!1,fallbackAxisSideDirection}),(0,floating_ui_dom.BN)()],...rest,children})});return(0,jsx_runtime.jsx)(portal.Z,{element:tooltip})}));Tooltip_Tooltip.displayName="Tooltip";try{Tooltip_Tooltip.displayName="Tooltip",Tooltip_Tooltip.__docgenInfo={description:"",displayName:"Tooltip",props:{id:{defaultValue:null,description:"Used as HTML id property",name:"id",required:!1,type:{name:"string"}},place:{defaultValue:{value:"top"},description:"Global tooltip placement",name:"place",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"top"'},{value:'"top-start"'},{value:'"top-end"'},{value:'"right"'},{value:'"right-start"'},{value:'"right-end"'},{value:'"bottom"'},{value:'"bottom-start"'},{value:'"bottom-end"'},{value:'"left-start"'},{value:'"left-end"'}]}},fallbackAxisSideDirection:{defaultValue:null,description:"Whether to allow fallback to the perpendicular axis of the preferred placement, and if so, which side direction along the axis to prefer.",name:"fallbackAxisSideDirection",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"start"'},{value:'"end"'}]}},getContent:{defaultValue:null,description:"Sets a callback function that generates the tip content dynamically",name:"getContent",required:!1,type:{name:"(({ content, activeAnchor, }: TGetTooltipContent) => ReactNode)"}},afterHide:{defaultValue:null,description:"A function to be called after the tooltip is hidden",name:"afterHide",required:!1,type:{name:"(() => void)"}},afterShow:{defaultValue:null,description:"A function to be called after the tooltip is shown",name:"afterShow",required:!1,type:{name:"(() => void)"}},offset:{defaultValue:null,description:"Space between the tooltip element and anchor element (arrow not included in calculation)",name:"offset",required:!1,type:{name:"number"}},children:{defaultValue:null,description:"Child elements",name:"children",required:!1,type:{name:"ReactNode"}},className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties"}},color:{defaultValue:null,description:"Background color of the tooltip",name:"color",required:!1,type:{name:"string"}},maxWidth:{defaultValue:null,description:"Maximum width of the tooltip",name:"maxWidth",required:!1,type:{name:"string"}},isOpen:{defaultValue:null,description:"The tooltip can be controlled or uncontrolled, this attribute cannot be used to handle show and hide tooltip outside tooltip",name:"isOpen",required:!1,type:{name:"boolean"}},clickable:{defaultValue:null,description:"Allow interaction with elements inside the tooltip",name:"clickable",required:!1,type:{name:"boolean"}},openOnClick:{defaultValue:null,description:"Controls whether the tooltip should open when clicking (true) or hovering (false) the anchor element",name:"openOnClick",required:!1,type:{name:"boolean"}},float:{defaultValue:null,description:"Tooltip will follow the mouse position when it moves inside the anchor element",name:"float",required:!1,type:{name:"boolean"}},anchorSelect:{defaultValue:null,description:"The selector for the anchor elements",name:"anchorSelect",required:!1,type:{name:"string"}},noArrow:{defaultValue:{value:"true"},description:"Tooltip arrow will not be shown",name:"noArrow",required:!1,type:{name:"boolean"}},offsetTop:{defaultValue:null,description:"",name:"offsetTop",required:!1,type:{name:"number"}},offsetLeft:{defaultValue:null,description:"",name:"offsetLeft",required:!1,type:{name:"number"}},reference:{defaultValue:null,description:"",name:"reference",required:!1,type:{name:"RefObject<HTMLDivElement>"}},opacity:{defaultValue:null,description:"Change the opacity of the tooltip",name:"opacity",required:!1,type:{name:"number"}},imperativeModeOnly:{defaultValue:null,description:"When enabled, default tooltip behavior is disabled.",name:"imperativeModeOnly",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/tooltip/Tooltip.tsx#Tooltip"]={docgenInfo:Tooltip_Tooltip.__docgenInfo,name:"Tooltip",path:"components/tooltip/Tooltip.tsx#Tooltip"})}catch(__react_docgen_typescript_loader_error){}try{Tooltip_Tooltip.displayName="Tooltip",ForwardRefExoticComponent.__docgenInfo={description:"",displayName:"Tooltip",props:{id:{defaultValue:null,description:"Used as HTML id property",name:"id",required:!1,type:{name:"string | undefined"}},place:{defaultValue:{value:"top"},description:"Global tooltip placement",name:"place",required:!1,type:{name:"TTooltipPlace | undefined"}},fallbackAxisSideDirection:{defaultValue:null,description:"Whether to allow fallback to the perpendicular axis of the preferred placement, and if so, which side direction along the axis to prefer.",name:"fallbackAxisSideDirection",required:!1,type:{name:"TFallbackAxisSideDirection | undefined"}},getContent:{defaultValue:null,description:"Sets a callback function that generates the tip content dynamically",name:"getContent",required:!1,type:{name:"(({ content, activeAnchor, }: TGetTooltipContent) => ReactNode) | undefined"}},afterHide:{defaultValue:null,description:"A function to be called after the tooltip is hidden",name:"afterHide",required:!1,type:{name:"(() => void) | undefined"}},afterShow:{defaultValue:null,description:"A function to be called after the tooltip is shown",name:"afterShow",required:!1,type:{name:"(() => void) | undefined"}},offset:{defaultValue:null,description:"Space between the tooltip element and anchor element (arrow not included in calculation)",name:"offset",required:!1,type:{name:"number | undefined"}},children:{defaultValue:null,description:"Child elements",name:"children",required:!1,type:{name:"ReactNode"}},className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string | undefined"}},style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties | undefined"}},color:{defaultValue:null,description:"Background color of the tooltip",name:"color",required:!1,type:{name:"string | undefined"}},maxWidth:{defaultValue:null,description:"Maximum width of the tooltip",name:"maxWidth",required:!1,type:{name:"string | undefined"}},isOpen:{defaultValue:null,description:"The tooltip can be controlled or uncontrolled, this attribute cannot be used to handle show and hide tooltip outside tooltip",name:"isOpen",required:!1,type:{name:"boolean | undefined"}},clickable:{defaultValue:null,description:"Allow interaction with elements inside the tooltip",name:"clickable",required:!1,type:{name:"boolean | undefined"}},openOnClick:{defaultValue:null,description:"Controls whether the tooltip should open when clicking (true) or hovering (false) the anchor element",name:"openOnClick",required:!1,type:{name:"boolean | undefined"}},float:{defaultValue:null,description:"Tooltip will follow the mouse position when it moves inside the anchor element",name:"float",required:!1,type:{name:"boolean | undefined"}},anchorSelect:{defaultValue:null,description:"The selector for the anchor elements",name:"anchorSelect",required:!1,type:{name:"string | undefined"}},noArrow:{defaultValue:{value:!0},description:"Tooltip arrow will not be shown",name:"noArrow",required:!1,type:{name:"boolean | undefined"}},offsetTop:{defaultValue:null,description:"",name:"offsetTop",required:!1,type:{name:"number | undefined"}},offsetLeft:{defaultValue:null,description:"",name:"offsetLeft",required:!1,type:{name:"number | undefined"}},reference:{defaultValue:null,description:"",name:"reference",required:!1,type:{name:"RefObject<HTMLDivElement> | undefined"}},opacity:{defaultValue:null,description:"Change the opacity of the tooltip",name:"opacity",required:!1,type:{name:"number | undefined"}},imperativeModeOnly:{defaultValue:null,description:"When enabled, default tooltip behavior is disabled.",name:"imperativeModeOnly",required:!1,type:{name:"boolean | undefined"}},ref:{defaultValue:null,description:"Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}",name:"ref",required:!1,type:{name:"LegacyRef<TooltipRefProps> | undefined"}},key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"Key | null | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/tooltip/Tooltip.tsx#Tooltip"]={docgenInfo:Tooltip_Tooltip.__docgenInfo,name:"Tooltip",path:"components/tooltip/Tooltip.tsx#Tooltip"})}catch(__react_docgen_typescript_loader_error){}try{Tooltip.displayName="Tooltip",Tooltip.__docgenInfo={description:"",displayName:"Tooltip",props:{id:{defaultValue:null,description:"Used as HTML id property",name:"id",required:!1,type:{name:"string"}},place:{defaultValue:{value:"top"},description:"Global tooltip placement",name:"place",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"top"'},{value:'"top-start"'},{value:'"top-end"'},{value:'"right"'},{value:'"right-start"'},{value:'"right-end"'},{value:'"bottom"'},{value:'"bottom-start"'},{value:'"bottom-end"'},{value:'"left-start"'},{value:'"left-end"'}]}},fallbackAxisSideDirection:{defaultValue:null,description:"Whether to allow fallback to the perpendicular axis of the preferred placement, and if so, which side direction along the axis to prefer.",name:"fallbackAxisSideDirection",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"start"'},{value:'"end"'}]}},getContent:{defaultValue:null,description:"Sets a callback function that generates the tip content dynamically",name:"getContent",required:!1,type:{name:"(({ content, activeAnchor, }: TGetTooltipContent) => ReactNode)"}},afterHide:{defaultValue:null,description:"A function to be called after the tooltip is hidden",name:"afterHide",required:!1,type:{name:"(() => void)"}},afterShow:{defaultValue:null,description:"A function to be called after the tooltip is shown",name:"afterShow",required:!1,type:{name:"(() => void)"}},offset:{defaultValue:null,description:"Space between the tooltip element and anchor element (arrow not included in calculation)",name:"offset",required:!1,type:{name:"number"}},children:{defaultValue:null,description:"Child elements",name:"children",required:!1,type:{name:"ReactNode"}},className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties"}},color:{defaultValue:null,description:"Background color of the tooltip",name:"color",required:!1,type:{name:"string"}},maxWidth:{defaultValue:null,description:"Maximum width of the tooltip",name:"maxWidth",required:!1,type:{name:"string"}},isOpen:{defaultValue:null,description:"The tooltip can be controlled or uncontrolled, this attribute cannot be used to handle show and hide tooltip outside tooltip",name:"isOpen",required:!1,type:{name:"boolean"}},clickable:{defaultValue:null,description:"Allow interaction with elements inside the tooltip",name:"clickable",required:!1,type:{name:"boolean"}},openOnClick:{defaultValue:null,description:"Controls whether the tooltip should open when clicking (true) or hovering (false) the anchor element",name:"openOnClick",required:!1,type:{name:"boolean"}},float:{defaultValue:null,description:"Tooltip will follow the mouse position when it moves inside the anchor element",name:"float",required:!1,type:{name:"boolean"}},anchorSelect:{defaultValue:null,description:"The selector for the anchor elements",name:"anchorSelect",required:!1,type:{name:"string"}},noArrow:{defaultValue:{value:"true"},description:"Tooltip arrow will not be shown",name:"noArrow",required:!1,type:{name:"boolean"}},offsetTop:{defaultValue:null,description:"",name:"offsetTop",required:!1,type:{name:"number"}},offsetLeft:{defaultValue:null,description:"",name:"offsetLeft",required:!1,type:{name:"number"}},reference:{defaultValue:null,description:"",name:"reference",required:!1,type:{name:"RefObject<HTMLDivElement>"}},opacity:{defaultValue:null,description:"Change the opacity of the tooltip",name:"opacity",required:!1,type:{name:"number"}},imperativeModeOnly:{defaultValue:null,description:"When enabled, default tooltip behavior is disabled.",name:"imperativeModeOnly",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/tooltip/index.tsx#Tooltip"]={docgenInfo:Tooltip.__docgenInfo,name:"Tooltip",path:"components/tooltip/index.tsx#Tooltip"})}catch(__react_docgen_typescript_loader_error){}try{Tooltip.displayName="Tooltip",ForwardRefExoticComponent.__docgenInfo={description:"",displayName:"Tooltip",props:{id:{defaultValue:null,description:"Used as HTML id property",name:"id",required:!1,type:{name:"string | undefined"}},place:{defaultValue:{value:"top"},description:"Global tooltip placement",name:"place",required:!1,type:{name:"TTooltipPlace | undefined"}},fallbackAxisSideDirection:{defaultValue:null,description:"Whether to allow fallback to the perpendicular axis of the preferred placement, and if so, which side direction along the axis to prefer.",name:"fallbackAxisSideDirection",required:!1,type:{name:"TFallbackAxisSideDirection | undefined"}},getContent:{defaultValue:null,description:"Sets a callback function that generates the tip content dynamically",name:"getContent",required:!1,type:{name:"(({ content, activeAnchor, }: TGetTooltipContent) => ReactNode) | undefined"}},afterHide:{defaultValue:null,description:"A function to be called after the tooltip is hidden",name:"afterHide",required:!1,type:{name:"(() => void) | undefined"}},afterShow:{defaultValue:null,description:"A function to be called after the tooltip is shown",name:"afterShow",required:!1,type:{name:"(() => void) | undefined"}},offset:{defaultValue:null,description:"Space between the tooltip element and anchor element (arrow not included in calculation)",name:"offset",required:!1,type:{name:"number | undefined"}},children:{defaultValue:null,description:"Child elements",name:"children",required:!1,type:{name:"ReactNode"}},className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string | undefined"}},style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties | undefined"}},color:{defaultValue:null,description:"Background color of the tooltip",name:"color",required:!1,type:{name:"string | undefined"}},maxWidth:{defaultValue:null,description:"Maximum width of the tooltip",name:"maxWidth",required:!1,type:{name:"string | undefined"}},isOpen:{defaultValue:null,description:"The tooltip can be controlled or uncontrolled, this attribute cannot be used to handle show and hide tooltip outside tooltip",name:"isOpen",required:!1,type:{name:"boolean | undefined"}},clickable:{defaultValue:null,description:"Allow interaction with elements inside the tooltip",name:"clickable",required:!1,type:{name:"boolean | undefined"}},openOnClick:{defaultValue:null,description:"Controls whether the tooltip should open when clicking (true) or hovering (false) the anchor element",name:"openOnClick",required:!1,type:{name:"boolean | undefined"}},float:{defaultValue:null,description:"Tooltip will follow the mouse position when it moves inside the anchor element",name:"float",required:!1,type:{name:"boolean | undefined"}},anchorSelect:{defaultValue:null,description:"The selector for the anchor elements",name:"anchorSelect",required:!1,type:{name:"string | undefined"}},noArrow:{defaultValue:{value:!0},description:"Tooltip arrow will not be shown",name:"noArrow",required:!1,type:{name:"boolean | undefined"}},offsetTop:{defaultValue:null,description:"",name:"offsetTop",required:!1,type:{name:"number | undefined"}},offsetLeft:{defaultValue:null,description:"",name:"offsetLeft",required:!1,type:{name:"number | undefined"}},reference:{defaultValue:null,description:"",name:"reference",required:!1,type:{name:"RefObject<HTMLDivElement> | undefined"}},opacity:{defaultValue:null,description:"Change the opacity of the tooltip",name:"opacity",required:!1,type:{name:"number | undefined"}},imperativeModeOnly:{defaultValue:null,description:"When enabled, default tooltip behavior is disabled.",name:"imperativeModeOnly",required:!1,type:{name:"boolean | undefined"}},ref:{defaultValue:null,description:"Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}",name:"ref",required:!1,type:{name:"LegacyRef<TooltipRefProps> | undefined"}},key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"Key | null | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/tooltip/index.tsx#Tooltip"]={docgenInfo:Tooltip.__docgenInfo,name:"Tooltip",path:"components/tooltip/index.tsx#Tooltip"})}catch(__react_docgen_typescript_loader_error){}}}]);
//# sourceMappingURL=5285.6a6e4198.iframe.bundle.js.map