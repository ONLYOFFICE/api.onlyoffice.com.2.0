"use strict";(self.webpackChunk_docspace_components=self.webpackChunk_docspace_components||[]).push([[1758],{"./drop-down/drop-down.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),___WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./drop-down/index.js"),_drop_down_item__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./drop-down-item/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/DropDown",component:___WEBPACK_IMPORTED_MODULE_1__.Z,subcomponents:{DropDownItem:_drop_down_item__WEBPACK_IMPORTED_MODULE_2__.Z},argTypes:{onClick:{action:"onClickItem",table:{disable:!0}}},parameters:{docs:{description:{component:"Is a dropdown with any number of action\n        By default, it is used with DropDownItem elements in role of children.\n\nIf you want to display something custom, you can put it in children, but take into account that all stylization is assigned to the implemented component.\n\nWhen using component, it should be noted that parent must have CSS property _position: relative_. Otherwise, DropDown will appear outside parent's border.\n"}}}},Template=args=>{const[isOpen,setIsOpen]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(args.open);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{style:{height:"200px",position:"relative",padding:"20px"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(___WEBPACK_IMPORTED_MODULE_1__.Z,{...args,open:isOpen,isDefaultMode:!1,clickOutsideAction:()=>{},style:{top:"20px"},onClick:()=>{},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_drop_down_item__WEBPACK_IMPORTED_MODULE_2__.Z,{isHeader:!0,label:"Category 1"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_drop_down_item__WEBPACK_IMPORTED_MODULE_2__.Z,{label:"Button 1",onClick:()=>args.onClick("Button 1 clicked")}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_drop_down_item__WEBPACK_IMPORTED_MODULE_2__.Z,{label:"Button 2",onClick:()=>args.onClick("Button 2 clicked")}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_drop_down_item__WEBPACK_IMPORTED_MODULE_2__.Z,{label:"Button 3",onClick:()=>args.onClick("Button 3 clicked")}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_drop_down_item__WEBPACK_IMPORTED_MODULE_2__.Z,{label:"Button 4",onClick:()=>args.onClick("Button 4 clicked"),disabled:!0}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_drop_down_item__WEBPACK_IMPORTED_MODULE_2__.Z,{isSeparator:!0}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_drop_down_item__WEBPACK_IMPORTED_MODULE_2__.Z,{label:"Button 5",onClick:()=>args.onClick("Button 5 clicked")}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_drop_down_item__WEBPACK_IMPORTED_MODULE_2__.Z,{label:"Button 6",onClick:()=>args.onClick("Button 6 clicked")})]})})};Template.displayName="Template";const Default=Template.bind({});Default.args={open:!0},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'args => {\n  const [isOpen, setIsOpen] = useState(args.open);\n  return <div style={{\n    height: "200px",\n    position: "relative",\n    padding: "20px"\n  }}>\r\n      <DropDown {...args} open={isOpen} isDefaultMode={false} clickOutsideAction={() => {}} style={{\n      top: "20px"\n    }} onClick={() => {}}>\r\n        <DropDownItem isHeader label="Category 1" />\r\n\r\n        <DropDownItem label="Button 1" onClick={() => args.onClick("Button 1 clicked")} />\r\n        <DropDownItem label="Button 2" onClick={() => args.onClick("Button 2 clicked")} />\r\n        <DropDownItem label="Button 3" onClick={() => args.onClick("Button 3 clicked")} />\r\n        <DropDownItem label="Button 4" onClick={() => args.onClick("Button 4 clicked")} disabled={true} />\r\n        <DropDownItem isSeparator />\r\n        <DropDownItem label="Button 5" onClick={() => args.onClick("Button 5 clicked")} />\r\n        <DropDownItem label="Button 6" onClick={() => args.onClick("Button 6 clicked")} />\r\n      </DropDown>\r\n    </div>;\n}',...Default.parameters?.docs?.source}}};const __namedExportsOrder=["Default"]}}]);