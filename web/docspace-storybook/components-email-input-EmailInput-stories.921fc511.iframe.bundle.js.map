{"version":3,"file":"components-email-input-EmailInput-stories.921fc511.iframe.bundle.js","mappings":";AA8BA;;ACsBA;AACA;;AAEA;AAIA;AAMA;;;AAIA;;AAKA;AACA;AACA;AAOA;;AASA;;AAOA;AACA;AACA;AACA;;AAEA;AAOA;;AAOA;;;AAGA;AAIA;AACA;;;;AAIA;AAIA;AACA;;;;AAIA;AAIA;AACA;;;;AAIA;AAIA;AACA;;;;AAIA;AAIA;AACA;;;AAGA;AAGA","sources":["webpack://@docspace/shared/./components/email-input/EmailInput.styled.ts","webpack://@docspace/shared/./components/text-input/TextInput.styled.ts"],"sourcesContent":["// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport styled from \"styled-components\";\r\nimport { StyledTextInput } from \"../text-input\";\r\n\r\nconst StyledEmailInput = styled(StyledTextInput)`\r\n  text-align: ${({ theme }) =>\r\n    theme.interfaceDirection === \"rtl\" ? \"right\" : \"left\"};\r\n`;\r\n\r\nexport default StyledEmailInput;\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport { commonInputStyles, NoUserSelect } from \"../../utils\";\r\nimport { Base } from \"../../themes\";\r\n\r\nimport { InputSize } from \"./TextInput.enums\";\r\n\r\nimport { Input } from \"./sub-components/Input\";\r\n\r\nconst StyledTextInput = styled(Input).attrs((props) => ({\r\n  id: props.id,\r\n  forwardedRef: props.forwardedRef,\r\n  name: props.name,\r\n  type: props.type,\r\n  value: props.value,\r\n  placeholder: props.placeholder,\r\n  maxLength: props.maxLength,\r\n  onChange: props.onChange,\r\n  onBlur: props.onBlur,\r\n  onFocus: props.onFocus,\r\n  readOnly: props.isReadOnly,\r\n  autoFocus: props.isAutoFocussed,\r\n  autoComplete: props.autoComplete,\r\n  tabIndex: props.tabIndex,\r\n  disabled: props.isDisabled ? \"disabled\" : \"\",\r\n}))`\r\n  ${commonInputStyles}\r\n  -webkit-appearance: ${(props) => props.theme.textInput.appearance};\r\n\r\n  background-color: ${(props) =>\r\n    props.isDisabled\r\n      ? props.theme.input.disableBackgroundColor\r\n      : props.theme.input.backgroundColor};\r\n  -webkit-text-fill-color: ${(props) =>\r\n    props.isDisabled\r\n      ? props.theme.input.disableColor\r\n      : props?.value?.length > 0\r\n        ? props.theme.text.color\r\n        : props.theme.textInput.placeholderColor} !important;\r\n  caret-color: ${(props) =>\r\n    props.isDisabled ? props.theme.input.disableColor : props.theme.text.color};\r\n  -webkit-background-clip: text !important;\r\n  box-shadow: inset 0 0 20px 20px\r\n    ${(props) =>\r\n      props.isDisabled\r\n        ? props.theme.input.disableBackgroundColor\r\n        : props.theme.input.backgroundColor} !important;\r\n\r\n  display: ${(props) => props.theme.textInput.display};\r\n  font-family: ${(props) => props.theme.fontFamily};\r\n  line-height: ${(props) =>\r\n    (props.size === InputSize.base && props.theme.textInput.lineHeight.base) ||\r\n    (props.size === InputSize.middle &&\r\n      props.theme.textInput.lineHeight.middle) ||\r\n    (props.size === InputSize.big && props.theme.textInput.lineHeight.big) ||\r\n    (props.size === InputSize.huge && props.theme.textInput.lineHeight.huge) ||\r\n    (props.size === InputSize.large && props.theme.textInput.lineHeight.large)};\r\n  font-size: ${(props) =>\r\n    (props.size === InputSize.base && props.theme.textInput.fontSize.base) ||\r\n    (props.size === InputSize.middle &&\r\n      props.theme.textInput.fontSize.middle) ||\r\n    (props.size === InputSize.big && props.theme.textInput.fontSize.big) ||\r\n    (props.size === InputSize.huge && props.theme.textInput.fontSize.huge) ||\r\n    (props.size === InputSize.large && props.theme.textInput.fontSize.large) ||\r\n    props.theme.textInput.fontSize.base};\r\n\r\n  font-weight: ${(props) =>\r\n    props.fontWeight\r\n      ? props.fontWeight\r\n      : props.isBold\r\n        ? 600\r\n        : props.theme.textInput.fontWeight};\r\n\r\n  flex: ${(props) => props.theme.textInput.flex};\r\n  outline: ${(props) => props.theme.textInput.outline};\r\n  overflow: ${(props) => props.theme.textInput.overflow};\r\n  opacity: ${(props) => props.theme.textInput.opacity};\r\n\r\n  width: ${(props) =>\r\n    (props.scale && \"100%\") ||\r\n    (props.size === InputSize.base && props.theme.input.width.base) ||\r\n    (props.size === InputSize.middle && props.theme.input.width.middle) ||\r\n    (props.size === InputSize.big && props.theme.input.width.big) ||\r\n    (props.size === InputSize.huge && props.theme.input.width.huge) ||\r\n    (props.size === InputSize.large && props.theme.input.width.large)};\r\n  padding: ${(props) =>\r\n    (props.size === InputSize.base && props.theme.textInput.padding.base) ||\r\n    (props.size === InputSize.middle && props.theme.textInput.padding.middle) ||\r\n    (props.size === InputSize.big && props.theme.textInput.padding.big) ||\r\n    (props.size === InputSize.huge && props.theme.textInput.padding.huge) ||\r\n    (props.size === InputSize.large && props.theme.textInput.padding.large)};\r\n\r\n  transition: ${(props) => props.theme.textInput.transition};\r\n\r\n  ::-webkit-input-placeholder {\r\n    color: ${(props) =>\r\n      props.isDisabled\r\n        ? props.theme.textInput.disablePlaceholderColor\r\n        : props.theme.textInput.placeholderColor};\r\n    font-family: ${(props) => props.theme.fontFamily};\r\n    ${NoUserSelect}\r\n  }\r\n\r\n  :-moz-placeholder {\r\n    color: ${(props) =>\r\n      props.isDisabled\r\n        ? props.theme.textInput.disablePlaceholderColor\r\n        : props.theme.textInput.placeholderColor};\r\n    font-family: ${(props) => props.theme.fontFamily};\r\n    ${NoUserSelect}\r\n  }\r\n\r\n  ::-moz-placeholder {\r\n    color: ${(props) =>\r\n      props.isDisabled\r\n        ? props.theme.textInput.disablePlaceholderColor\r\n        : props.theme.textInput.placeholderColor};\r\n    font-family: ${(props) => props.theme.fontFamily};\r\n    ${NoUserSelect}\r\n  }\r\n\r\n  :-ms-input-placeholder {\r\n    color: ${(props) =>\r\n      props.isDisabled\r\n        ? props.theme.textInput.disablePlaceholderColor\r\n        : props.theme.textInput.placeholderColor};\r\n    font-family: ${(props) => props.theme.fontFamily};\r\n    ${NoUserSelect}\r\n  }\r\n\r\n  ::placeholder {\r\n    color: ${(props) =>\r\n      props.isDisabled\r\n        ? props.theme.textInput.disablePlaceholderColor\r\n        : props.theme.textInput.placeholderColor};\r\n    font-family: ${(props) => props.theme.fontFamily};\r\n    ${NoUserSelect}\r\n  }\r\n\r\n  ${(props) => !props.withBorder && `border: none;`}\r\n`;\r\n\r\nStyledTextInput.defaultProps = { theme: Base };\r\n\r\nexport { StyledTextInput };\r\n"],"names":[],"sourceRoot":""}