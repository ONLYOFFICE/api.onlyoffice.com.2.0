"use strict";(self.webpackChunk_docspace_shared=self.webpackChunk_docspace_shared||[]).push([[5116],{"./components/button/Button.enums.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{M:()=>ButtonSize});let ButtonSize=function(ButtonSize){return ButtonSize.extraSmall="extraSmall",ButtonSize.small="small",ButtonSize.normal="normal",ButtonSize.medium="medium",ButtonSize}({})},"./components/button/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$:()=>Button_Button,M:()=>Button_enums.M});var Button_enums=__webpack_require__("./components/button/Button.enums.ts"),react=__webpack_require__("../../node_modules/react/index.js"),loader=__webpack_require__("./components/loader/index.tsx"),styled_components_browser_esm=__webpack_require__("../../node_modules/styled-components/dist/styled-components.browser.esm.js"),utils=__webpack_require__("./utils/index.ts"),themes=__webpack_require__("./themes/index.ts"),jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const activeCss=styled_components_browser_esm.AH`
  background-color: ${props=>props.primary?props.theme.button.backgroundColor.primaryActive:props.theme.button.backgroundColor.baseActive};

  color: ${props=>props.primary?props.theme.button.color.primaryActive:props.theme.button.color.baseActive};

  ${props=>props.primary?styled_components_browser_esm.AH`
          border: ${props.theme.button.border.primaryActive};
          box-sizing: ${props.theme.button.boxSizing};
        `:styled_components_browser_esm.AH`
          border: ${props.theme.button.border.baseActive};
          box-sizing: ${props.theme.button.boxSizing};
        `}

  .btnIcon {
    svg {
      path {
        fill: ${props=>props.primary?props.theme.button.color.primaryActive:props.theme.button.color.baseActive};
      }
    }
  }
`,hoverCss=styled_components_browser_esm.AH`
  background-color: ${props=>props.primary?props.theme.button.backgroundColor.primaryHover:props.theme.button.backgroundColor.baseHover};

  color: ${props=>props.primary?props.theme.button.color.primaryHover:props.theme.button.color.baseHover};

  ${props=>props.primary?styled_components_browser_esm.AH`
          border: ${props.theme.button.border.primaryHover};
          box-sizing: ${props.theme.button.boxSizing};
        `:styled_components_browser_esm.AH`
          border: ${props.theme.button.border.baseHover};
          box-sizing: ${props.theme.button.boxSizing};
        `}

  .btnIcon {
    svg {
      path {
        fill: ${props=>props.primary?props.theme.button.color.primaryHover:props.theme.button.color.baseHover};
      }
    }
  }
`,disableCss=styled_components_browser_esm.AH`
  background-color: ${props=>props.primary?props.theme.button.backgroundColor.primaryDisabled:props.theme.button.backgroundColor.baseDisabled};

  color: ${props=>props.primary?props.theme.button.color.primaryDisabled:props.theme.button.color.baseDisabled};

  ${props=>props.primary?styled_components_browser_esm.AH`
          border: ${props.theme.button.border.primaryDisabled};
          box-sizing: ${props.theme.button.boxSizing};
        `:styled_components_browser_esm.AH`
          border: ${props.theme.button.border.baseDisabled};
          box-sizing: ${props.theme.button.boxSizing};
        `}

  .btnIcon {
    svg {
      path {
        fill: ${props=>props.primary?props.theme.button.color.primaryDisabled:props.theme.button.color.baseDisabled};
      }
    }
  }
`,ButtonWrapper=react.forwardRef((({primary,scale,size,isHovered,isClicked,isDisabled,disableHover,isLoading,label,minWidth,...props},ref)=>(0,jsx_runtime.jsx)("button",{ref,type:"button",...props})));ButtonWrapper.displayName="ButtonWrapper";const StyledButton=(0,styled_components_browser_esm.Ay)(ButtonWrapper).attrs((props=>({disabled:props.isDisabled||props.isLoading?"disabled":"",tabIndex:props.tabIndex})))`
  position: relative;
  direction: ${props=>props?.interfaceDirection&&"rtl"};
  height: ${props=>(props=>props.theme.button.height[props.size||Button_enums.M.normal])(props)};
  font-size: ${props=>props.theme.getCorrectFontSize((props=>props.theme.button.fontSize[props.size||Button_enums.M.normal])(props))};

  color: ${props=>props.primary?props.theme.button.color.primary:props.theme.button.color.base};

  background-color: ${props=>props.primary?props.theme.button.backgroundColor.primary:props.theme.button.backgroundColor.base};

  border: ${props=>props.primary?props.theme.button.border.primary:props.theme.button.border.base};

  ${props=>props.scale&&"width: 100%;"};
  min-width: ${props=>props.minWidth&&props.minWidth};

  padding: ${props=>`${props.theme.button.padding[props.size||Button_enums.M.normal]}`};

  cursor: ${props=>props.isDisabled||props.isLoading?"default !important":"pointer"};

  font-family: ${props=>props.theme.fontFamily};
  margin: ${props=>props.theme.button.margin};
  display: ${props=>props.theme.button.display};
  font-weight: ${props=>props.theme.button.fontWeight};
  text-align: ${props=>props.theme.button.textAlign};
  text-decoration: ${props=>props.theme.button.textDecoration};
  vertical-align: ${props=>props.theme.button.topVerticalAlign};
  border-radius: ${props=>props.theme.button.borderRadius};
  -moz-border-radius: ${props=>props.theme.button.borderRadius};
  -webkit-border-radius: ${props=>props.theme.button.borderRadius};

  ${utils.h0};

  stroke: ${props=>props.theme.button.stroke};
  overflow: ${props=>props.theme.button.overflow};
  text-overflow: ${props=>props.theme.button.textOverflow};
  white-space: ${props=>props.theme.button.whiteSpace};
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);

  ${props=>!props.isDisabled&&!props.isLoading&&(props.isHovered?hoverCss:!props.disableHover&&styled_components_browser_esm.AH`
          &:hover {
            ${hoverCss}
          }
        `)}

  ${props=>!props.isDisabled&&!props.isLoading&&(props.isClicked?activeCss:styled_components_browser_esm.AH`
          &:active {
            ${activeCss}
          }
        `)}

  ${props=>(props.isDisabled||props.isLoading)&&disableCss}

  &:focus {
    outline: ${props=>props.theme.button.outline};
  }

  .loader {
    display: flex;
    justify-content: center;
    align-items: center;

    position: absolute;

    top: 0;
    left: 0;
    right: 0;
    bottom: 0;

    width: 100%;
    height: 100%;

    background-color: transparent;
  }

  .button-content {
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 8px;
    visibility: ${props=>props.isLoading?"hidden":"visible"};
  }

  .icon {
    width: auto;
    display: flex;
    align-items: center;
  }
`;StyledButton.defaultProps={theme:themes.C6};const themeActiveCss=styled_components_browser_esm.AH`
  border-color: ${props=>props.$currentColorScheme?.main?.buttons};

  background: ${props=>props.primary&&props.$currentColorScheme?.main?.buttons};

  opacity: ${props=>!props.isDisabled&&"1"};

  filter: ${props=>props.primary&&(props.theme.isBase?"brightness(90%)":"brightness(82%)")};

  color: ${props=>props.$currentColorScheme?.text?.buttons};
`,themeHoverCss=styled_components_browser_esm.AH`
  border-color: ${props=>props.$currentColorScheme?.main?.buttons};

  background: ${props=>props.primary&&props.$currentColorScheme?.main?.buttons};

  opacity: ${props=>props.primary&&!props.isDisabled&&"0.85"};

  color: ${props=>props.primary&&props.$currentColorScheme?.text?.buttons};
`;StyledButton.defaultProps={theme:themes.C6};const StyledThemeButton=(0,styled_components_browser_esm.Ay)(StyledButton)((({primary,$currentColorScheme,isDisabled,isLoading,isClicked,isHovered,disableHover,title})=>$currentColorScheme&&!title&&styled_components_browser_esm.AH`
    ${primary&&styled_components_browser_esm.AH`
      background: ${$currentColorScheme.main?.buttons};
      opacity: ${isDisabled&&"0.6"};
      border: ${"1px solid"} ${$currentColorScheme.main?.buttons};
      color: ${$currentColorScheme.text?.buttons};

      .loader {
        svg {
          color: ${$currentColorScheme.text?.buttons};
        }
        background-color: ${$currentColorScheme.main?.buttons};
      }
    `}

    ${!isDisabled&&!isLoading&&(isHovered&&primary?themeHoverCss:!disableHover&&primary&&styled_components_browser_esm.AH`
          &:hover,
          &:focus {
            ${themeHoverCss}
          }
        `)}

    ${!isDisabled&&!isLoading&&(isClicked?primary&&themeActiveCss:primary&&styled_components_browser_esm.AH`
          &:active {
            ${themeActiveCss}
          }
        `)}
  `));try{ButtonWrapper.displayName="ButtonWrapper",ButtonWrapper.__docgenInfo={description:"",displayName:"ButtonWrapper",props:{isDisabled:{defaultValue:null,description:"Sets the button to show a disabled state",name:"isDisabled",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"Accepts id",name:"id",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"Accepts CSS style",name:"style",required:!1,type:{name:"CSSProperties"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((((instance: HTMLButtonElement | null) => void) | RefObject<HTMLButtonElement>) & (string | ((instance: HTMLButtonElement | null) => void) | RefObject<...>)) | null"}},label:{defaultValue:null,description:"Button text",name:"label",required:!0,type:{name:"string"}},isLoading:{defaultValue:null,description:"Sets a button to show a loader icon",name:"isLoading",required:!1,type:{name:"boolean"}},tabIndex:{defaultValue:null,description:"Button tab index",name:"tabIndex",required:!1,type:{name:"number"}},onClick:{defaultValue:null,description:"Sets the action initiated upon clicking the button",name:"onClick",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void)"}},size:{defaultValue:null,description:"Size of the button.\nThe normal size equals 36px and 40px in height on the Desktop and Touchcreen devices.",name:"size",required:!1,type:{name:"enum",value:[{value:'"extraSmall"'},{value:'"small"'},{value:'"normal"'},{value:'"medium"'}]}},scale:{defaultValue:null,description:"Scales the width of the button to 100%",name:"scale",required:!1,type:{name:"boolean"}},icon:{defaultValue:null,description:"Icon node element",name:"icon",required:!1,type:{name:"ReactNode"}},disableHover:{defaultValue:null,description:"Disable hover effect",name:"disableHover",required:!1,type:{name:"boolean"}},primary:{defaultValue:null,description:"Sets the button primary",name:"primary",required:!1,type:{name:"boolean"}},isHovered:{defaultValue:null,description:"Sets the button to show a hovered state",name:"isHovered",required:!1,type:{name:"boolean"}},isClicked:{defaultValue:null,description:"Sets the button to show a clicked state",name:"isClicked",required:!1,type:{name:"boolean"}},minWidth:{defaultValue:null,description:"Sets the minimal button width",name:"minWidth",required:!1,type:{name:"string"}},$currentColorScheme:{defaultValue:null,description:"",name:"$currentColorScheme",required:!1,type:{name:"TColorScheme"}},interfaceDirection:{defaultValue:null,description:"",name:"interfaceDirection",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"string"}},theme:{defaultValue:{value:"getBaseTheme()"},description:"",name:"theme",required:!1,type:{name:"DefaultTheme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/button/Button.styled.tsx#ButtonWrapper"]={docgenInfo:ButtonWrapper.__docgenInfo,name:"ButtonWrapper",path:"components/button/Button.styled.tsx#ButtonWrapper"})}catch(__react_docgen_typescript_loader_error){}try{ButtonWrapper.displayName="ButtonWrapper",StyledComponent.__docgenInfo={description:"",displayName:"ButtonWrapper",props:{isDisabled:{defaultValue:null,description:"Sets the button to show a disabled state",name:"isDisabled",required:!1,type:{name:"boolean | undefined"}},className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string | undefined"}},id:{defaultValue:null,description:"Accepts id",name:"id",required:!1,type:{name:"string | undefined"}},style:{defaultValue:null,description:"Accepts CSS style",name:"style",required:!1,type:{name:"CSSProperties | undefined"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string | undefined"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((((instance: HTMLButtonElement | null) => void) | RefObject<HTMLButtonElement> | undefined) & (string | ((instance: HTMLButtonElement | null) => void) | RefObject<...>)) | null"}},key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"Key | null | undefined"}},label:{defaultValue:null,description:"Button text",name:"label",required:!0,type:{name:"string"}},isLoading:{defaultValue:null,description:"Sets a button to show a loader icon",name:"isLoading",required:!1,type:{name:"boolean | undefined"}},tabIndex:{defaultValue:null,description:"Button tab index",name:"tabIndex",required:!1,type:{name:"number | undefined"}},onClick:{defaultValue:null,description:"Sets the action initiated upon clicking the button",name:"onClick",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void) | undefined"}},size:{defaultValue:null,description:"Size of the button.\nThe normal size equals 36px and 40px in height on the Desktop and Touchcreen devices.",name:"size",required:!1,type:{name:"ButtonSize | undefined"}},scale:{defaultValue:null,description:"Scales the width of the button to 100%",name:"scale",required:!1,type:{name:"boolean | undefined"}},icon:{defaultValue:null,description:"Icon node element",name:"icon",required:!1,type:{name:"ReactNode"}},disableHover:{defaultValue:null,description:"Disable hover effect",name:"disableHover",required:!1,type:{name:"boolean | undefined"}},primary:{defaultValue:null,description:"Sets the button primary",name:"primary",required:!1,type:{name:"boolean | undefined"}},isHovered:{defaultValue:null,description:"Sets the button to show a hovered state",name:"isHovered",required:!1,type:{name:"boolean | undefined"}},isClicked:{defaultValue:null,description:"Sets the button to show a clicked state",name:"isClicked",required:!1,type:{name:"boolean | undefined"}},minWidth:{defaultValue:null,description:"Sets the minimal button width",name:"minWidth",required:!1,type:{name:"string | undefined"}},$currentColorScheme:{defaultValue:null,description:"",name:"$currentColorScheme",required:!1,type:{name:"TColorScheme | undefined"}},interfaceDirection:{defaultValue:null,description:"",name:"interfaceDirection",required:!1,type:{name:"string | undefined"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"string | undefined"}},theme:{defaultValue:{value:"getBaseTheme()"},description:"",name:"theme",required:!1,type:{name:"DefaultTheme | undefined"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/button/Button.styled.tsx#ButtonWrapper"]={docgenInfo:ButtonWrapper.__docgenInfo,name:"ButtonWrapper",path:"components/button/Button.styled.tsx#ButtonWrapper"})}catch(__react_docgen_typescript_loader_error){}const ButtonTheme=(0,react.forwardRef)(((props,ref)=>{const defaultTheme=(0,react.useContext)(styled_components_browser_esm.Dx),currentColorScheme=defaultTheme?.currentColorScheme;return(0,jsx_runtime.jsx)(StyledThemeButton,{...props,ref,$currentColorScheme:currentColorScheme})}));ButtonTheme.displayName="ButtonTheme";const Button_theme=ButtonTheme;try{ButtonTheme.displayName="ButtonTheme",ButtonTheme.__docgenInfo={description:"",displayName:"ButtonTheme",props:{isDisabled:{defaultValue:null,description:"Sets the button to show a disabled state",name:"isDisabled",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"Accepts id",name:"id",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"Accepts CSS style",name:"style",required:!1,type:{name:"CSSProperties"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"Button text",name:"label",required:!0,type:{name:"string"}},isLoading:{defaultValue:null,description:"Sets a button to show a loader icon",name:"isLoading",required:!1,type:{name:"boolean"}},tabIndex:{defaultValue:null,description:"Button tab index",name:"tabIndex",required:!1,type:{name:"number"}},onClick:{defaultValue:null,description:"Sets the action initiated upon clicking the button",name:"onClick",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void)"}},size:{defaultValue:null,description:"Size of the button.\nThe normal size equals 36px and 40px in height on the Desktop and Touchcreen devices.",name:"size",required:!1,type:{name:"enum",value:[{value:'"extraSmall"'},{value:'"small"'},{value:'"normal"'},{value:'"medium"'}]}},scale:{defaultValue:null,description:"Scales the width of the button to 100%",name:"scale",required:!1,type:{name:"boolean"}},icon:{defaultValue:null,description:"Icon node element",name:"icon",required:!1,type:{name:"ReactNode"}},disableHover:{defaultValue:null,description:"Disable hover effect",name:"disableHover",required:!1,type:{name:"boolean"}},primary:{defaultValue:null,description:"Sets the button primary",name:"primary",required:!1,type:{name:"boolean"}},isHovered:{defaultValue:null,description:"Sets the button to show a hovered state",name:"isHovered",required:!1,type:{name:"boolean"}},isClicked:{defaultValue:null,description:"Sets the button to show a clicked state",name:"isClicked",required:!1,type:{name:"boolean"}},minWidth:{defaultValue:null,description:"Sets the minimal button width",name:"minWidth",required:!1,type:{name:"string"}},$currentColorScheme:{defaultValue:null,description:"",name:"$currentColorScheme",required:!1,type:{name:"TColorScheme"}},interfaceDirection:{defaultValue:null,description:"",name:"interfaceDirection",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/button/Button.theme.tsx#ButtonTheme"]={docgenInfo:ButtonTheme.__docgenInfo,name:"ButtonTheme",path:"components/button/Button.theme.tsx#ButtonTheme"})}catch(__react_docgen_typescript_loader_error){}try{ButtonTheme.displayName="ButtonTheme",ForwardRefExoticComponent.__docgenInfo={description:"",displayName:"ButtonTheme",props:{isDisabled:{defaultValue:null,description:"Sets the button to show a disabled state",name:"isDisabled",required:!1,type:{name:"boolean | undefined"}},className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string | undefined"}},id:{defaultValue:null,description:"Accepts id",name:"id",required:!1,type:{name:"string | undefined"}},style:{defaultValue:null,description:"Accepts CSS style",name:"style",required:!1,type:{name:"CSSProperties | undefined"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string | undefined"}},label:{defaultValue:null,description:"Button text",name:"label",required:!0,type:{name:"string"}},isLoading:{defaultValue:null,description:"Sets a button to show a loader icon",name:"isLoading",required:!1,type:{name:"boolean | undefined"}},tabIndex:{defaultValue:null,description:"Button tab index",name:"tabIndex",required:!1,type:{name:"number | undefined"}},onClick:{defaultValue:null,description:"Sets the action initiated upon clicking the button",name:"onClick",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void) | undefined"}},size:{defaultValue:null,description:"Size of the button.\nThe normal size equals 36px and 40px in height on the Desktop and Touchcreen devices.",name:"size",required:!1,type:{name:"ButtonSize | undefined"}},scale:{defaultValue:null,description:"Scales the width of the button to 100%",name:"scale",required:!1,type:{name:"boolean | undefined"}},icon:{defaultValue:null,description:"Icon node element",name:"icon",required:!1,type:{name:"ReactNode"}},disableHover:{defaultValue:null,description:"Disable hover effect",name:"disableHover",required:!1,type:{name:"boolean | undefined"}},primary:{defaultValue:null,description:"Sets the button primary",name:"primary",required:!1,type:{name:"boolean | undefined"}},isHovered:{defaultValue:null,description:"Sets the button to show a hovered state",name:"isHovered",required:!1,type:{name:"boolean | undefined"}},isClicked:{defaultValue:null,description:"Sets the button to show a clicked state",name:"isClicked",required:!1,type:{name:"boolean | undefined"}},minWidth:{defaultValue:null,description:"Sets the minimal button width",name:"minWidth",required:!1,type:{name:"string | undefined"}},$currentColorScheme:{defaultValue:null,description:"",name:"$currentColorScheme",required:!1,type:{name:"TColorScheme | undefined"}},interfaceDirection:{defaultValue:null,description:"",name:"interfaceDirection",required:!1,type:{name:"string | undefined"}},ref:{defaultValue:null,description:"Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}",name:"ref",required:!1,type:{name:"LegacyRef<HTMLButtonElement> | undefined"}},key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"Key | null | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/button/Button.theme.tsx#ButtonTheme"]={docgenInfo:ButtonTheme.__docgenInfo,name:"ButtonTheme",path:"components/button/Button.theme.tsx#ButtonTheme"})}catch(__react_docgen_typescript_loader_error){}const Button_Button=react.forwardRef(((props,ref)=>{const{isLoading,icon,label,primary}=props;return(0,jsx_runtime.jsxs)(Button_theme,{...props,ref,"data-testid":"button",children:[isLoading&&(0,jsx_runtime.jsx)(loader.a,{className:"loader",color:"",size:"20px",type:loader.R.track,label,primary:primary||!1}),(0,jsx_runtime.jsxs)("div",{className:"button-content not-selectable",children:[icon&&(0,jsx_runtime.jsx)("div",{className:"icon",children:icon}),label]})]})}));Button_Button.displayName="Button";try{Button_Button.displayName="Button",Button_Button.__docgenInfo={description:"",displayName:"Button",props:{label:{defaultValue:null,description:"Button text",name:"label",required:!0,type:{name:"string"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},primary:{defaultValue:null,description:"Sets the button primary",name:"primary",required:!1,type:{name:"boolean"}},size:{defaultValue:null,description:"Size of the button.\nThe normal size equals 36px and 40px in height on the Desktop and Touchcreen devices.",name:"size",required:!1,type:{name:"enum",value:[{value:'"extraSmall"'},{value:'"small"'},{value:'"normal"'},{value:'"medium"'}]}},scale:{defaultValue:null,description:"Scales the width of the button to 100%",name:"scale",required:!1,type:{name:"boolean"}},icon:{defaultValue:null,description:"Icon node element",name:"icon",required:!1,type:{name:"ReactNode"}},tabIndex:{defaultValue:null,description:"Button tab index",name:"tabIndex",required:!1,type:{name:"number"}},className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"Accepts id",name:"id",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"Accepts CSS style",name:"style",required:!1,type:{name:"CSSProperties"}},isHovered:{defaultValue:null,description:"Sets the button to show a hovered state",name:"isHovered",required:!1,type:{name:"boolean"}},disableHover:{defaultValue:null,description:"Disable hover effect",name:"disableHover",required:!1,type:{name:"boolean"}},isClicked:{defaultValue:null,description:"Sets the button to show a clicked state",name:"isClicked",required:!1,type:{name:"boolean"}},isDisabled:{defaultValue:null,description:"Sets the button to show a disabled state",name:"isDisabled",required:!1,type:{name:"boolean"}},isLoading:{defaultValue:null,description:"Sets a button to show a loader icon",name:"isLoading",required:!1,type:{name:"boolean"}},minWidth:{defaultValue:null,description:"Sets the minimal button width",name:"minWidth",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"Sets the action initiated upon clicking the button",name:"onClick",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/button/Button.tsx#Button"]={docgenInfo:Button_Button.__docgenInfo,name:"Button",path:"components/button/Button.tsx#Button"})}catch(__react_docgen_typescript_loader_error){}try{Button_Button.displayName="Button",ForwardRefExoticComponent.__docgenInfo={description:"",displayName:"Button",props:{label:{defaultValue:null,description:"Button text",name:"label",required:!0,type:{name:"string"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string | undefined"}},primary:{defaultValue:null,description:"Sets the button primary",name:"primary",required:!1,type:{name:"boolean | undefined"}},size:{defaultValue:null,description:"Size of the button.\nThe normal size equals 36px and 40px in height on the Desktop and Touchcreen devices.",name:"size",required:!1,type:{name:"ButtonSize | undefined"}},scale:{defaultValue:null,description:"Scales the width of the button to 100%",name:"scale",required:!1,type:{name:"boolean | undefined"}},icon:{defaultValue:null,description:"Icon node element",name:"icon",required:!1,type:{name:"ReactNode"}},tabIndex:{defaultValue:null,description:"Button tab index",name:"tabIndex",required:!1,type:{name:"number | undefined"}},className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string | undefined"}},id:{defaultValue:null,description:"Accepts id",name:"id",required:!1,type:{name:"string | undefined"}},style:{defaultValue:null,description:"Accepts CSS style",name:"style",required:!1,type:{name:"CSSProperties | undefined"}},isHovered:{defaultValue:null,description:"Sets the button to show a hovered state",name:"isHovered",required:!1,type:{name:"boolean | undefined"}},disableHover:{defaultValue:null,description:"Disable hover effect",name:"disableHover",required:!1,type:{name:"boolean | undefined"}},isClicked:{defaultValue:null,description:"Sets the button to show a clicked state",name:"isClicked",required:!1,type:{name:"boolean | undefined"}},isDisabled:{defaultValue:null,description:"Sets the button to show a disabled state",name:"isDisabled",required:!1,type:{name:"boolean | undefined"}},isLoading:{defaultValue:null,description:"Sets a button to show a loader icon",name:"isLoading",required:!1,type:{name:"boolean | undefined"}},minWidth:{defaultValue:null,description:"Sets the minimal button width",name:"minWidth",required:!1,type:{name:"string | undefined"}},onClick:{defaultValue:null,description:"Sets the action initiated upon clicking the button",name:"onClick",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void) | undefined"}},ref:{defaultValue:null,description:"Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}",name:"ref",required:!1,type:{name:"LegacyRef<HTMLButtonElement> | undefined"}},key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"Key | null | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/button/Button.tsx#Button"]={docgenInfo:Button_Button.__docgenInfo,name:"Button",path:"components/button/Button.tsx#Button"})}catch(__react_docgen_typescript_loader_error){}try{Button.displayName="Button",Button.__docgenInfo={description:"",displayName:"Button",props:{label:{defaultValue:null,description:"Button text",name:"label",required:!0,type:{name:"string"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},primary:{defaultValue:null,description:"Sets the button primary",name:"primary",required:!1,type:{name:"boolean"}},size:{defaultValue:null,description:"Size of the button.\nThe normal size equals 36px and 40px in height on the Desktop and Touchcreen devices.",name:"size",required:!1,type:{name:"enum",value:[{value:'"extraSmall"'},{value:'"small"'},{value:'"normal"'},{value:'"medium"'}]}},scale:{defaultValue:null,description:"Scales the width of the button to 100%",name:"scale",required:!1,type:{name:"boolean"}},icon:{defaultValue:null,description:"Icon node element",name:"icon",required:!1,type:{name:"ReactNode"}},tabIndex:{defaultValue:null,description:"Button tab index",name:"tabIndex",required:!1,type:{name:"number"}},className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"Accepts id",name:"id",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"Accepts CSS style",name:"style",required:!1,type:{name:"CSSProperties"}},isHovered:{defaultValue:null,description:"Sets the button to show a hovered state",name:"isHovered",required:!1,type:{name:"boolean"}},disableHover:{defaultValue:null,description:"Disable hover effect",name:"disableHover",required:!1,type:{name:"boolean"}},isClicked:{defaultValue:null,description:"Sets the button to show a clicked state",name:"isClicked",required:!1,type:{name:"boolean"}},isDisabled:{defaultValue:null,description:"Sets the button to show a disabled state",name:"isDisabled",required:!1,type:{name:"boolean"}},isLoading:{defaultValue:null,description:"Sets a button to show a loader icon",name:"isLoading",required:!1,type:{name:"boolean"}},minWidth:{defaultValue:null,description:"Sets the minimal button width",name:"minWidth",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"Sets the action initiated upon clicking the button",name:"onClick",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/button/index.tsx#Button"]={docgenInfo:Button.__docgenInfo,name:"Button",path:"components/button/index.tsx#Button"})}catch(__react_docgen_typescript_loader_error){}try{Button.displayName="Button",ForwardRefExoticComponent.__docgenInfo={description:"",displayName:"Button",props:{label:{defaultValue:null,description:"Button text",name:"label",required:!0,type:{name:"string"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string | undefined"}},primary:{defaultValue:null,description:"Sets the button primary",name:"primary",required:!1,type:{name:"boolean | undefined"}},size:{defaultValue:null,description:"Size of the button.\nThe normal size equals 36px and 40px in height on the Desktop and Touchcreen devices.",name:"size",required:!1,type:{name:"ButtonSize | undefined"}},scale:{defaultValue:null,description:"Scales the width of the button to 100%",name:"scale",required:!1,type:{name:"boolean | undefined"}},icon:{defaultValue:null,description:"Icon node element",name:"icon",required:!1,type:{name:"ReactNode"}},tabIndex:{defaultValue:null,description:"Button tab index",name:"tabIndex",required:!1,type:{name:"number | undefined"}},className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string | undefined"}},id:{defaultValue:null,description:"Accepts id",name:"id",required:!1,type:{name:"string | undefined"}},style:{defaultValue:null,description:"Accepts CSS style",name:"style",required:!1,type:{name:"CSSProperties | undefined"}},isHovered:{defaultValue:null,description:"Sets the button to show a hovered state",name:"isHovered",required:!1,type:{name:"boolean | undefined"}},disableHover:{defaultValue:null,description:"Disable hover effect",name:"disableHover",required:!1,type:{name:"boolean | undefined"}},isClicked:{defaultValue:null,description:"Sets the button to show a clicked state",name:"isClicked",required:!1,type:{name:"boolean | undefined"}},isDisabled:{defaultValue:null,description:"Sets the button to show a disabled state",name:"isDisabled",required:!1,type:{name:"boolean | undefined"}},isLoading:{defaultValue:null,description:"Sets a button to show a loader icon",name:"isLoading",required:!1,type:{name:"boolean | undefined"}},minWidth:{defaultValue:null,description:"Sets the minimal button width",name:"minWidth",required:!1,type:{name:"string | undefined"}},onClick:{defaultValue:null,description:"Sets the action initiated upon clicking the button",name:"onClick",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void) | undefined"}},ref:{defaultValue:null,description:"Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}",name:"ref",required:!1,type:{name:"LegacyRef<HTMLButtonElement> | undefined"}},key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"Key | null | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/button/index.tsx#Button"]={docgenInfo:Button.__docgenInfo,name:"Button",path:"components/button/index.tsx#Button"})}catch(__react_docgen_typescript_loader_error){}},"./components/file-input/FileInput.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{z:()=>FileInput,t:()=>FileInputPure});var react=__webpack_require__("../../node_modules/react/index.js"),es=__webpack_require__("../../node_modules/react-i18next/dist/es/index.js"),dist_es=__webpack_require__("../../node_modules/react-dropzone/dist/es/index.js"),fast_deep_equal_react=__webpack_require__("../../node_modules/fast-deep-equal/react.js"),fast_deep_equal_react_default=__webpack_require__.n(fast_deep_equal_react),catalog_folder_reacturl=__webpack_require__("../../public/images/catalog.folder.react.svg?url");const document_reacturl_namespaceObject=__webpack_require__.p+"images/document.react.svg?hash=e5cb3ae362179f8aa0c8";var icon_button=__webpack_require__("./components/icon-button/index.tsx"),components_button=__webpack_require__("./components/button/index.tsx"),text_input=__webpack_require__("./components/text-input/index.ts"),loader=__webpack_require__("./components/loader/index.tsx"),toast=__webpack_require__("./components/toast/index.tsx"),styled_components_browser_esm=__webpack_require__("../../node_modules/styled-components/dist/styled-components.browser.esm.js"),themes=__webpack_require__("./themes/index.ts"),utils=__webpack_require__("./utils/index.ts");const paddingRightStyle=props=>props.theme.fileInput.paddingRight[props.size],StyledFileInput=styled_components_browser_esm.Ay.div`
  display: flex;
  position: relative;
  outline: none;
  width: ${props=>(props.scale?"100%":props.size===text_input.YI.base&&props.theme.input.width.base)||props.size===text_input.YI.middle&&props.theme.input.width.middle||props.size===text_input.YI.big&&props.theme.input.width.big||props.size===text_input.YI.huge&&props.theme.input.width.huge||props.size===text_input.YI.large&&props.theme.input.width.large};

  max-height: ${props=>(props=>props.theme.fileInput.height[props.size])(props)};

  .text-input {
    border-color: ${props=>props.hasError&&props.theme.input.errorBorderColor||props.hasWarning&&props.theme.input.warningBorderColor||props.isDisabled&&props.theme.input.disabledBorderColor||props.theme.input.borderColor};

    text-overflow: ellipsis;

    ${props=>"rtl"===props.theme.interfaceDirection?`padding-left: ${paddingRightStyle(props)||"40px"};`:`padding-right: ${paddingRightStyle(props)||"40px"};`}

    cursor: ${props=>props.isDisabled?"default":"pointer"};
    margin: 0;
  }

  :hover {
    .icon {
      border-color: ${props=>props.hasError&&props.theme.input.hoverErrorBorderColor||props.hasWarning&&props.theme.input.hoverWarningBorderColor||props.isDisabled&&props.theme.input.hoverDisabledBorderColor||props.theme.input.hoverBorderColor};
    }
  }

  :active {
    .icon {
      border-color: ${props=>props.hasError&&props.theme.input.focusErrorBorderColor||props.hasWarning&&props.theme.input.focusWarningBorderColor||props.isDisabled&&props.theme.input.focusDisabledBorderColor||props.theme.input.focusBorderColor};
    }
  }

  .icon {
    display: flex;
    align-items: center;
    justify-content: center;

    position: absolute;

    width: ${props=>(props=>props.theme.fileInput.icon.width[props.size])(props)};

    height: ${props=>(props=>props.theme.fileInput.icon.height[props.size])(props)};

    margin: 0;
    border: ${props=>props.theme.fileInput.icon.border};

    border-color: ${props=>props.hasError&&props.theme.input.errorBorderColor||props.hasWarning&&props.theme.input.warningBorderColor||props.isDisabled&&props.theme.input.disabledBorderColor||props.theme.input.borderColor};

    cursor: ${props=>props.isDisabled?"default":"pointer"};

    .loader {
      padding-top: 5px;
    }

    border-radius: ${({theme})=>(0,utils.L2)(theme.fileInput.icon.borderRadius,theme.interfaceDirection)};

    ${props=>"rtl"===props.theme.interfaceDirection?styled_components_browser_esm.AH`
            left: 0;
          `:styled_components_browser_esm.AH`
            right: 0;
          `}
  }

  .icon-button {
    cursor: ${props=>props.isDisabled?"default":"pointer"};
    width: ${props=>(props=>props.theme.fileInput.iconButton.width[props.size])(props)};
  }
`;StyledFileInput.defaultProps={theme:themes.C6};const FileInput_styled=StyledFileInput;var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const FileInputPure=({onInput,size=text_input.YI.base,placeholder,isDisabled,scale,hasError,hasWarning,accept,id,buttonLabel,isLoading,fromStorage=!1,path,idButton,isDocumentIcon,...rest})=>{const{t}=(0,es.Bd)("Common"),inputRef=react.useRef(null),[fileName,setFileName]=react.useState(""),{iconSize,buttonSize}=(()=>{let iconSize=0,buttonSize=components_button.M.small;switch(size){case text_input.YI.base:iconSize=15,buttonSize=components_button.M.extraSmall;break;case text_input.YI.middle:iconSize=15,buttonSize=components_button.M.small;break;case text_input.YI.big:iconSize=16,buttonSize=components_button.M.normal;break;case text_input.YI.huge:case text_input.YI.large:iconSize=16,buttonSize=components_button.M.medium}return{iconSize,buttonSize}})(),onClickProp=fromStorage&&!isDisabled?{onClick:rest.onClick}:{};return(0,jsx_runtime.jsx)(dist_es.Ay,{onDrop:acceptedFiles=>{0!==acceptedFiles.length?(setFileName(acceptedFiles.length>1?acceptedFiles.map((file=>file.name)).join(", "):acceptedFiles[0].name),onInput(acceptedFiles.length>1?acceptedFiles:acceptedFiles[0])):toast.ih.error(t("Common:NotSupportedFormat"))},noClick:isDisabled||isLoading,accept,children:({getRootProps,getInputProps})=>(0,jsx_runtime.jsxs)(FileInput_styled,{scale:scale?1:0,hasError,hasWarning,id:idButton,isDisabled,...rest,...getRootProps(),size,"data-testid":"file-input",children:[(0,jsx_runtime.jsx)(text_input.ks,{isReadOnly:!0,className:"text-input",placeholder,value:fromStorage&&path?path:fileName,size,isDisabled:isDisabled||isLoading,hasError,hasWarning,scale,type:text_input.NZ.text,withBorder:!0,...onClickProp}),!fromStorage&&(0,jsx_runtime.jsx)("input",{type:"file",id,ref:inputRef,style:{display:"none"},...getInputProps()}),buttonLabel?(0,jsx_runtime.jsx)(components_button.$,{isDisabled,label:buttonLabel,size:buttonSize}):(0,jsx_runtime.jsx)("div",{className:"icon",...onClickProp,children:isLoading?(0,jsx_runtime.jsx)(loader.a,{className:"loader",size:"20px",type:loader.R.track}):(0,jsx_runtime.jsx)(icon_button.K,{className:"icon-button",iconName:isDocumentIcon?document_reacturl_namespaceObject:catalog_folder_reacturl,color:"#A3A9AE",size:iconSize,isDisabled})})]})})};FileInputPure.displayName="FileInputPure",FileInputPure.defaultProps={scale:!1,hasWarning:!1,hasError:!1,isDisabled:!1,isLoading:!1,accept:[""],isDocumentIcon:!1};const compare=(prevProps,nextProps)=>fast_deep_equal_react_default()(prevProps,nextProps),FileInput=react.memo(FileInputPure,compare);try{FileInputPure.displayName="FileInputPure",FileInputPure.__docgenInfo={description:"",displayName:"FileInputPure",props:{style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties"}},placeholder:{defaultValue:null,description:"Placeholder text for the input",name:"placeholder",required:!1,type:{name:"string"}},size:{defaultValue:{value:"InputSize.base"},description:"Supported size of the input fields",name:"size",required:!1,type:{name:"enum",value:[{value:'"base"'},{value:'"middle"'},{value:'"big"'},{value:'"huge"'},{value:'"large"'}]}},scale:{defaultValue:{value:"false"},description:"Indicates that the input field has scale",name:"scale",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string"}},hasError:{defaultValue:{value:"false"},description:"Indicates that the input field has an error",name:"hasError",required:!1,type:{name:"boolean"}},hasWarning:{defaultValue:{value:"false"},description:"Indicates that the input field has a warning",name:"hasWarning",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"Used as HTML `id` property",name:"id",required:!1,type:{name:"string"}},isDisabled:{defaultValue:{value:"false"},description:"Indicates that the field cannot be used (e.g not authorised, or changes not saved)",name:"isDisabled",required:!1,type:{name:"boolean"}},isLoading:{defaultValue:{value:"false"},description:"Tells when the button should show loader icon",name:"isLoading",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"Used as HTML `name` property",name:"name",required:!1,type:{name:"string"}},onInput:{defaultValue:null,description:"Called when a file is selected",name:"onInput",required:!0,type:{name:"(file: File | File[]) => void"}},accept:{defaultValue:{value:'[""]'},description:"Specifies the files visible for upload",name:"accept",required:!1,type:{name:"string[]"}},buttonLabel:{defaultValue:null,description:"Specifies the label for the upload button",name:"buttonLabel",required:!1,type:{name:"string"}},isDocumentIcon:{defaultValue:{value:"false"},description:"Indicates that icon is document. Otherwise, it is folder icon",name:"isDocumentIcon",required:!1,type:{name:"boolean"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void)"}},idButton:{defaultValue:null,description:"",name:"idButton",required:!1,type:{name:"string"}},path:{defaultValue:null,description:"",name:"path",required:!1,type:{name:"string"}},fromStorage:{defaultValue:{value:"false"},description:"",name:"fromStorage",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/file-input/FileInput.tsx#FileInputPure"]={docgenInfo:FileInputPure.__docgenInfo,name:"FileInputPure",path:"components/file-input/FileInput.tsx#FileInputPure"})}catch(__react_docgen_typescript_loader_error){}try{FileInput.displayName="FileInput",FileInput.__docgenInfo={description:"",displayName:"FileInput",props:{style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties"}},placeholder:{defaultValue:null,description:"Placeholder text for the input",name:"placeholder",required:!1,type:{name:"string"}},size:{defaultValue:{value:"InputSize.base"},description:"Supported size of the input fields",name:"size",required:!1,type:{name:"enum",value:[{value:'"base"'},{value:'"middle"'},{value:'"big"'},{value:'"huge"'},{value:'"large"'}]}},scale:{defaultValue:{value:"false"},description:"Indicates that the input field has scale",name:"scale",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string"}},hasError:{defaultValue:{value:"false"},description:"Indicates that the input field has an error",name:"hasError",required:!1,type:{name:"boolean"}},hasWarning:{defaultValue:{value:"false"},description:"Indicates that the input field has a warning",name:"hasWarning",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"Used as HTML `id` property",name:"id",required:!1,type:{name:"string"}},isDisabled:{defaultValue:{value:"false"},description:"Indicates that the field cannot be used (e.g not authorised, or changes not saved)",name:"isDisabled",required:!1,type:{name:"boolean"}},isLoading:{defaultValue:{value:"false"},description:"Tells when the button should show loader icon",name:"isLoading",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"Used as HTML `name` property",name:"name",required:!1,type:{name:"string"}},onInput:{defaultValue:null,description:"Called when a file is selected",name:"onInput",required:!0,type:{name:"(file: File | File[]) => void"}},accept:{defaultValue:{value:'[""]'},description:"Specifies the files visible for upload",name:"accept",required:!1,type:{name:"string[]"}},buttonLabel:{defaultValue:null,description:"Specifies the label for the upload button",name:"buttonLabel",required:!1,type:{name:"string"}},isDocumentIcon:{defaultValue:{value:"false"},description:"Indicates that icon is document. Otherwise, it is folder icon",name:"isDocumentIcon",required:!1,type:{name:"boolean"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void)"}},idButton:{defaultValue:null,description:"",name:"idButton",required:!1,type:{name:"string"}},path:{defaultValue:null,description:"",name:"path",required:!1,type:{name:"string"}},fromStorage:{defaultValue:{value:"false"},description:"",name:"fromStorage",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/file-input/FileInput.tsx#FileInput"]={docgenInfo:FileInput.__docgenInfo,name:"FileInput",path:"components/file-input/FileInput.tsx#FileInput"})}catch(__react_docgen_typescript_loader_error){}try{FileInputPure.displayName="FileInputPure",__function.__docgenInfo={description:"",displayName:"FileInputPure",props:{style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties | undefined"}},placeholder:{defaultValue:null,description:"Placeholder text for the input",name:"placeholder",required:!1,type:{name:"string | undefined"}},size:{defaultValue:{value:"InputSize.base"},description:"Supported size of the input fields",name:"size",required:!1,type:{name:"InputSize"}},scale:{defaultValue:{value:!1},description:"Indicates that the input field has scale",name:"scale",required:!1,type:{name:"boolean | undefined"}},className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string | undefined"}},hasError:{defaultValue:{value:!1},description:"Indicates that the input field has an error",name:"hasError",required:!1,type:{name:"boolean | undefined"}},hasWarning:{defaultValue:{value:!1},description:"Indicates that the input field has a warning",name:"hasWarning",required:!1,type:{name:"boolean | undefined"}},id:{defaultValue:null,description:"Used as HTML `id` property",name:"id",required:!1,type:{name:"string | undefined"}},isDisabled:{defaultValue:{value:!1},description:"Indicates that the field cannot be used (e.g not authorised, or changes not saved)",name:"isDisabled",required:!1,type:{name:"boolean | undefined"}},isLoading:{defaultValue:{value:!1},description:"Tells when the button should show loader icon",name:"isLoading",required:!1,type:{name:"boolean | undefined"}},name:{defaultValue:null,description:"Used as HTML `name` property",name:"name",required:!1,type:{name:"string | undefined"}},onInput:{defaultValue:null,description:"Called when a file is selected",name:"onInput",required:!0,type:{name:"(file: File | File[]) => void"}},accept:{defaultValue:{value:'[""]'},description:"Specifies the files visible for upload",name:"accept",required:!1,type:{name:"string[] | undefined"}},buttonLabel:{defaultValue:null,description:"Specifies the label for the upload button",name:"buttonLabel",required:!1,type:{name:"string | undefined"}},isDocumentIcon:{defaultValue:{value:!1},description:"Indicates that icon is document. Otherwise, it is folder icon",name:"isDocumentIcon",required:!1,type:{name:"boolean | undefined"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void) | undefined"}},idButton:{defaultValue:null,description:"",name:"idButton",required:!1,type:{name:"string | undefined"}},path:{defaultValue:null,description:"",name:"path",required:!1,type:{name:"string | undefined"}},fromStorage:{defaultValue:{value:!1},description:"",name:"fromStorage",required:!1,type:{name:"boolean | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/file-input/FileInput.tsx#FileInputPure"]={docgenInfo:FileInputPure.__docgenInfo,name:"FileInputPure",path:"components/file-input/FileInput.tsx#FileInputPure"})}catch(__react_docgen_typescript_loader_error){}try{FileInput.displayName="FileInput",FileInput.__docgenInfo={description:"",displayName:"FileInput",props:{style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties | undefined"}},placeholder:{defaultValue:null,description:"Placeholder text for the input",name:"placeholder",required:!1,type:{name:"string | undefined"}},size:{defaultValue:{value:"InputSize.base"},description:"Supported size of the input fields",name:"size",required:!1,type:{name:"InputSize"}},scale:{defaultValue:{value:!1},description:"Indicates that the input field has scale",name:"scale",required:!1,type:{name:"boolean | undefined"}},className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string | undefined"}},hasError:{defaultValue:{value:!1},description:"Indicates that the input field has an error",name:"hasError",required:!1,type:{name:"boolean | undefined"}},hasWarning:{defaultValue:{value:!1},description:"Indicates that the input field has a warning",name:"hasWarning",required:!1,type:{name:"boolean | undefined"}},id:{defaultValue:null,description:"Used as HTML `id` property",name:"id",required:!1,type:{name:"string | undefined"}},isDisabled:{defaultValue:{value:!1},description:"Indicates that the field cannot be used (e.g not authorised, or changes not saved)",name:"isDisabled",required:!1,type:{name:"boolean | undefined"}},isLoading:{defaultValue:{value:!1},description:"Tells when the button should show loader icon",name:"isLoading",required:!1,type:{name:"boolean | undefined"}},name:{defaultValue:null,description:"Used as HTML `name` property",name:"name",required:!1,type:{name:"string | undefined"}},onInput:{defaultValue:null,description:"Called when a file is selected",name:"onInput",required:!0,type:{name:"(file: File | File[]) => void"}},accept:{defaultValue:{value:'[""]'},description:"Specifies the files visible for upload",name:"accept",required:!1,type:{name:"string[] | undefined"}},buttonLabel:{defaultValue:null,description:"Specifies the label for the upload button",name:"buttonLabel",required:!1,type:{name:"string | undefined"}},isDocumentIcon:{defaultValue:{value:!1},description:"Indicates that icon is document. Otherwise, it is folder icon",name:"isDocumentIcon",required:!1,type:{name:"boolean | undefined"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void) | undefined"}},idButton:{defaultValue:null,description:"",name:"idButton",required:!1,type:{name:"string | undefined"}},path:{defaultValue:null,description:"",name:"path",required:!1,type:{name:"string | undefined"}},fromStorage:{defaultValue:{value:!1},description:"",name:"fromStorage",required:!1,type:{name:"boolean | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/file-input/FileInput.tsx#FileInput"]={docgenInfo:FileInput.__docgenInfo,name:"FileInput",path:"components/file-input/FileInput.tsx#FileInput"})}catch(__react_docgen_typescript_loader_error){}},"./components/text-input/TextInput.enums.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>InputType,Y:()=>InputSize});let InputType=function(InputType){return InputType.text="text",InputType.password="password",InputType.email="email",InputType.tel="tel",InputType.search="search",InputType}({}),InputSize=function(InputSize){return InputSize.base="base",InputSize.middle="middle",InputSize.big="big",InputSize.huge="huge",InputSize.large="large",InputSize}({})},"./components/text-input/TextInput.styled.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{r:()=>StyledTextInput});var styled_components_browser_esm=__webpack_require__("../../node_modules/styled-components/dist/styled-components.browser.esm.js"),utils=__webpack_require__("./utils/index.ts"),themes=__webpack_require__("./themes/index.ts"),TextInput_enums=__webpack_require__("./components/text-input/TextInput.enums.ts"),reactTextMask=(__webpack_require__("../../node_modules/react/index.js"),__webpack_require__("../../node_modules/react-text-mask/dist/reactTextMask.js")),reactTextMask_default=__webpack_require__.n(reactTextMask),jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const Input=({isAutoFocussed,isDisabled,isReadOnly,fontWeight,forwardedRef,className,dir="auto",mask,type=TextInput_enums.N.text,placeholder=" ",value="",maxLength=255,scale,tabIndex=-1,hasError,hasWarning,autoComplete="off",withBorder,keepCharPositions,guide="false",isBold,size,...props})=>{const rest={autoFocus:isAutoFocussed,ref:forwardedRef||null,value,maxLength,tabIndex,autoComplete,guide};return mask?(0,jsx_runtime.jsx)(reactTextMask_default(),{className:`${className} input-component not-selectable`,keepCharPositions:!0,guide:!1,mask,type,placeholder,...props}):(0,jsx_runtime.jsx)("input",{className:`${className} input-component not-selectable`,dir,type,placeholder,...props,...rest})};try{Input.displayName="Input",Input.__docgenInfo={description:"",displayName:"Input",props:{id:{defaultValue:null,description:"Used as HTML `id` property",name:"id",required:!1,type:{name:"string"}},forwardedRef:{defaultValue:null,description:"Forwarded ref",name:"forwardedRef",required:!1,type:{name:"Ref<HTMLInputElement>"}},name:{defaultValue:null,description:"Used as HTML `name` property",name:"name",required:!1,type:{name:"string"}},type:{defaultValue:{value:"InputType.text"},description:"Supported type of the input fields.",name:"type",required:!1,type:{name:"enum",value:[{value:'"text"'},{value:'"password"'},{value:'"email"'},{value:'"tel"'},{value:'"search"'}]}},value:{defaultValue:{value:""},description:"Value of the input",name:"value",required:!1,type:{name:"string"}},maxLength:{defaultValue:{value:"255"},description:"Default maxLength value of the input",name:"maxLength",required:!1,type:{name:"number"}},placeholder:{defaultValue:{value:""},description:"Placeholder text for the input",name:"placeholder",required:!1,type:{name:"string"}},tabIndex:{defaultValue:{value:"-1"},description:"Used as HTML `tabindex` property",name:"tabIndex",required:!1,type:{name:"number"}},mask:{defaultValue:null,description:"input text mask",name:"mask",required:!1,type:{name:"Mask | ((value: string) => Mask)"}},keepCharPositions:{defaultValue:null,description:"Allows to add or delete characters without changing the positions of the existing characters.",name:"keepCharPositions",required:!1,type:{name:"boolean"}},guide:{defaultValue:{value:"false"},description:"When guide is true, Text Mask always shows both placeholder characters and non-placeholder mask characters.",name:"guide",required:!1,type:{name:"string | boolean"}},size:{defaultValue:null,description:"Supported size of the input fields.",name:"size",required:!0,type:{name:"enum",value:[{value:'"base"'},{value:'"middle"'},{value:'"big"'},{value:'"huge"'},{value:'"large"'}]}},scale:{defaultValue:null,description:"Indicates the input field has scale",name:"scale",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"Called with the new value. Required when input is not read only. Parent should pass it back as `value`",name:"onChange",required:!1,type:{name:"((e: ChangeEvent<HTMLInputElement>) => void)"}},onBlur:{defaultValue:null,description:"Called when field is blurred",name:"onBlur",required:!1,type:{name:"((e: FocusEvent<HTMLInputElement, Element>) => void)"}},onFocus:{defaultValue:null,description:"Called when field is focused",name:"onFocus",required:!1,type:{name:"((e: FocusEvent<HTMLInputElement, Element>) => void)"}},onKeyDown:{defaultValue:null,description:"",name:"onKeyDown",required:!1,type:{name:"((e: KeyboardEvent<HTMLInputElement>) => void)"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"((e: MouseEvent<HTMLInputElement, MouseEvent>) => void)"}},onContextMenu:{defaultValue:null,description:"",name:"onContextMenu",required:!1,type:{name:"((e: MouseEvent<HTMLInputElement, MouseEvent>) => void)"}},isAutoFocussed:{defaultValue:null,description:"Focus the input field on initial render",name:"isAutoFocussed",required:!1,type:{name:"boolean"}},isDisabled:{defaultValue:null,description:"Indicates that the field cannot be used (e.g not authorised, or changes not saved)",name:"isDisabled",required:!1,type:{name:"boolean"}},isReadOnly:{defaultValue:null,description:"Indicates that the field is displaying read-only content",name:"isReadOnly",required:!1,type:{name:"boolean"}},hasError:{defaultValue:null,description:"Indicates the input field has an error",name:"hasError",required:!1,type:{name:"boolean"}},hasWarning:{defaultValue:null,description:"Indicates the input field has a warning",name:"hasWarning",required:!1,type:{name:"boolean"}},autoComplete:{defaultValue:{value:"off"},description:"Used as HTML `autocomplete` property",name:"autoComplete",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties"}},fontWeight:{defaultValue:null,description:"Sets the font weight",name:"fontWeight",required:!1,type:{name:"string | number"}},isBold:{defaultValue:null,description:"Sets font weight value to 600",name:"isBold",required:!1,type:{name:"boolean"}},withBorder:{defaultValue:null,description:"Indicates that component contain border",name:"withBorder",required:!1,type:{name:"boolean"}},dir:{defaultValue:{value:"auto"},description:"",name:"dir",required:!1,type:{name:"string"}},inputMode:{defaultValue:null,description:"",name:"inputMode",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"search"'},{value:'"text"'},{value:'"email"'},{value:'"tel"'},{value:'"url"'},{value:'"numeric"'},{value:'"decimal"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/text-input/sub-components/Input.tsx#Input"]={docgenInfo:Input.__docgenInfo,name:"Input",path:"components/text-input/sub-components/Input.tsx#Input"})}catch(__react_docgen_typescript_loader_error){}try{Input.displayName="Input",__function.__docgenInfo={description:"",displayName:"Input",props:{id:{defaultValue:null,description:"Used as HTML `id` property",name:"id",required:!1,type:{name:"string | undefined"}},forwardedRef:{defaultValue:null,description:"Forwarded ref",name:"forwardedRef",required:!1,type:{name:"Ref<HTMLInputElement> | undefined"}},name:{defaultValue:null,description:"Used as HTML `name` property",name:"name",required:!1,type:{name:"string | undefined"}},type:{defaultValue:{value:"InputType.text"},description:"Supported type of the input fields.",name:"type",required:!1,type:{name:"InputType"}},value:{defaultValue:{value:""},description:"Value of the input",name:"value",required:!1,type:{name:"string"}},maxLength:{defaultValue:{value:255},description:"Default maxLength value of the input",name:"maxLength",required:!1,type:{name:"number | undefined"}},placeholder:{defaultValue:{value:""},description:"Placeholder text for the input",name:"placeholder",required:!1,type:{name:"string | undefined"}},tabIndex:{defaultValue:{value:-1},description:"Used as HTML `tabindex` property",name:"tabIndex",required:!1,type:{name:"number | undefined"}},mask:{defaultValue:null,description:"input text mask",name:"mask",required:!1,type:{name:"Mask | ((value: string) => Mask) | undefined"}},keepCharPositions:{defaultValue:null,description:"Allows to add or delete characters without changing the positions of the existing characters.",name:"keepCharPositions",required:!1,type:{name:"boolean | undefined"}},guide:{defaultValue:{value:"false"},description:"When guide is true, Text Mask always shows both placeholder characters and non-placeholder mask characters.",name:"guide",required:!1,type:{name:"string | boolean | undefined"}},size:{defaultValue:null,description:"Supported size of the input fields.",name:"size",required:!0,type:{name:"InputSize"}},scale:{defaultValue:null,description:"Indicates the input field has scale",name:"scale",required:!1,type:{name:"boolean | undefined"}},onChange:{defaultValue:null,description:"Called with the new value. Required when input is not read only. Parent should pass it back as `value`",name:"onChange",required:!1,type:{name:"((e: ChangeEvent<HTMLInputElement>) => void) | undefined"}},onBlur:{defaultValue:null,description:"Called when field is blurred",name:"onBlur",required:!1,type:{name:"((e: FocusEvent<HTMLInputElement, Element>) => void) | undefined"}},onFocus:{defaultValue:null,description:"Called when field is focused",name:"onFocus",required:!1,type:{name:"((e: FocusEvent<HTMLInputElement, Element>) => void) | undefined"}},onKeyDown:{defaultValue:null,description:"",name:"onKeyDown",required:!1,type:{name:"((e: KeyboardEvent<HTMLInputElement>) => void) | undefined"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"((e: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined"}},onContextMenu:{defaultValue:null,description:"",name:"onContextMenu",required:!1,type:{name:"((e: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined"}},isAutoFocussed:{defaultValue:null,description:"Focus the input field on initial render",name:"isAutoFocussed",required:!1,type:{name:"boolean | undefined"}},isDisabled:{defaultValue:null,description:"Indicates that the field cannot be used (e.g not authorised, or changes not saved)",name:"isDisabled",required:!1,type:{name:"boolean | undefined"}},isReadOnly:{defaultValue:null,description:"Indicates that the field is displaying read-only content",name:"isReadOnly",required:!1,type:{name:"boolean | undefined"}},hasError:{defaultValue:null,description:"Indicates the input field has an error",name:"hasError",required:!1,type:{name:"boolean | undefined"}},hasWarning:{defaultValue:null,description:"Indicates the input field has a warning",name:"hasWarning",required:!1,type:{name:"boolean | undefined"}},autoComplete:{defaultValue:{value:"off"},description:"Used as HTML `autocomplete` property",name:"autoComplete",required:!1,type:{name:"string | undefined"}},className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string | undefined"}},style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties | undefined"}},fontWeight:{defaultValue:null,description:"Sets the font weight",name:"fontWeight",required:!1,type:{name:"string | number | undefined"}},isBold:{defaultValue:null,description:"Sets font weight value to 600",name:"isBold",required:!1,type:{name:"boolean | undefined"}},withBorder:{defaultValue:null,description:"Indicates that component contain border",name:"withBorder",required:!1,type:{name:"boolean | undefined"}},dir:{defaultValue:{value:"auto"},description:"",name:"dir",required:!1,type:{name:"string | undefined"}},inputMode:{defaultValue:null,description:"",name:"inputMode",required:!1,type:{name:'"none" | "search" | "text" | "email" | "tel" | "url" | "numeric" | "decimal" | undefined'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/text-input/sub-components/Input.tsx#Input"]={docgenInfo:Input.__docgenInfo,name:"Input",path:"components/text-input/sub-components/Input.tsx#Input"})}catch(__react_docgen_typescript_loader_error){}const StyledTextInput=(0,styled_components_browser_esm.Ay)(Input).attrs((props=>({id:props.id,forwardedRef:props.forwardedRef,name:props.name,type:props.type,value:props.value,placeholder:props.placeholder,maxLength:props.maxLength,onChange:props.onChange,onBlur:props.onBlur,onFocus:props.onFocus,readOnly:props.isReadOnly,autoFocus:props.isAutoFocussed,autoComplete:props.autoComplete,tabIndex:props.tabIndex,disabled:props.isDisabled?"disabled":""})))`
  ${utils.u$}
  -webkit-appearance: ${props=>props.theme.textInput.appearance};

  background-color: ${props=>props.isDisabled?props.theme.input.disableBackgroundColor:props.theme.input.backgroundColor};
  -webkit-text-fill-color: ${props=>props.isDisabled?props.theme.input.disableColor:props?.value?.length>0?props.theme.text.color:props.theme.textInput.placeholderColor} !important;
  caret-color: ${props=>props.isDisabled?props.theme.input.disableColor:props.theme.text.color};
  -webkit-background-clip: text !important;
  box-shadow: inset 0 0 20px 20px
    ${props=>props.isDisabled?props.theme.input.disableBackgroundColor:props.theme.input.backgroundColor} !important;

  display: ${props=>props.theme.textInput.display};
  font-family: ${props=>props.theme.fontFamily};
  line-height: ${props=>props.size===TextInput_enums.Y.base&&props.theme.textInput.lineHeight.base||props.size===TextInput_enums.Y.middle&&props.theme.textInput.lineHeight.middle||props.size===TextInput_enums.Y.big&&props.theme.textInput.lineHeight.big||props.size===TextInput_enums.Y.huge&&props.theme.textInput.lineHeight.huge||props.size===TextInput_enums.Y.large&&props.theme.textInput.lineHeight.large};
  font-size: ${props=>props.theme.getCorrectFontSize(props.size===TextInput_enums.Y.base&&props.theme.textInput.fontSize.base||props.size===TextInput_enums.Y.middle&&props.theme.textInput.fontSize.middle||props.size===TextInput_enums.Y.big&&props.theme.textInput.fontSize.big||props.size===TextInput_enums.Y.huge&&props.theme.textInput.fontSize.huge||props.size===TextInput_enums.Y.large&&props.theme.textInput.fontSize.large||props.theme.textInput.fontSize.base)};

  font-weight: ${props=>props.fontWeight?props.fontWeight:props.isBold?600:props.theme.textInput.fontWeight};

  flex: ${props=>props.theme.textInput.flex};
  outline: ${props=>props.theme.textInput.outline};
  overflow: ${props=>props.theme.textInput.overflow};
  opacity: ${props=>props.theme.textInput.opacity};

  width: ${props=>(props.scale?"100%":props.size===TextInput_enums.Y.base&&props.theme.input.width.base)||props.size===TextInput_enums.Y.middle&&props.theme.input.width.middle||props.size===TextInput_enums.Y.big&&props.theme.input.width.big||props.size===TextInput_enums.Y.huge&&props.theme.input.width.huge||props.size===TextInput_enums.Y.large&&props.theme.input.width.large};
  padding: ${props=>props.size===TextInput_enums.Y.base&&props.theme.textInput.padding.base||props.size===TextInput_enums.Y.middle&&props.theme.textInput.padding.middle||props.size===TextInput_enums.Y.big&&props.theme.textInput.padding.big||props.size===TextInput_enums.Y.huge&&props.theme.textInput.padding.huge||props.size===TextInput_enums.Y.large&&props.theme.textInput.padding.large};

  transition: ${props=>props.theme.textInput.transition};

  ::-webkit-input-placeholder {
    color: ${props=>props.isDisabled?props.theme.textInput.disablePlaceholderColor:props.theme.textInput.placeholderColor};
    font-family: ${props=>props.theme.fontFamily};
    ${utils.h0}
  }

  :-moz-placeholder {
    color: ${props=>props.isDisabled?props.theme.textInput.disablePlaceholderColor:props.theme.textInput.placeholderColor};
    font-family: ${props=>props.theme.fontFamily};
    ${utils.h0}
  }

  ::-moz-placeholder {
    color: ${props=>props.isDisabled?props.theme.textInput.disablePlaceholderColor:props.theme.textInput.placeholderColor};
    font-family: ${props=>props.theme.fontFamily};
    ${utils.h0}
  }

  :-ms-input-placeholder {
    color: ${props=>props.isDisabled?props.theme.textInput.disablePlaceholderColor:props.theme.textInput.placeholderColor};
    font-family: ${props=>props.theme.fontFamily};
    ${utils.h0}
  }

  ::placeholder {
    color: ${props=>props.isDisabled?props.theme.textInput.disablePlaceholderColor:props.theme.textInput.placeholderColor};
    font-family: ${props=>props.theme.fontFamily};
    ${utils.h0}
  }

  ${props=>!props.withBorder&&"border: none;"}
`;StyledTextInput.defaultProps={theme:themes.C6}},"./components/text-input/TextInput.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{C:()=>TextInputPure,k:()=>TextInput});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),react_device_detect__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react-device-detect/main.js"),fast_deep_equal_react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/fast-deep-equal/react.js"),fast_deep_equal_react__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(fast_deep_equal_react__WEBPACK_IMPORTED_MODULE_2__),_TextInput_styled__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./components/text-input/TextInput.styled.ts"),_TextInput_enums__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./components/text-input/TextInput.enums.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const compare=(prevProps,nextProps)=>fast_deep_equal_react__WEBPACK_IMPORTED_MODULE_2___default()(prevProps,nextProps),TextInputPure=props=>{const{withBorder=!0,size=_TextInput_enums__WEBPACK_IMPORTED_MODULE_4__.Y.base,isAutoFocussed}=props;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_TextInput_styled__WEBPACK_IMPORTED_MODULE_3__.r,{...props,isAutoFocussed:(!react_device_detect__WEBPACK_IMPORTED_MODULE_1__.Fr||!react_device_detect__WEBPACK_IMPORTED_MODULE_1__.un)&&isAutoFocussed,size,withBorder,"data-testid":"text-input"})};TextInputPure.displayName="TextInputPure";const TextInput=react__WEBPACK_IMPORTED_MODULE_0__.memo(TextInputPure,compare);TextInput.displayName="TextInput";try{TextInputPure.displayName="TextInput",TextInputPure.__docgenInfo={description:"",displayName:"TextInput",props:{id:{defaultValue:null,description:"Used as HTML `id` property",name:"id",required:!1,type:{name:"string"}},forwardedRef:{defaultValue:null,description:"Forwarded ref",name:"forwardedRef",required:!1,type:{name:"Ref<HTMLInputElement>"}},name:{defaultValue:null,description:"Used as HTML `name` property",name:"name",required:!1,type:{name:"string"}},type:{defaultValue:null,description:"Supported type of the input fields.",name:"type",required:!0,type:{name:"enum",value:[{value:'"text"'},{value:'"password"'},{value:'"email"'},{value:'"tel"'},{value:'"search"'}]}},value:{defaultValue:null,description:"Value of the input",name:"value",required:!0,type:{name:"string"}},maxLength:{defaultValue:null,description:"Default maxLength value of the input",name:"maxLength",required:!1,type:{name:"number"}},placeholder:{defaultValue:null,description:"Placeholder text for the input",name:"placeholder",required:!1,type:{name:"string"}},tabIndex:{defaultValue:null,description:"Used as HTML `tabindex` property",name:"tabIndex",required:!1,type:{name:"number"}},mask:{defaultValue:null,description:"input text mask",name:"mask",required:!1,type:{name:"Mask | ((value: string) => Mask)"}},keepCharPositions:{defaultValue:null,description:"Allows to add or delete characters without changing the positions of the existing characters.",name:"keepCharPositions",required:!1,type:{name:"boolean"}},guide:{defaultValue:null,description:"When guide is true, Text Mask always shows both placeholder characters and non-placeholder mask characters.",name:"guide",required:!1,type:{name:"string | boolean"}},size:{defaultValue:null,description:"Supported size of the input fields.",name:"size",required:!0,type:{name:"enum",value:[{value:'"base"'},{value:'"middle"'},{value:'"big"'},{value:'"huge"'},{value:'"large"'}]}},scale:{defaultValue:null,description:"Indicates the input field has scale",name:"scale",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"Called with the new value. Required when input is not read only. Parent should pass it back as `value`",name:"onChange",required:!1,type:{name:"((e: ChangeEvent<HTMLInputElement>) => void)"}},onBlur:{defaultValue:null,description:"Called when field is blurred",name:"onBlur",required:!1,type:{name:"((e: FocusEvent<HTMLInputElement, Element>) => void)"}},onFocus:{defaultValue:null,description:"Called when field is focused",name:"onFocus",required:!1,type:{name:"((e: FocusEvent<HTMLInputElement, Element>) => void)"}},onKeyDown:{defaultValue:null,description:"",name:"onKeyDown",required:!1,type:{name:"((e: KeyboardEvent<HTMLInputElement>) => void)"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"((e: MouseEvent<HTMLInputElement, MouseEvent>) => void)"}},onContextMenu:{defaultValue:null,description:"",name:"onContextMenu",required:!1,type:{name:"((e: MouseEvent<HTMLInputElement, MouseEvent>) => void)"}},isAutoFocussed:{defaultValue:null,description:"Focus the input field on initial render",name:"isAutoFocussed",required:!1,type:{name:"boolean"}},isDisabled:{defaultValue:null,description:"Indicates that the field cannot be used (e.g not authorised, or changes not saved)",name:"isDisabled",required:!1,type:{name:"boolean"}},isReadOnly:{defaultValue:null,description:"Indicates that the field is displaying read-only content",name:"isReadOnly",required:!1,type:{name:"boolean"}},hasError:{defaultValue:null,description:"Indicates the input field has an error",name:"hasError",required:!1,type:{name:"boolean"}},hasWarning:{defaultValue:null,description:"Indicates the input field has a warning",name:"hasWarning",required:!1,type:{name:"boolean"}},autoComplete:{defaultValue:null,description:"Used as HTML `autocomplete` property",name:"autoComplete",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties"}},fontWeight:{defaultValue:null,description:"Sets the font weight",name:"fontWeight",required:!1,type:{name:"string | number"}},isBold:{defaultValue:null,description:"Sets font weight value to 600",name:"isBold",required:!1,type:{name:"boolean"}},withBorder:{defaultValue:null,description:"Indicates that component contain border",name:"withBorder",required:!1,type:{name:"boolean"}},dir:{defaultValue:null,description:"",name:"dir",required:!1,type:{name:"string"}},inputMode:{defaultValue:null,description:"",name:"inputMode",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"search"'},{value:'"text"'},{value:'"email"'},{value:'"tel"'},{value:'"url"'},{value:'"numeric"'},{value:'"decimal"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/text-input/TextInput.tsx#TextInput"]={docgenInfo:TextInput.__docgenInfo,name:"TextInput",path:"components/text-input/TextInput.tsx#TextInput"})}catch(__react_docgen_typescript_loader_error){}try{TextInput.displayName="TextInput",TextInputPure.__docgenInfo={description:"",displayName:"TextInput",props:{id:{defaultValue:null,description:"Used as HTML `id` property",name:"id",required:!1,type:{name:"string | undefined"}},forwardedRef:{defaultValue:null,description:"Forwarded ref",name:"forwardedRef",required:!1,type:{name:"Ref<HTMLInputElement> | undefined"}},name:{defaultValue:null,description:"Used as HTML `name` property",name:"name",required:!1,type:{name:"string | undefined"}},type:{defaultValue:null,description:"Supported type of the input fields.",name:"type",required:!0,type:{name:"InputType"}},value:{defaultValue:null,description:"Value of the input",name:"value",required:!0,type:{name:"string"}},maxLength:{defaultValue:null,description:"Default maxLength value of the input",name:"maxLength",required:!1,type:{name:"number | undefined"}},placeholder:{defaultValue:null,description:"Placeholder text for the input",name:"placeholder",required:!1,type:{name:"string | undefined"}},tabIndex:{defaultValue:null,description:"Used as HTML `tabindex` property",name:"tabIndex",required:!1,type:{name:"number | undefined"}},mask:{defaultValue:null,description:"input text mask",name:"mask",required:!1,type:{name:"Mask | ((value: string) => Mask) | undefined"}},keepCharPositions:{defaultValue:null,description:"Allows to add or delete characters without changing the positions of the existing characters.",name:"keepCharPositions",required:!1,type:{name:"boolean | undefined"}},guide:{defaultValue:null,description:"When guide is true, Text Mask always shows both placeholder characters and non-placeholder mask characters.",name:"guide",required:!1,type:{name:"string | boolean | undefined"}},size:{defaultValue:null,description:"Supported size of the input fields.",name:"size",required:!0,type:{name:"InputSize"}},scale:{defaultValue:null,description:"Indicates the input field has scale",name:"scale",required:!1,type:{name:"boolean | undefined"}},onChange:{defaultValue:null,description:"Called with the new value. Required when input is not read only. Parent should pass it back as `value`",name:"onChange",required:!1,type:{name:"((e: ChangeEvent<HTMLInputElement>) => void) | undefined"}},onBlur:{defaultValue:null,description:"Called when field is blurred",name:"onBlur",required:!1,type:{name:"((e: FocusEvent<HTMLInputElement, Element>) => void) | undefined"}},onFocus:{defaultValue:null,description:"Called when field is focused",name:"onFocus",required:!1,type:{name:"((e: FocusEvent<HTMLInputElement, Element>) => void) | undefined"}},onKeyDown:{defaultValue:null,description:"",name:"onKeyDown",required:!1,type:{name:"((e: KeyboardEvent<HTMLInputElement>) => void) | undefined"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"((e: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined"}},onContextMenu:{defaultValue:null,description:"",name:"onContextMenu",required:!1,type:{name:"((e: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined"}},isAutoFocussed:{defaultValue:null,description:"Focus the input field on initial render",name:"isAutoFocussed",required:!1,type:{name:"boolean | undefined"}},isDisabled:{defaultValue:null,description:"Indicates that the field cannot be used (e.g not authorised, or changes not saved)",name:"isDisabled",required:!1,type:{name:"boolean | undefined"}},isReadOnly:{defaultValue:null,description:"Indicates that the field is displaying read-only content",name:"isReadOnly",required:!1,type:{name:"boolean | undefined"}},hasError:{defaultValue:null,description:"Indicates the input field has an error",name:"hasError",required:!1,type:{name:"boolean | undefined"}},hasWarning:{defaultValue:null,description:"Indicates the input field has a warning",name:"hasWarning",required:!1,type:{name:"boolean | undefined"}},autoComplete:{defaultValue:null,description:"Used as HTML `autocomplete` property",name:"autoComplete",required:!1,type:{name:"string | undefined"}},className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string | undefined"}},style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties | undefined"}},fontWeight:{defaultValue:null,description:"Sets the font weight",name:"fontWeight",required:!1,type:{name:"string | number | undefined"}},isBold:{defaultValue:null,description:"Sets font weight value to 600",name:"isBold",required:!1,type:{name:"boolean | undefined"}},withBorder:{defaultValue:null,description:"Indicates that component contain border",name:"withBorder",required:!1,type:{name:"boolean | undefined"}},dir:{defaultValue:null,description:"",name:"dir",required:!1,type:{name:"string | undefined"}},inputMode:{defaultValue:null,description:"",name:"inputMode",required:!1,type:{name:'"none" | "search" | "text" | "email" | "tel" | "url" | "numeric" | "decimal" | undefined'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/text-input/TextInput.tsx#TextInput"]={docgenInfo:TextInput.__docgenInfo,name:"TextInput",path:"components/text-input/TextInput.tsx#TextInput"})}catch(__react_docgen_typescript_loader_error){}},"./components/text-input/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{NZ:()=>_TextInput_enums__WEBPACK_IMPORTED_MODULE_1__.N,YI:()=>_TextInput_enums__WEBPACK_IMPORTED_MODULE_1__.Y,ks:()=>_TextInput__WEBPACK_IMPORTED_MODULE_0__.k,rG:()=>_TextInput_styled__WEBPACK_IMPORTED_MODULE_2__.r});var _TextInput__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./components/text-input/TextInput.tsx"),_TextInput_enums__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./components/text-input/TextInput.enums.ts"),_TextInput_styled__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./components/text-input/TextInput.styled.ts")},"./components/toast/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{ih:()=>_sub_components_Toastr__WEBPACK_IMPORTED_MODULE_1__.i,y8:()=>_Toast__WEBPACK_IMPORTED_MODULE_0__.y});var _Toast__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./components/toast/Toast.tsx"),_sub_components_Toastr__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./components/toast/sub-components/Toastr.tsx");__webpack_require__("./components/toast/Toast.enums.ts");try{Toast.displayName="Toast",Toast.__docgenInfo={description:"",displayName:"Toast",props:{className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"Accepts id",name:"id",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties"}},title:{defaultValue:null,description:"Title inside a toast",name:"title",required:!1,type:{name:"string"}},type:{defaultValue:null,description:"Sets the color and icon of the toast",name:"type",required:!1,type:{name:"enum",value:[{value:'"success"'},{value:'"error"'},{value:'"warning"'},{value:'"info"'}]}},data:{defaultValue:null,description:"Any components or data inside a toast",name:"data",required:!1,type:{name:"string"}},withCross:{defaultValue:null,description:"If false: toast disappeared after clicking on any area of toast. If true: toast disappeared after clicking on close button",name:"withCross",required:!1,type:{name:"boolean"}},timeout:{defaultValue:null,description:"Time (in milliseconds) for showing your toast. Setting in 0 let you to show toast constantly until clicking on it",name:"timeout",required:!1,type:{name:"number"}},isSSR:{defaultValue:null,description:"",name:"isSSR",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/toast/index.tsx#Toast"]={docgenInfo:Toast.__docgenInfo,name:"Toast",path:"components/toast/index.tsx#Toast"})}catch(__react_docgen_typescript_loader_error){}try{Toast.displayName="Toast",__function.__docgenInfo={description:"",displayName:"Toast",props:{className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string | undefined"}},id:{defaultValue:null,description:"Accepts id",name:"id",required:!1,type:{name:"string | undefined"}},style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties | undefined"}},title:{defaultValue:null,description:"Title inside a toast",name:"title",required:!1,type:{name:"string | undefined"}},type:{defaultValue:null,description:"Sets the color and icon of the toast",name:"type",required:!1,type:{name:"ToastType | undefined"}},data:{defaultValue:null,description:"Any components or data inside a toast",name:"data",required:!1,type:{name:"string | undefined"}},withCross:{defaultValue:null,description:"If false: toast disappeared after clicking on any area of toast. If true: toast disappeared after clicking on close button",name:"withCross",required:!1,type:{name:"boolean | undefined"}},timeout:{defaultValue:null,description:"Time (in milliseconds) for showing your toast. Setting in 0 let you to show toast constantly until clicking on it",name:"timeout",required:!1,type:{name:"number | undefined"}},isSSR:{defaultValue:null,description:"",name:"isSSR",required:!1,type:{name:"boolean | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/toast/index.tsx#Toast"]={docgenInfo:Toast.__docgenInfo,name:"Toast",path:"components/toast/index.tsx#Toast"})}catch(__react_docgen_typescript_loader_error){}},"../../public/images/catalog.folder.react.svg?url":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__.p+"images/catalog.folder.react.svg?hash=9e5b6bc4f156ba25986a"}}]);
//# sourceMappingURL=5116.64cca6eb.iframe.bundle.js.map