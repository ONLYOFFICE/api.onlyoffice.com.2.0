{"version":3,"file":"components-social-button-SocialButton-stories.7d3f021d.iframe.bundle.js","mappings":";AA+CA;;;;;;AAMA;AACA;AACA;;AAEA;AACA;AAIA;AACA;AAIA;;;;;;;AAOA;;;AAGA;;;AAGA;;AAKA;;;;AAIA;;AA6CA;AAEA;;AAEA;;;;;AAQA;;AAIA;;;AA7DA;AAGA;;AAKA;;;;;;AAQA;;;;;AAMA;;AAKA;;;;AAMA;AAIA;;;;;;;;;;;;;;AAuCA;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAIA;;;;;;AAOA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;;;;;;;;;;AAaA;ACpLA;;;AAGA;;AAOA;;;AAKA;AAGA;;AAEA;;AAIA;AAGA;;AAEA;AAGA;;AAGA;AACA;;AAEA;;AAEA;AAGA;;;;;;;;AAYA","sources":["webpack://@docspace/shared/./components/social-button/SocialButton.styled.tsx","webpack://@docspace/shared/./components/text/Text.styled.ts"],"sourcesContent":["// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport React, { PropsWithChildren } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nimport { Base } from \"../../themes\";\r\n\r\nimport type { StyledSocialButtonProps } from \"./SocialButton.types\";\r\n\r\nconst ButtonWrapper = ({\r\n  isDisabled,\r\n  noHover,\r\n  isConnect,\r\n  ...props\r\n}: PropsWithChildren<StyledSocialButtonProps>) => (\r\n  <button type=\"button\" {...props} />\r\n);\r\n\r\nconst StyledSocialButton = styled(ButtonWrapper).attrs((props) => ({\r\n  disabled: props.isDisabled ? \"disabled\" : \"\",\r\n  tabIndex: props.tabIndex,\r\n  isConnect: props.isConnect,\r\n}))`\r\n  font-family: ${(props) => props.theme.fontFamily};\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-weight: ${(props) => props.theme.socialButton.fontWeight};\r\n  text-decoration: ${(props) => props.theme.socialButton.textDecoration};\r\n  padding: ${(props) => props.theme.socialButton.padding};\r\n\r\n  width: ${(props) => props.theme.socialButton.width};\r\n  height: ${(props) =>\r\n    props.size === \"base\"\r\n      ? props.theme.socialButton.height\r\n      : props.theme.socialButton.heightSmall};\r\n  text-align: ${(props) => props.theme.socialButton.textAlign};\r\n  border: ${(props) =>\r\n    props.isConnect\r\n      ? props.theme.socialButton.borderConnect\r\n      : props.theme.socialButton.border};\r\n  border-radius: ${(props) => props.theme.socialButton.borderRadius};\r\n\r\n  touch-callout: none;\r\n  -o-touch-callout: none;\r\n  -moz-touch-callout: none;\r\n  -webkit-touch-callout: none;\r\n\r\n  stroke: ${(props) => props.theme.socialButton.stroke};\r\n\r\n  &:focus {\r\n    outline: ${(props) => props.theme.socialButton.outline};\r\n  }\r\n\r\n  ${(props) =>\r\n    props.$iconOptions &&\r\n    props.$iconOptions.color &&\r\n    css`\r\n      svg path {\r\n        fill: ${props.$iconOptions.color};\r\n      }\r\n    `}\r\n\r\n  ${(props) =>\r\n    !props.isDisabled\r\n      ? css<StyledSocialButtonProps>`\r\n          background: ${({ theme }) =>\r\n            props.isConnect\r\n              ? theme.socialButton.connectBackground\r\n              : theme.socialButton.background};\r\n\r\n          ${() =>\r\n            !props.noHover &&\r\n            css`\r\n              :hover,\r\n              :active {\r\n                cursor: pointer;\r\n\r\n                .social_button_text {\r\n                  color: ${({ theme }) =>\r\n                    !props.isConnect && theme.socialButton.text.hoverColor};\r\n                }\r\n              }\r\n\r\n              :hover {\r\n                background: ${({ theme }) =>\r\n                  props.isConnect\r\n                    ? theme.socialButton.hoverConnectBackground\r\n                    : theme.socialButton.hoverBackground};\r\n\r\n                border: ${props.isConnect\r\n                  ? props.theme.socialButton.hoverConnectBorder\r\n                  : props.theme.socialButton.hoverBorder};\r\n              }\r\n\r\n              :active {\r\n                background: ${({ theme }) =>\r\n                  props.isConnect\r\n                    ? theme.socialButton.activeConnectBackground\r\n                    : theme.socialButton.activeBackground};\r\n                border: ${props.isConnect\r\n                  ? props.theme.socialButton.activeConnectBorder\r\n                  : props.theme.socialButton.activeBorder};\r\n              }\r\n            `}\r\n        `\r\n      : css`\r\n     \r\n          background: ${({ theme }) =>\r\n            theme.socialButton.disableBackgroundColor};\r\n          color: ${({ theme }) => theme.socialButton.disableColor};\r\n\r\n          ${\r\n            props.theme.isBase &&\r\n            css`\r\n              svg path {\r\n                opacity: 60%;\r\n              }\r\n            `\r\n          }\r\n          ${\r\n            !props.theme.isBase &&\r\n            css`\r\n              svg path {\r\n                fill: ${props.theme.socialButton.disabledSvgColor};\r\n              }\r\n            `\r\n          }}\r\n        `};\r\n\r\n  .iconWrapper > div {\r\n    display: flex;\r\n    align-items: center;\r\n    pointer-events: none;\r\n  }\r\n\r\n  .social_button_text {\r\n    position: relative;\r\n    pointer-events: none;\r\n    color: ${(props) =>\r\n      props.isConnect\r\n        ? props.theme.socialButton.text.connectColor\r\n        : props.theme.socialButton.text.color};\r\n    width: ${(props) => props.theme.socialButton.text.width};\r\n    height: ${(props) => props.theme.socialButton.text.height};\r\n    font-family: Roboto, ${(props) => props.theme.fontFamily};\r\n    font-style: normal;\r\n    font-weight: ${(props) => props.theme.socialButton.text.fontWeight};\r\n    font-size: ${(props) => props.theme.socialButton.text.fontSize};\r\n    line-height: ${(props) => props.theme.socialButton.text.lineHeight};\r\n    letter-spacing: ${(props) => props.theme.socialButton.text.letterSpacing};\r\n    user-select: none;\r\n    overflow: ${(props) => props.theme.socialButton.text.overflow};\r\n    text-overflow: ${(props) => props.theme.socialButton.text.textOverflow};\r\n    white-space: ${(props) => props.theme.socialButton.text.whiteSpace};\r\n\r\n    ${(props) =>\r\n      props.theme.interfaceDirection === \"rtl\"\r\n        ? css`\r\n            padding-left: 16px;\r\n          `\r\n        : css`\r\n            padding-right: 16px;\r\n          `}\r\n  }\r\n\r\n  svg {\r\n    // margin: ${(props) => props.theme.socialButton.svg.margin};\r\n    width: ${(props) => props.theme.socialButton.svg.width};\r\n    height: ${(props) => props.theme.socialButton.svg.height};\r\n    min-width: ${(props) => props.theme.socialButton.svg.minWidth};\r\n    min-height: ${(props) => props.theme.socialButton.svg.minHeight};\r\n\r\n    path {\r\n      fill: ${(props) => props.isConnect && props.theme.socialButton.svg.fill};\r\n      fill: ${(props) => !props.theme.isBase && !props.isConnect && \"#FFFFFF\"};\r\n    }\r\n  }\r\n\r\n  .social-button-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    max-width: 100%;\r\n    gap: 16px;\r\n  }\r\n`;\r\n\r\nStyledSocialButton.defaultProps = { theme: Base };\r\n\r\nexport default StyledSocialButton;\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport styled, { css } from \"styled-components\";\r\n\r\nimport { Base } from \"../../themes\";\r\nimport { NoUserSelect, commonTextStyles } from \"../../utils\";\r\n\r\nimport { StyledTextProps, TextProps } from \"./Text.types\";\r\n\r\nconst styleCss = css<TextProps & StyledTextProps>`\r\n  font-size: ${(props) => props.fontSizeProp && props.fontSizeProp};\r\n  outline: 0 !important;\r\n  margin: 0;\r\n  font-weight: ${(props) =>\r\n    props.fontWeightProp\r\n      ? props.fontWeightProp\r\n      : props.isBold\r\n        ? 700\r\n        : props.theme.text.fontWeight};\r\n\r\n  ${(props) =>\r\n    props.isItalic &&\r\n    css`\r\n      font-style: italic;\r\n    `}\r\n  ${(props) =>\r\n    props.backgroundColor &&\r\n    css`\r\n      background-color: ${props.backgroundColor};\r\n    `}\r\n  ${(props) =>\r\n    props.isInline\r\n      ? css`\r\n          display: inline-block;\r\n        `\r\n      : props.display &&\r\n        css`\r\n          display: ${props.display};\r\n        `}\r\n  ${(props) =>\r\n    props.lineHeight &&\r\n    css`\r\n      line-height: ${props.lineHeight};\r\n    `}\r\n`;\r\nconst StyledText = styled.p<TextProps & StyledTextProps>`\r\n  ${styleCss};\r\n\r\n  ${commonTextStyles};\r\n\r\n  ${(props) => props.noSelect && NoUserSelect}\r\n`;\r\n\r\nStyledText.defaultProps = { theme: Base };\r\n\r\nexport const StyledAutoDirSpan = styled.span`\r\n  display: inherit;\r\n  white-space: inherit;\r\n  overflow: inherit;\r\n  text-overflow: inherit;\r\n  pointer-events: none;\r\n  width: inherit;\r\n  max-width: inherit;\r\n`;\r\n\r\nexport default StyledText;\r\n"],"names":[],"sourceRoot":""}