{"version":3,"file":"4140.0acc0085.iframe.bundle.js","mappings":";;;;;AAuCA;;;AAIA;AAGA;AAGA;;;AAGA;;AAIA;;;;AAKA;;;;;;;;;;;AAWA;;;;;;;AAQA;;;;;;;AAOA;;;;;AAOA;;;;;;;AASA;;;;;;;;;;;;;;;;;;AAkBA;;;;;;;;AAUA;;AAEA;;AAGA;;;;;;;AAOA;;;;;;AASA;;;;;;;;AAQA;;;AAKA;;;;AAIA;;;;;;;AAUA;;;;;;;;AAUA;;;AAKA;;;;;AAOA;;;;;AAMA;;;AAGA;;;AA0CA;AArBA;;;AAGA;;;;;;AAMA;;;;;;AAMA;;;AC/LA;AAKA","sources":["webpack://@docspace/shared/./components/floating-button/FloatingButton.styled.ts","webpack://@docspace/shared/./components/floating-button/FloatingButton.tsx"],"sourcesContent":["// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport styled, { keyframes, css } from \"styled-components\";\r\n\r\nimport { desktop, tablet } from \"../../utils/device\";\r\nimport { Base } from \"../../themes\";\r\nimport { DefaultStylesProps } from \"./FloatingButton.types\";\r\n\r\nconst MIN_PERCENTAGE_FOR_DISPLAYING_UPLOADING_INDICATOR = 3;\r\n\r\nconst StyledCircleWrap = styled.div`\r\n  position: relative;\r\n  z-index: 500;\r\n  width: 48px;\r\n  height: 48px;\r\n  background: ${(props) =>\r\n    props.color ? props.color : props.theme.floatingButton?.backgroundColor};\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  box-shadow: ${(props) => props.theme.floatingButton?.boxShadow};\r\n`;\r\n\r\nStyledCircleWrap.defaultProps = { theme: Base };\r\n\r\nconst StyledFloatingButtonWrapper = styled.div<{ showTwoProgress?: boolean }>`\r\n  @media ${desktop} {\r\n    position: absolute;\r\n    z-index: 300;\r\n    ${(props) =>\r\n      props.theme.interfaceDirection === \"rtl\"\r\n        ? css`\r\n            left: 0;\r\n          `\r\n        : css`\r\n            right: 0;\r\n          `}\r\n\r\n    bottom: ${(props) => (props.showTwoProgress ? \"96px\" : \"0\")};\r\n\r\n    width: 100px;\r\n    height: 70px;\r\n  }\r\n\r\n  .layout-progress-bar_close-icon {\r\n    display: none;\r\n    position: absolute;\r\n    cursor: pointer;\r\n\r\n    ${({ theme }) =>\r\n      theme.interfaceDirection === \"rtl\" ? `left: 77px;` : `right: 77px;`}\r\n    bottom: 33px;\r\n  }\r\n  &:hover {\r\n    .layout-progress-bar_close-icon {\r\n      display: block;\r\n    }\r\n    @media ${tablet} {\r\n      .layout-progress-bar_close-icon {\r\n        display: none;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media ${tablet} {\r\n    .layout-progress-bar_close-icon {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nconst rotate360 = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nconst StyledCircle = styled.div<{ percent: number; displayProgress?: boolean }>`\r\n  .circle__mask,\r\n  .circle__fill {\r\n    width: 42px;\r\n    height: 42px;\r\n    position: absolute;\r\n    border-radius: 50%;\r\n    top: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    margin: auto;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.percent > MIN_PERCENTAGE_FOR_DISPLAYING_UPLOADING_INDICATOR\r\n      ? css`\r\n          .circle__mask {\r\n            clip: rect(0px, 42px, 42px, 21px);\r\n          }\r\n\r\n          .circle__fill {\r\n            animation: fill-rotate ease-in-out none;\r\n\r\n            transform: rotate(${props.percent * 1.8}deg);\r\n          }\r\n        `\r\n      : css`\r\n          .circle__fill {\r\n            animation: ${rotate360} 2s linear infinite;\r\n            transform: translate(0);\r\n          }\r\n        `}\r\n\r\n  .circle__mask .circle__fill {\r\n    clip: rect(0px, 21px, 42px, 0px);\r\n    background-color: ${(props) =>\r\n      !props.displayProgress\r\n        ? \"transparent !important\"\r\n        : props.theme.floatingButton?.color};\r\n  }\r\n\r\n  .circle__mask.circle__full {\r\n    animation: fill-rotate ease-in-out none;\r\n\r\n    transform: rotate(${(props) => props.percent * 1.8}deg);\r\n  }\r\n\r\n  @keyframes fill-rotate {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(${(props) => props.percent * 1.8}deg);\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledFloatingButton = styled.div`\r\n  width: 38px;\r\n  height: 38px;\r\n  border-radius: 50%;\r\n  background: ${(props) =>\r\n    props.color ? props.color : props.theme.floatingButton?.backgroundColor};\r\n  text-align: center;\r\n  margin: 5px;\r\n  position: absolute;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nStyledFloatingButton.defaultProps = { theme: Base };\r\n\r\nconst IconBox = styled.div`\r\n  // padding-top: 12px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  svg {\r\n    path {\r\n      fill: ${(props) => props.theme.floatingButton?.fill};\r\n    }\r\n  }\r\n`;\r\n\r\nIconBox.defaultProps = { theme: Base };\r\n\r\nconst StyledAlertIcon = styled.div`\r\n  position: absolute;\r\n  width: 12px;\r\n  height: 12px;\r\n\r\n  ${({ theme }) =>\r\n    theme.interfaceDirection === \"rtl\" ? `right: 20px;` : `left: 20px;`}\r\n  top: 0px;\r\n\r\n  svg {\r\n    circle {\r\n      fill: ${(props) => props.theme.floatingButton?.alert.fill};\r\n    }\r\n    path {\r\n      fill: ${(props) => props.theme.floatingButton?.alert.path};\r\n    }\r\n  }\r\n`;\r\n\r\nexport {\r\n  StyledFloatingButtonWrapper,\r\n  StyledCircle,\r\n  StyledCircleWrap,\r\n  StyledFloatingButton,\r\n  StyledAlertIcon,\r\n  IconBox,\r\n};\r\n\r\nconst getDefaultStyles = ({\r\n  $currentColorScheme,\r\n  color,\r\n  displayProgress,\r\n}: DefaultStylesProps) =>\r\n  $currentColorScheme &&\r\n  css`\r\n    background: ${color || $currentColorScheme.main?.accent} !important;\r\n\r\n    .circle__background {\r\n      background: ${color || $currentColorScheme.main?.accent} !important;\r\n    }\r\n\r\n    .icon-box {\r\n      svg {\r\n        path {\r\n          fill: ${$currentColorScheme.text?.accent};\r\n        }\r\n      }\r\n    }\r\n\r\n    .circle__mask .circle__fill {\r\n      background-color: ${!displayProgress\r\n        ? \"transparent !important\"\r\n        : $currentColorScheme.text?.accent};\r\n    }\r\n  `;\r\n\r\nStyledCircleWrap.defaultProps = { theme: Base };\r\n\r\nconst StyledFloatingButtonTheme = styled(StyledCircleWrap)(getDefaultStyles);\r\n\r\nexport { StyledFloatingButtonTheme };\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport React, { useEffect, useState, useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport ButtonUploadIcon from \"PUBLIC_DIR/images/button.upload.react.svg\";\r\nimport ButtonFileIcon from \"PUBLIC_DIR/images/button.file.react.svg\";\r\nimport ButtonTrashIcon from \"PUBLIC_DIR/images/button.trash.react.svg\";\r\nimport ButtonMoveIcon from \"PUBLIC_DIR/images/button.move.react.svg\";\r\nimport ButtonDuplicateIcon from \"PUBLIC_DIR/images/button.duplicate.react.svg\";\r\nimport ButtonAlertIcon from \"PUBLIC_DIR/images/button.alert.react.svg\";\r\nimport ButtonPlusIcon from \"PUBLIC_DIR/images/icons/16/button.plus.react.svg\";\r\nimport ButtonMinusIcon from \"PUBLIC_DIR/images/icons/16/button.minus.react.svg\";\r\nimport RefreshIcon from \"PUBLIC_DIR/images/refresh.react.svg\";\r\nimport CloseIcon from \"PUBLIC_DIR/images/close-icon.react.svg\";\r\n\r\nimport { FloatingButtonTheme } from \"./FloatingButton.theme\";\r\n\r\nimport { IconSizeType, classNames, commonIconsStyles } from \"../../utils\";\r\n\r\nimport {\r\n  StyledFloatingButtonWrapper,\r\n  StyledFloatingButton,\r\n  StyledAlertIcon,\r\n  StyledCircle,\r\n  IconBox,\r\n} from \"./FloatingButton.styled\";\r\nimport { FloatingButtonProps } from \"./FloatingButton.types\";\r\nimport { FloatingButtonIcons } from \"./FloatingButton.enums\";\r\n\r\nconst StyledButtonAlertIcon = styled(ButtonAlertIcon)`\r\n  ${commonIconsStyles}\r\n`;\r\n\r\nconst Delay = 1000;\r\n\r\nconst icons = {\r\n  upload: <ButtonUploadIcon />,\r\n  file: <ButtonFileIcon />,\r\n  trash: <ButtonTrashIcon />,\r\n  move: <ButtonMoveIcon />,\r\n  plus: <ButtonPlusIcon />,\r\n  minus: <ButtonMinusIcon />,\r\n  refresh: <RefreshIcon />,\r\n  duplicate: <ButtonDuplicateIcon />,\r\n};\r\n\r\nconst FloatingButton = (props: FloatingButtonProps) => {\r\n  const {\r\n    id,\r\n    className,\r\n    style,\r\n    icon,\r\n    alert,\r\n    percent,\r\n    onClick,\r\n    color,\r\n    clearUploadedFilesHistory,\r\n    showTwoProgress,\r\n  } = props;\r\n\r\n  const [animationCompleted, setAnimationCompleted] = useState(false);\r\n\r\n  const timerId = React.useRef<null | ReturnType<typeof setTimeout>>(null);\r\n\r\n  const onProgressClear = () => {\r\n    clearUploadedFilesHistory?.();\r\n  };\r\n\r\n  const displayProgress = useMemo(() => {\r\n    return (\r\n      !(percent === 100 && animationCompleted) &&\r\n      icon !== FloatingButtonIcons.minus\r\n    );\r\n  }, [percent, animationCompleted, icon]);\r\n\r\n  useEffect(() => {\r\n    timerId.current = setTimeout(\r\n      () => setAnimationCompleted(percent === 100),\r\n      Delay,\r\n    );\r\n\r\n    return () => {\r\n      if (timerId.current) clearTimeout(timerId.current);\r\n    };\r\n  }, [percent, setAnimationCompleted]);\r\n\r\n  const iconComponent = useMemo(() => {\r\n    return icons[icon] ?? icons.duplicate;\r\n  }, [icon]);\r\n\r\n  return (\r\n    <StyledFloatingButtonWrapper\r\n      showTwoProgress={showTwoProgress}\r\n      className=\"layout-progress-bar_wrapper\"\r\n    >\r\n      <FloatingButtonTheme\r\n        {...props}\r\n        id={id}\r\n        icon={icon}\r\n        color={color}\r\n        style={style}\r\n        onClick={onClick}\r\n        displayProgress={displayProgress}\r\n        className={\r\n          classNames([className, \"not-selectable\"]) || \"not-selectable\"\r\n        }\r\n      >\r\n        <StyledCircle\r\n          displayProgress={displayProgress}\r\n          percent={percent > 100 ? 0 : percent}\r\n        >\r\n          <div className=\"circle__mask circle__full\">\r\n            <div className=\"circle__fill\" />\r\n          </div>\r\n          <div className=\"circle__mask\">\r\n            <div className=\"circle__fill\" />\r\n          </div>\r\n\r\n          <StyledFloatingButton className=\"circle__background\" color={color}>\r\n            <IconBox className=\"icon-box\">{iconComponent}</IconBox>\r\n            <StyledAlertIcon>\r\n              {alert ? (\r\n                <StyledButtonAlertIcon size={IconSizeType.medium} />\r\n              ) : null}\r\n            </StyledAlertIcon>\r\n          </StyledFloatingButton>\r\n        </StyledCircle>\r\n      </FloatingButtonTheme>\r\n      {clearUploadedFilesHistory && percent === 100 && (\r\n        <CloseIcon\r\n          className=\"layout-progress-bar_close-icon\"\r\n          onClick={onProgressClear}\r\n        />\r\n      )}\r\n    </StyledFloatingButtonWrapper>\r\n  );\r\n};\r\n\r\nFloatingButton.defaultProps = {\r\n  id: undefined,\r\n  className: undefined,\r\n  style: undefined,\r\n  icon: FloatingButtonIcons.upload,\r\n  alert: false,\r\n  percent: 0,\r\n};\r\n\r\nexport { FloatingButton };\r\n"],"names":[],"sourceRoot":""}