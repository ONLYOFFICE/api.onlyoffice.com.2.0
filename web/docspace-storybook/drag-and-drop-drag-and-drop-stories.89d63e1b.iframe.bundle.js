"use strict";(self.webpackChunk_docspace_components=self.webpackChunk_docspace_components||[]).push([[4564],{"./drag-and-drop/drag-and-drop.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("../../node_modules/react/index.js");var ___WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./drag-and-drop/index.js"),_text__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./text/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/DragAndDrop",component:___WEBPACK_IMPORTED_MODULE_1__.Z,argTypes:{onDrop:{action:"onDrop"},targetFile:{action:"File: ",table:{disable:!0}},onMouseDown:{action:"onMouseDown"}},parameters:{docs:{description:{component:"Drag And Drop component can be used as Dropzone.\n\nSee documentation: https://github.com/react-dropzone/react-dropzone\n        "}}}},Template=args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.Z,{...args,isDropZone:!0,onDrop:items=>{args.onDrop(items);for(let file of items)if(file)return args.targetFile(file.name)},style:{margin:16,width:200,height:200},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_text__WEBPACK_IMPORTED_MODULE_2__.Z,{style:{textAlign:"center",lineHeight:"9.5em"},color:"#999",fontSize:"20px",children:"Drop items here"})});Template.displayName="Template";const Default=Template.bind({});Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'args => {\n  const onDrop = items => {\n    args.onDrop(items);\n    for (let file of items) {\n      if (file) {\n        return args.targetFile(file.name);\n      }\n    }\n  };\n  const dropDownStyles = {\n    margin: 16,\n    width: 200,\n    height: 200\n  };\n  const textStyles = {\n    textAlign: "center",\n    lineHeight: "9.5em"\n  };\n  return <DragAndDrop {...args} isDropZone onDrop={onDrop} style={dropDownStyles}>\r\n      <Text style={textStyles} color="#999" fontSize="20px">\r\n        Drop items here\r\n      </Text>\r\n    </DragAndDrop>;\n}',...Default.parameters?.docs?.source}}};const __namedExportsOrder=["Default"]}}]);