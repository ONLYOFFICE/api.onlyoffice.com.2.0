"use strict";(self.webpackChunk_docspace_components=self.webpackChunk_docspace_components||[]).push([[6634],{"./link/link.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AllLinks:()=>AllLinks,Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("../../node_modules/react/index.js");var ___WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./link/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Link",component:___WEBPACK_IMPORTED_MODULE_1__.Z,parameters:{docs:{description:{component:"It is a link with 2 types:\n\n1. page - simple link which refer to other pages and parts of current page;\n2. action - link, which usually hasn't hyperlink and do anything on click - open dropdown, filter data, etc"}}},argType:{color:{control:"color"},onClick:{action:"clickActionLink"}}},Template=({label,onClick,href,...args})=>{const actionProps=href&&href.length>0?{href}:{onClick};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.Z,{...args,...actionProps,children:label})};Template.displayName="Template";const Default=Template.bind({});Default.args={href:"http://github.com",label:"Simple label",type:"page",fontSize:"13px",fontWeight:"400",isBold:!1,target:"_blank",isHovered:!1,noHover:!1,isSemitransparent:!1,isTextOverflow:!1};const AllTemplate=args=>{const rowStyle={marginTop:8,fontSize:12},headerStyle={padding:"8px 0 0 40px",fontSize:16};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div",{style:{display:"grid",gridTemplateColumns:"1fr 1fr"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div",{style:headerStyle,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{children:"Page links:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{style:rowStyle,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.Z,{type:"page",href:"https://github.com",isBold:!0,children:"Bold black page link"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{style:rowStyle,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.Z,{type:"page",href:"https://github.com",children:"Black page link"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{style:rowStyle,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.Z,{type:"page",href:"https://github.com",isHovered:!0,children:"Black hovered page link"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{style:rowStyle,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.Z,{type:"page",href:"https://github.com",isSemitransparent:!0,children:"Semitransparent black page link"})})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div",{style:headerStyle,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{children:"Action links:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{style:rowStyle,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.Z,{type:"action",isBold:!0,children:"Bold black action link"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{style:rowStyle,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.Z,{type:"action",children:"Black action link"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{style:rowStyle,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.Z,{type:"action",isHovered:!0,children:"Black hovered action link"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{style:rowStyle,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.Z,{type:"action",isSemitransparent:!0,children:"Semitransparent black action link"})})]})]})};AllTemplate.displayName="AllTemplate";const AllLinks=AllTemplate.bind({});Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"({\n  label,\n  onClick,\n  href,\n  ...args\n}) => {\n  const actionProps = href && href.length > 0 ? {\n    href\n  } : {\n    onClick\n  };\n  return <Link {...args} {...actionProps}>\r\n      {label}\r\n    </Link>;\n}",...Default.parameters?.docs?.source}}},AllLinks.parameters={...AllLinks.parameters,docs:{...AllLinks.parameters?.docs,source:{originalSource:'args => {\n  const rowStyle = {\n    marginTop: 8,\n    fontSize: 12\n  };\n  const headerStyle = {\n    padding: "8px 0 0 40px",\n    fontSize: 16\n  };\n  return <div style={{\n    display: "grid",\n    gridTemplateColumns: "1fr 1fr"\n  }}>\r\n      <div style={headerStyle}>\r\n        <div>Page links:</div>\r\n        <div>\r\n          <div style={rowStyle}>\r\n            <Link type="page" href="https://github.com" isBold={true}>\r\n              Bold black page link\r\n            </Link>\r\n          </div>\r\n          <div style={rowStyle}>\r\n            <Link type="page" href="https://github.com">\r\n              Black page link\r\n            </Link>\r\n          </div>\r\n          <div style={rowStyle}>\r\n            <Link type="page" href="https://github.com" isHovered={true}>\r\n              Black hovered page link\r\n            </Link>\r\n          </div>\r\n          <div style={rowStyle}>\r\n            <Link type="page" href="https://github.com" isSemitransparent={true}>\r\n              Semitransparent black page link\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div style={headerStyle}>\r\n        <div>Action links:</div>\r\n        <div style={rowStyle}>\r\n          <Link type="action" isBold={true}>\r\n            Bold black action link\r\n          </Link>\r\n        </div>\r\n        <div style={rowStyle}>\r\n          <Link type="action">Black action link</Link>\r\n        </div>\r\n        <div style={rowStyle}>\r\n          <Link type="action" isHovered={true}>\r\n            Black hovered action link\r\n          </Link>\r\n        </div>\r\n        <div style={rowStyle}>\r\n          <Link type="action" isSemitransparent={true}>\r\n            Semitransparent black action link\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>;\n}',...AllLinks.parameters?.docs?.source}}};const __namedExportsOrder=["Default","AllLinks"]}}]);