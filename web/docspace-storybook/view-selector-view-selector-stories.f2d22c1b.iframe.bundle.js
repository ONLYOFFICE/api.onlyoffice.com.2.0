"use strict";(self.webpackChunk_docspace_components=self.webpackChunk_docspace_components||[]).push([[3675],{"./view-selector/view-selector.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>view_selector_stories});var react=__webpack_require__("../../node_modules/react/index.js"),box=__webpack_require__("./box/index.js"),view_selector=__webpack_require__("./view-selector/index.js");const view_rows_reacturl_namespaceObject=__webpack_require__.p+"images/view-rows.react.svg?hash=ebcc7ab8626cb379792c",view_tiles_reacturl_namespaceObject=__webpack_require__.p+"images/view-tiles.react.svg?hash=335abcb9cfc8795e0eac";var eye_reacturl=__webpack_require__("../../public/images/eye.react.svg?url"),jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const view_selector_stories={title:"Components/ViewSelector",component:view_selector.Z,parameters:{docs:{description:{component:"Actions with a button."}}},argTypes:{onChangeView:{action:"onChangeView"}}},Template=({onChangeView,viewAs,viewSettings,isDisabled,isFilter,...rest})=>{const[view,setView]=(0,react.useState)(viewAs);return(0,jsx_runtime.jsx)(box.Z,{paddingProp:"16px",children:(0,jsx_runtime.jsx)(view_selector.Z,{...rest,isDisabled,viewSettings,viewAs:view,isFilter,onChangeView:view=>{onChangeView(view),setView(view)}})})};Template.displayName="Template";const Default=Template.bind({});Default.args={viewSettings:[{value:"row",icon:view_rows_reacturl_namespaceObject},{value:"tile",icon:view_tiles_reacturl_namespaceObject,callback:()=>console.log("callback tile click")},{value:"some",icon:eye_reacturl,callback:()=>console.log("callback some click")}],viewAs:"row",isDisabled:!1,isFilter:!1},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'({\n  onChangeView,\n  viewAs,\n  viewSettings,\n  isDisabled,\n  isFilter,\n  ...rest\n}) => {\n  const [view, setView] = useState(viewAs);\n  return <Box paddingProp="16px">\r\n      <ViewSelector {...rest} isDisabled={isDisabled} viewSettings={viewSettings} viewAs={view} isFilter={isFilter} onChangeView={view => {\n      onChangeView(view);\n      setView(view);\n    }} />\r\n    </Box>;\n}',...Default.parameters?.docs?.source}}};const __namedExportsOrder=["Default"]}}]);