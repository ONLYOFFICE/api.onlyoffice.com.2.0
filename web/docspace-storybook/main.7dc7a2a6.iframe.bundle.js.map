{"version":3,"file":"main.7dc7a2a6.iframe.bundle.js","mappings":";;;;AAiCA;;AAEA;;AAEA;;AAEA;;;;AAKA;;;;;;;;ACpCA;;AC2CA","sources":["webpack://@docspace/shared/./components/global-style/index.tsx","webpack://@docspace/shared/./.storybook/styles/StorybookGlobalStyles.js","webpack://@docspace/shared/./.storybook/preview.js"],"sourcesContent":["// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport { TTheme } from \"../../themes\";\r\n\r\nconst GlobalStyle = createGlobalStyle<{ theme: TTheme }>`\r\n  html, body {\r\n    margin: 0;\r\n  \r\n    background-color: ${(props) => props.theme.backgroundColor};\r\n       \r\n    color: ${(props) => props.theme.color};\r\n    \r\n    font-family: ${(props) => props.theme.fontFamily};\r\n    \r\n    font-size: ${(props) =>\r\n      props.theme.getCorrectFontSize(props.theme.fontSize)};\r\n  }\r\n\r\n  body {\r\n    direction: ${(props) => props.theme.interfaceDirection};\r\n  }\r\n`;\r\n\r\nexport { GlobalStyle };\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst StorybookGlobalStyles = createGlobalStyle`\r\n  .sbdocs-content {\r\n    direction: ltr;\r\n  }\r\n\r\n  .sbdocs-content .docs-story {\r\n    direction: ${(props) => props.theme.interfaceDirection};\r\n  }\r\n`;\r\n\r\nexport default StorybookGlobalStyles;\r\n","import { MINIMAL_VIEWPORTS } from \"@storybook/addon-viewport\";\r\nimport { Base, Dark } from \"../themes/index\";\r\nimport \"../../../public/css/fonts.css\";\r\nimport ThemeWrapper from \"./globals/theme-wrapper\";\r\nimport { DocsContainer } from \"./DocsContainer\";\r\nimport globalTypes from \"./globals\";\r\nimport { useDarkMode } from \"storybook-dark-mode\";\r\n// import \"../index\";\r\n\r\nimport lightTheme from \"./lightTheme\";\r\nimport darkTheme from \"./darkTheme\";\r\nimport StorybookGlobalStyles from \"./styles/StorybookGlobalStyles\";\r\n\r\nconst preview = {\r\n  globalTypes,\r\n  parameters: {\r\n    backgrounds: { disable: true },\r\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\r\n    controls: { expanded: true },\r\n    docs: {\r\n      container: DocsContainer,\r\n    },\r\n    viewport: {\r\n      viewports: MINIMAL_VIEWPORTS,\r\n    },\r\n    previewTabs: {\r\n      \"storybook/docs/panel\": {\r\n        hidden: true,\r\n      },\r\n    },\r\n    darkMode: {\r\n      current: \"light\",\r\n      light: lightTheme,\r\n      dark: darkTheme,\r\n    },\r\n  },\r\n  decorators: [\r\n    (Story, context) => {\r\n      const theme = useDarkMode() ? Dark : Base;\r\n      const interfaceDirection = context.globals.direction;\r\n\r\n      return (\r\n        <ThemeWrapper theme={{ ...theme, interfaceDirection }}>\r\n          <StorybookGlobalStyles />\r\n          <Story />\r\n        </ThemeWrapper>\r\n      );\r\n    },\r\n  ],\r\n};\r\n\r\nexport default preview;\r\n"],"names":[],"sourceRoot":""}