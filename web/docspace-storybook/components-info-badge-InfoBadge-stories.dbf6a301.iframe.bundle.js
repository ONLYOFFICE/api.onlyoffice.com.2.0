"use strict";(self.webpackChunk_docspace_shared=self.webpackChunk_docspace_shared||[]).push([[6388],{"./components/info-badge/InfoBadge.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>InfoBadge_stories});var react=__webpack_require__("../../node_modules/react/index.js");const cross_edit_reacturl_namespaceObject=__webpack_require__.p+"images/cross.edit.react.svg?hash=c93accd7aeaa81aa63e7";var badge=__webpack_require__("./components/badge/index.tsx"),icon_button=__webpack_require__("./components/icon-button/index.tsx"),styled_components_browser_esm=__webpack_require__("../../node_modules/styled-components/dist/styled-components.browser.esm.js"),tooltip=__webpack_require__("./components/tooltip/index.tsx"),device=__webpack_require__("./utils/device.ts"),themes=__webpack_require__("./themes/index.ts");const StyledToolTip=(0,styled_components_browser_esm.Ay)(tooltip.m)`
  .__react_component_tooltip {
    padding: 16px;
    box-shadow: 0px 12px 40px 0px
      ${props=>props.theme.betaBadgeTooltip.boxShadowColor};

    max-width: 240px;

    @media ${device.Hw} {
      max-width: calc(100vw - 32px);
    }
  }
`;StyledToolTip.defaultProps={theme:themes.C6};const InfoBadgeContent=styled_components_browser_esm.Ay.div`
  display: flex;
  flex-direction: column;
  gap: 8px;
`,InfoBadgeHeader=styled_components_browser_esm.Ay.div`
  display: flex;
  justify-content: space-between;

  .info-badge__close {
    height: 16px;
    width: 16px;
    cursor: pointer;
  }
`,InfoBadgeTitle=styled_components_browser_esm.Ay.h3`
  margin: 0;
  font-size: 16px;
  font-weight: 700;
  line-height: 22px;

  color: ${props=>props.theme.tooltip.textColor};
`;InfoBadgeTitle.defaultProps={theme:themes.C6};const InfoBadgeDescription=styled_components_browser_esm.Ay.p`
  margin: 0;
  font-size: 12px;
  line-height: 16px;

  > a {
    font-size: 12px;
  }
`;var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const InfoBadge=({label,offset,place,tooltipDescription,tooltipTitle})=>{const id=(0,react.useId)(),tooltipRef=(0,react.useRef)(null),onClose=(0,react.useCallback)((()=>{tooltipRef.current?.close()}),[]);return(0,jsx_runtime.jsxs)("div",{"data-testid":"info-badge",children:[(0,jsx_runtime.jsx)(badge.E,{noHover:!0,fontSize:"9px",isHovered:!1,borderRadius:"50px",label,"data-tooltip-id":id,backgroundColor:"#533ED1"}),(0,jsx_runtime.jsx)(StyledToolTip,{id,clickable:!0,openOnClick:!0,place,offset,ref:tooltipRef,children:(0,jsx_runtime.jsxs)(InfoBadgeContent,{children:[(0,jsx_runtime.jsxs)(InfoBadgeHeader,{children:[(0,jsx_runtime.jsx)(InfoBadgeTitle,{children:tooltipTitle}),(0,jsx_runtime.jsx)(icon_button.K,{isFill:!0,size:16,onClick:onClose,iconName:cross_edit_reacturl_namespaceObject,className:"info-badge__close"})]}),(0,jsx_runtime.jsx)(InfoBadgeDescription,{children:tooltipDescription})]})})]})};InfoBadge.displayName="InfoBadge";try{InfoBadge.displayName="InfoBadge",InfoBadge.__docgenInfo={description:"",displayName:"InfoBadge",props:{label:{defaultValue:null,description:"badge Label",name:"label",required:!0,type:{name:"string"}},place:{defaultValue:null,description:"Global tooltip placement",name:"place",required:!0,type:{name:"enum",value:[{value:'"left"'},{value:'"top"'},{value:'"top-start"'},{value:'"top-end"'},{value:'"right"'},{value:'"right-start"'},{value:'"right-end"'},{value:'"bottom"'},{value:'"bottom-start"'},{value:'"bottom-end"'},{value:'"left-start"'},{value:'"left-end"'}]}},tooltipTitle:{defaultValue:null,description:"tooltip header",name:"tooltipTitle",required:!0,type:{name:"ReactNode"}},tooltipDescription:{defaultValue:null,description:"tooltip body",name:"tooltipDescription",required:!0,type:{name:"ReactNode"}},offset:{defaultValue:null,description:"Space between the tooltip element and anchor element (arrow not included in calculation)",name:"offset",required:!0,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/info-badge/InfoBadge.tsx#InfoBadge"]={docgenInfo:InfoBadge.__docgenInfo,name:"InfoBadge",path:"components/info-badge/InfoBadge.tsx#InfoBadge"})}catch(__react_docgen_typescript_loader_error){}try{InfoBadge.displayName="InfoBadge",InfoBadge.__docgenInfo={description:"",displayName:"InfoBadge",props:{label:{defaultValue:null,description:"badge Label",name:"label",required:!0,type:{name:"string"}},place:{defaultValue:null,description:"Global tooltip placement",name:"place",required:!0,type:{name:"PlacesType"}},tooltipTitle:{defaultValue:null,description:"tooltip header",name:"tooltipTitle",required:!0,type:{name:"ReactNode"}},tooltipDescription:{defaultValue:null,description:"tooltip body",name:"tooltipDescription",required:!0,type:{name:"ReactNode"}},offset:{defaultValue:null,description:"Space between the tooltip element and anchor element (arrow not included in calculation)",name:"offset",required:!0,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/info-badge/InfoBadge.tsx#InfoBadge"]={docgenInfo:InfoBadge.__docgenInfo,name:"InfoBadge",path:"components/info-badge/InfoBadge.tsx#InfoBadge"})}catch(__react_docgen_typescript_loader_error){}const InfoBadge_stories={title:"Components/InfoBadge",component:InfoBadge},Default={args:{offset:10,label:"Label",place:"bottom",tooltipTitle:"Title",tooltipDescription:"Description"}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    offset: 10,\n    label: "Label",\n    place: "bottom",\n    tooltipTitle: "Title",\n    tooltipDescription: "Description"\n  }\n}',...Default.parameters?.docs?.source}}};const __namedExportsOrder=["Default"]},"./components/badge/Badge.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{E:()=>Badge});var react=__webpack_require__("../../node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("../../node_modules/styled-components/dist/styled-components.browser.esm.js"),themes=__webpack_require__("./themes/index.ts"),utils=__webpack_require__("./utils/index.ts"),components_text=__webpack_require__("./components/text/index.tsx");const hoveredCss=styled_components_browser_esm.AH`
  cursor: pointer;
  border-color: ${props=>props.backgroundColor?props.backgroundColor:props.theme.badge.backgroundColor};
`,highCss=styled_components_browser_esm.AH`
  cursor: default;
  padding: 3px 10px;
  border-radius: 6px;

  p {
    font-size: 13px;
    font-weight: 400;
  }
`,noBorderCss=styled_components_browser_esm.AH`
  border: none;
  border-radius: 6px;
`,StyledBadge=styled_components_browser_esm.Ay.div`
  display: ${props=>props.label||"0"!==props.label?"flex":"none"};
  align-items: center;
  justify-content: center;
  border: ${props=>props.theme.badge.border};

  border-radius: ${props=>props.borderRadius};
  width: fit-content;
  padding: ${props=>props.theme.badge.padding};

  height: ${props=>props.height};

  line-height: ${props=>props.lineHeight};

  overflow: ${props=>props.theme.badge.overflow};
  flex-shrink: 0;

  border: ${props=>props.border};

  ${props=>"high"===props.type&&noBorderCss}
  &:hover {
    ${props=>!props.noHover&&hoveredCss};
  }

  ${props=>!props.noHover&&props.isHovered&&hoveredCss};

  @media ${utils.n5} {
    ${({isVersionBadge})=>isVersionBadge&&"width: auto;"}
  }
`;StyledBadge.defaultProps={theme:themes.C6};const StyledInner=styled_components_browser_esm.Ay.div`
  background-color: ${props=>props.backgroundColor?props.backgroundColor:props.theme.badge.backgroundColor};

  border-radius: ${props=>props.borderRadius};

  max-width: ${props=>props.maxWidth};

  padding: ${props=>props.padding};
  text-align: center;
  user-select: none;

  line-height: ${props=>props.compact?"0.8":"1.5"};
  display: flex;
  align-items: center;
  justify-content: center;

  ${props=>"high"===props.type&&highCss}
`;StyledInner.defaultProps={theme:themes.C6};const StyledText=(0,styled_components_browser_esm.Ay)(components_text.E)`
  color: ${props=>props.color?props.color:props.theme.badge.color} !important;
  border-radius: ${props=>props.borderRadius};
`;StyledText.defaultProps={theme:themes.C6};const StyledBadgeTheme=(0,styled_components_browser_esm.Ay)(StyledBadge)((({$currentColorScheme,isVersionBadge,backgroundColor,color,theme,isPaidBadge,isMutedBadge,noHover})=>$currentColorScheme&&!isVersionBadge&&styled_components_browser_esm.AH`
    ${StyledText} {
      color: ${color||isPaidBadge?theme?.badge.color:$currentColorScheme?.text?.accent} !important;
    }

    ${StyledInner} {
      background-color: ${isMutedBadge?theme?.badge.disableBackgroundColor:backgroundColor||$currentColorScheme?.main?.accent};

      &:hover {
        ${!noHover&&styled_components_browser_esm.AH`
          background-color: ${isMutedBadge?theme?.badge.disableBackgroundColor:backgroundColor||$currentColorScheme?.main?.accent};
        `}
      }
    }

    &:hover {
      ${!noHover&&styled_components_browser_esm.AH`
        border-color: ${isMutedBadge?theme?.badge.disableBackgroundColor:backgroundColor||$currentColorScheme?.main?.accent};
      `}
    }
  `));var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const BadgeTheme=(0,react.forwardRef)(((props,ref)=>{const defaultTheme=(0,react.useContext)(styled_components_browser_esm.Dx),currentColorScheme=defaultTheme?.currentColorScheme;return(0,jsx_runtime.jsx)(StyledBadgeTheme,{...props,ref,$currentColorScheme:currentColorScheme||{}})}));BadgeTheme.displayName="BadgeTheme";try{BadgeTheme.displayName="BadgeTheme",BadgeTheme.__docgenInfo={description:"",displayName:"BadgeTheme",props:{label:{defaultValue:null,description:"Label",name:"label",required:!1,type:{name:"string | number"}},backgroundColor:{defaultValue:null,description:"CSS background-color",name:"backgroundColor",required:!1,type:{name:"string"}},color:{defaultValue:null,description:"CSS color",name:"color",required:!1,type:{name:"string"}},fontSize:{defaultValue:null,description:"CSS font-size",name:"fontSize",required:!1,type:{name:"string"}},fontWeight:{defaultValue:null,description:"CSS font-weight",name:"fontWeight",required:!1,type:{name:"string | number"}},borderRadius:{defaultValue:null,description:"CSS border-radius",name:"borderRadius",required:!1,type:{name:"string"}},padding:{defaultValue:null,description:"CSS padding",name:"padding",required:!1,type:{name:"string"}},maxWidth:{defaultValue:null,description:"CSS max-width",name:"maxWidth",required:!1,type:{name:"string"}},lineHeight:{defaultValue:null,description:"CSS line-height",name:"lineHeight",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"onClick event",name:"onClick",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void)"}},className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"Accepts id",name:"id",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties"}},isHovered:{defaultValue:null,description:"Sets hovered state and link effects",name:"isHovered",required:!1,type:{name:"boolean"}},noHover:{defaultValue:null,description:"Disables hover styles",name:"noHover",required:!1,type:{name:"boolean"}},type:{defaultValue:null,description:"Type Badge",name:"type",required:!1,type:{name:"enum",value:[{value:'"high"'}]}},compact:{defaultValue:null,description:"Compact badge",name:"compact",required:!1,type:{name:"boolean"}},border:{defaultValue:null,description:"Border badge",name:"border",required:!1,type:{name:"string"}},height:{defaultValue:null,description:"",name:"height",required:!1,type:{name:"string"}},isVersionBadge:{defaultValue:null,description:"",name:"isVersionBadge",required:!1,type:{name:"boolean"}},isMutedBadge:{defaultValue:null,description:"",name:"isMutedBadge",required:!1,type:{name:"boolean"}},isPaidBadge:{defaultValue:null,description:"",name:"isPaidBadge",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/badge/Badge.theme.tsx#BadgeTheme"]={docgenInfo:BadgeTheme.__docgenInfo,name:"BadgeTheme",path:"components/badge/Badge.theme.tsx#BadgeTheme"})}catch(__react_docgen_typescript_loader_error){}try{BadgeTheme.displayName="BadgeTheme",ForwardRefExoticComponent.__docgenInfo={description:"",displayName:"BadgeTheme",props:{label:{defaultValue:null,description:"Label",name:"label",required:!1,type:{name:"string | number | undefined"}},backgroundColor:{defaultValue:null,description:"CSS background-color",name:"backgroundColor",required:!1,type:{name:"string | undefined"}},color:{defaultValue:null,description:"CSS color",name:"color",required:!1,type:{name:"string | undefined"}},fontSize:{defaultValue:null,description:"CSS font-size",name:"fontSize",required:!1,type:{name:"string | undefined"}},fontWeight:{defaultValue:null,description:"CSS font-weight",name:"fontWeight",required:!1,type:{name:"string | number | undefined"}},borderRadius:{defaultValue:null,description:"CSS border-radius",name:"borderRadius",required:!1,type:{name:"string | undefined"}},padding:{defaultValue:null,description:"CSS padding",name:"padding",required:!1,type:{name:"string | undefined"}},maxWidth:{defaultValue:null,description:"CSS max-width",name:"maxWidth",required:!1,type:{name:"string | undefined"}},lineHeight:{defaultValue:null,description:"CSS line-height",name:"lineHeight",required:!1,type:{name:"string | undefined"}},onClick:{defaultValue:null,description:"onClick event",name:"onClick",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void) | undefined"}},className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string | undefined"}},id:{defaultValue:null,description:"Accepts id",name:"id",required:!1,type:{name:"string | undefined"}},style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties | undefined"}},isHovered:{defaultValue:null,description:"Sets hovered state and link effects",name:"isHovered",required:!1,type:{name:"boolean | undefined"}},noHover:{defaultValue:null,description:"Disables hover styles",name:"noHover",required:!1,type:{name:"boolean | undefined"}},type:{defaultValue:null,description:"Type Badge",name:"type",required:!1,type:{name:'"high" | undefined'}},compact:{defaultValue:null,description:"Compact badge",name:"compact",required:!1,type:{name:"boolean | undefined"}},border:{defaultValue:null,description:"Border badge",name:"border",required:!1,type:{name:"string | undefined"}},height:{defaultValue:null,description:"",name:"height",required:!1,type:{name:"string | undefined"}},isVersionBadge:{defaultValue:null,description:"",name:"isVersionBadge",required:!1,type:{name:"boolean | undefined"}},isMutedBadge:{defaultValue:null,description:"",name:"isMutedBadge",required:!1,type:{name:"boolean | undefined"}},isPaidBadge:{defaultValue:null,description:"",name:"isPaidBadge",required:!1,type:{name:"boolean | undefined"}},ref:{defaultValue:null,description:"Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}",name:"ref",required:!1,type:{name:"LegacyRef<HTMLDivElement> | undefined"}},key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"Key | null | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/badge/Badge.theme.tsx#BadgeTheme"]={docgenInfo:BadgeTheme.__docgenInfo,name:"BadgeTheme",path:"components/badge/Badge.theme.tsx#BadgeTheme"})}catch(__react_docgen_typescript_loader_error){}const Badge=props=>{const{onClick,fontSize,color,fontWeight,backgroundColor,borderRadius,padding,maxWidth,height,type,compact,isHovered,border,label}=props,onClickAction=react.useCallback((e=>{onClick&&(e.preventDefault(),onClick(e))}),[onClick]);return(0,jsx_runtime.jsx)(BadgeTheme,{...props,isHovered,onClick:onClickAction,border,height,children:(0,jsx_runtime.jsx)(StyledInner,{backgroundColor,borderRadius,padding,type,compact,maxWidth,"data-testid":"badge",children:(0,jsx_runtime.jsx)(StyledText,{textAlign:"center",fontWeight,borderRadius,color,fontSize,children:label})})})};Badge.displayName="Badge",Badge.defaultProps={label:0,fontSize:"11px",fontWeight:800,borderRadius:"11px",padding:"0px 5px",maxWidth:"50px",isHovered:!1,noHover:!1};try{Badge.displayName="Badge",Badge.__docgenInfo={description:"",displayName:"Badge",props:{label:{defaultValue:{value:"0"},description:"Label",name:"label",required:!1,type:{name:"string | number"}},backgroundColor:{defaultValue:null,description:"CSS background-color",name:"backgroundColor",required:!1,type:{name:"string"}},color:{defaultValue:null,description:"CSS color",name:"color",required:!1,type:{name:"string"}},fontSize:{defaultValue:{value:"11px"},description:"CSS font-size",name:"fontSize",required:!1,type:{name:"string"}},fontWeight:{defaultValue:{value:"800"},description:"CSS font-weight",name:"fontWeight",required:!1,type:{name:"string | number"}},borderRadius:{defaultValue:{value:"11px"},description:"CSS border-radius",name:"borderRadius",required:!1,type:{name:"string"}},padding:{defaultValue:{value:"0px 5px"},description:"CSS padding",name:"padding",required:!1,type:{name:"string"}},maxWidth:{defaultValue:{value:"50px"},description:"CSS max-width",name:"maxWidth",required:!1,type:{name:"string"}},lineHeight:{defaultValue:null,description:"CSS line-height",name:"lineHeight",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"onClick event",name:"onClick",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void)"}},className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"Accepts id",name:"id",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties"}},isHovered:{defaultValue:{value:"false"},description:"Sets hovered state and link effects",name:"isHovered",required:!1,type:{name:"boolean"}},noHover:{defaultValue:{value:"false"},description:"Disables hover styles",name:"noHover",required:!1,type:{name:"boolean"}},type:{defaultValue:null,description:"Type Badge",name:"type",required:!1,type:{name:"enum",value:[{value:'"high"'}]}},compact:{defaultValue:null,description:"Compact badge",name:"compact",required:!1,type:{name:"boolean"}},border:{defaultValue:null,description:"Border badge",name:"border",required:!1,type:{name:"string"}},height:{defaultValue:null,description:"",name:"height",required:!1,type:{name:"string"}},isVersionBadge:{defaultValue:null,description:"",name:"isVersionBadge",required:!1,type:{name:"boolean"}},isMutedBadge:{defaultValue:null,description:"",name:"isMutedBadge",required:!1,type:{name:"boolean"}},isPaidBadge:{defaultValue:null,description:"",name:"isPaidBadge",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/badge/Badge.tsx#Badge"]={docgenInfo:Badge.__docgenInfo,name:"Badge",path:"components/badge/Badge.tsx#Badge"})}catch(__react_docgen_typescript_loader_error){}try{Badge.displayName="Badge",__function.__docgenInfo={description:"",displayName:"Badge",props:{label:{defaultValue:{value:0},description:"Label",name:"label",required:!1,type:{name:"string | number | undefined"}},backgroundColor:{defaultValue:null,description:"CSS background-color",name:"backgroundColor",required:!1,type:{name:"string | undefined"}},color:{defaultValue:null,description:"CSS color",name:"color",required:!1,type:{name:"string | undefined"}},fontSize:{defaultValue:{value:"11px"},description:"CSS font-size",name:"fontSize",required:!1,type:{name:"string | undefined"}},fontWeight:{defaultValue:{value:800},description:"CSS font-weight",name:"fontWeight",required:!1,type:{name:"string | number | undefined"}},borderRadius:{defaultValue:{value:"11px"},description:"CSS border-radius",name:"borderRadius",required:!1,type:{name:"string | undefined"}},padding:{defaultValue:{value:"0px 5px"},description:"CSS padding",name:"padding",required:!1,type:{name:"string | undefined"}},maxWidth:{defaultValue:{value:"50px"},description:"CSS max-width",name:"maxWidth",required:!1,type:{name:"string | undefined"}},lineHeight:{defaultValue:null,description:"CSS line-height",name:"lineHeight",required:!1,type:{name:"string | undefined"}},onClick:{defaultValue:null,description:"onClick event",name:"onClick",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void) | undefined"}},className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string | undefined"}},id:{defaultValue:null,description:"Accepts id",name:"id",required:!1,type:{name:"string | undefined"}},style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties | undefined"}},isHovered:{defaultValue:{value:!1},description:"Sets hovered state and link effects",name:"isHovered",required:!1,type:{name:"boolean | undefined"}},noHover:{defaultValue:{value:!1},description:"Disables hover styles",name:"noHover",required:!1,type:{name:"boolean | undefined"}},type:{defaultValue:null,description:"Type Badge",name:"type",required:!1,type:{name:'"high" | undefined'}},compact:{defaultValue:null,description:"Compact badge",name:"compact",required:!1,type:{name:"boolean | undefined"}},border:{defaultValue:null,description:"Border badge",name:"border",required:!1,type:{name:"string | undefined"}},height:{defaultValue:null,description:"",name:"height",required:!1,type:{name:"string | undefined"}},isVersionBadge:{defaultValue:null,description:"",name:"isVersionBadge",required:!1,type:{name:"boolean | undefined"}},isMutedBadge:{defaultValue:null,description:"",name:"isMutedBadge",required:!1,type:{name:"boolean | undefined"}},isPaidBadge:{defaultValue:null,description:"",name:"isPaidBadge",required:!1,type:{name:"boolean | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/badge/Badge.tsx#Badge"]={docgenInfo:Badge.__docgenInfo,name:"Badge",path:"components/badge/Badge.tsx#Badge"})}catch(__react_docgen_typescript_loader_error){}},"./components/badge/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{E:()=>_Badge__WEBPACK_IMPORTED_MODULE_0__.E});var _Badge__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./components/badge/Badge.tsx");try{Badge.displayName="Badge",Badge.__docgenInfo={description:"",displayName:"Badge",props:{label:{defaultValue:{value:"0"},description:"Label",name:"label",required:!1,type:{name:"string | number"}},backgroundColor:{defaultValue:null,description:"CSS background-color",name:"backgroundColor",required:!1,type:{name:"string"}},color:{defaultValue:null,description:"CSS color",name:"color",required:!1,type:{name:"string"}},fontSize:{defaultValue:{value:"11px"},description:"CSS font-size",name:"fontSize",required:!1,type:{name:"string"}},fontWeight:{defaultValue:{value:"800"},description:"CSS font-weight",name:"fontWeight",required:!1,type:{name:"string | number"}},borderRadius:{defaultValue:{value:"11px"},description:"CSS border-radius",name:"borderRadius",required:!1,type:{name:"string"}},padding:{defaultValue:{value:"0px 5px"},description:"CSS padding",name:"padding",required:!1,type:{name:"string"}},maxWidth:{defaultValue:{value:"50px"},description:"CSS max-width",name:"maxWidth",required:!1,type:{name:"string"}},lineHeight:{defaultValue:null,description:"CSS line-height",name:"lineHeight",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"onClick event",name:"onClick",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void)"}},className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"Accepts id",name:"id",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties"}},isHovered:{defaultValue:{value:"false"},description:"Sets hovered state and link effects",name:"isHovered",required:!1,type:{name:"boolean"}},noHover:{defaultValue:{value:"false"},description:"Disables hover styles",name:"noHover",required:!1,type:{name:"boolean"}},type:{defaultValue:null,description:"Type Badge",name:"type",required:!1,type:{name:"enum",value:[{value:'"high"'}]}},compact:{defaultValue:null,description:"Compact badge",name:"compact",required:!1,type:{name:"boolean"}},border:{defaultValue:null,description:"Border badge",name:"border",required:!1,type:{name:"string"}},height:{defaultValue:null,description:"",name:"height",required:!1,type:{name:"string"}},isVersionBadge:{defaultValue:null,description:"",name:"isVersionBadge",required:!1,type:{name:"boolean"}},isMutedBadge:{defaultValue:null,description:"",name:"isMutedBadge",required:!1,type:{name:"boolean"}},isPaidBadge:{defaultValue:null,description:"",name:"isPaidBadge",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/badge/index.tsx#Badge"]={docgenInfo:Badge.__docgenInfo,name:"Badge",path:"components/badge/index.tsx#Badge"})}catch(__react_docgen_typescript_loader_error){}try{Badge.displayName="Badge",__function.__docgenInfo={description:"",displayName:"Badge",props:{label:{defaultValue:{value:0},description:"Label",name:"label",required:!1,type:{name:"string | number | undefined"}},backgroundColor:{defaultValue:null,description:"CSS background-color",name:"backgroundColor",required:!1,type:{name:"string | undefined"}},color:{defaultValue:null,description:"CSS color",name:"color",required:!1,type:{name:"string | undefined"}},fontSize:{defaultValue:{value:"11px"},description:"CSS font-size",name:"fontSize",required:!1,type:{name:"string | undefined"}},fontWeight:{defaultValue:{value:800},description:"CSS font-weight",name:"fontWeight",required:!1,type:{name:"string | number | undefined"}},borderRadius:{defaultValue:{value:"11px"},description:"CSS border-radius",name:"borderRadius",required:!1,type:{name:"string | undefined"}},padding:{defaultValue:{value:"0px 5px"},description:"CSS padding",name:"padding",required:!1,type:{name:"string | undefined"}},maxWidth:{defaultValue:{value:"50px"},description:"CSS max-width",name:"maxWidth",required:!1,type:{name:"string | undefined"}},lineHeight:{defaultValue:null,description:"CSS line-height",name:"lineHeight",required:!1,type:{name:"string | undefined"}},onClick:{defaultValue:null,description:"onClick event",name:"onClick",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void) | undefined"}},className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string | undefined"}},id:{defaultValue:null,description:"Accepts id",name:"id",required:!1,type:{name:"string | undefined"}},style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties | undefined"}},isHovered:{defaultValue:{value:!1},description:"Sets hovered state and link effects",name:"isHovered",required:!1,type:{name:"boolean | undefined"}},noHover:{defaultValue:{value:!1},description:"Disables hover styles",name:"noHover",required:!1,type:{name:"boolean | undefined"}},type:{defaultValue:null,description:"Type Badge",name:"type",required:!1,type:{name:'"high" | undefined'}},compact:{defaultValue:null,description:"Compact badge",name:"compact",required:!1,type:{name:"boolean | undefined"}},border:{defaultValue:null,description:"Border badge",name:"border",required:!1,type:{name:"string | undefined"}},height:{defaultValue:null,description:"",name:"height",required:!1,type:{name:"string | undefined"}},isVersionBadge:{defaultValue:null,description:"",name:"isVersionBadge",required:!1,type:{name:"boolean | undefined"}},isMutedBadge:{defaultValue:null,description:"",name:"isMutedBadge",required:!1,type:{name:"boolean | undefined"}},isPaidBadge:{defaultValue:null,description:"",name:"isPaidBadge",required:!1,type:{name:"boolean | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/badge/index.tsx#Badge"]={docgenInfo:Badge.__docgenInfo,name:"Badge",path:"components/badge/index.tsx#Badge"})}catch(__react_docgen_typescript_loader_error){}},"./components/icon-button/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{K:()=>IconButton_IconButton});var react=__webpack_require__("../../node_modules/react/index.js"),react_svg_esm=__webpack_require__("../../node_modules/react-svg/dist/react-svg.esm.js"),styled_components_browser_esm=__webpack_require__("../../node_modules/styled-components/dist/styled-components.browser.esm.js"),themes=__webpack_require__("./themes/index.ts");const StyledOuter=styled_components_browser_esm.Ay.div`
  width: ${props=>props.size?`${props.size}px`:"20px"};
  height: ${props=>props.size?`${props.size}px`:"20px"};
  cursor: ${props=>props.isDisabled||!props.isClickable?"default":"pointer"};
  line-height: 0;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);

  ${props=>props.isStroke&&styled_components_browser_esm.AH`
      svg {
        &:not(:root) {
          width: 100%;
          height: 100%;
        }
        path {
          stroke: ${props.color||props.theme.iconButton.color};
        }
      }
      &:hover {
        svg {
          path {
            stroke: ${props.isDisabled?props.theme.iconButton.color:props.color||props.theme.iconButton.hoverColor};
          }
        }
      }
    `}

  ${props=>props.isFill&&!props.isStroke&&styled_components_browser_esm.AH`
      svg {
        &:not(:root) {
          width: 100%;
          height: 100%;
        }
        path {
          fill: ${props.color||props.theme.iconButton.color};
        }
      }
      &:hover {
        svg {
          path {
            fill: ${props.isDisabled?props.theme.iconButton.color:props.color||props.theme.iconButton.hoverColor};
          }
        }
      }
    `}
`;StyledOuter.defaultProps={theme:themes.C6};const IconButton_styled=StyledOuter;var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const IconButton_IconButton=({iconName,iconHoverName,iconClickName,iconNode,color,hoverColor,clickColor,isDisabled=!1,isFill=!0,isClickable=!1,className,size=25,title,id,style,dataTip="",isStroke=!1,onMouseEnter,onMouseLeave,onMouseDown,onMouseUp,onClick,...rest})=>{const[currentIconName,setCurrentIconName]=react.useState(iconName),[currentIconColor,setCurrentIconColor]=react.useState(iconName);return react.useEffect((()=>{setCurrentIconName(iconName),setCurrentIconColor(color||"")}),[iconName,color]),(0,jsx_runtime.jsx)(IconButton_styled,{className,size,title,isDisabled,onMouseEnter:e=>{isDisabled||("ontouchstart"in document.documentElement?(setCurrentIconName(iconName),setCurrentIconColor(hoverColor||color)):(setCurrentIconName(iconHoverName||iconName),setCurrentIconColor(hoverColor||color)),onMouseEnter?.(e))},onMouseLeave:e=>{isDisabled||(setCurrentIconName(iconName),setCurrentIconColor(color),onMouseLeave?.(e))},onMouseDown:e=>{isDisabled||("ontouchstart"in document.documentElement?(setCurrentIconName(iconName),setCurrentIconColor(clickColor||color)):(setCurrentIconName(iconClickName||iconName),setCurrentIconColor(clickColor||color)),onMouseDown?.(e))},onMouseUp:e=>{if(!isDisabled)switch(e.nativeEvent.button){case 1:"ontouchstart"in document.documentElement?(setCurrentIconName(iconName),setCurrentIconColor(hoverColor||color)):(setCurrentIconName(iconHoverName||iconName),setCurrentIconColor(hoverColor||color)),onMouseUp?.(e);break;case 2:onMouseUp?.(e)}},onClick:e=>{isDisabled||onClick?.(e)},isClickable:"function"==typeof onClick||isClickable,"data-tip":dataTip,"data-event":"click focus","data-for":id,id,style,color:currentIconColor,isFill,iconName,"data-testid":"icon-button",isStroke,...rest,children:iconNode||(0,jsx_runtime.jsx)(react_svg_esm.k,{className:"icon-button_svg not-selectable",src:currentIconName||""})})};IconButton_IconButton.displayName="IconButton";try{IconButton_IconButton.displayName="IconButton",IconButton_IconButton.__docgenInfo={description:"",displayName:"IconButton",props:{className:{defaultValue:null,description:"Sets component class",name:"className",required:!1,type:{name:"string"}},color:{defaultValue:null,description:"Icon color",name:"color",required:!1,type:{name:"string"}},hoverColor:{defaultValue:null,description:"Icon color on hover action",name:"hoverColor",required:!1,type:{name:"string"}},clickColor:{defaultValue:null,description:"Icon color on click action",name:"clickColor",required:!1,type:{name:"string"}},size:{defaultValue:{value:"25"},description:"Button height and width value",name:"size",required:!1,type:{name:"number | IconSizeType"}},isFill:{defaultValue:{value:"true"},description:"Determines if icon fill is needed",name:"isFill",required:!1,type:{name:"boolean"}},isStroke:{defaultValue:{value:"false"},description:"Determines if icon stroke is needed",name:"isStroke",required:!1,type:{name:"boolean"}},isDisabled:{defaultValue:{value:"false"},description:"Sets the button to present a disabled state",name:"isDisabled",required:!1,type:{name:"boolean"}},isClickable:{defaultValue:{value:"false"},description:"Sets cursor value",name:"isClickable",required:!1,type:{name:"boolean"}},iconNode:{defaultValue:null,description:"Icon node",name:"iconNode",required:!1,type:{name:"ReactNode"}},iconName:{defaultValue:null,description:"Icon name",name:"iconName",required:!1,type:{name:"string"}},iconHoverName:{defaultValue:null,description:"Icon name on hover action",name:"iconHoverName",required:!1,type:{name:"string"}},iconClickName:{defaultValue:null,description:"Icon name on click action",name:"iconClickName",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"Sets a button callback function triggered when the button is clicked",name:"onClick",required:!1,type:{name:"((e: MouseEvent<HTMLDivElement, MouseEvent>) => void)"}},onMouseEnter:{defaultValue:null,description:"Sets a button callback function triggered when the cursor enters the area",name:"onMouseEnter",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void)"}},onMouseDown:{defaultValue:null,description:"Sets a button callback function triggered when the cursor moves down",name:"onMouseDown",required:!1,type:{name:"((e: MouseEvent<HTMLDivElement, MouseEvent>) => void)"}},onMouseUp:{defaultValue:null,description:"Sets a button callback function triggered when the cursor moves up",name:"onMouseUp",required:!1,type:{name:"((e: MouseEvent<HTMLDivElement, MouseEvent>) => void)"}},onMouseLeave:{defaultValue:null,description:"Sets a button callback function triggered when the cursor leaves the icon",name:"onMouseLeave",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void)"}},id:{defaultValue:null,description:"Sets component id",name:"id",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties"}},dataTip:{defaultValue:{value:""},description:"The data-* attribute is used to store custom data private to the page or application. Required to display a tip over the hovered element",name:"dataTip",required:!1,type:{name:"string"}},title:{defaultValue:null,description:"Data when user hover on icon",name:"title",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/icon-button/IconButton.tsx#IconButton"]={docgenInfo:IconButton_IconButton.__docgenInfo,name:"IconButton",path:"components/icon-button/IconButton.tsx#IconButton"})}catch(__react_docgen_typescript_loader_error){}try{IconButton_IconButton.displayName="IconButton",__function.__docgenInfo={description:"",displayName:"IconButton",props:{className:{defaultValue:null,description:"Sets component class",name:"className",required:!1,type:{name:"string | undefined"}},color:{defaultValue:null,description:"Icon color",name:"color",required:!1,type:{name:"string | undefined"}},hoverColor:{defaultValue:null,description:"Icon color on hover action",name:"hoverColor",required:!1,type:{name:"string | undefined"}},clickColor:{defaultValue:null,description:"Icon color on click action",name:"clickColor",required:!1,type:{name:"string | undefined"}},size:{defaultValue:{value:25},description:"Button height and width value",name:"size",required:!1,type:{name:"number | IconSizeType | undefined"}},isFill:{defaultValue:{value:!0},description:"Determines if icon fill is needed",name:"isFill",required:!1,type:{name:"boolean | undefined"}},isStroke:{defaultValue:{value:!1},description:"Determines if icon stroke is needed",name:"isStroke",required:!1,type:{name:"boolean | undefined"}},isDisabled:{defaultValue:{value:!1},description:"Sets the button to present a disabled state",name:"isDisabled",required:!1,type:{name:"boolean | undefined"}},isClickable:{defaultValue:{value:!1},description:"Sets cursor value",name:"isClickable",required:!1,type:{name:"boolean | undefined"}},iconNode:{defaultValue:null,description:"Icon node",name:"iconNode",required:!1,type:{name:"ReactNode"}},iconName:{defaultValue:null,description:"Icon name",name:"iconName",required:!1,type:{name:"string | undefined"}},iconHoverName:{defaultValue:null,description:"Icon name on hover action",name:"iconHoverName",required:!1,type:{name:"string | undefined"}},iconClickName:{defaultValue:null,description:"Icon name on click action",name:"iconClickName",required:!1,type:{name:"string | undefined"}},onClick:{defaultValue:null,description:"Sets a button callback function triggered when the button is clicked",name:"onClick",required:!1,type:{name:"((e: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined"}},onMouseEnter:{defaultValue:null,description:"Sets a button callback function triggered when the cursor enters the area",name:"onMouseEnter",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void) | undefined"}},onMouseDown:{defaultValue:null,description:"Sets a button callback function triggered when the cursor moves down",name:"onMouseDown",required:!1,type:{name:"((e: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined"}},onMouseUp:{defaultValue:null,description:"Sets a button callback function triggered when the cursor moves up",name:"onMouseUp",required:!1,type:{name:"((e: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined"}},onMouseLeave:{defaultValue:null,description:"Sets a button callback function triggered when the cursor leaves the icon",name:"onMouseLeave",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void) | undefined"}},id:{defaultValue:null,description:"Sets component id",name:"id",required:!1,type:{name:"string | undefined"}},style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties | undefined"}},dataTip:{defaultValue:{value:""},description:"The data-* attribute is used to store custom data private to the page or application. Required to display a tip over the hovered element",name:"dataTip",required:!1,type:{name:"string | undefined"}},title:{defaultValue:null,description:"Data when user hover on icon",name:"title",required:!1,type:{name:"string | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/icon-button/IconButton.tsx#IconButton"]={docgenInfo:IconButton_IconButton.__docgenInfo,name:"IconButton",path:"components/icon-button/IconButton.tsx#IconButton"})}catch(__react_docgen_typescript_loader_error){}try{IconButton.displayName="IconButton",IconButton.__docgenInfo={description:"",displayName:"IconButton",props:{className:{defaultValue:null,description:"Sets component class",name:"className",required:!1,type:{name:"string"}},color:{defaultValue:null,description:"Icon color",name:"color",required:!1,type:{name:"string"}},hoverColor:{defaultValue:null,description:"Icon color on hover action",name:"hoverColor",required:!1,type:{name:"string"}},clickColor:{defaultValue:null,description:"Icon color on click action",name:"clickColor",required:!1,type:{name:"string"}},size:{defaultValue:{value:"25"},description:"Button height and width value",name:"size",required:!1,type:{name:"number | IconSizeType"}},isFill:{defaultValue:{value:"true"},description:"Determines if icon fill is needed",name:"isFill",required:!1,type:{name:"boolean"}},isStroke:{defaultValue:{value:"false"},description:"Determines if icon stroke is needed",name:"isStroke",required:!1,type:{name:"boolean"}},isDisabled:{defaultValue:{value:"false"},description:"Sets the button to present a disabled state",name:"isDisabled",required:!1,type:{name:"boolean"}},isClickable:{defaultValue:{value:"false"},description:"Sets cursor value",name:"isClickable",required:!1,type:{name:"boolean"}},iconNode:{defaultValue:null,description:"Icon node",name:"iconNode",required:!1,type:{name:"ReactNode"}},iconName:{defaultValue:null,description:"Icon name",name:"iconName",required:!1,type:{name:"string"}},iconHoverName:{defaultValue:null,description:"Icon name on hover action",name:"iconHoverName",required:!1,type:{name:"string"}},iconClickName:{defaultValue:null,description:"Icon name on click action",name:"iconClickName",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"Sets a button callback function triggered when the button is clicked",name:"onClick",required:!1,type:{name:"((e: MouseEvent<HTMLDivElement, MouseEvent>) => void)"}},onMouseEnter:{defaultValue:null,description:"Sets a button callback function triggered when the cursor enters the area",name:"onMouseEnter",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void)"}},onMouseDown:{defaultValue:null,description:"Sets a button callback function triggered when the cursor moves down",name:"onMouseDown",required:!1,type:{name:"((e: MouseEvent<HTMLDivElement, MouseEvent>) => void)"}},onMouseUp:{defaultValue:null,description:"Sets a button callback function triggered when the cursor moves up",name:"onMouseUp",required:!1,type:{name:"((e: MouseEvent<HTMLDivElement, MouseEvent>) => void)"}},onMouseLeave:{defaultValue:null,description:"Sets a button callback function triggered when the cursor leaves the icon",name:"onMouseLeave",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void)"}},id:{defaultValue:null,description:"Sets component id",name:"id",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties"}},dataTip:{defaultValue:{value:""},description:"The data-* attribute is used to store custom data private to the page or application. Required to display a tip over the hovered element",name:"dataTip",required:!1,type:{name:"string"}},title:{defaultValue:null,description:"Data when user hover on icon",name:"title",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/icon-button/index.tsx#IconButton"]={docgenInfo:IconButton.__docgenInfo,name:"IconButton",path:"components/icon-button/index.tsx#IconButton"})}catch(__react_docgen_typescript_loader_error){}try{IconButton.displayName="IconButton",__function.__docgenInfo={description:"",displayName:"IconButton",props:{className:{defaultValue:null,description:"Sets component class",name:"className",required:!1,type:{name:"string | undefined"}},color:{defaultValue:null,description:"Icon color",name:"color",required:!1,type:{name:"string | undefined"}},hoverColor:{defaultValue:null,description:"Icon color on hover action",name:"hoverColor",required:!1,type:{name:"string | undefined"}},clickColor:{defaultValue:null,description:"Icon color on click action",name:"clickColor",required:!1,type:{name:"string | undefined"}},size:{defaultValue:{value:25},description:"Button height and width value",name:"size",required:!1,type:{name:"number | IconSizeType | undefined"}},isFill:{defaultValue:{value:!0},description:"Determines if icon fill is needed",name:"isFill",required:!1,type:{name:"boolean | undefined"}},isStroke:{defaultValue:{value:!1},description:"Determines if icon stroke is needed",name:"isStroke",required:!1,type:{name:"boolean | undefined"}},isDisabled:{defaultValue:{value:!1},description:"Sets the button to present a disabled state",name:"isDisabled",required:!1,type:{name:"boolean | undefined"}},isClickable:{defaultValue:{value:!1},description:"Sets cursor value",name:"isClickable",required:!1,type:{name:"boolean | undefined"}},iconNode:{defaultValue:null,description:"Icon node",name:"iconNode",required:!1,type:{name:"ReactNode"}},iconName:{defaultValue:null,description:"Icon name",name:"iconName",required:!1,type:{name:"string | undefined"}},iconHoverName:{defaultValue:null,description:"Icon name on hover action",name:"iconHoverName",required:!1,type:{name:"string | undefined"}},iconClickName:{defaultValue:null,description:"Icon name on click action",name:"iconClickName",required:!1,type:{name:"string | undefined"}},onClick:{defaultValue:null,description:"Sets a button callback function triggered when the button is clicked",name:"onClick",required:!1,type:{name:"((e: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined"}},onMouseEnter:{defaultValue:null,description:"Sets a button callback function triggered when the cursor enters the area",name:"onMouseEnter",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void) | undefined"}},onMouseDown:{defaultValue:null,description:"Sets a button callback function triggered when the cursor moves down",name:"onMouseDown",required:!1,type:{name:"((e: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined"}},onMouseUp:{defaultValue:null,description:"Sets a button callback function triggered when the cursor moves up",name:"onMouseUp",required:!1,type:{name:"((e: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined"}},onMouseLeave:{defaultValue:null,description:"Sets a button callback function triggered when the cursor leaves the icon",name:"onMouseLeave",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void) | undefined"}},id:{defaultValue:null,description:"Sets component id",name:"id",required:!1,type:{name:"string | undefined"}},style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties | undefined"}},dataTip:{defaultValue:{value:""},description:"The data-* attribute is used to store custom data private to the page or application. Required to display a tip over the hovered element",name:"dataTip",required:!1,type:{name:"string | undefined"}},title:{defaultValue:null,description:"Data when user hover on icon",name:"title",required:!1,type:{name:"string | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/icon-button/index.tsx#IconButton"]={docgenInfo:IconButton.__docgenInfo,name:"IconButton",path:"components/icon-button/index.tsx#IconButton"})}catch(__react_docgen_typescript_loader_error){}},"./components/portal/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>Portal});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),react_dom__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react-dom/index.js");const Portal=({visible,element,appendTo})=>{const[mounted,setMounted]=react__WEBPACK_IMPORTED_MODULE_0__.useState(visible),domExist=react__WEBPACK_IMPORTED_MODULE_0__.useCallback((()=>!("undefined"==typeof window||!window.document||!window.document.createElement)),[]);return react__WEBPACK_IMPORTED_MODULE_0__.useEffect((()=>{domExist()&&!mounted&&setMounted(!0)}),[domExist,mounted]),element&&mounted?react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal(element,appendTo||document.body):null};Portal.defaultProps={visible:!1,appendTo:null}},"./components/text/Text.styled.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__,s:()=>StyledAutoDirSpan});var styled_components__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/styled-components/dist/styled-components.browser.esm.js"),_themes__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./themes/index.ts"),_utils__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./utils/index.ts");const styleCss=styled_components__WEBPACK_IMPORTED_MODULE_2__.AH`
  font-size: ${props=>props.fontSizeProp&&props.fontSizeProp};
  outline: 0 !important;
  margin: 0;
  font-weight: ${props=>props.fontWeightProp?props.fontWeightProp:props.isBold?700:props.theme.text.fontWeight};

  ${props=>props.isItalic&&styled_components__WEBPACK_IMPORTED_MODULE_2__.AH`
      font-style: italic;
    `}
  ${props=>props.backgroundColor&&styled_components__WEBPACK_IMPORTED_MODULE_2__.AH`
      background-color: ${props.backgroundColor};
    `}
  ${props=>props.isInline?styled_components__WEBPACK_IMPORTED_MODULE_2__.AH`
          display: inline-block;
        `:props.display&&styled_components__WEBPACK_IMPORTED_MODULE_2__.AH`
          display: ${props.display};
        `}
  ${props=>props.lineHeight&&styled_components__WEBPACK_IMPORTED_MODULE_2__.AH`
      line-height: ${props.lineHeight};
    `}
`,StyledText=styled_components__WEBPACK_IMPORTED_MODULE_2__.Ay.p`
  ${styleCss};

  ${_utils__WEBPACK_IMPORTED_MODULE_1__.Pj};

  ${props=>props.noSelect&&_utils__WEBPACK_IMPORTED_MODULE_1__.h0}
`;StyledText.defaultProps={theme:_themes__WEBPACK_IMPORTED_MODULE_0__.C6};const StyledAutoDirSpan=styled_components__WEBPACK_IMPORTED_MODULE_2__.Ay.span`
  display: inherit;
  white-space: inherit;
  overflow: inherit;
  text-overflow: inherit;
  pointer-events: none;
  width: inherit;
  max-width: inherit;
`,__WEBPACK_DEFAULT_EXPORT__=StyledText},"./components/text/Text.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{E:()=>Text,c:()=>TextPure});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_Text_styled__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./components/text/Text.styled.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const TextPure=({title,tag,as,fontSize="13px",fontWeight,color,textAlign="left",onClick,dir,children,...rest})=>{const isAutoDir="auto"===dir,dirProp=isAutoDir?{}:{dir};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_Text_styled__WEBPACK_IMPORTED_MODULE_1__.A,{fontSizeProp:fontSize,fontWeightProp:fontWeight,colorProp:color,textAlign,as:!as&&tag?tag:as,title,"data-testid":"text",onClick,...dirProp,...rest,children:isAutoDir?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_Text_styled__WEBPACK_IMPORTED_MODULE_1__.s,{dir:"auto",children}):children})};TextPure.displayName="TextPure";const Text=react__WEBPACK_IMPORTED_MODULE_0__.memo(TextPure);Text.displayName="Text";try{Text.displayName="Text",Text.__docgenInfo={description:"",displayName:"Text",props:{as:{defaultValue:null,description:"Sets the tag through which the component is rendered",name:"as",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},tag:{defaultValue:null,description:"Accepts the tag id",name:"tag",required:!1,type:{name:"string"}},backgroundColor:{defaultValue:null,description:"Sets background color",name:"backgroundColor",required:!1,type:{name:"string"}},color:{defaultValue:null,description:"Specifies the text color",name:"color",required:!1,type:{name:"string"}},display:{defaultValue:null,description:"Sets the 'display' property",name:"display",required:!1,type:{name:"string"}},fontSize:{defaultValue:{value:"13px"},description:"Sets the font size",name:"fontSize",required:!1,type:{name:"string"}},fontWeight:{defaultValue:null,description:"Sets the font weight",name:"fontWeight",required:!1,type:{name:"string | number"}},isBold:{defaultValue:null,description:"Sets font weight value to bold",name:"isBold",required:!1,type:{name:"boolean"}},isInline:{defaultValue:null,description:"Sets the 'display?: inline-block' property",name:"isInline",required:!1,type:{name:"boolean"}},isItalic:{defaultValue:null,description:"Sets the font style",name:"isItalic",required:!1,type:{name:"boolean"}},lineHeight:{defaultValue:null,description:"Sets the line height",name:"lineHeight",required:!1,type:{name:"string"}},noSelect:{defaultValue:null,description:"Disables text selection",name:"noSelect",required:!1,type:{name:"boolean"}},textAlign:{defaultValue:{value:"left"},description:"Sets the 'text-align' property",name:"textAlign",required:!1,type:{name:"string"}},title:{defaultValue:null,description:"Title",name:"title",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"Sets the class name",name:"className",required:!1,type:{name:"string"}},truncate:{defaultValue:null,description:"Disables word wrapping",name:"truncate",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},dir:{defaultValue:null,description:"",name:"dir",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void)"}},htmlFor:{defaultValue:null,description:"",name:"htmlFor",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/text/Text.tsx#Text"]={docgenInfo:Text.__docgenInfo,name:"Text",path:"components/text/Text.tsx#Text"})}catch(__react_docgen_typescript_loader_error){}try{Text.displayName="Text",__function.__docgenInfo={description:"",displayName:"Text",props:{as:{defaultValue:null,description:"Sets the tag through which the component is rendered",name:"as",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements> | undefined"}},tag:{defaultValue:null,description:"Accepts the tag id",name:"tag",required:!1,type:{name:"string | undefined"}},backgroundColor:{defaultValue:null,description:"Sets background color",name:"backgroundColor",required:!1,type:{name:"string | undefined"}},color:{defaultValue:null,description:"Specifies the text color",name:"color",required:!1,type:{name:"string | undefined"}},display:{defaultValue:null,description:"Sets the 'display' property",name:"display",required:!1,type:{name:"string | undefined"}},fontSize:{defaultValue:{value:"13px"},description:"Sets the font size",name:"fontSize",required:!1,type:{name:"string | undefined"}},fontWeight:{defaultValue:null,description:"Sets the font weight",name:"fontWeight",required:!1,type:{name:"string | number | undefined"}},isBold:{defaultValue:null,description:"Sets font weight value to bold",name:"isBold",required:!1,type:{name:"boolean | undefined"}},isInline:{defaultValue:null,description:"Sets the 'display?: inline-block' property",name:"isInline",required:!1,type:{name:"boolean | undefined"}},isItalic:{defaultValue:null,description:"Sets the font style",name:"isItalic",required:!1,type:{name:"boolean | undefined"}},lineHeight:{defaultValue:null,description:"Sets the line height",name:"lineHeight",required:!1,type:{name:"string | undefined"}},noSelect:{defaultValue:null,description:"Disables text selection",name:"noSelect",required:!1,type:{name:"boolean | undefined"}},textAlign:{defaultValue:{value:"left"},description:"Sets the 'text-align' property",name:"textAlign",required:!1,type:{name:"string | undefined"}},title:{defaultValue:null,description:"Title",name:"title",required:!1,type:{name:"string | undefined"}},className:{defaultValue:null,description:"Sets the class name",name:"className",required:!1,type:{name:"string | undefined"}},truncate:{defaultValue:null,description:"Disables word wrapping",name:"truncate",required:!1,type:{name:"boolean | undefined"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string | undefined"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties | undefined"}},dir:{defaultValue:null,description:"",name:"dir",required:!1,type:{name:"string | undefined"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => void) | undefined"}},htmlFor:{defaultValue:null,description:"",name:"htmlFor",required:!1,type:{name:"string | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/text/Text.tsx#Text"]={docgenInfo:Text.__docgenInfo,name:"Text",path:"components/text/Text.tsx#Text"})}catch(__react_docgen_typescript_loader_error){}},"./components/text/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{E:()=>_Text__WEBPACK_IMPORTED_MODULE_0__.E});var _Text__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./components/text/Text.tsx")},"./components/tooltip/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{m:()=>Tooltip_Tooltip});var react=__webpack_require__("../../node_modules/react/index.js"),floating_ui_core=__webpack_require__("../../node_modules/@floating-ui/core/dist/floating-ui.core.mjs"),floating_ui_dom=__webpack_require__("../../node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs"),react_tooltip_min=__webpack_require__("../../node_modules/react-tooltip/dist/react-tooltip.min.mjs"),portal=__webpack_require__("./components/portal/index.ts"),styled_components_browser_esm=__webpack_require__("../../node_modules/styled-components/dist/styled-components.browser.esm.js"),themes=__webpack_require__("./themes/index.ts");const StyledTooltip=styled_components_browser_esm.Ay.div`
  .__react_component_tooltip {
    background-color: ${props=>props.color?props.color:props.theme.tooltip.color};
    border-radius: ${props=>props.theme.tooltip.borderRadius};
    -moz-border-radius: ${props=>props.theme.tooltip.borderRadius};
    -webkit-border-radius: ${props=>props.theme.tooltip.borderRadius};
    box-shadow: ${props=>props.theme.tooltip.boxShadow};
    -moz-box-shadow: ${props=>props.theme.tooltip.boxShadow};
    -webkit-box-shadow: ${props=>props.theme.tooltip.boxShadow};
    padding: ${props=>props.theme.tooltip.padding};
    max-width: ${props=>`min(100vw, ${props.maxWidthProp?props.maxWidthProp:props.theme.tooltip.maxWidth})`};
    color: ${props=>props.theme.tooltip.textColor};
    z-index: 999;

    box-sizing: border-box;

    p,
    div,
    span {
      color: ${props=>props.theme.tooltip.textColor};
    }

    &:before {
      border: ${props=>props.theme.tooltip.before.border};
    }
    &:after {
      border: ${props=>props.theme.tooltip.after.border};
      background-color: ${props=>props.color?props.color:props.theme.tooltip.color} !important;
    }
  }

  .__react_component_tooltip.place-left::after {
    border-left: none !important;
  }

  .__react_component_tooltip.place-right::after {
    border-right: none !important;
  }

  .__react_component_tooltip.place-top::after {
    border-top: none !important;
  }

  .__react_component_tooltip.place-bottom::after {
    border-bottom: none !important;
  }

  .__react_component_tooltip.place-left::before {
    background: none !important;
  }

  .__react_component_tooltip.place-right::before {
    background: none !important;
  }

  .__react_component_tooltip.place-top::before {
    background: none !important;
  }

  .__react_component_tooltip.place-bottom::before {
    background: none !important;
  }

  .__react_component_tooltip.place-bottom::after,
  .__react_component_tooltip.place-top::after,
  .__react_component_tooltip.place-right::after,
  .__react_component_tooltip.place-left::after {
    display: none;
  }
`;StyledTooltip.defaultProps={theme:themes.C6};const Tooltip_styled=StyledTooltip;var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const globalCloseEvents={escape:!0,resize:!0,scroll:!0,clickOutsideAnchor:!0},Tooltip_Tooltip=react.forwardRef((({id,place="top",getContent,children,afterShow,afterHide,className,style,color,maxWidth,anchorSelect,clickable,openOnClick,isOpen,float,noArrow=!0,fallbackAxisSideDirection,opacity=1,imperativeModeOnly,...rest},ref)=>{const openEvents={click:openOnClick,mouseenter:!openOnClick},closeEvents={click:openOnClick,mouseleave:!openOnClick},tooltip=(0,jsx_runtime.jsx)(Tooltip_styled,{className,style,color,maxWidthProp:maxWidth,"data-testid":"tooltip",children:(0,jsx_runtime.jsx)(react_tooltip_min.m_,{ref,id,opacity,float,place,isOpen,noArrow,render:getContent,clickable,afterShow,afterHide,openEvents,positionStrategy:"fixed",closeEvents,openOnClick,anchorSelect,imperativeModeOnly,className:"__react_component_tooltip",globalCloseEvents,middlewares:[(0,floating_ui_core.cY)(rest.offset??4),(0,floating_ui_dom.UU)({crossAxis:!1,fallbackAxisSideDirection,fallbackPlacements:["right","bottom","left","top","top-start","top-end","right-start","right-end","bottom-start","bottom-end","left-start","left-end"]}),(0,floating_ui_dom.BN)()],...rest,children})});return(0,jsx_runtime.jsx)(portal.Z,{element:tooltip})}));Tooltip_Tooltip.displayName="Tooltip";try{Tooltip_Tooltip.displayName="Tooltip",Tooltip_Tooltip.__docgenInfo={description:"",displayName:"Tooltip",props:{id:{defaultValue:null,description:"Used as HTML id property",name:"id",required:!1,type:{name:"string"}},place:{defaultValue:{value:"top"},description:"Global tooltip placement",name:"place",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"top"'},{value:'"top-start"'},{value:'"top-end"'},{value:'"right"'},{value:'"right-start"'},{value:'"right-end"'},{value:'"bottom"'},{value:'"bottom-start"'},{value:'"bottom-end"'},{value:'"left-start"'},{value:'"left-end"'}]}},fallbackAxisSideDirection:{defaultValue:null,description:"Whether to allow fallback to the perpendicular axis of the preferred placement, and if so, which side direction along the axis to prefer.",name:"fallbackAxisSideDirection",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"start"'},{value:'"end"'}]}},getContent:{defaultValue:null,description:"Sets a callback function that generates the tip content dynamically",name:"getContent",required:!1,type:{name:"(({ content, activeAnchor, }: TGetTooltipContent) => ReactNode)"}},afterHide:{defaultValue:null,description:"A function to be called after the tooltip is hidden",name:"afterHide",required:!1,type:{name:"(() => void)"}},afterShow:{defaultValue:null,description:"A function to be called after the tooltip is shown",name:"afterShow",required:!1,type:{name:"(() => void)"}},offset:{defaultValue:null,description:"Space between the tooltip element and anchor element (arrow not included in calculation)",name:"offset",required:!1,type:{name:"number"}},children:{defaultValue:null,description:"Child elements",name:"children",required:!1,type:{name:"ReactNode"}},className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties"}},color:{defaultValue:null,description:"Background color of the tooltip",name:"color",required:!1,type:{name:"string"}},maxWidth:{defaultValue:null,description:"Maximum width of the tooltip",name:"maxWidth",required:!1,type:{name:"string"}},isOpen:{defaultValue:null,description:"The tooltip can be controlled or uncontrolled, this attribute cannot be used to handle show and hide tooltip outside tooltip",name:"isOpen",required:!1,type:{name:"boolean"}},clickable:{defaultValue:null,description:"Allow interaction with elements inside the tooltip",name:"clickable",required:!1,type:{name:"boolean"}},openOnClick:{defaultValue:null,description:"Controls whether the tooltip should open when clicking (true) or hovering (false) the anchor element",name:"openOnClick",required:!1,type:{name:"boolean"}},float:{defaultValue:null,description:"Tooltip will follow the mouse position when it moves inside the anchor element",name:"float",required:!1,type:{name:"boolean"}},anchorSelect:{defaultValue:null,description:"The selector for the anchor elements",name:"anchorSelect",required:!1,type:{name:"string"}},noArrow:{defaultValue:{value:"true"},description:"Tooltip arrow will not be shown",name:"noArrow",required:!1,type:{name:"boolean"}},offsetTop:{defaultValue:null,description:"",name:"offsetTop",required:!1,type:{name:"number"}},offsetLeft:{defaultValue:null,description:"",name:"offsetLeft",required:!1,type:{name:"number"}},reference:{defaultValue:null,description:"",name:"reference",required:!1,type:{name:"RefObject<HTMLDivElement>"}},opacity:{defaultValue:{value:"1"},description:"Change the opacity of the tooltip",name:"opacity",required:!1,type:{name:"number"}},imperativeModeOnly:{defaultValue:null,description:"When enabled, default tooltip behavior is disabled.",name:"imperativeModeOnly",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/tooltip/Tooltip.tsx#Tooltip"]={docgenInfo:Tooltip_Tooltip.__docgenInfo,name:"Tooltip",path:"components/tooltip/Tooltip.tsx#Tooltip"})}catch(__react_docgen_typescript_loader_error){}try{Tooltip_Tooltip.displayName="Tooltip",ForwardRefExoticComponent.__docgenInfo={description:"",displayName:"Tooltip",props:{id:{defaultValue:null,description:"Used as HTML id property",name:"id",required:!1,type:{name:"string | undefined"}},place:{defaultValue:{value:"top"},description:"Global tooltip placement",name:"place",required:!1,type:{name:"TTooltipPlace | undefined"}},fallbackAxisSideDirection:{defaultValue:null,description:"Whether to allow fallback to the perpendicular axis of the preferred placement, and if so, which side direction along the axis to prefer.",name:"fallbackAxisSideDirection",required:!1,type:{name:"TFallbackAxisSideDirection | undefined"}},getContent:{defaultValue:null,description:"Sets a callback function that generates the tip content dynamically",name:"getContent",required:!1,type:{name:"(({ content, activeAnchor, }: TGetTooltipContent) => ReactNode) | undefined"}},afterHide:{defaultValue:null,description:"A function to be called after the tooltip is hidden",name:"afterHide",required:!1,type:{name:"(() => void) | undefined"}},afterShow:{defaultValue:null,description:"A function to be called after the tooltip is shown",name:"afterShow",required:!1,type:{name:"(() => void) | undefined"}},offset:{defaultValue:null,description:"Space between the tooltip element and anchor element (arrow not included in calculation)",name:"offset",required:!1,type:{name:"number | undefined"}},children:{defaultValue:null,description:"Child elements",name:"children",required:!1,type:{name:"ReactNode"}},className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string | undefined"}},style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties | undefined"}},color:{defaultValue:null,description:"Background color of the tooltip",name:"color",required:!1,type:{name:"string | undefined"}},maxWidth:{defaultValue:null,description:"Maximum width of the tooltip",name:"maxWidth",required:!1,type:{name:"string | undefined"}},isOpen:{defaultValue:null,description:"The tooltip can be controlled or uncontrolled, this attribute cannot be used to handle show and hide tooltip outside tooltip",name:"isOpen",required:!1,type:{name:"boolean | undefined"}},clickable:{defaultValue:null,description:"Allow interaction with elements inside the tooltip",name:"clickable",required:!1,type:{name:"boolean | undefined"}},openOnClick:{defaultValue:null,description:"Controls whether the tooltip should open when clicking (true) or hovering (false) the anchor element",name:"openOnClick",required:!1,type:{name:"boolean | undefined"}},float:{defaultValue:null,description:"Tooltip will follow the mouse position when it moves inside the anchor element",name:"float",required:!1,type:{name:"boolean | undefined"}},anchorSelect:{defaultValue:null,description:"The selector for the anchor elements",name:"anchorSelect",required:!1,type:{name:"string | undefined"}},noArrow:{defaultValue:{value:!0},description:"Tooltip arrow will not be shown",name:"noArrow",required:!1,type:{name:"boolean | undefined"}},offsetTop:{defaultValue:null,description:"",name:"offsetTop",required:!1,type:{name:"number | undefined"}},offsetLeft:{defaultValue:null,description:"",name:"offsetLeft",required:!1,type:{name:"number | undefined"}},reference:{defaultValue:null,description:"",name:"reference",required:!1,type:{name:"RefObject<HTMLDivElement> | undefined"}},opacity:{defaultValue:{value:1},description:"Change the opacity of the tooltip",name:"opacity",required:!1,type:{name:"number | undefined"}},imperativeModeOnly:{defaultValue:null,description:"When enabled, default tooltip behavior is disabled.",name:"imperativeModeOnly",required:!1,type:{name:"boolean | undefined"}},ref:{defaultValue:null,description:"Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}",name:"ref",required:!1,type:{name:"LegacyRef<TooltipRefProps> | undefined"}},key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"Key | null | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/tooltip/Tooltip.tsx#Tooltip"]={docgenInfo:Tooltip_Tooltip.__docgenInfo,name:"Tooltip",path:"components/tooltip/Tooltip.tsx#Tooltip"})}catch(__react_docgen_typescript_loader_error){}try{Tooltip.displayName="Tooltip",Tooltip.__docgenInfo={description:"",displayName:"Tooltip",props:{id:{defaultValue:null,description:"Used as HTML id property",name:"id",required:!1,type:{name:"string"}},place:{defaultValue:{value:"top"},description:"Global tooltip placement",name:"place",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"top"'},{value:'"top-start"'},{value:'"top-end"'},{value:'"right"'},{value:'"right-start"'},{value:'"right-end"'},{value:'"bottom"'},{value:'"bottom-start"'},{value:'"bottom-end"'},{value:'"left-start"'},{value:'"left-end"'}]}},fallbackAxisSideDirection:{defaultValue:null,description:"Whether to allow fallback to the perpendicular axis of the preferred placement, and if so, which side direction along the axis to prefer.",name:"fallbackAxisSideDirection",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"start"'},{value:'"end"'}]}},getContent:{defaultValue:null,description:"Sets a callback function that generates the tip content dynamically",name:"getContent",required:!1,type:{name:"(({ content, activeAnchor, }: TGetTooltipContent) => ReactNode)"}},afterHide:{defaultValue:null,description:"A function to be called after the tooltip is hidden",name:"afterHide",required:!1,type:{name:"(() => void)"}},afterShow:{defaultValue:null,description:"A function to be called after the tooltip is shown",name:"afterShow",required:!1,type:{name:"(() => void)"}},offset:{defaultValue:null,description:"Space between the tooltip element and anchor element (arrow not included in calculation)",name:"offset",required:!1,type:{name:"number"}},children:{defaultValue:null,description:"Child elements",name:"children",required:!1,type:{name:"ReactNode"}},className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties"}},color:{defaultValue:null,description:"Background color of the tooltip",name:"color",required:!1,type:{name:"string"}},maxWidth:{defaultValue:null,description:"Maximum width of the tooltip",name:"maxWidth",required:!1,type:{name:"string"}},isOpen:{defaultValue:null,description:"The tooltip can be controlled or uncontrolled, this attribute cannot be used to handle show and hide tooltip outside tooltip",name:"isOpen",required:!1,type:{name:"boolean"}},clickable:{defaultValue:null,description:"Allow interaction with elements inside the tooltip",name:"clickable",required:!1,type:{name:"boolean"}},openOnClick:{defaultValue:null,description:"Controls whether the tooltip should open when clicking (true) or hovering (false) the anchor element",name:"openOnClick",required:!1,type:{name:"boolean"}},float:{defaultValue:null,description:"Tooltip will follow the mouse position when it moves inside the anchor element",name:"float",required:!1,type:{name:"boolean"}},anchorSelect:{defaultValue:null,description:"The selector for the anchor elements",name:"anchorSelect",required:!1,type:{name:"string"}},noArrow:{defaultValue:{value:"true"},description:"Tooltip arrow will not be shown",name:"noArrow",required:!1,type:{name:"boolean"}},offsetTop:{defaultValue:null,description:"",name:"offsetTop",required:!1,type:{name:"number"}},offsetLeft:{defaultValue:null,description:"",name:"offsetLeft",required:!1,type:{name:"number"}},reference:{defaultValue:null,description:"",name:"reference",required:!1,type:{name:"RefObject<HTMLDivElement>"}},opacity:{defaultValue:{value:"1"},description:"Change the opacity of the tooltip",name:"opacity",required:!1,type:{name:"number"}},imperativeModeOnly:{defaultValue:null,description:"When enabled, default tooltip behavior is disabled.",name:"imperativeModeOnly",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/tooltip/index.tsx#Tooltip"]={docgenInfo:Tooltip.__docgenInfo,name:"Tooltip",path:"components/tooltip/index.tsx#Tooltip"})}catch(__react_docgen_typescript_loader_error){}try{Tooltip.displayName="Tooltip",ForwardRefExoticComponent.__docgenInfo={description:"",displayName:"Tooltip",props:{id:{defaultValue:null,description:"Used as HTML id property",name:"id",required:!1,type:{name:"string | undefined"}},place:{defaultValue:{value:"top"},description:"Global tooltip placement",name:"place",required:!1,type:{name:"TTooltipPlace | undefined"}},fallbackAxisSideDirection:{defaultValue:null,description:"Whether to allow fallback to the perpendicular axis of the preferred placement, and if so, which side direction along the axis to prefer.",name:"fallbackAxisSideDirection",required:!1,type:{name:"TFallbackAxisSideDirection | undefined"}},getContent:{defaultValue:null,description:"Sets a callback function that generates the tip content dynamically",name:"getContent",required:!1,type:{name:"(({ content, activeAnchor, }: TGetTooltipContent) => ReactNode) | undefined"}},afterHide:{defaultValue:null,description:"A function to be called after the tooltip is hidden",name:"afterHide",required:!1,type:{name:"(() => void) | undefined"}},afterShow:{defaultValue:null,description:"A function to be called after the tooltip is shown",name:"afterShow",required:!1,type:{name:"(() => void) | undefined"}},offset:{defaultValue:null,description:"Space between the tooltip element and anchor element (arrow not included in calculation)",name:"offset",required:!1,type:{name:"number | undefined"}},children:{defaultValue:null,description:"Child elements",name:"children",required:!1,type:{name:"ReactNode"}},className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string | undefined"}},style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties | undefined"}},color:{defaultValue:null,description:"Background color of the tooltip",name:"color",required:!1,type:{name:"string | undefined"}},maxWidth:{defaultValue:null,description:"Maximum width of the tooltip",name:"maxWidth",required:!1,type:{name:"string | undefined"}},isOpen:{defaultValue:null,description:"The tooltip can be controlled or uncontrolled, this attribute cannot be used to handle show and hide tooltip outside tooltip",name:"isOpen",required:!1,type:{name:"boolean | undefined"}},clickable:{defaultValue:null,description:"Allow interaction with elements inside the tooltip",name:"clickable",required:!1,type:{name:"boolean | undefined"}},openOnClick:{defaultValue:null,description:"Controls whether the tooltip should open when clicking (true) or hovering (false) the anchor element",name:"openOnClick",required:!1,type:{name:"boolean | undefined"}},float:{defaultValue:null,description:"Tooltip will follow the mouse position when it moves inside the anchor element",name:"float",required:!1,type:{name:"boolean | undefined"}},anchorSelect:{defaultValue:null,description:"The selector for the anchor elements",name:"anchorSelect",required:!1,type:{name:"string | undefined"}},noArrow:{defaultValue:{value:!0},description:"Tooltip arrow will not be shown",name:"noArrow",required:!1,type:{name:"boolean | undefined"}},offsetTop:{defaultValue:null,description:"",name:"offsetTop",required:!1,type:{name:"number | undefined"}},offsetLeft:{defaultValue:null,description:"",name:"offsetLeft",required:!1,type:{name:"number | undefined"}},reference:{defaultValue:null,description:"",name:"reference",required:!1,type:{name:"RefObject<HTMLDivElement> | undefined"}},opacity:{defaultValue:{value:1},description:"Change the opacity of the tooltip",name:"opacity",required:!1,type:{name:"number | undefined"}},imperativeModeOnly:{defaultValue:null,description:"When enabled, default tooltip behavior is disabled.",name:"imperativeModeOnly",required:!1,type:{name:"boolean | undefined"}},ref:{defaultValue:null,description:"Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}",name:"ref",required:!1,type:{name:"LegacyRef<TooltipRefProps> | undefined"}},key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"Key | null | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/tooltip/index.tsx#Tooltip"]={docgenInfo:Tooltip.__docgenInfo,name:"Tooltip",path:"components/tooltip/index.tsx#Tooltip"})}catch(__react_docgen_typescript_loader_error){}}}]);
//# sourceMappingURL=components-info-badge-InfoBadge-stories.dbf6a301.iframe.bundle.js.map