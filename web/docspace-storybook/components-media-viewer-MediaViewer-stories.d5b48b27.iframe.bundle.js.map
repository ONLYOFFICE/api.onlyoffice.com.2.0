{"version":3,"file":"components-media-viewer-MediaViewer-stories.d5b48b27.iframe.bundle.js","mappings":";;;;;;;;;;;AAwDA;;AAKA;;AAMA;;;;;;;;;;;;AAcA;;;;;AAKA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;;;;;;;;;;AAUA;;;;;;AASA;AACA;AACA;;;;AAIA;;;AAKA;;;;;;;;;;;;;;;;AAiBA;;;;;;;;;;;;;;;;AAgBA;;AAIA;;;;;;;;;;;AAYA;;AAIA;;;;AAKA;;;;;;AAMA;;AAIA;;;;;;;;;AAUA;;;;;;;;;;;;ACjPA;;;;;;;;;;ACyCA;AAGA;;;;;;;;;;;;;;;;;;ACbA;;;;;;;;;;;;;;;;;;;ACkBA;;;;;;AAOA;;;;;;AASA;;;AAGA;;;;;;;;;;;;;;AAcA;;;;;;;;;;AC1CA;;;;;;;;;;;;;;;;;;ACQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;;;;;;;;;;;;;ACOA;AAIA;;;;AAIA;AAGA;;ACoBA;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;;AAKA;;ACnBA;;;;;;ACPA;;;;;;;;;ACGA;;;;;;;;;ACOA;;;AAUA;;;;ACfA;;;;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;AACA;;AC/HA;;;;;;;;;ACHA;;;;;;;;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyGA;AACA;;;AAGA;AACA;;ACpMA;;;;;;;;;;;;;;;;;;;;;;ACYA;;;;;;;;;;;;;;;;;;AAoBA;;;;;;;;;;AAYA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpFA;;;;;;;;;;;;ACiCA;;;;;;;;;;;;;;;;;;;;;;;;;;ACuBA;;;;;;;;;;;;;;;AChBA;;;;ACLA;;AAKA;;AAEA;AACA;;;;;;;;;;;;;;AAgBA;;;;;;;;;;;AAWA;AACA;;;;;;;;AAQA;;;;AAMA;;;;;;;;;;;;;AAaA;;;;;;AAQA;;;;;AAKA;;;;AAIA;;;ACtCA;;;;;;;;;ACtCA;;;;;;;;;;;;;;;;AAkBA;;;;ACtBA;;;;;;;;;ACGA;AACA;AACA;AAGA;;;;;;;;;;;;AAcA;;;;;;AAMA;;AAEA;AACA;AAGA;AACA;;AAIA;;;;ACnCA;;ACPA;AACA;;AAIA;AACA;ACJA;;;;ACCA;;;;;;;;;;;;;;;;;;;AAqBA;;;;;;;;;;;;;;;;ACXA;;;;;;;;;ACDA;;;;;;AAMA;;;;;;;;;;;;AAaA;;;;;;;;;;;AAaA;;AAKA;;;;;;;;;;AAYA;;;;;AAOA;;AAEA;AAGA;AACA;AAEA;;AAEA;;;;;AAKA;;;;;;;AAQA;;;;;;;;AAUA;AACA;;;AAQA;;;;AC9IA;;;;;;ACmCA;AACA;;;;;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;ACHA;;AAKA;;AAKA;AAOA;AACA;AARA;AAGA;AACA;;;;;;AAUA;;;;AASA;AACA;;AAKA;;AAKA;AAOA;AACA;AARA;AAGA;AACA;;;;;;AAUA;;;;AASA;AACA;;AAKA;;AAKA;AAOA;AACA;AARA;AAGA;AACA;;;;;;AAUA;;;;AAcA;;AAiCA;AACA;AACA;;AAEA;;AAKA;;AAKA;;AAKA;AACA;;AAEA;;AAGA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAQA;;;;AAIA;;AAOA;;;;AAIA;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;;;;;;;;AAUA;AAGA;;AAEA;;AAGA;;AAEA;;AAIA;AAGA;AACA;;AAEA;;AAGA;;AAEA;AAyDA;AAxCA;AAEA;AACA;AACA;AACA;;;;AAIA;;AAEA;;;;AAIA;;;AASA;;;;AAIA;;AAOA","sources":["webpack://@docspace/shared/./components/media-viewer/MediaViewer.styled.ts","webpack://@docspace/shared/../../public/images/viewer.next.react.svg","webpack://@docspace/shared/./components/media-viewer/sub-components/ViewerLoader/ViewerLoader.styled.ts","webpack://@docspace/shared/./components/media-viewer/sub-components/ViewerLoader/index.tsx","webpack://@docspace/shared/./components/media-viewer/sub-components/ViewerToolbar/ViewerToolbar.styled.ts","webpack://@docspace/shared/./components/media-viewer/sub-components/ViewerToolbar/index.tsx","webpack://@docspace/shared/./components/media-viewer/sub-components/MessageError/MessageError.styled.ts","webpack://@docspace/shared/./components/media-viewer/sub-components/MessageError/index.tsx","webpack://@docspace/shared/./components/media-viewer/sub-components/ImageViewer/ImageViewer.styled.ts","webpack://@docspace/shared/./components/media-viewer/sub-components/ImageViewer/index.tsx","webpack://@docspace/shared/./components/media-viewer/sub-components/DesktopDetails/DesktopDetails.styled.ts","webpack://@docspace/shared/./components/media-viewer/sub-components/DesktopDetails/index.tsx","webpack://@docspace/shared/./components/media-viewer/sub-components/PlayerBigPlayButton/index.tsx","webpack://@docspace/shared/./components/media-viewer/sub-components/PlayerPlayButton/index.tsx","webpack://@docspace/shared/./components/media-viewer/sub-components/PlayerDuration/inxed.tsx","webpack://@docspace/shared/./components/media-viewer/sub-components/PlayerVolumeControl/PlayerVolumeControl.styled.ts","webpack://@docspace/shared/./components/media-viewer/sub-components/PlayerVolumeControl/index.tsx","webpack://@docspace/shared/./components/media-viewer/sub-components/PlayerTimeline/PlayerTimeline.styled.ts","webpack://@docspace/shared/./components/media-viewer/sub-components/PlayerTimeline/index.tsx","webpack://@docspace/shared/./components/media-viewer/sub-components/PlayerSpeedControl/PlayerSpeedControl.styled.ts","webpack://@docspace/shared/../../public/images/media.viewer05x.react.svg","webpack://@docspace/shared/./components/media-viewer/sub-components/PlayerFullScreen/index.tsx","webpack://@docspace/shared/./components/media-viewer/sub-components/PlayerDesktopContextMenu/PlayerDesktopContextMenu.styled.ts","webpack://@docspace/shared/./components/media-viewer/sub-components/PlayerDesktopContextMenu/index.tsx","webpack://@docspace/shared/./components/media-viewer/sub-components/ViewerPlayer/ViewerPlayer.styled.ts","webpack://@docspace/shared/./components/media-viewer/sub-components/ViewerPlayer/index.tsx","webpack://@docspace/shared/./components/media-viewer/sub-components/PDFViewer/ui/Bookmarks/Bookmarks.styled.ts","webpack://@docspace/shared/./components/media-viewer/sub-components/PDFViewer/ui/Bookmarks/index.tsx","webpack://@docspace/shared/./components/media-viewer/sub-components/PDFViewer/ui/SideBar/Sidebar.styled.ts","webpack://@docspace/shared/./components/media-viewer/sub-components/PDFViewer/ui/SideBar/index.tsx","webpack://@docspace/shared/./components/media-viewer/sub-components/PDFViewer/ui/MainPanel/MainPanel.styled.ts","webpack://@docspace/shared/./components/media-viewer/sub-components/PDFViewer/ui/MainPanel/index.tsx","webpack://@docspace/shared/./components/media-viewer/sub-components/PDFViewer/ui/MobileDrawer/MobileDrawer.styled.ts","webpack://@docspace/shared/./components/media-viewer/sub-components/PDFViewer/ui/MobileDrawer/index.tsx","webpack://@docspace/shared/./components/media-viewer/sub-components/PDFViewer/PDFViewer.styled.ts","webpack://@docspace/shared/../../public/images/panel.react.svg","webpack://@docspace/shared/./components/media-viewer/sub-components/PDFViewer/ui/PageCount/PageCount.styled.ts","webpack://@docspace/shared/./components/media-viewer/sub-components/PDFViewer/ui/PageCount/PageCount.tsx","webpack://@docspace/shared/./components/button/Button.styled.tsx"],"sourcesContent":["// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport styled, { css } from \"styled-components\";\r\n\r\nimport { Base } from \"@docspace/shared/themes\";\r\nimport { DropDown } from \"@docspace/shared/components/drop-down\";\r\nimport { DropDownItem } from \"@docspace/shared/components/drop-down-item\";\r\n\r\ntype StyledButtonScrollProps = {\r\n  orientation: \"left\" | \"right\";\r\n};\r\n\r\ntype StyledSwitchToolbarProps = {\r\n  left?: boolean;\r\n  isPDFFile?: boolean;\r\n};\r\n\r\ntype StyledViewerContainerProps = {\r\n  visible: boolean;\r\n};\r\n\r\nexport const ControlBtn = styled.div`\r\n  display: inline-block;\r\n  height: 30px;\r\n  line-height: 25px;\r\n  margin: 5px;\r\n  width: 40px;\r\n  border-radius: 2px;\r\n  cursor: pointer;\r\n  text-align: center;\r\n\r\n  &:hover {\r\n    background-color: ${(props) =>\r\n      props.theme.mediaViewer.controlBtn.backgroundColor};\r\n  }\r\n`;\r\n\r\nControlBtn.defaultProps = { theme: Base };\r\n\r\nexport const StyledDropDown = styled(DropDown)`\r\n  background: #333;\r\n`;\r\n\r\nexport const StyledDropDownItem = styled(DropDownItem)`\r\n  color: #fff;\r\n\r\n  .drop-down-item_icon svg {\r\n    path {\r\n      fill: #fff !important;\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    background: #444;\r\n  }\r\n`;\r\n\r\nexport const StyledButtonScroll = styled.div<StyledButtonScrollProps>`\r\n  z-index: 307;\r\n  position: fixed;\r\n  top: calc(50% - 20px);\r\n\r\n  ${(props) => (props.orientation === \"left\" ? \"left: 20px;\" : \"right: 20px;\")}\r\n`;\r\n\r\nexport const StyledMobileDetails = styled.div`\r\n  z-index: 307;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 53px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: linear-gradient(\r\n    0deg,\r\n    rgba(0, 0, 0, 0) 0%,\r\n    rgba(0, 0, 0, 0.8) 100%\r\n  );\r\n\r\n  svg {\r\n    path {\r\n      fill: #fff;\r\n    }\r\n  }\r\n\r\n  .mobile-close {\r\n    position: fixed;\r\n    left: 21px;\r\n    top: 22px;\r\n  }\r\n\r\n  .mobile-context {\r\n    position: fixed;\r\n    right: 22px;\r\n    top: 22px;\r\n  }\r\n\r\n  .title {\r\n    font-weight: 600;\r\n    margin-top: 6px;\r\n    width: calc(100% - 100px);\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n`;\r\n\r\nexport const StyledSwitchToolbar = styled.div<StyledSwitchToolbarProps>`\r\n  height: 100%;\r\n  z-index: 306;\r\n  position: fixed;\r\n  width: 73px;\r\n  background: inherit;\r\n  display: block;\r\n  opacity: 0;\r\n  transition: all 0.3s;\r\n\r\n  ${(props) =>\r\n    props.left ? \"left: 0\" : props.isPDFFile ? \"right: 20px\" : \"right: 0\"};\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const StyledViewerContainer = styled.div<StyledViewerContainerProps>`\r\n  color: ${(props) => props.theme.mediaViewer.color};\r\n  display: ${(props) => (props.visible ? \"block\" : \"none\")};\r\n  overflow: hidden;\r\n  span {\r\n    position: fixed;\r\n    ${(props) =>\r\n      props.theme.interfaceDirection === \"rtl\"\r\n        ? css`\r\n            left: 0;\r\n            margin-left: 10px;\r\n          `\r\n        : css`\r\n            right: 0;\r\n            margin-right: 10px;\r\n          `}\r\n    bottom: 5px;\r\n    z-index: 305;\r\n  }\r\n  .deleteBtnContainer,\r\n  .downloadBtnContainer {\r\n    display: block;\r\n    width: 16px;\r\n    height: 16px;\r\n    margin: 4px 12px;\r\n    line-height: 19px;\r\n    svg {\r\n      path {\r\n        fill: ${(props) => props.theme.mediaViewer.fill};\r\n      }\r\n    }\r\n  }\r\n  .details {\r\n    z-index: 307;\r\n    padding-top: 21px;\r\n    height: 64px;\r\n    width: 100%;\r\n    background: linear-gradient(\r\n      0deg,\r\n      rgba(0, 0, 0, 0) 0%,\r\n      rgba(0, 0, 0, 0.8) 100%\r\n    );\r\n    position: fixed;\r\n    top: 0;\r\n    ${(props) =>\r\n      props.theme.interfaceDirection === \"rtl\"\r\n        ? css`\r\n            right: 0;\r\n          `\r\n        : css`\r\n            left: 0;\r\n          `}\r\n    .title {\r\n      text-align: center;\r\n      white-space: nowrap;\r\n      overflow: hidden;\r\n      font-size: 20px;\r\n      font-weight: 600;\r\n      text-overflow: ellipsis;\r\n      width: calc(100% - 50px);\r\n      ${(props) =>\r\n        props.theme.interfaceDirection === \"rtl\"\r\n          ? css`\r\n              padding-right: 16px;\r\n            `\r\n          : css`\r\n              padding-left: 16px;\r\n            `}\r\n      box-sizing: border-box;\r\n      color: ${(props) => props.theme.mediaViewer.titleColor};\r\n    }\r\n  }\r\n  .mediaPlayerClose {\r\n    position: fixed;\r\n    top: 13px;\r\n    ${(props) =>\r\n      props.theme.interfaceDirection === \"rtl\"\r\n        ? css`\r\n            left: 12px;\r\n          `\r\n        : css`\r\n            right: 12px;\r\n          `}\r\n    height: 17px;\r\n    &:hover {\r\n      background-color: transparent;\r\n    }\r\n    svg {\r\n      path {\r\n        fill: ${(props) => props.theme.mediaViewer.iconColor};\r\n      }\r\n    }\r\n  }\r\n\r\n  .containerVideo {\r\n    position: fixed;\r\n    top: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    left: 0;\r\n  }\r\n`;\r\n\r\nStyledViewerContainer.defaultProps = { theme: Base };\r\n","var _g, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgViewernextreact(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 48,\n    height: 68,\n    viewBox: \"0 0 48 68\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, props), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    filter: \"url(#viewer_next_react_svg__filter0_d_34536_416913)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M32.692 34L13 14.148 14.17 13 35 34 14.17 55 13 53.852 32.692 34z\",\n    fill: \"#fff\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"viewer_next_react_svg__filter0_d_34536_416913\",\n    x: 0,\n    y: 0,\n    width: 48,\n    height: 68,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    \"in\": \"SourceAlpha\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\",\n    result: \"hardAlpha\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", null), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 6.5\n  }), /*#__PURE__*/React.createElement(\"feComposite\", {\n    in2: \"hardAlpha\",\n    operator: \"out\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.45 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    in2: \"BackgroundImageFix\",\n    result: \"effect1_dropShadow_34536_416913\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    \"in\": \"SourceGraphic\",\n    in2: \"effect1_dropShadow_34536_416913\",\n    result: \"shape\"\n  })))));\n}\nexport default SvgViewernextreact;","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport styled from \"styled-components\";\r\nimport { ViewerLoaderProps } from \"./ViewerLoader.types\";\r\n\r\nexport const StyledLoaderWrapper = styled.div<\r\n  Pick<ViewerLoaderProps, \"withBackground\">\r\n>`\r\n  position: fixed;\r\n  inset: 0;\r\n\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  ${(props) => props.withBackground && \"background-color: rgba(0, 0, 0, 0.4);\"}\r\n`;\r\n\r\nexport const StyledLoader = styled.div`\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 4px solid #fff;\r\n  border-bottom-color: transparent;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  box-sizing: border-box;\r\n  animation: rotation 1s linear infinite;\r\n\r\n  @keyframes rotation {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport React from \"react\";\r\n\r\nimport { StyledLoader, StyledLoaderWrapper } from \"./ViewerLoader.styled\";\r\nimport type { ViewerLoaderProps } from \"./ViewerLoader.types\";\r\n\r\nexport const ViewerLoader = ({\r\n  onClick,\r\n  isError,\r\n  isLoading,\r\n  withBackground,\r\n}: ViewerLoaderProps) => {\r\n  if (!isLoading || isError) return;\r\n\r\n  return (\r\n    <StyledLoaderWrapper withBackground={withBackground} onClick={onClick}>\r\n      <StyledLoader />\r\n    </StyledLoaderWrapper>\r\n  );\r\n};\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport styled from \"styled-components\";\r\n\r\nexport const ImageViewerToolbarWrapper = styled.div`\r\n  height: 48px;\r\n  padding: 10px 24px;\r\n  border-radius: 18px;\r\n\r\n  position: fixed;\r\n  bottom: 24px;\r\n  left: 50%;\r\n  z-index: 307;\r\n\r\n  transform: translateX(-50%);\r\n\r\n  text-align: center;\r\n  transition: all 0.26s ease-out;\r\n\r\n  background: rgba(0, 0, 0, 0.4);\r\n  &:hover {\r\n    background: rgba(0, 0, 0, 0.8);\r\n  }\r\n`;\r\n\r\nexport const ListTools = styled.ul`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0px;\r\n  margin: 0px;\r\n`;\r\nexport const ToolbarItem = styled.li<{\r\n  $isSeparator?: boolean;\r\n  $percent?: number;\r\n}>`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  height: 48px;\r\n  width: ${(props) => (props.$isSeparator ? \"33px\" : \"48px\")};\r\n\r\n  &:hover {\r\n    cursor: ${(props) => (props.$isSeparator ? \"default\" : \"pointer\")};\r\n  }\r\n\r\n  .zoomPercent {\r\n    font-size: 10px;\r\n    font-weight: 700;\r\n    user-select: none;\r\n  }\r\n\r\n  svg {\r\n    width: 16px;\r\n    height: 16px;\r\n    path,\r\n    rect {\r\n      ${(props) => (props.$percent !== 25 ? \"fill: #fff;\" : \"fill: #BEBEBE;\")}\r\n    }\r\n  }\r\n\r\n  .zoomOut,\r\n  .zoomIn,\r\n  .rotateLeft,\r\n  .rotateRight {\r\n    margin-top: 3px;\r\n  }\r\n`;\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport React, { forwardRef, useImperativeHandle, useState } from \"react\";\r\n\r\nimport MediaContextMenu from \"PUBLIC_DIR/images/vertical-dots.react.svg\";\r\nimport ImageViewerToolbarProps, {\r\n  ImperativeHandle,\r\n  ToolbarItemType,\r\n} from \"./ViewerToolbar.props\";\r\n\r\nimport {\r\n  ImageViewerToolbarWrapper,\r\n  ListTools,\r\n  ToolbarItem,\r\n} from \"./ViewerToolbar.styled\";\r\n\r\nconst ViewerToolbar = forwardRef<ImperativeHandle, ImageViewerToolbarProps>(\r\n  (\r\n    {\r\n      toolbar,\r\n      className,\r\n      percentValue,\r\n      toolbarEvent,\r\n      generateContextMenu,\r\n      setIsOpenContextMenu,\r\n    },\r\n    ref,\r\n  ) => {\r\n    const [isOpen, setIsOpen] = useState<boolean>(false);\r\n    const [percent, setPercent] = useState<number>(() =>\r\n      Math.round(percentValue * 100),\r\n    );\r\n\r\n    useImperativeHandle(\r\n      ref,\r\n      () => {\r\n        return {\r\n          setPercentValue(percentArg: number) {\r\n            setPercent(Math.round(percentArg * 100));\r\n          },\r\n        };\r\n      },\r\n      [],\r\n    );\r\n\r\n    function getContextMenu(item: ToolbarItemType) {\r\n      const contextMenu = generateContextMenu(isOpen);\r\n      return (\r\n        <ToolbarItem\r\n          style={{ position: \"relative\" }}\r\n          key={item.key}\r\n          onClick={() => {\r\n            setIsOpenContextMenu((open) => !open);\r\n            setIsOpen((open) => !open);\r\n          }}\r\n          data-key={item.key}\r\n        >\r\n          <div className=\"context\" style={{ height: \"16px\" }}>\r\n            <MediaContextMenu />\r\n          </div>\r\n          {contextMenu}\r\n        </ToolbarItem>\r\n      );\r\n    }\r\n\r\n    function getPercentCompoent() {\r\n      return (\r\n        <div\r\n          className=\"iconContainer zoomPercent\"\r\n          style={{ width: \"auto\", color: \"#fff\", userSelect: \"none\" }}\r\n        >\r\n          {`${percent}%`}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    function renderToolbarItem(item: ToolbarItemType) {\r\n      if (item.disabled) return null;\r\n\r\n      if (item.key === \"context-menu\") {\r\n        return getContextMenu(item);\r\n      }\r\n\r\n      let content: JSX.Element | undefined = item?.render;\r\n\r\n      if (item.key === \"percent\") {\r\n        content = getPercentCompoent();\r\n      }\r\n\r\n      return (\r\n        <ToolbarItem\r\n          $percent={item.percent ? percent : 100}\r\n          $isSeparator={item.actionType === -1}\r\n          key={item.key}\r\n          onClick={() => {\r\n            toolbarEvent(item);\r\n          }}\r\n          data-key={item.key}\r\n        >\r\n          {content}\r\n        </ToolbarItem>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <ImageViewerToolbarWrapper className={className}>\r\n        <ListTools>{toolbar.map((item) => renderToolbarItem(item))}</ListTools>\r\n      </ImageViewerToolbarWrapper>\r\n    );\r\n  },\r\n);\r\n\r\nViewerToolbar.displayName = \"ImageViewerToolba\";\r\n\r\nexport { ViewerToolbar };\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport styled from \"styled-components\";\r\n\r\nexport const StyledMediaError = styled.div`\r\n  position: fixed;\r\n  z-index: 1006;\r\n\r\n  left: 50%;\r\n  top: 50%;\r\n\r\n  transform: translate(-50%, -50%);\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  background: rgba(0, 0, 0, 0.7);\r\n\r\n  opacity: 1;\r\n  border-radius: 20px;\r\n  padding: 20px 24px;\r\n`;\r\n\r\nexport const StyledErrorToolbar = styled.div`\r\n  position: fixed;\r\n  bottom: 24px;\r\n  left: 50%;\r\n  z-index: 1006;\r\n\r\n  transform: translateX(-50%);\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  padding: 10px 24px;\r\n  border-radius: 18px;\r\n\r\n  background: rgba(0, 0, 0, 0.4);\r\n\r\n  &:hover {\r\n    background: rgba(0, 0, 0, 0.8);\r\n  }\r\n\r\n  svg {\r\n    path {\r\n      fill: white;\r\n    }\r\n  }\r\n\r\n  rect: {\r\n    stroke: white;\r\n  }\r\n\r\n  .toolbar-item {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 48px;\r\n    width: 48px;\r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport React from \"react\";\r\nimport { ReactSVG } from \"react-svg\";\r\n\r\nimport { Text } from \"@docspace/shared/components/text\";\r\nimport { isSeparator } from \"@docspace/shared/utils/typeGuards\";\r\n\r\nimport { StyledErrorToolbar, StyledMediaError } from \"./MessageError.styled\";\r\nimport type PlayerMessageErrorProps from \"./MessageError.props\";\r\n\r\nexport const MessageError = ({\r\n  model,\r\n  isMobile,\r\n  errorTitle,\r\n  onMaskClick,\r\n}: PlayerMessageErrorProps) => {\r\n  const items = !isMobile\r\n    ? model.filter((el) => el.key !== \"rename\")\r\n    : model.filter((el) => el.key === \"delete\" || el.key === \"download\");\r\n\r\n  return (\r\n    <div>\r\n      <StyledMediaError>\r\n        <Text fontSize=\"15px\" color=\"#fff\" textAlign=\"center\" className=\"title\">\r\n          {errorTitle}\r\n        </Text>\r\n      </StyledMediaError>\r\n      {items.length !== 0 && (\r\n        <StyledErrorToolbar>\r\n          {items.map((item) => {\r\n            if (item.disabled || isSeparator(item)) return;\r\n\r\n            const onClick = (\r\n              event: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n            ) => {\r\n              onMaskClick?.();\r\n              item.onClick?.(event);\r\n            };\r\n\r\n            if (!item.icon) return;\r\n\r\n            return (\r\n              <div className=\"toolbar-item\" key={item.key} onClick={onClick}>\r\n                <ReactSVG src={item.icon} />\r\n              </div>\r\n            );\r\n          })}\r\n        </StyledErrorToolbar>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport styled from \"styled-components\";\r\nimport { animated } from \"@react-spring/web\";\r\n\r\nexport const ImageViewerContainer = styled.div<{ $backgroundBlack: boolean }>`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  position: fixed;\r\n  inset: 0;\r\n  overflow: hidden;\r\n\r\n  z-index: 300;\r\n\r\n  user-select: none;\r\n  touch-action: none;\r\n\r\n  background-color: ${(props) =>\r\n    props.$backgroundBlack ? \"#000\" : \"rgba(55, 55, 55, 0.6)\"};\r\n`;\r\n\r\nexport const ImageWrapper = styled.div<{ $isLoading: boolean }>`\r\n  overflow: hidden;\r\n  width: 100%;\r\n  height: 100%;\r\n  visibility: ${(props) => (props.$isLoading ? \"hidden\" : \"visible\")};\r\n`;\r\n\r\nexport const Image = styled(animated.img)`\r\n  will-change: opacity, transform, scale;\r\n`;\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport { useGesture } from \"@use-gesture/react\";\r\nimport { useSpring, config } from \"@react-spring/web\";\r\nimport { isDesktop as isDesktopDeviceDetect } from \"react-device-detect\";\r\nimport React, {\r\n  SyntheticEvent,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\n\r\nimport { IndexedDBStores } from \"@docspace/shared/enums\";\r\nimport indexedDBHelper from \"@docspace/shared/utils/indexedDBHelper\";\r\nimport { checkDialogsOpen } from \"@docspace/shared/utils/checkDialogsOpen\";\r\n\r\nimport {\r\n  calculateAdjustBoundsUtils,\r\n  calculateAdjustImageUtil,\r\n  getBounds,\r\n  getImagePositionAndSize,\r\n} from \"../../MediaViewer.utils\";\r\n\r\nimport { ViewerLoader } from \"../ViewerLoader\";\r\nimport { ViewerToolbar } from \"../ViewerToolbar\";\r\nimport { KeyboardEventKeys, ToolbarActionType } from \"../../MediaViewer.enums\";\r\nimport type { Point } from \"../../MediaViewer.types\";\r\n\r\nimport {\r\n  ImperativeHandle,\r\n  ToolbarItemType,\r\n} from \"../ViewerToolbar/ViewerToolbar.props\";\r\nimport { MessageError } from \"../MessageError\";\r\n\r\nimport {\r\n  Image,\r\n  ImageViewerContainer,\r\n  ImageWrapper,\r\n} from \"./ImageViewer.styled\";\r\nimport ImageViewerProps from \"./ImageViewer.props\";\r\n\r\nimport {\r\n  MaxScale,\r\n  MinScale,\r\n  RatioWheel,\r\n  DefaultSpeedScale,\r\n} from \"./ImageViewer.constants\";\r\n\r\nexport const ImageViewer = ({\r\n  src,\r\n  onPrev,\r\n  onNext,\r\n  onMask,\r\n  isFistImage,\r\n  isLastImage,\r\n  panelVisible,\r\n  generateContextMenu,\r\n  setIsOpenContextMenu,\r\n  resetToolbarVisibleTimer,\r\n  mobileDetails,\r\n  toolbar,\r\n  thumbnailSrc,\r\n  imageId,\r\n  version,\r\n  isTiff,\r\n  contextModel,\r\n  errorTitle,\r\n  devices,\r\n}: ImageViewerProps) => {\r\n  const imgRef = useRef<HTMLImageElement>(null);\r\n  const imgWrapperRef = useRef<HTMLDivElement>(null);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  const unmountRef = useRef<boolean>(false);\r\n\r\n  const lastTapTimeRef = useRef<number>(0);\r\n  const isDoubleTapRef = useRef<boolean>(false);\r\n  const setTimeoutIDTapRef = useRef<NodeJS.Timeout>();\r\n  const changeSourceTimeoutRef = useRef<NodeJS.Timeout>();\r\n  const startAngleRef = useRef<number>(0);\r\n  const toolbarRef = useRef<ImperativeHandle>(null);\r\n\r\n  const [scale, setScale] = useState(1);\r\n  const [isError, setIsError] = useState<boolean>(false);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [backgroundBlack, setBackgroundBlack] = useState<boolean>(() => false);\r\n\r\n  const [style, api] = useSpring(() => ({\r\n    width: 0,\r\n    height: 0,\r\n    x: 0,\r\n    y: 0,\r\n    scale: 1,\r\n    rotate: 0,\r\n    opacity: 1,\r\n  }));\r\n\r\n  const { isMobile, isDesktop } = devices;\r\n\r\n  const changeSource = React.useCallback(\r\n    (imageUrl: Blob | MediaSource) => {\r\n      if (!window.DocSpaceConfig?.imageThumbnails) return;\r\n      changeSourceTimeoutRef.current = setTimeout(() => {\r\n        if (imgRef.current && !unmountRef.current) {\r\n          if (!src) return;\r\n\r\n          if (!isTiff) {\r\n            imgRef.current.src = URL.createObjectURL(imageUrl);\r\n          } else {\r\n            imgRef.current.src = src;\r\n          }\r\n\r\n          setIsLoading(() => false);\r\n        }\r\n      }, 500);\r\n    },\r\n    [src, isTiff],\r\n  );\r\n\r\n  const loadImage = React.useCallback(async () => {\r\n    if (!src || !window.DocSpaceConfig?.imageThumbnails) return;\r\n\r\n    try {\r\n      const res = await fetch(src);\r\n      const blob = await res.blob();\r\n\r\n      if (isTiff) {\r\n        return changeSource(blob);\r\n      }\r\n\r\n      indexedDBHelper.addItem(IndexedDBStores.images, {\r\n        id: imageId,\r\n        src: blob,\r\n        created: new Date(),\r\n        version,\r\n      });\r\n\r\n      changeSource(blob);\r\n    } catch (error) {\r\n      // eslint-disable-next-line no-console\r\n      console.log(error);\r\n    }\r\n  }, [src, imageId, version, isTiff, changeSource]);\r\n\r\n  const resize = useCallback(() => {\r\n    if (!imgRef.current || isLoading) return;\r\n\r\n    const naturalWidth = imgRef.current.naturalWidth;\r\n    const naturalHeight = imgRef.current.naturalHeight;\r\n\r\n    const imagePositionAndSize = getImagePositionAndSize(\r\n      naturalWidth,\r\n      naturalHeight,\r\n      containerRef.current,\r\n    );\r\n    if (imagePositionAndSize) {\r\n      api.set(imagePositionAndSize);\r\n    }\r\n  }, [api, isLoading]);\r\n\r\n  const calculateAdjustImage = (point: Point, diffScale: number = 1) => {\r\n    return calculateAdjustImageUtil(\r\n      imgRef.current,\r\n      containerRef.current,\r\n      point,\r\n      diffScale,\r\n    );\r\n  };\r\n\r\n  const imageLoaded = useCallback(\r\n    (event: SyntheticEvent<HTMLImageElement, Event>) => {\r\n      const naturalWidth = (event.target as HTMLImageElement).naturalWidth;\r\n      const naturalHeight = (event.target as HTMLImageElement).naturalHeight;\r\n\r\n      const positionAndSize = getImagePositionAndSize(\r\n        naturalWidth,\r\n        naturalHeight,\r\n        containerRef.current,\r\n      );\r\n\r\n      if (!positionAndSize) return;\r\n\r\n      api.set({\r\n        ...positionAndSize,\r\n        scale: 1,\r\n        rotate: 0,\r\n      });\r\n\r\n      setIsLoading(false);\r\n\r\n      if (isTiff && src) {\r\n        URL.revokeObjectURL(src);\r\n      }\r\n    },\r\n    [api, isTiff, src],\r\n  );\r\n\r\n  const restartScaleAndSize = useCallback(() => {\r\n    if (!imgRef.current || style.scale.isAnimating) return;\r\n\r\n    const naturalWidth = imgRef.current.naturalWidth;\r\n    const naturalHeight = imgRef.current.naturalHeight;\r\n\r\n    const imagePositionAndSize = getImagePositionAndSize(\r\n      naturalWidth,\r\n      naturalHeight,\r\n      containerRef.current,\r\n    );\r\n\r\n    if (!imagePositionAndSize) return;\r\n\r\n    const { x, y, width, height } = imagePositionAndSize;\r\n\r\n    const ratio = 1 / style.scale.get();\r\n\r\n    const point = calculateAdjustImage({ x, y }, ratio);\r\n\r\n    toolbarRef.current?.setPercentValue(1);\r\n\r\n    api.start({\r\n      ...point,\r\n      width,\r\n      height,\r\n      scale: 1,\r\n    });\r\n  }, [api, style.scale]);\r\n\r\n  const calculateAdjustBounds = useCallback(\r\n    (x: number, y: number, diffScale: number = 1, angle: number = 0) => {\r\n      const bounds = getBounds(\r\n        imgRef.current,\r\n        containerRef.current,\r\n        diffScale,\r\n        angle,\r\n      );\r\n      return calculateAdjustBoundsUtils(x, y, bounds);\r\n    },\r\n    [],\r\n  );\r\n\r\n  const rotateImage = useCallback(\r\n    (dir: number) => {\r\n      if (style.rotate.isAnimating) return;\r\n\r\n      const rotate = style.rotate.get() + dir * 90;\r\n\r\n      const point = calculateAdjustImage(\r\n        calculateAdjustBounds(style.x.get(), style.y.get(), 1, rotate),\r\n      );\r\n\r\n      api.start({\r\n        ...point,\r\n        rotate,\r\n        config: {\r\n          // easing: easings.easeInBack,\r\n          duration: 200,\r\n        },\r\n        onResolve(result) {\r\n          api.start({\r\n            ...calculateAdjustImage({\r\n              x: result.value.x,\r\n              y: result.value.y,\r\n            }),\r\n            config: {\r\n              duration: 100,\r\n            },\r\n          });\r\n        },\r\n      });\r\n    },\r\n    [api, calculateAdjustBounds, style.rotate, style.x, style.y],\r\n  );\r\n\r\n  const zoomOut = useCallback(() => {\r\n    if (\r\n      style.scale.isAnimating ||\r\n      style.scale.get() <= MinScale ||\r\n      !imgRef.current ||\r\n      !containerRef.current\r\n    )\r\n      return;\r\n\r\n    const { width, height, x, y } = imgRef.current.getBoundingClientRect();\r\n    const { width: containerWidth, height: containerHeight } =\r\n      containerRef.current.getBoundingClientRect();\r\n\r\n    const scaleCurrent = Math.max(\r\n      style.scale.get() - DefaultSpeedScale,\r\n      MinScale,\r\n    );\r\n\r\n    const tx = ((containerWidth - width) / 2 - x) / style.scale.get();\r\n    const ty = ((containerHeight - height) / 2 - y) / style.scale.get();\r\n\r\n    const dx = style.x.get() + DefaultSpeedScale * tx;\r\n    const dy = style.y.get() + DefaultSpeedScale * ty;\r\n\r\n    const ratio = scaleCurrent / style.scale.get();\r\n\r\n    const point = calculateAdjustImage(calculateAdjustBounds(dx, dy, ratio));\r\n    toolbarRef.current?.setPercentValue(scaleCurrent);\r\n\r\n    api.start({\r\n      scale: scaleCurrent,\r\n      ...point,\r\n      config: {\r\n        duration: 300,\r\n      },\r\n      onResolve: (result) => {\r\n        api.start({\r\n          ...calculateAdjustImage({\r\n            x: result.value.x,\r\n            y: result.value.y,\r\n          }),\r\n          config: {\r\n            ...config.default,\r\n            duration: 100,\r\n          },\r\n        });\r\n      },\r\n    });\r\n  }, [api, calculateAdjustBounds, style.scale, style.x, style.y]);\r\n\r\n  const zoomIn = useCallback(() => {\r\n    if (\r\n      style.scale.isAnimating ||\r\n      style.scale.get() >= MaxScale ||\r\n      !imgRef.current ||\r\n      !containerRef.current\r\n    )\r\n      return;\r\n\r\n    const { width, height, x, y } = imgRef.current.getBoundingClientRect();\r\n    const { width: containerWidth, height: containerHeight } =\r\n      containerRef.current.getBoundingClientRect();\r\n\r\n    const tx = ((containerWidth - width) / 2 - x) / style.scale.get();\r\n    const ty = ((containerHeight - height) / 2 - y) / style.scale.get();\r\n\r\n    const dx = style.x.get() - DefaultSpeedScale * tx;\r\n    const dy = style.y.get() - DefaultSpeedScale * ty;\r\n\r\n    const scaleCurrent = Math.min(\r\n      style.scale.get() + DefaultSpeedScale,\r\n      MaxScale,\r\n    );\r\n    toolbarRef.current?.setPercentValue(scaleCurrent);\r\n    api.start({\r\n      x: dx,\r\n      y: dy,\r\n      scale: scaleCurrent,\r\n      config: {\r\n        duration: 300,\r\n      },\r\n    });\r\n  }, [api, style.scale, style.x, style.y]);\r\n\r\n  const onKeyDown = useCallback(\r\n    (event: KeyboardEvent) => {\r\n      const { code, ctrlKey } = event;\r\n\r\n      const someDialogIsOpen = checkDialogsOpen();\r\n      if (someDialogIsOpen) return;\r\n\r\n      switch (code) {\r\n        case KeyboardEventKeys.ArrowLeft:\r\n        case KeyboardEventKeys.ArrowRight:\r\n          if (document.fullscreenElement) return;\r\n          if (ctrlKey) {\r\n            const dir = code === KeyboardEventKeys.ArrowRight ? 1 : -1;\r\n            rotateImage(dir);\r\n          }\r\n          break;\r\n        case KeyboardEventKeys.ArrowUp:\r\n        case KeyboardEventKeys.NumpadAdd:\r\n        case KeyboardEventKeys.Equal:\r\n          zoomIn();\r\n          break;\r\n        case KeyboardEventKeys.ArrowDown:\r\n        case KeyboardEventKeys.NumpadSubtract:\r\n        case KeyboardEventKeys.Minus:\r\n          zoomOut();\r\n          break;\r\n        case KeyboardEventKeys.Digit1:\r\n        case KeyboardEventKeys.Numpad1:\r\n          if (ctrlKey) {\r\n            restartScaleAndSize();\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    },\r\n    [restartScaleAndSize, rotateImage, zoomIn, zoomOut],\r\n  );\r\n\r\n  const zoomOnDoubleTap = (\r\n    event:\r\n      | TouchEvent\r\n      | MouseEvent\r\n      | React.MouseEvent<HTMLImageElement, MouseEvent>,\r\n    scaleArg = 1,\r\n  ) => {\r\n    if (\r\n      !imgRef.current ||\r\n      style.scale.get() >= MaxScale ||\r\n      style.scale.isAnimating\r\n    )\r\n      return;\r\n\r\n    const isTouch = \"touches\" in event;\r\n\r\n    const pageX = isTouch ? event.touches[0].pageX : event.pageX;\r\n    const pageY = isTouch ? event.touches[0].pageY : event.pageY;\r\n\r\n    const { width, height, x, y } = imgRef.current.getBoundingClientRect();\r\n    const tx = (pageX - (x + width / 2)) / style.scale.get();\r\n    const ty = (pageY - (y + height / 2)) / style.scale.get();\r\n\r\n    const dx = style.x.get() - scaleArg * tx;\r\n    const dy = style.y.get() - scaleArg * ty;\r\n\r\n    const newScale = Math.min(style.scale.get() + scaleArg, MaxScale);\r\n    const ratio = newScale / style.scale.get();\r\n\r\n    const point = calculateAdjustImage(\r\n      calculateAdjustBounds(dx, dy, ratio),\r\n      ratio,\r\n    );\r\n\r\n    toolbarRef.current?.setPercentValue(newScale);\r\n\r\n    api.start({\r\n      ...point,\r\n      scale: newScale,\r\n      config: config.default,\r\n      // onChange(result) {\r\n      //   api.start(maybeAdjustImage({ x: dx, y: dy }));\r\n      // },\r\n      onResolve() {\r\n        api.start(calculateAdjustImage(calculateAdjustBounds(dx, dy, 1)));\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleDoubleTapOrClick = (\r\n    event:\r\n      | TouchEvent\r\n      | MouseEvent\r\n      | React.MouseEvent<HTMLImageElement, MouseEvent>,\r\n  ) => {\r\n    if (style.scale.isAnimating) return;\r\n\r\n    if (style.scale.get() !== 1) {\r\n      restartScaleAndSize();\r\n    } else {\r\n      zoomOnDoubleTap(event);\r\n    }\r\n  };\r\n\r\n  useGesture(\r\n    {\r\n      onDragStart: ({ pinching }) => {\r\n        if (pinching) return;\r\n\r\n        setScale(style.scale.get());\r\n      },\r\n      onDrag: ({\r\n        offset: [dx, dy],\r\n        movement: [mdx, mdy],\r\n        cancel,\r\n        pinching,\r\n        canceled,\r\n      }) => {\r\n        if (!imgRef.current) return;\r\n\r\n        if (isDoubleTapRef.current || unmountRef.current) {\r\n          isDoubleTapRef.current = false;\r\n          return;\r\n        }\r\n\r\n        if (pinching || canceled) cancel();\r\n        if (!imgRef.current || !containerRef.current) return;\r\n\r\n        api.start({\r\n          x:\r\n            style.scale.get() === 1 &&\r\n            !isDesktop &&\r\n            ((isFistImage && mdx > 0) || (isLastImage && mdx < 0))\r\n              ? style.x.get()\r\n              : dx,\r\n          y: dy,\r\n          opacity:\r\n            style.scale.get() === 1 && !isDesktop && mdy > 0\r\n              ? imgRef.current.height / 10 / mdy\r\n              : style.opacity.get(),\r\n          immediate: true,\r\n          config: config.default,\r\n        });\r\n      },\r\n\r\n      onDragEnd: ({ cancel, canceled, movement: [mdx, mdy] }) => {\r\n        if (unmountRef.current || !imgRef.current) {\r\n          return;\r\n        }\r\n\r\n        if (canceled || isDoubleTapRef.current) {\r\n          isDoubleTapRef.current = false;\r\n          cancel();\r\n        }\r\n\r\n        if (style.scale.get() === 1 && !isDesktop) {\r\n          if (mdx < -imgRef.current.width / 4) {\r\n            return onNext?.();\r\n          }\r\n          if (mdx > imgRef.current.width / 4) {\r\n            return onPrev?.();\r\n          }\r\n          if (mdy > 150) {\r\n            return onMask?.();\r\n          }\r\n        }\r\n\r\n        const newPoint = calculateAdjustImage({\r\n          x: style.x.get(),\r\n          y: style.y.get(),\r\n        });\r\n\r\n        api.start({\r\n          ...newPoint,\r\n          opacity: 1,\r\n          config: config.default,\r\n        });\r\n      },\r\n\r\n      onPinchStart: ({ event, cancel }) => {\r\n        if (event.target === containerRef.current) {\r\n          cancel();\r\n        } else {\r\n          const roundedAngle = Math.round(style.rotate.get());\r\n          startAngleRef.current = roundedAngle - (roundedAngle % 90);\r\n        }\r\n      },\r\n\r\n      onPinch: ({\r\n        origin: [ox, oy],\r\n        offset: [dScale, dRotate],\r\n        lastOffset: [LScale],\r\n        movement: [mScale],\r\n        memo,\r\n        first,\r\n        canceled,\r\n        event,\r\n        pinching,\r\n        cancel,\r\n      }) => {\r\n        if (\r\n          canceled ||\r\n          event.target === containerRef.current ||\r\n          !imgRef.current\r\n        )\r\n          return memo;\r\n\r\n        if (!pinching) cancel();\r\n\r\n        if (first) {\r\n          const { width, height, x, y } =\r\n            imgRef.current.getBoundingClientRect();\r\n          const tx = ox - (x + width / 2);\r\n          const ty = oy - (y + height / 2);\r\n          memo = [style.x.get(), style.y.get(), tx, ty];\r\n        }\r\n\r\n        const x = memo[0] - (mScale - 1) * memo[2];\r\n        const y = memo[1] - (mScale - 1) * memo[3];\r\n\r\n        const ratio = dScale / LScale;\r\n\r\n        const { x: dx, y: dy } = calculateAdjustImage({ x, y }, ratio);\r\n\r\n        const point = calculateAdjustBounds(dx, dy, ratio, dRotate);\r\n\r\n        api.start({\r\n          ...point,\r\n          scale: dScale,\r\n          rotate: dRotate,\r\n          delay: 0,\r\n          onChange(result) {\r\n            api.start({\r\n              ...calculateAdjustImage(\r\n                {\r\n                  x: result.value.x,\r\n                  y: result.value.y,\r\n                },\r\n                ratio,\r\n              ),\r\n              delay: 0,\r\n              config: {\r\n                duration: 200,\r\n              },\r\n            });\r\n          },\r\n          config: config.default,\r\n        });\r\n        return memo;\r\n      },\r\n      onPinchEnd: ({\r\n        movement: [, mRotate],\r\n        direction: [, dirRotate],\r\n        canceled,\r\n      }) => {\r\n        if (unmountRef.current || canceled) {\r\n          return;\r\n        }\r\n        const rotate =\r\n          Math.abs(mRotate / 90) > 1 / 3\r\n            ? Math.trunc(\r\n                startAngleRef.current +\r\n                  90 *\r\n                    Math.max(Math.trunc(Math.abs(mRotate) / 90), 1) *\r\n                    dirRotate,\r\n              )\r\n            : startAngleRef.current;\r\n\r\n        const newPoint = calculateAdjustImage({\r\n          x: style.x.get(),\r\n          y: style.y.get(),\r\n        });\r\n\r\n        api.start({\r\n          ...newPoint,\r\n          rotate,\r\n          delay: 0,\r\n          onResolve: () => {\r\n            api.start({\r\n              ...calculateAdjustImage({\r\n                x: style.x.get(),\r\n                y: style.y.get(),\r\n              }),\r\n              delay: 0,\r\n              config: {\r\n                ...config.default,\r\n                duration: 200,\r\n              },\r\n            });\r\n          },\r\n          onChange(result) {\r\n            api.start({\r\n              ...calculateAdjustImage({\r\n                x: result.value.x,\r\n                y: result.value.y,\r\n              }),\r\n              delay: 0,\r\n              config: {\r\n                ...config.default,\r\n                duration: 200,\r\n              },\r\n            });\r\n          },\r\n          config: config.default,\r\n        });\r\n      },\r\n\r\n      onClick: ({ pinching, event }) => {\r\n        if (isDesktopDeviceDetect && event.target === imgWrapperRef.current)\r\n          return onMask?.();\r\n\r\n        if (\r\n          !imgRef.current ||\r\n          !containerRef.current ||\r\n          pinching ||\r\n          isDesktopDeviceDetect\r\n        )\r\n          return;\r\n\r\n        const time = new Date().getTime();\r\n\r\n        if (time - lastTapTimeRef.current < 300) {\r\n          // on Double Tap\r\n          lastTapTimeRef.current = 0;\r\n          isDoubleTapRef.current = true;\r\n\r\n          handleDoubleTapOrClick(event);\r\n\r\n          clearTimeout(setTimeoutIDTapRef.current);\r\n        } else {\r\n          lastTapTimeRef.current = time;\r\n          setTimeoutIDTapRef.current = setTimeout(() => {\r\n            // onTap\r\n            setBackgroundBlack((state) => !state);\r\n          }, 300);\r\n        }\r\n      },\r\n      onWheel: ({\r\n        first,\r\n        offset: [, yWheel],\r\n        movement: [, mYWheel],\r\n        pinching,\r\n        memo,\r\n        event,\r\n      }) => {\r\n        if (\r\n          !imgRef.current ||\r\n          pinching ||\r\n          style.scale.isAnimating ||\r\n          event.target !== imgRef.current\r\n        )\r\n          return memo;\r\n\r\n        resetToolbarVisibleTimer();\r\n        const dScale = (-1 * yWheel) / RatioWheel;\r\n        const mScale = (-1 * mYWheel) / RatioWheel;\r\n\r\n        if (first || !memo) {\r\n          const { width, height, x, y } =\r\n            imgRef.current.getBoundingClientRect();\r\n          const tx = (event.pageX - (x + width / 2)) / style.scale.get();\r\n          const ty = (event.pageY - (y + height / 2)) / style.scale.get();\r\n          memo = [style.x.get(), style.y.get(), tx, ty];\r\n        }\r\n        const dx = memo[0] - mScale * memo[2];\r\n        const dy = memo[1] - mScale * memo[3];\r\n\r\n        const ratio = dScale / style.scale.get();\r\n\r\n        const point = calculateAdjustImage(\r\n          calculateAdjustBounds(dx, dy, ratio),\r\n          ratio,\r\n        );\r\n        toolbarRef.current?.setPercentValue(dScale);\r\n        api.start({\r\n          ...point,\r\n          scale: dScale,\r\n          config: {\r\n            ...config.default,\r\n            duration: 300,\r\n          },\r\n          onResolve(result) {\r\n            api.start(\r\n              calculateAdjustImage(\r\n                calculateAdjustBounds(result.value.x, result.value.y),\r\n              ),\r\n            );\r\n          },\r\n        });\r\n\r\n        return memo;\r\n      },\r\n    },\r\n    {\r\n      drag: {\r\n        from: () => [style.x.get(), style.y.get()],\r\n        axis: scale === 1 && !isDesktop ? \"lock\" : undefined,\r\n        rubberband: isDesktop,\r\n        bounds: () => {\r\n          if (style.scale.get() === 1 && !isDesktop) return {};\r\n\r\n          return getBounds(imgRef.current, containerRef.current) ?? {};\r\n        },\r\n      },\r\n      pinch: {\r\n        scaleBounds: { min: MinScale, max: MaxScale },\r\n        rubberband: false,\r\n        from: () => [style.scale.get(), style.rotate.get()],\r\n        threshold: [0.1, 5],\r\n        pinchOnWheel: false,\r\n      },\r\n\r\n      wheel: {\r\n        from: () => [0, -style.scale.get() * RatioWheel],\r\n        bounds: () => ({\r\n          top: -MaxScale * RatioWheel,\r\n          bottom: -MinScale * RatioWheel,\r\n        }),\r\n        axis: \"y\",\r\n      },\r\n\r\n      target: containerRef,\r\n    },\r\n  );\r\n\r\n  const handleToolbarAction = useCallback(\r\n    (action: ToolbarActionType) => {\r\n      resetToolbarVisibleTimer();\r\n\r\n      switch (action) {\r\n        case ToolbarActionType.ZoomOut:\r\n          zoomOut();\r\n          break;\r\n        case ToolbarActionType.ZoomIn:\r\n          zoomIn();\r\n          break;\r\n\r\n        case ToolbarActionType.RotateLeft:\r\n        case ToolbarActionType.RotateRight: {\r\n          const dir = action === ToolbarActionType.RotateRight ? 1 : -1;\r\n          rotateImage(dir);\r\n          break;\r\n        }\r\n        case ToolbarActionType.Reset:\r\n          restartScaleAndSize();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    },\r\n    [\r\n      resetToolbarVisibleTimer,\r\n      restartScaleAndSize,\r\n      rotateImage,\r\n      zoomIn,\r\n      zoomOut,\r\n    ],\r\n  );\r\n\r\n  const toolbarEvent = (item: ToolbarItemType) => {\r\n    if (item.onClick) {\r\n      item.onClick();\r\n    } else {\r\n      handleToolbarAction(item.actionType);\r\n    }\r\n  };\r\n\r\n  const onError = useCallback(() => {\r\n    setIsError(true);\r\n  }, []);\r\n\r\n  const model = React.useMemo(contextModel, [contextModel]);\r\n\r\n  useEffect(() => {\r\n    unmountRef.current = false;\r\n\r\n    return () => {\r\n      if (setTimeoutIDTapRef.current) clearTimeout(setTimeoutIDTapRef.current);\r\n      unmountRef.current = true;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", resize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", resize);\r\n    };\r\n  }, [resize]);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", onKeyDown);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", onKeyDown);\r\n    };\r\n  }, [onKeyDown]);\r\n\r\n  useEffect(() => {\r\n    if (unmountRef.current || (isTiff && src)) return;\r\n\r\n    setIsLoading(true);\r\n    setIsError(false);\r\n  }, [src, isTiff]);\r\n\r\n  useEffect(() => {\r\n    if (!window.DocSpaceConfig?.imageThumbnails) return;\r\n\r\n    if (!thumbnailSrc) setIsLoading(true);\r\n  }, [thumbnailSrc]);\r\n\r\n  useEffect(() => {\r\n    if (changeSourceTimeoutRef.current)\r\n      clearTimeout(changeSourceTimeoutRef.current);\r\n  }, [src, version]);\r\n\r\n  useEffect(() => {\r\n    if (!imageId || thumbnailSrc || !window.DocSpaceConfig?.imageThumbnails)\r\n      return;\r\n\r\n    indexedDBHelper\r\n      .getItem(IndexedDBStores.images, imageId)\r\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n      .then((result: any) => {\r\n        if (result && result.version === version) {\r\n          changeSource(result.src);\r\n        } else {\r\n          loadImage();\r\n        }\r\n      });\r\n  }, [src, imageId, version, isTiff, loadImage, changeSource, thumbnailSrc]);\r\n\r\n  return (\r\n    <>\r\n      {isMobile && !backgroundBlack && mobileDetails}\r\n      <ImageViewerContainer\r\n        ref={containerRef}\r\n        $backgroundBlack={backgroundBlack}\r\n      >\r\n        {isError ? (\r\n          <MessageError\r\n            model={model}\r\n            isMobile={isMobile}\r\n            onMaskClick={onMask}\r\n            errorTitle={errorTitle}\r\n          />\r\n        ) : (\r\n          <ViewerLoader isLoading={isLoading} />\r\n        )}\r\n\r\n        <ImageWrapper ref={imgWrapperRef} $isLoading={isLoading}>\r\n          <Image\r\n            draggable=\"false\"\r\n            src={\r\n              !window.DocSpaceConfig?.imageThumbnails\r\n                ? src\r\n                : thumbnailSrc\r\n                  ? `${thumbnailSrc}&size=1280x720`\r\n                  : \"\"\r\n            }\r\n            ref={imgRef}\r\n            style={style}\r\n            onDoubleClick={handleDoubleTapOrClick}\r\n            onLoad={imageLoaded}\r\n            onError={onError}\r\n          />\r\n        </ImageWrapper>\r\n      </ImageViewerContainer>\r\n\r\n      {isDesktop && !isMobile && panelVisible && !isError && (\r\n        <ViewerToolbar\r\n          ref={toolbarRef}\r\n          toolbar={toolbar}\r\n          percentValue={style.scale.get()}\r\n          generateContextMenu={generateContextMenu}\r\n          setIsOpenContextMenu={setIsOpenContextMenu}\r\n          toolbarEvent={toolbarEvent}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport styled from \"styled-components\";\r\n\r\nexport const DesktopDetailsContainer = styled.div`\r\n  padding-top: 21px;\r\n  height: 64px;\r\n  width: 100%;\r\n  background: linear-gradient(\r\n    0deg,\r\n    rgba(0, 0, 0, 0) 0%,\r\n    rgba(0, 0, 0, 0.8) 100%\r\n  );\r\n\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 307;\r\n\r\n  .title {\r\n    text-align: center;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    text-overflow: ellipsis;\r\n    width: calc(100% - 50px);\r\n\r\n    ${({ theme }) =>\r\n      theme.interfaceDirection === \"rtl\"\r\n        ? `padding-right: 16px;`\r\n        : `padding-left: 16px;`}\r\n    box-sizing: border-box;\r\n    color: ${(props) => props.theme.mediaViewer.titleColor};\r\n  }\r\n`;\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport React from \"react\";\r\n\r\nimport ViewerMediaCloseSvgUrl from \"PUBLIC_DIR/images/viewer.media.close.svg?url\";\r\n\r\nimport { Text } from \"@docspace/shared/components/text\";\r\nimport { IconButton } from \"@docspace/shared/components/icon-button\";\r\n\r\nimport { ControlBtn } from \"../../MediaViewer.styled\";\r\n\r\nimport type { DesktopDetailsProps } from \"./DesktopDetails.type\";\r\nimport { DesktopDetailsContainer } from \"./DesktopDetails.styled\";\r\n\r\nexport const DesktopDetails = ({\r\n  onMaskClick,\r\n  title,\r\n  className,\r\n}: DesktopDetailsProps) => {\r\n  return (\r\n    <DesktopDetailsContainer className={className}>\r\n      <Text isBold fontSize=\"14px\" className=\"title\">\r\n        {title}\r\n      </Text>\r\n      <ControlBtn onClick={onMaskClick} className=\"mediaPlayerClose\">\r\n        <IconButton\r\n          color=\"#fff\"\r\n          iconName={ViewerMediaCloseSvgUrl}\r\n          size={28}\r\n          isClickable\r\n        />\r\n      </ControlBtn>\r\n    </DesktopDetailsContainer>\r\n  );\r\n};\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport React from \"react\";\r\nimport BigIconPlay from \"PUBLIC_DIR/images/media.bgplay.react.svg\";\r\nimport WrapperPlayerBigPlayButton from \"./PlayerBigPlayButton.styled\";\r\nimport PlayerBigPlayButtonProps from \"./PlayerBigPlayButton.props\";\r\n\r\nexport const PlayerBigPlayButton = ({\r\n  visible,\r\n  onClick,\r\n}: PlayerBigPlayButtonProps) => {\r\n  if (!visible) return;\r\n\r\n  return (\r\n    <WrapperPlayerBigPlayButton>\r\n      <BigIconPlay onClick={onClick} />\r\n    </WrapperPlayerBigPlayButton>\r\n  );\r\n};\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport React, { memo } from \"react\";\r\n\r\nimport IconPlay from \"PUBLIC_DIR/images/videoplayer.play.react.svg\";\r\nimport IconStop from \"PUBLIC_DIR/images/videoplayer.stop.react.svg\";\r\n\r\nimport { WrapperPlayerPlayButton } from \"./PlayerPlayButton.styled\";\r\nimport type { PlayerPlayButtonProps } from \"./PlayerPlayButton.types\";\r\n\r\nconst PlayerPlayButton = memo(\r\n  ({ isPlaying, onClick }: PlayerPlayButtonProps) => {\r\n    const onTouchStart = (event: React.TouchEvent<HTMLDivElement>) => {\r\n      event.stopPropagation();\r\n    };\r\n    return (\r\n      <WrapperPlayerPlayButton onClick={onClick} onTouchStart={onTouchStart}>\r\n        {isPlaying ? <IconStop /> : <IconPlay />}\r\n      </WrapperPlayerPlayButton>\r\n    );\r\n  },\r\n);\r\n\r\nPlayerPlayButton.displayName = \"PlayerPlayButton\";\r\nexport { PlayerPlayButton };\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { mobile } from \"@docspace/shared/utils\";\r\nimport { formatTime } from \"../../MediaViewer.utils\";\r\n\r\nconst PlayerDurationWrapper = styled.div`\r\n  width: 102px;\r\n  color: #fff;\r\n  user-select: none;\r\n  font-size: 12px;\r\n  font-weight: 700;\r\n\r\n  margin-left: 10px;\r\n\r\n  @media ${mobile} {\r\n    margin-left: 0;\r\n  }\r\n`;\r\n\r\ntype PlayerDurationProps = {\r\n  currentTime: number;\r\n  duration: number;\r\n};\r\n\r\nexport const PlayerDuration = ({\r\n  currentTime,\r\n  duration,\r\n}: PlayerDurationProps) => {\r\n  return (\r\n    <PlayerDurationWrapper>\r\n      <time>{formatTime(currentTime)}</time> /{\" \"}\r\n      <time>{formatTime(duration)}</time>\r\n    </PlayerDurationWrapper>\r\n  );\r\n};\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport styled, { css } from \"styled-components\";\r\n\r\nimport { tablet } from \"@docspace/shared/utils\";\r\n\r\nexport const PlayerVolumeControlWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 10px;\r\n`;\r\n\r\nexport const IconWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst mobilecss = css`\r\n  input[type=\"range\"]::-webkit-slider-thumb {\r\n    appearance: none;\r\n    -moz-appearance: none;\r\n    -webkit-appearance: none;\r\n    visibility: visible;\r\n    opacity: 1;\r\n    background: #fff;\r\n    height: 10px;\r\n    width: 10px;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n  }\r\n\r\n  input[type=\"range\"]::-moz-range-thumb {\r\n    appearance: none;\r\n    -moz-appearance: none;\r\n    -webkit-appearance: none;\r\n    visibility: visible;\r\n    opacity: 1;\r\n    background: #fff;\r\n    height: 10px;\r\n    width: 10px;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n  }\r\n\r\n  input[type=\"range\"]::-ms-fill-upper {\r\n    appearance: none;\r\n    -moz-appearance: none;\r\n    -webkit-appearance: none;\r\n    visibility: visible;\r\n    opacity: 1;\r\n    background: #fff;\r\n    height: 10px;\r\n    width: 10px;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const VolumeWrapper = styled.div`\r\n  width: 123px;\r\n  height: 28px;\r\n  display: flex;\r\n  align-items: center;\r\n  padding-left: 9px;\r\n\r\n  input {\r\n    margin-right: 15px;\r\n    width: 80%;\r\n    height: 4px;\r\n\r\n    appearance: none;\r\n    -moz-appearance: none;\r\n    -webkit-appearance: none;\r\n\r\n    border-radius: 5px;\r\n\r\n    background: rgba(255, 255, 255, 0.3);\r\n    background-image: linear-gradient(#fff, #fff);\r\n    background-repeat: no-repeat;\r\n\r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n\r\n    @media ${tablet} {\r\n      width: 63%;\r\n    }\r\n  }\r\n\r\n  input[type=\"range\"]::-webkit-slider-thumb {\r\n    appearance: none;\r\n    -moz-appearance: none;\r\n    -webkit-appearance: none;\r\n    visibility: hidden;\r\n    opacity: 0;\r\n    background: #fff;\r\n  }\r\n\r\n  input[type=\"range\"]::-moz-range-thumb {\r\n    appearance: none;\r\n    -moz-appearance: none;\r\n    -webkit-appearance: none;\r\n    visibility: hidden;\r\n    opacity: 0;\r\n    background: #fff;\r\n  }\r\n\r\n  input[type=\"range\"]::-ms-fill-upper {\r\n    appearance: none;\r\n    -moz-appearance: none;\r\n    -webkit-appearance: none;\r\n    visibility: hidden;\r\n    opacity: 0;\r\n    background: #fff;\r\n  }\r\n\r\n  &:hover {\r\n    input[type=\"range\"]::-webkit-slider-thumb {\r\n      visibility: visible;\r\n      height: 10px;\r\n      width: 10px;\r\n      opacity: 1 !important;\r\n      border-radius: 50%;\r\n      cursor: pointer;\r\n    }\r\n\r\n    input[type=\"range\"]::-moz-range-thumb {\r\n      visibility: visible;\r\n      height: 10px;\r\n      width: 10px;\r\n      opacity: 1 !important;\r\n      border-radius: 50%;\r\n      cursor: pointer;\r\n      border: none;\r\n    }\r\n\r\n    input[type=\"range\"]::-ms-fill-upper {\r\n      visibility: visible;\r\n      height: 10px;\r\n      width: 10px;\r\n      opacity: 1 !important;\r\n      border-radius: 50%;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  @media ${tablet} {\r\n    ${mobilecss}\r\n  }\r\n`;\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport React, { memo } from \"react\";\r\n\r\nimport IconVolumeMax from \"PUBLIC_DIR/images/media.volumemax.react.svg\";\r\nimport IconVolumeMuted from \"PUBLIC_DIR/images/media.volumeoff.react.svg\";\r\nimport IconVolumeMin from \"PUBLIC_DIR/images/media.volumemin.react.svg\";\r\n\r\nimport {\r\n  IconWrapper,\r\n  PlayerVolumeControlWrapper,\r\n  VolumeWrapper,\r\n} from \"./PlayerVolumeControl.styled\";\r\n\r\ntype PlayerVolumeControlProps = {\r\n  volume: number;\r\n  isMuted: boolean;\r\n  toggleVolumeMute: VoidFunction;\r\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n};\r\n\r\nconst PlayerVolumeControl = memo(\r\n  ({\r\n    volume,\r\n    isMuted,\r\n    onChange,\r\n    toggleVolumeMute,\r\n  }: PlayerVolumeControlProps) => {\r\n    return (\r\n      <PlayerVolumeControlWrapper>\r\n        <IconWrapper onClick={toggleVolumeMute}>\r\n          {isMuted ? (\r\n            <IconVolumeMuted />\r\n          ) : volume >= 50 ? (\r\n            <IconVolumeMax />\r\n          ) : (\r\n            <IconVolumeMin />\r\n          )}\r\n        </IconWrapper>\r\n        <VolumeWrapper>\r\n          <input\r\n            style={{\r\n              backgroundSize: `${volume}% 100%`,\r\n            }}\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            value={volume}\r\n            onChange={onChange}\r\n          />\r\n        </VolumeWrapper>\r\n      </PlayerVolumeControlWrapper>\r\n    );\r\n  },\r\n);\r\n\r\nPlayerVolumeControl.displayName = \"PlayerVolumeControl\";\r\n\r\nexport { PlayerVolumeControl };\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport styled, { css } from \"styled-components\";\r\nimport { isMobile } from \"react-device-detect\";\r\n\r\nimport { tablet, desktop } from \"@docspace/shared/utils\";\r\n\r\nexport const HoverProgress = styled.div`\r\n  display: none;\r\n  position: absolute;\r\n  left: 0px;\r\n\r\n  height: 6px;\r\n\r\n  border-radius: 5px;\r\n  background-color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nexport const Progress = styled.div`\r\n  position: absolute;\r\n  left: 0px;\r\n  width: 0;\r\n  height: 4px;\r\n\r\n  border-radius: 5px;\r\n  background-color: rgba(255, 255, 255, 0.4);\r\n`;\r\n\r\nconst mobileCss = css`\r\n  margin-top: 16px;\r\n\r\n  input[type=\"range\"]::-webkit-slider-thumb {\r\n    appearance: none;\r\n    -moz-appearance: none;\r\n    -webkit-appearance: none;\r\n    visibility: visible;\r\n    opacity: 1;\r\n    background: #fff;\r\n    height: 10px;\r\n    width: 10px;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n  }\r\n\r\n  input[type=\"range\"]::-moz-range-thumb {\r\n    appearance: none;\r\n    -moz-appearance: none;\r\n    -webkit-appearance: none;\r\n    visibility: visible;\r\n    opacity: 1;\r\n    background: #fff;\r\n    height: 10px;\r\n    width: 10px;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n    border: none;\r\n  }\r\n\r\n  input[type=\"range\"]::-ms-fill-upper {\r\n    appearance: none;\r\n    -moz-appearance: none;\r\n    -webkit-appearance: none;\r\n    visibility: visible;\r\n    opacity: 1;\r\n    background: #fff;\r\n    height: 10px;\r\n    width: 10px;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const PlayerTimelineWrapper = styled.div`\r\n  position: relative;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  margin-top: 12px;\r\n\r\n  height: 4px;\r\n  width: 100%;\r\n\r\n  cursor: pointer;\r\n\r\n  time {\r\n    display: none;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: -25px;\r\n    font-size: 13px;\r\n    color: #fff;\r\n    pointer-events: none;\r\n    transform: translateX(-50%);\r\n  }\r\n\r\n  @media (hover: hover) {\r\n    &:hover {\r\n      /* height: 6px; */\r\n      input {\r\n        height: 6px;\r\n      }\r\n      ${HoverProgress} {\r\n        display: block;\r\n      }\r\n      transition: 0.1s height ease-in;\r\n    }\r\n\r\n    &:hover time {\r\n      display: block;\r\n    }\r\n  }\r\n\r\n  input {\r\n    width: 100%;\r\n    height: 4px;\r\n\r\n    margin: 0px;\r\n\r\n    outline: none;\r\n\r\n    appearance: none;\r\n    -moz-appearance: none;\r\n    -webkit-appearance: none;\r\n\r\n    border-radius: 5px;\r\n\r\n    background: rgba(255, 255, 255, 0.3);\r\n    background-image: linear-gradient(#fff, #fff);\r\n    background-repeat: no-repeat;\r\n\r\n    z-index: 1;\r\n\r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n\r\n    transition: height 0.3s ease 0s;\r\n  }\r\n\r\n  input[type=\"range\"]::-webkit-slider-thumb {\r\n    appearance: none;\r\n    -moz-appearance: none;\r\n    -webkit-appearance: none;\r\n    visibility: hidden;\r\n    opacity: 0;\r\n    background: #fff;\r\n\r\n    transition:\r\n      opacity 0.3s ease 0s,\r\n      visibility 0.3s ease 0s;\r\n  }\r\n\r\n  input[type=\"range\"]::-moz-range-thumb {\r\n    appearance: none;\r\n    -moz-appearance: none;\r\n    -webkit-appearance: none;\r\n    visibility: hidden;\r\n    opacity: 0;\r\n    background: #fff;\r\n    transition:\r\n      opacity 0.3s ease 0s,\r\n      visibility 0.3s ease 0s;\r\n  }\r\n\r\n  input[type=\"range\"]::-ms-fill-upper {\r\n    appearance: none;\r\n    -moz-appearance: none;\r\n    -webkit-appearance: none;\r\n    visibility: hidden;\r\n    opacity: 0;\r\n    background: #fff;\r\n    transition:\r\n      opacity 0.3s ease 0s,\r\n      visibility 0.3s ease 0s;\r\n  }\r\n\r\n  &:hover {\r\n    input[type=\"range\"]::-webkit-slider-thumb {\r\n      visibility: visible;\r\n      height: 12px;\r\n      width: 12px;\r\n      opacity: 1 !important;\r\n      border-radius: 50%;\r\n      cursor: pointer;\r\n    }\r\n\r\n    input[type=\"range\"]::-moz-range-thumb {\r\n      visibility: visible;\r\n      height: 12px;\r\n      width: 12px;\r\n      opacity: 1 !important;\r\n      border-radius: 50%;\r\n      cursor: pointer;\r\n      border: none;\r\n    }\r\n\r\n    input[type=\"range\"]::-ms-fill-upper {\r\n      visibility: visible;\r\n      height: 12px;\r\n      width: 12px;\r\n      opacity: 1 !important;\r\n      border-radius: 50%;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  @media ${desktop} {\r\n    ${isMobile && mobileCss}\r\n  }\r\n\r\n  @media ${tablet} {\r\n    ${mobileCss}\r\n  }\r\n`;\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport React, { useRef, useImperativeHandle, forwardRef } from \"react\";\r\n\r\nimport { formatTime } from \"../../MediaViewer.utils\";\r\n\r\nimport type {\r\n  PlayerTimelineProps,\r\n  PlayerTimelineRef,\r\n} from \"./PlayerTimeline.props\";\r\nimport {\r\n  HoverProgress,\r\n  PlayerTimelineWrapper,\r\n  Progress,\r\n} from \"./PlayerTimeline.styled\";\r\n\r\nconst PlayerTimeline = forwardRef<PlayerTimelineRef, PlayerTimelineProps>(\r\n  ({ value, duration, onChange, onMouseEnter, onMouseLeave }, ref) => {\r\n    const timelineTooltipRef = useRef<HTMLTimeElement>(null);\r\n    const timelineRef = useRef<HTMLDivElement>(null);\r\n    const hoverProgressRef = useRef<HTMLDivElement>(null);\r\n    const setTimeoutTimelineTooltipRef = useRef<NodeJS.Timeout>();\r\n    const pregressRef = useRef<HTMLDivElement>(null);\r\n\r\n    const showTimelineTooltip = () => {\r\n      if (!timelineTooltipRef.current) return;\r\n\r\n      const callback = () => {\r\n        if (timelineTooltipRef.current) {\r\n          timelineTooltipRef.current.style.removeProperty(\"display\");\r\n          setTimeoutTimelineTooltipRef.current = undefined;\r\n        }\r\n      };\r\n\r\n      if (setTimeoutTimelineTooltipRef.current) {\r\n        clearTimeout(setTimeoutTimelineTooltipRef.current);\r\n        setTimeoutTimelineTooltipRef.current = setTimeout(callback, 500);\r\n      } else {\r\n        timelineTooltipRef.current.style.display = \"block\";\r\n        setTimeoutTimelineTooltipRef.current = setTimeout(callback, 500);\r\n      }\r\n    };\r\n\r\n    const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      if (!timelineTooltipRef.current || !timelineRef.current) return;\r\n\r\n      const { clientWidth } = timelineRef.current;\r\n\r\n      const percent = Number(event.target.value) / 100;\r\n\r\n      const offsetX = clientWidth * percent;\r\n\r\n      const time = Math.floor(percent * duration);\r\n\r\n      const left =\r\n        offsetX < 20\r\n          ? 20\r\n          : offsetX > clientWidth - 20\r\n            ? clientWidth - 20\r\n            : offsetX;\r\n\r\n      timelineTooltipRef.current.style.left = `${left}px`;\r\n      timelineTooltipRef.current.innerText = formatTime(time);\r\n\r\n      showTimelineTooltip();\r\n\r\n      onChange(event);\r\n    };\r\n\r\n    const handleMouseMove = (\r\n      event: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n    ) => {\r\n      if (\r\n        !timelineTooltipRef.current ||\r\n        !timelineRef.current ||\r\n        !hoverProgressRef.current\r\n      )\r\n        return;\r\n\r\n      const { clientWidth } = timelineRef.current;\r\n      const { max, min } = Math;\r\n\r\n      const offsetX = min(max(event.nativeEvent.offsetX, 0), clientWidth);\r\n\r\n      const percent = Math.floor((offsetX / clientWidth) * duration);\r\n\r\n      hoverProgressRef.current.style.width = `${offsetX}px`;\r\n\r\n      const left =\r\n        offsetX < 20\r\n          ? 20\r\n          : offsetX > clientWidth - 20\r\n            ? clientWidth - 20\r\n            : offsetX;\r\n\r\n      timelineTooltipRef.current.style.left = `${left}px`;\r\n      timelineTooltipRef.current.innerText = formatTime(percent);\r\n    };\r\n\r\n    useImperativeHandle(\r\n      ref,\r\n      () => {\r\n        return {\r\n          setProgress: (progress: number) => {\r\n            if (!pregressRef.current) return;\r\n\r\n            pregressRef.current.style.width = `${progress * 100}%`;\r\n          },\r\n        };\r\n      },\r\n      [],\r\n    );\r\n\r\n    return (\r\n      <PlayerTimelineWrapper\r\n        ref={timelineRef}\r\n        onMouseMove={handleMouseMove}\r\n        onMouseEnter={onMouseEnter}\r\n        onMouseLeave={onMouseLeave}\r\n      >\r\n        <time ref={timelineTooltipRef}>00:00</time>\r\n        <Progress ref={pregressRef} />\r\n        <HoverProgress ref={hoverProgressRef} />\r\n        <input\r\n          min=\"0\"\r\n          max=\"100\"\r\n          step=\"any\"\r\n          type=\"range\"\r\n          value={value}\r\n          onChange={handleOnChange}\r\n          style={{\r\n            backgroundSize: `${value}% 100%`,\r\n          }}\r\n        />\r\n      </PlayerTimelineWrapper>\r\n    );\r\n  },\r\n);\r\n\r\nPlayerTimeline.displayName = \"PlayerTimeline\";\r\n\r\nexport { PlayerTimeline };\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport styled from \"styled-components\";\r\n\r\nexport const SpeedControlWrapper = styled.div`\r\n  position: relative;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 48px;\r\n  height: 48px;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  svg {\r\n    path {\r\n      fill: #fff;\r\n    }\r\n  }\r\n\r\n  rect {\r\n    stroke: #fff;\r\n  }\r\n`;\r\n\r\nexport const DropDown = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  height: 120px;\r\n  width: 48px;\r\n\r\n  padding: 4px 0px;\r\n\r\n  position: absolute;\r\n  bottom: 48px;\r\n  z-index: 50;\r\n\r\n  color: #fff;\r\n  background: #333;\r\n  text-align: center;\r\n  border-radius: 7px 7px 0px 0px;\r\n`;\r\n\r\nexport const DropDownItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 30px;\r\n  width: 48px;\r\n  &:hover {\r\n    cursor: pointer;\r\n    background: #222;\r\n  }\r\n`;\r\n\r\nexport const ToastSpeed = styled.div`\r\n  position: fixed;\r\n\r\n  top: 50%;\r\n  left: 50%;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 72px;\r\n  height: 56px;\r\n\r\n  border-radius: 9px;\r\n  visibility: visible;\r\n\r\n  transform: translate(-50%, -50%);\r\n  background-color: rgba(51, 51, 51, 0.65);\r\n\r\n  svg {\r\n    width: 46px;\r\n    height: 46px;\r\n    path {\r\n      fill: #fff;\r\n    }\r\n  }\r\n\r\n  rect {\r\n    stroke: #fff;\r\n  }\r\n`;\r\n","var _path, _rect;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgMediaviewer05Xreact(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 28,\n    height: 20,\n    viewBox: \"0 0 28 20\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.67 14H8.94l-1.66-2.7-1.66 2.7H4l2.368-3.682-2.217-3.457h1.67L7.36 9.43 8.87 6.86h1.63l-2.241 3.54L10.67 14zm5.351-3.57c0 .577-.045 1.091-.136 1.544a3.35 3.35 0 01-.43 1.152 1.958 1.958 0 01-.771.723c-.32.166-.707.249-1.162.249-.573 0-1.044-.145-1.412-.435-.367-.293-.64-.713-.815-1.26-.176-.55-.264-1.207-.264-1.972 0-.772.08-1.431.24-1.978.162-.55.426-.972.79-1.265.365-.292.852-.439 1.46-.439.57 0 1.039.147 1.407.44.37.29.646.71.825 1.26.179.546.268 1.207.268 1.982zm-3.49 0c0 .544.029.998.087 1.363.062.361.165.633.308.815a.715.715 0 00.595.274c.251 0 .448-.09.591-.269.147-.182.251-.454.313-.815.062-.365.093-.82.093-1.367 0-.544-.031-.998-.093-1.363-.062-.364-.166-.638-.313-.82a.705.705 0 00-.59-.278.71.71 0 00-.596.278c-.143.182-.246.456-.308.82a8.805 8.805 0 00-.088 1.363zm4.433 2.872c0-.306.083-.521.249-.645.17-.123.373-.185.61-.185.231 0 .43.062.596.185.17.124.254.339.254.645 0 .293-.085.504-.254.635a.936.936 0 01-.596.195.971.971 0 01-.61-.195c-.166-.13-.25-.342-.25-.635zm5.278-3.863c.436 0 .824.083 1.162.25.342.165.61.41.806.732.195.322.293.72.293 1.191 0 .515-.108.959-.322 1.333a2.072 2.072 0 01-.953.855c-.42.198-.944.298-1.572.298-.374 0-.727-.033-1.06-.098a3.063 3.063 0 01-.864-.288v-1.304c.248.13.544.241.89.332.347.088.675.132.98.132.3 0 .552-.039.757-.117a.934.934 0 00.464-.371c.108-.17.161-.384.161-.645 0-.348-.117-.615-.351-.8-.235-.186-.594-.279-1.08-.279-.185 0-.379.018-.58.054a6.255 6.255 0 00-.498.107l-.601-.322.269-3.638h3.872v1.28h-2.55l-.131 1.401c.11-.023.231-.046.361-.068.13-.023.313-.035.547-.035z\",\n    fill: \"#000\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 1,\n    y: 1,\n    width: 26,\n    height: 18,\n    rx: 2,\n    stroke: \"#000\",\n    strokeWidth: 2\n  })));\n}\nexport default SvgMediaviewer05Xreact;","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport React, { memo } from \"react\";\r\nimport IconExitFullScreen from \"PUBLIC_DIR/images/videoplayer.exit.react.svg\";\r\nimport IconFullScreen from \"PUBLIC_DIR/images/videoplayer.full.react.svg\";\r\nimport PlayerFullSceenProps from \"./PlayerFullScreen.props\";\r\n\r\nimport { PlayerFullSceenWrapper } from \"./PlayerFullScreen.styled\";\r\n\r\nconst PlayerFullScreen = memo(\r\n  ({ isAudio, onClick, isFullScreen }: PlayerFullSceenProps) => {\r\n    if (isAudio) return;\r\n\r\n    return (\r\n      <PlayerFullSceenWrapper onClick={onClick}>\r\n        {isFullScreen ? <IconExitFullScreen /> : <IconFullScreen />}\r\n      </PlayerFullSceenWrapper>\r\n    );\r\n  },\r\n);\r\n\r\nPlayerFullScreen.displayName = \"PlayerFullScreen\";\r\nexport { PlayerFullScreen };\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport styled from \"styled-components\";\r\n\r\nexport const PlayerDesktopContextMenuWrapper = styled.div`\r\n  position: relative;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-width: 48px;\r\n  height: 48px;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  & > svg {\r\n    padding-left: 19px;\r\n    padding-bottom: 3px;\r\n    width: 18px;\r\n    height: 20px;\r\n\r\n    path {\r\n      fill: #fff;\r\n    }\r\n\r\n    rect {\r\n      stroke: #fff;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DownloadIconWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-width: 48px;\r\n  height: 48px;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  svg {\r\n    path {\r\n      fill: #fff;\r\n    }\r\n  }\r\n`;\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport React, { memo, useEffect, useMemo, useRef, useState } from \"react\";\r\n\r\nimport DownloadReactSvgUrl from \"PUBLIC_DIR/images/download.react.svg\";\r\nimport MediaContextMenu from \"PUBLIC_DIR/images/vertical-dots.react.svg\";\r\n\r\nimport {\r\n  DownloadIconWrapper,\r\n  PlayerDesktopContextMenuWrapper,\r\n} from \"./PlayerDesktopContextMenu.styled\";\r\nimport PlayerDesktopContextMenuProps from \"./PlayerDesktopContextMenu.props\";\r\n\r\nconst ContextRight = \"9\";\r\nconst ContextBottom = \"48\";\r\n\r\nconst PlayerDesktopContextMenu = memo(\r\n  ({\r\n    canDownload,\r\n    isPreviewFile,\r\n    hideContextMenu,\r\n    onDownloadClick,\r\n    generateContextMenu,\r\n  }: PlayerDesktopContextMenuProps) => {\r\n    const ref = useRef<HTMLDivElement>(null);\r\n\r\n    const [isOpenContext, setIsOpenContext] = useState<boolean>(false);\r\n\r\n    const context = useMemo(\r\n      () => generateContextMenu(isOpenContext, ContextRight, ContextBottom),\r\n      [generateContextMenu, isOpenContext],\r\n    );\r\n\r\n    const toggleContext = () => setIsOpenContext((pre) => !pre);\r\n\r\n    useEffect(() => {\r\n      const listener = (event: MouseEvent | TouchEvent) => {\r\n        if (!ref.current || ref.current.contains(event.target as Node)) {\r\n          return;\r\n        }\r\n        setIsOpenContext(false);\r\n      };\r\n      document.addEventListener(\"mousedown\", listener);\r\n      return () => {\r\n        document.removeEventListener(\"mousedown\", listener);\r\n      };\r\n    }, []);\r\n\r\n    if (hideContextMenu && canDownload) {\r\n      return (\r\n        <DownloadIconWrapper onClick={onDownloadClick}>\r\n          <DownloadReactSvgUrl />\r\n        </DownloadIconWrapper>\r\n      );\r\n    }\r\n    if (isPreviewFile) return;\r\n\r\n    return (\r\n      <PlayerDesktopContextMenuWrapper ref={ref} onClick={toggleContext}>\r\n        <MediaContextMenu />\r\n        {context}\r\n      </PlayerDesktopContextMenuWrapper>\r\n    );\r\n  },\r\n);\r\n\r\nPlayerDesktopContextMenu.displayName = \"PlayerDesktopContextMenu\";\r\n\r\nexport { PlayerDesktopContextMenu };\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport styled from \"styled-components\";\r\nimport { animated } from \"@react-spring/web\";\r\n\r\nimport { tablet, mobile } from \"@docspace/shared/utils\";\r\n\r\nexport const ContainerPlayer = styled.div<{ $isFullScreen: boolean }>`\r\n  position: fixed;\r\n  inset: 0;\r\n  z-index: 305;\r\n  background-color: ${(props) =>\r\n    props.$isFullScreen ? \"#000\" : \"rgba(55, 55, 55, 0.6)\"};\r\n  touch-action: none;\r\n`;\r\n\r\nexport const VideoWrapper = styled(animated.div)<{ $visible: boolean }>`\r\n  inset: 0;\r\n  visibility: ${(props) => (props.$visible ? \"visible\" : \"hidden\")};\r\n  opacity: ${(props) => (props.$visible ? 1 : 0)};\r\n  height: 100%;\r\n  width: 100%;\r\n  touch-action: none;\r\n\r\n  .audio-container {\r\n    width: 190px;\r\n    height: 190px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background: rgba(0, 0, 0, 0.7);\r\n    border-radius: 20px;\r\n  }\r\n`;\r\n\r\nexport const StyledPlayerControls = styled.div<{ $isShow: boolean }>`\r\n  position: fixed;\r\n  right: 0px;\r\n  bottom: 0px;\r\n  left: 0px;\r\n  z-index: 307;\r\n  display: flex;\r\n\r\n  width: 100%;\r\n  height: 188px;\r\n\r\n  visibility: ${(props) => (props.$isShow ? \"visible\" : \"hidden\")};\r\n  opacity: ${(props) => (props.$isShow ? \"1\" : \"0\")};\r\n\r\n  background: linear-gradient(\r\n    rgba(0, 0, 0, 0) 0%,\r\n    rgba(0, 0, 0, 0.64) 48.44%,\r\n    rgba(0, 0, 0, 0.89) 100%\r\n  );\r\n\r\n  @media ${tablet} {\r\n    background-color: rgba(0, 0, 0, 0.8);\r\n    height: 80px;\r\n  }\r\n`;\r\n\r\nexport const ControlContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  margin-top: 30px;\r\n\r\n  & > div {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  @media ${tablet} {\r\n    margin-top: 8px;\r\n    .player_right-control {\r\n      margin-right: -8px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PlayerControlsWrapper = styled.div`\r\n  padding: 0 30px;\r\n  width: 100%;\r\n  margin-top: 80px;\r\n\r\n  @media ${tablet} {\r\n    margin-top: 0px;\r\n  }\r\n\r\n  @media ${mobile} {\r\n    padding: 0 15px;\r\n  }\r\n`;\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport lodash from \"lodash\";\r\nimport { useGesture } from \"@use-gesture/react\";\r\nimport { useSpring, animated } from \"@react-spring/web\";\r\nimport {\r\n  isDesktop as isDesktopDeviceDetect,\r\n  isIOS,\r\n  isMobileOnly,\r\n} from \"react-device-detect\";\r\nimport React, {\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\n\r\nimport { includesMethod } from \"@docspace/shared/utils/typeGuards\";\r\n\r\nimport type { Point } from \"../../MediaViewer.types\";\r\nimport { KeyboardEventKeys } from \"../../MediaViewer.enums\";\r\nimport { calculateAdjustImageUtil } from \"../../MediaViewer.utils\";\r\n\r\nimport { PlayerBigPlayButton } from \"../PlayerBigPlayButton\";\r\nimport { ViewerLoader } from \"../ViewerLoader\";\r\nimport { PlayerPlayButton } from \"../PlayerPlayButton\";\r\nimport { PlayerDuration } from \"../PlayerDuration/inxed\";\r\nimport { PlayerVolumeControl } from \"../PlayerVolumeControl\";\r\nimport { PlayerTimeline } from \"../PlayerTimeline\";\r\nimport { PlayerSpeedControl } from \"../PlayerSpeedControl\";\r\nimport { PlayerFullScreen } from \"../PlayerFullScreen\";\r\nimport { PlayerDesktopContextMenu } from \"../PlayerDesktopContextMenu\";\r\nimport { MessageError } from \"../MessageError\";\r\n\r\nimport type { PlayerTimelineRef } from \"../PlayerTimeline/PlayerTimeline.props\";\r\n\r\nimport type ViewerPlayerProps from \"./ViewerPlayer.props\";\r\nimport {\r\n  ContainerPlayer,\r\n  ControlContainer,\r\n  PlayerControlsWrapper,\r\n  StyledPlayerControls,\r\n  VideoWrapper,\r\n} from \"./ViewerPlayer.styled\";\r\nimport {\r\n  VolumeLocalStorageKey,\r\n  audioHeight,\r\n  audioWidth,\r\n  defaultVolume,\r\n} from \"./ViewerPlayer.constants\";\r\n\r\nexport const ViewerPlayer = ({\r\n  src,\r\n  isAudio,\r\n  isVideo,\r\n  isError,\r\n  devices,\r\n  audioIcon,\r\n  errorTitle,\r\n  isLastImage,\r\n  isFistImage,\r\n  canDownload,\r\n  isFullScreen,\r\n  panelVisible,\r\n  thumbnailSrc,\r\n  mobileDetails,\r\n  isPreviewFile,\r\n  isOpenContextMenu,\r\n  onMask,\r\n  onNext,\r\n  onPrev,\r\n  setIsError,\r\n  contextModel,\r\n  setPanelVisible,\r\n  setIsFullScreen,\r\n  onDownloadClick,\r\n  generateContextMenu,\r\n  removeToolbarVisibleTimer,\r\n  removePanelVisibleTimeout,\r\n  restartToolbarVisibleTimer,\r\n}: ViewerPlayerProps) => {\r\n  const videoRef = useRef<HTMLVideoElement>(null);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const playerWrapperRef = useRef<HTMLDivElement>(null);\r\n  const isDurationInfinityRef = useRef<boolean>(false);\r\n  const isOpenContextMenuRef = useRef<boolean>(isOpenContextMenu);\r\n  const timelineRef = useRef<PlayerTimelineRef>(null);\r\n\r\n  const { isDesktop, isMobile } = devices;\r\n\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [isPlaying, setIsPlaying] = useState<boolean>(false);\r\n  const [isWaiting, setIsWaiting] = useState<boolean>(false);\r\n  const [isMuted, setIsMuted] = useState<boolean>(() => {\r\n    const valueStorage = localStorage.getItem(VolumeLocalStorageKey);\r\n\r\n    if (!valueStorage) return false;\r\n\r\n    return valueStorage === \"0\";\r\n  });\r\n\r\n  const [timeline, setTimeline] = useState<number>(0);\r\n  const [duration, setDuration] = useState<number>(0);\r\n  const [currentTime, setCurrentTime] = useState<number>(0);\r\n\r\n  const [volume, setVolume] = useState<number>(() => {\r\n    const valueStorage = localStorage.getItem(VolumeLocalStorageKey);\r\n\r\n    if (!valueStorage) return defaultVolume;\r\n\r\n    return JSON.parse(valueStorage);\r\n  });\r\n\r\n  const [style, api] = useSpring(() => ({\r\n    width: isAudio ? window.innerWidth : 0,\r\n    height: isAudio ? window.innerHeight : 0,\r\n    x: isAudio ? (window.innerWidth - audioWidth) / 2 : 0,\r\n    y: isAudio ? (window.innerHeight - audioHeight) / 2 : 0,\r\n    opacity: 1,\r\n  }));\r\n\r\n  const calculateAdjustImage = (point: Point) => {\r\n    if (!playerWrapperRef.current || !containerRef.current) return point;\r\n\r\n    return calculateAdjustImageUtil(\r\n      playerWrapperRef.current,\r\n      containerRef.current,\r\n      point,\r\n    );\r\n  };\r\n\r\n  useGesture(\r\n    {\r\n      onDrag: ({ offset: [dx, dy], movement: [mdx, mdy], memo, first }) => {\r\n        if (isDesktop) return;\r\n\r\n        if (first) {\r\n          memo = style.y.get();\r\n        }\r\n\r\n        api.start({\r\n          x:\r\n            (isFistImage && mdx > 0) || (isLastImage && mdx < 0) || isFullScreen\r\n              ? style.x.get()\r\n              : dx,\r\n          y: dy >= memo ? dy : style.y.get(),\r\n          opacity: mdy > 0 ? Math.max(1 - mdy / 120, 0) : style.opacity.get(),\r\n          immediate: true,\r\n        });\r\n\r\n        return memo;\r\n      },\r\n      onDragEnd: ({ movement: [mdx, mdy] }) => {\r\n        if (isDesktop) return;\r\n\r\n        if (!isFullScreen) {\r\n          if (mdx < -style.width.get() / 4) {\r\n            return onNext?.();\r\n          }\r\n          if (mdx > style.width.get() / 4) {\r\n            return onPrev?.();\r\n          }\r\n        }\r\n        if (mdy > 120) {\r\n          return onMask?.();\r\n        }\r\n\r\n        const newPoint = calculateAdjustImage({\r\n          x: style.x.get(),\r\n          y: style.y.get(),\r\n        });\r\n\r\n        api.start({\r\n          ...newPoint,\r\n          opacity: 1,\r\n        });\r\n      },\r\n      onClick: ({ dragging, event }) => {\r\n        if (isDesktopDeviceDetect && event.target === containerRef.current)\r\n          return onMask?.();\r\n\r\n        if (\r\n          dragging ||\r\n          !isMobile ||\r\n          isAudio ||\r\n          event.target !== containerRef.current\r\n        )\r\n          return;\r\n\r\n        if (panelVisible) {\r\n          removeToolbarVisibleTimer();\r\n          setPanelVisible(false);\r\n        } else {\r\n          if (isPlaying) restartToolbarVisibleTimer();\r\n          setPanelVisible(true);\r\n        }\r\n      },\r\n    },\r\n    {\r\n      drag: {\r\n        from: () => [style.x.get(), style.y.get()],\r\n        axis: \"lock\",\r\n      },\r\n      target: containerRef,\r\n    },\r\n  );\r\n\r\n  const resetState = useCallback(() => {\r\n    setTimeline(0);\r\n    setDuration(0);\r\n    setCurrentTime(0);\r\n    setIsPlaying(false);\r\n    setIsError(false);\r\n    removePanelVisibleTimeout();\r\n    timelineRef.current?.setProgress(0);\r\n  }, [removePanelVisibleTimeout, setIsError]);\r\n\r\n  const getVideoWidthHeight = useCallback(\r\n    (video: HTMLVideoElement): [number, number] => {\r\n      const maxWidth = window.innerWidth;\r\n      const maxHeight = window.innerHeight;\r\n\r\n      const elementWidth = isAudio ? audioWidth : video.videoWidth;\r\n      const elementHeight = isAudio ? audioHeight : video.videoHeight;\r\n\r\n      let width =\r\n        elementWidth > maxWidth\r\n          ? maxWidth\r\n          : isFullScreen\r\n            ? Math.max(maxWidth, elementWidth)\r\n            : Math.min(maxWidth, elementWidth);\r\n\r\n      let height = (width / elementWidth) * elementHeight;\r\n\r\n      if (height > maxHeight) {\r\n        height = maxHeight;\r\n        width = (height / elementHeight) * elementWidth;\r\n      }\r\n\r\n      return [width, height];\r\n    },\r\n    [isAudio, isFullScreen],\r\n  );\r\n\r\n  const getVideoPosition = (\r\n    width: number,\r\n    height: number,\r\n  ): [number, number] => {\r\n    const left = (window.innerWidth - width) / 2;\r\n    const top = (window.innerHeight - height) / 2;\r\n\r\n    return [left, top];\r\n  };\r\n\r\n  const setSizeAndPosition = useCallback(\r\n    (target: HTMLVideoElement) => {\r\n      const [width, height] = getVideoWidthHeight(target);\r\n      const [x, y] = getVideoPosition(width, height);\r\n\r\n      api.start({\r\n        x,\r\n        y,\r\n        width,\r\n        height,\r\n        immediate: true,\r\n      });\r\n    },\r\n    [api, getVideoWidthHeight],\r\n  );\r\n\r\n  const handleResize = useCallback(() => {\r\n    const target = videoRef.current;\r\n\r\n    if (!target || isLoading) return;\r\n\r\n    setSizeAndPosition(target);\r\n  }, [isLoading, setSizeAndPosition]);\r\n\r\n  const handleLoadedMetaDataVideo = (\r\n    event: React.SyntheticEvent<HTMLVideoElement, Event>,\r\n  ) => {\r\n    const target = event.target as HTMLVideoElement;\r\n\r\n    setSizeAndPosition(target);\r\n\r\n    target.volume = volume / 100;\r\n    target.muted = isMuted;\r\n    target.playbackRate = 1;\r\n\r\n    if (target.duration === Infinity) {\r\n      isDurationInfinityRef.current = true;\r\n      target.currentTime = Number.MAX_SAFE_INTEGER;\r\n      return;\r\n    }\r\n    setDuration(target.duration);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const handleDurationChange = (\r\n    event: React.SyntheticEvent<HTMLVideoElement, Event>,\r\n  ) => {\r\n    const target = event.target as HTMLVideoElement;\r\n    if (!Number.isFinite(target.duration) || !isDurationInfinityRef.current)\r\n      return;\r\n\r\n    target.currentTime = 0;\r\n    isDurationInfinityRef.current = false;\r\n    setDuration(target.duration);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const togglePlay = useCallback(() => {\r\n    if (!videoRef.current || isError) return;\r\n\r\n    if (isMobile && !isPlaying && isVideo) {\r\n      restartToolbarVisibleTimer();\r\n    }\r\n\r\n    if (isPlaying) {\r\n      videoRef.current.pause();\r\n      setIsPlaying(false);\r\n      setPanelVisible(true);\r\n      if (isMobile) removeToolbarVisibleTimer();\r\n    } else {\r\n      videoRef.current.play();\r\n      setIsPlaying(true);\r\n    }\r\n  }, [\r\n    isMobile,\r\n    isPlaying,\r\n    isVideo,\r\n    isError,\r\n    setPanelVisible,\r\n    restartToolbarVisibleTimer,\r\n    removeToolbarVisibleTimer,\r\n  ]);\r\n\r\n  const handleBigPlayButtonClick = () => {\r\n    togglePlay();\r\n  };\r\n\r\n  const handleProgress = () => {\r\n    if (!videoRef.current) return;\r\n\r\n    let range = 0;\r\n    const bf = videoRef.current.buffered;\r\n    const time = videoRef.current.currentTime;\r\n\r\n    while (\r\n      bf.length > range &&\r\n      !(bf.start(range) <= time && time <= bf.end(range))\r\n    ) {\r\n      range += 1;\r\n    }\r\n\r\n    if (bf.length <= range)\r\n      return timelineRef.current?.setProgress(\r\n        videoRef.current.currentTime / videoRef.current.duration,\r\n      );\r\n\r\n    const loadEndPercentage = bf.end(range) / videoRef.current.duration;\r\n\r\n    timelineRef.current?.setProgress(loadEndPercentage);\r\n  };\r\n\r\n  const handleTimeUpdate = () => {\r\n    if (!videoRef.current || isLoading) return;\r\n\r\n    const percent =\r\n      (videoRef.current.currentTime / videoRef.current.duration) * 100;\r\n\r\n    setTimeline(percent);\r\n\r\n    setCurrentTime(videoRef.current.currentTime);\r\n  };\r\n\r\n  const handleChangeTimeLine = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (!videoRef.current) return;\r\n\r\n    const percent = Number(event.target.value);\r\n    const newCurrentTime = (percent / 100) * videoRef.current.duration;\r\n\r\n    handleProgress();\r\n    setTimeline(percent);\r\n    setCurrentTime(newCurrentTime);\r\n    videoRef.current.currentTime = newCurrentTime;\r\n  };\r\n\r\n  const handleClickVideo = () => {\r\n    if (isMobile) {\r\n      if (!isPlaying) {\r\n        return setPanelVisible((prev) => !prev);\r\n      }\r\n\r\n      if (panelVisible) {\r\n        videoRef.current?.pause();\r\n        setIsPlaying(false);\r\n        return removeToolbarVisibleTimer();\r\n      }\r\n\r\n      return isPlaying && restartToolbarVisibleTimer();\r\n    }\r\n    togglePlay();\r\n  };\r\n\r\n  const handleVideoEnded = () => {\r\n    setIsPlaying(false);\r\n    if (isMobile) removePanelVisibleTimeout();\r\n  };\r\n\r\n  const handleVolumeChange = useCallback(\r\n    (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      if (!videoRef.current) return;\r\n\r\n      const newVolume = Number(event.target.value);\r\n      localStorage.setItem(VolumeLocalStorageKey, event.target.value);\r\n\r\n      if (newVolume === 0) {\r\n        setIsMuted(true);\r\n        videoRef.current.muted = true;\r\n      }\r\n\r\n      if (isMuted && newVolume > 0) {\r\n        setIsMuted(false);\r\n        videoRef.current.muted = false;\r\n      }\r\n\r\n      videoRef.current.volume = newVolume / 100;\r\n      setVolume(newVolume);\r\n    },\r\n    [isMuted],\r\n  );\r\n\r\n  const handleSpeedChange = useCallback((speed: number) => {\r\n    if (!videoRef.current) return;\r\n\r\n    videoRef.current.playbackRate = speed;\r\n  }, []);\r\n\r\n  const toggleVolumeMute = useCallback(() => {\r\n    if (!videoRef.current) return;\r\n\r\n    const newVolume = videoRef.current.volume * 100 || defaultVolume;\r\n\r\n    if (isMuted) {\r\n      setIsMuted(false);\r\n      setVolume(newVolume);\r\n\r\n      videoRef.current.volume = newVolume / 100;\r\n      videoRef.current.muted = false;\r\n\r\n      localStorage.setItem(VolumeLocalStorageKey, newVolume.toString());\r\n    } else {\r\n      setIsMuted(true);\r\n      setVolume(0);\r\n      videoRef.current.muted = true;\r\n      localStorage.setItem(VolumeLocalStorageKey, \"0\");\r\n    }\r\n  }, [isMuted]);\r\n\r\n  const toggleVideoFullscreen = useCallback(() => {\r\n    if (!videoRef.current) return;\r\n\r\n    if (isIOS && isMobileOnly) {\r\n      videoRef.current.pause();\r\n      videoRef.current.playsInline = false;\r\n      videoRef.current.play();\r\n      videoRef.current.playsInline = true;\r\n\r\n      return;\r\n    }\r\n\r\n    if (isFullScreen) {\r\n      if (document.exitFullscreen) {\r\n        document.exitFullscreen();\r\n      } else if (includesMethod(document, \"webkitExitFullscreen\")) {\r\n        document.webkitExitFullscreen();\r\n      } else if (includesMethod(document, \"mozCancelFullScreen\")) {\r\n        document.mozCancelFullScreen();\r\n      } else if (includesMethod(document, \"msExitFullscreen\")) {\r\n        document.msExitFullscreen();\r\n      }\r\n    } else if (document.documentElement.requestFullscreen) {\r\n      document.documentElement.requestFullscreen();\r\n    } else if (\r\n      includesMethod(document.documentElement, \"mozRequestFullScreen\")\r\n    ) {\r\n      document.documentElement.mozRequestFullScreen();\r\n    } else if (\r\n      includesMethod(document.documentElement, \"webkitRequestFullScreen\")\r\n    ) {\r\n      document.documentElement.webkitRequestFullScreen();\r\n    } else if (\r\n      includesMethod(document.documentElement, \"webkitEnterFullScreen\")\r\n    ) {\r\n      document.documentElement.webkitEnterFullScreen();\r\n    }\r\n\r\n    setIsFullScreen((pre) => !pre);\r\n  }, [isFullScreen, setIsFullScreen]);\r\n\r\n  const onMouseEnter = () => {\r\n    if (isMobile) return;\r\n\r\n    removeToolbarVisibleTimer();\r\n  };\r\n  const onMouseLeave = () => {\r\n    if (isMobile) return;\r\n\r\n    restartToolbarVisibleTimer();\r\n  };\r\n\r\n  const onTouchStart = () => {\r\n    if (isPlaying && isVideo) restartToolbarVisibleTimer();\r\n  };\r\n\r\n  const hadleError = useCallback(\r\n    (error: React.SyntheticEvent<HTMLVideoElement, Event>) => {\r\n      setIsError(true);\r\n      setIsLoading(false);\r\n\r\n      // eslint-disable-next-line no-console\r\n      console.error(\"video error\", error);\r\n    },\r\n    [setIsError],\r\n  );\r\n\r\n  const stopPropagation = useCallback(\r\n    (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n      event?.stopPropagation();\r\n    },\r\n    [],\r\n  );\r\n\r\n  const onTouchMove = () => {\r\n    if (isPlaying && isVideo) restartToolbarVisibleTimer();\r\n  };\r\n\r\n  const onKeyDown = useCallback(\r\n    (event: KeyboardEvent) => {\r\n      if (event.code === KeyboardEventKeys.Space) {\r\n        togglePlay();\r\n      }\r\n    },\r\n    [togglePlay],\r\n  );\r\n\r\n  const onExitFullScreen = useCallback(() => {\r\n    if (!document.fullscreenElement) {\r\n      setIsFullScreen(false);\r\n      handleResize();\r\n    }\r\n  }, [handleResize, setIsFullScreen]);\r\n\r\n  const model = useMemo(contextModel, [contextModel]);\r\n  const hideContextMenu = useMemo(\r\n    () => model.filter((item) => !item.disabled).length <= 1,\r\n    [model],\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, [handleResize]);\r\n\r\n  useLayoutEffect(() => {\r\n    setIsLoading(true);\r\n    resetState();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [src]);\r\n\r\n  useEffect(() => {\r\n    if (isOpenContextMenuRef.current === isOpenContextMenu) return;\r\n    isOpenContextMenuRef.current = isOpenContextMenu;\r\n\r\n    if (!isOpenContextMenu && isPlaying) {\r\n      restartToolbarVisibleTimer();\r\n    }\r\n  }, [isOpenContextMenu, isPlaying, restartToolbarVisibleTimer]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"fullscreenchange\", onExitFullScreen, {\r\n      capture: true,\r\n    });\r\n    return () =>\r\n      window.removeEventListener(\"fullscreenchange\", onExitFullScreen, {\r\n        capture: true,\r\n      });\r\n  }, [onExitFullScreen]);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", onKeyDown);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", onKeyDown);\r\n    };\r\n  }, [onKeyDown]);\r\n\r\n  const posterUrl = thumbnailSrc ? `${thumbnailSrc}&size=1280x720` : undefined;\r\n\r\n  return (\r\n    <>\r\n      {isMobile && panelVisible && mobileDetails}\r\n      <ContainerPlayer ref={containerRef} $isFullScreen={isFullScreen}>\r\n        <VideoWrapper\r\n          $visible={!isLoading}\r\n          style={style}\r\n          ref={playerWrapperRef}\r\n        >\r\n          <animated.video\r\n            playsInline\r\n            ref={videoRef}\r\n            hidden={isAudio}\r\n            preload=\"metadata\"\r\n            style={lodash.omit(style, [\"x\", \"y\"])}\r\n            src={thumbnailSrc ? src : `${src}#t=0.001`}\r\n            poster={posterUrl}\r\n            onError={hadleError}\r\n            onClick={handleClickVideo}\r\n            onEnded={handleVideoEnded}\r\n            onProgress={handleProgress}\r\n            onTimeUpdate={handleTimeUpdate}\r\n            onWaiting={() => setIsWaiting(true)}\r\n            onPlaying={() => setIsWaiting(false)}\r\n            onDurationChange={handleDurationChange}\r\n            onLoadedMetadata={handleLoadedMetaDataVideo}\r\n          />\r\n          <PlayerBigPlayButton\r\n            onClick={handleBigPlayButtonClick}\r\n            visible={!isPlaying && isVideo && !isError}\r\n          />\r\n          {isAudio && !isError && (\r\n            <div className=\"audio-container\">\r\n              <img src={audioIcon} alt=\"\" />\r\n            </div>\r\n          )}\r\n          <ViewerLoader\r\n            isError={isError}\r\n            onClick={handleClickVideo}\r\n            withBackground={isWaiting && isPlaying}\r\n            isLoading={isLoading || (isWaiting && isPlaying)}\r\n          />\r\n        </VideoWrapper>\r\n        <ViewerLoader isError={isError} isLoading={isLoading} />\r\n      </ContainerPlayer>\r\n      {isError ? (\r\n        <MessageError\r\n          model={model}\r\n          onMaskClick={onMask}\r\n          errorTitle={errorTitle}\r\n          isMobile={isMobile}\r\n        />\r\n      ) : (\r\n        <StyledPlayerControls\r\n          $isShow={panelVisible && !isLoading}\r\n          onTouchStart={onTouchStart}\r\n          onTouchMove={onTouchMove}\r\n          onClick={handleClickVideo}\r\n        >\r\n          <PlayerControlsWrapper onClick={stopPropagation}>\r\n            <PlayerTimeline\r\n              value={timeline}\r\n              ref={timelineRef}\r\n              duration={duration}\r\n              onChange={handleChangeTimeLine}\r\n              onMouseEnter={onMouseEnter}\r\n              onMouseLeave={onMouseLeave}\r\n            />\r\n            <ControlContainer>\r\n              <div\r\n                className=\"player_left-control\"\r\n                onMouseEnter={onMouseEnter}\r\n                onMouseLeave={onMouseLeave}\r\n              >\r\n                <PlayerPlayButton isPlaying={isPlaying} onClick={togglePlay} />\r\n                <PlayerDuration currentTime={currentTime} duration={duration} />\r\n                {!isMobile && (\r\n                  <PlayerVolumeControl\r\n                    volume={volume}\r\n                    isMuted={isMuted}\r\n                    onChange={handleVolumeChange}\r\n                    toggleVolumeMute={toggleVolumeMute}\r\n                  />\r\n                )}\r\n              </div>\r\n              <div\r\n                className=\"player_right-control\"\r\n                onMouseEnter={onMouseEnter}\r\n                onMouseLeave={onMouseLeave}\r\n              >\r\n                <PlayerSpeedControl\r\n                  src={src}\r\n                  onMouseLeave={onMouseLeave}\r\n                  handleSpeedChange={handleSpeedChange}\r\n                />\r\n                <PlayerFullScreen\r\n                  isAudio={isAudio}\r\n                  isFullScreen={isFullScreen}\r\n                  onClick={toggleVideoFullscreen}\r\n                />\r\n                {isDesktop && (\r\n                  <PlayerDesktopContextMenu\r\n                    canDownload={canDownload}\r\n                    isPreviewFile={isPreviewFile}\r\n                    hideContextMenu={hideContextMenu}\r\n                    onDownloadClick={onDownloadClick}\r\n                    generateContextMenu={generateContextMenu}\r\n                  />\r\n                )}\r\n              </div>\r\n            </ControlContainer>\r\n          </PlayerControlsWrapper>\r\n        </StyledPlayerControls>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport styled from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n  padding-left: 16px;\r\n  padding-right: 30px;\r\n\r\n  list-style: none;\r\n  margin-top: 0px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  color: #ffffff;\r\n  padding: 1px 16px 0 16px;\r\n  font-weight: 400;\r\n  font-size: 13px;\r\n  line-height: 20px;\r\n\r\n  cursor: pointer;\r\n\r\n  margin-top: -1px;\r\n\r\n  @media (hover: hover) {\r\n    :hover {\r\n      background: #474747;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  margin: 0;\r\n  border-bottom: 1px solid #474747;\r\n  padding: 6px 0;\r\n`;\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport React from \"react\";\r\nimport {\r\n  CustomScrollbarsVirtualList,\r\n  ScrollbarType,\r\n} from \"@docspace/shared/components/scrollbar\";\r\n\r\nimport BookmarksProps from \"./Bookmarks.props\";\r\nimport { Item, List, Text } from \"./Bookmarks.styled\";\r\n\r\nexport const Bookmarks = ({ bookmarks, navigate }: BookmarksProps) => {\r\n  return (\r\n    <CustomScrollbarsVirtualList stype={ScrollbarType.mediumBlack}>\r\n      <List>\r\n        {bookmarks.map((item, index) => {\r\n          return (\r\n            <Item key={item.page}>\r\n              <Text onClick={() => navigate(index)}>{item.description}</Text>\r\n            </Item>\r\n          );\r\n        })}\r\n      </List>\r\n    </CustomScrollbarsVirtualList>\r\n  );\r\n};\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport styled, { css } from \"styled-components\";\r\nimport ArticleShowMenuReactSvgUrl from \"PUBLIC_DIR/images/article-show-menu.react.svg\";\r\n\r\nexport const SidebarContainer = styled.aside<{ isPanelOpen: boolean }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  height: 100vh;\r\n  width: 100%;\r\n\r\n  background: #333333;\r\n\r\n  max-width: ${(props) => (props.isPanelOpen ? \"306px\" : \"0px\")};\r\n  visibility: ${(props) => (props.isPanelOpen ? \"visible\" : \"hidden\")};\r\n  overflow: ${(props) => (props.isPanelOpen ? \"visible\" : \"hidden\")};\r\n`;\r\n\r\nexport const SidebarHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 30px;\r\n\r\n  svg {\r\n    cursor: pointer;\r\n    path {\r\n      fill: rgba(255, 255, 255, 0.6);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Thumbnails = styled.section<{ visible: boolean }>`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  position: relative;\r\n\r\n  display: ${(props) => (props.visible ? \"block\" : \"none\")};\r\n\r\n  visibility: ${(props) => (props.visible ? \"visible\" : \"hidden\")};\r\n  opacity: ${(props) => (props.visible ? 1 : 0)};\r\n`;\r\n\r\nexport const HideSidebarIcon = styled(ArticleShowMenuReactSvgUrl)`\r\n  ${({ theme }) =>\r\n    theme.interfaceDirection === \"rtl\"\r\n      ? css`\r\n          margin-right: auto;\r\n        `\r\n      : css`\r\n          transform: rotate(180deg);\r\n          margin-left: auto;\r\n        `}\r\n`;\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport React, { useState } from \"react\";\r\nimport ViewRowsIcon from \"PUBLIC_DIR/images/view-rows.react.svg\";\r\nimport ViewTilesIcon from \"PUBLIC_DIR/images/view-tiles.react.svg\";\r\nimport { Bookmarks } from \"../Bookmarks\";\r\n\r\nimport SidebarProps from \"./Sidebar.props\";\r\nimport {\r\n  HideSidebarIcon,\r\n  SidebarContainer,\r\n  SidebarHeader,\r\n  Thumbnails,\r\n} from \"./Sidebar.styled\";\r\n\r\nexport const Sidebar = ({\r\n  bookmarks,\r\n  isPanelOpen,\r\n  setIsPDFSidebarOpen,\r\n  navigate,\r\n}: SidebarProps) => {\r\n  const [toggle, setToggle] = useState<boolean>(false);\r\n\r\n  const handleToggle = () => {\r\n    setToggle((prev) => !prev);\r\n  };\r\n\r\n  const closeSidebar = () => setIsPDFSidebarOpen(false);\r\n\r\n  return (\r\n    <SidebarContainer isPanelOpen={isPanelOpen}>\r\n      <SidebarHeader>\r\n        {bookmarks.length > 0 &&\r\n          React.createElement(toggle ? ViewTilesIcon : ViewRowsIcon, {\r\n            onClick: handleToggle,\r\n          })}\r\n        <HideSidebarIcon onClick={closeSidebar} />\r\n      </SidebarHeader>\r\n      {toggle && <Bookmarks bookmarks={bookmarks} navigate={navigate} />}\r\n      <Thumbnails id=\"viewer-thumbnail\" visible={!toggle} />\r\n    </SidebarContainer>\r\n  );\r\n};\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport styled from \"styled-components\";\r\nimport { animated } from \"@react-spring/web\";\r\nimport { isDesktop } from \"react-device-detect\";\r\n\r\nexport const Wrapper = styled(animated.section)`\r\n  width: 100%;\r\n  height: ${`calc(100vh - ${isDesktop ? \"85\" : \"66\"}px)`};\r\n  margin-top: ${isDesktop ? \"85px\" : \"66px\"};\r\n  touch-action: none;\r\n`;\r\n\r\nexport const Content = styled.div<{ isLoading: boolean }>`\r\n  visibility: ${(props) => (props.isLoading ? \"hidden\" : \"visible\")};\r\n`;\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport React, { forwardRef, useCallback, useEffect, useRef } from \"react\";\r\nimport { useSpring } from \"@react-spring/web\";\r\nimport { useGesture } from \"@use-gesture/react\";\r\nimport { isDesktop } from \"react-device-detect\";\r\n\r\nimport MainPanelProps from \"./MainPanel.props\";\r\nimport { Content, Wrapper } from \"./MainPanel.styled\";\r\n\r\nconst MainPanel = forwardRef<HTMLDivElement, MainPanelProps>(\r\n  ({ isLoading, isFistImage, isLastImage, src, onNext, onPrev }, ref) => {\r\n    const wrapperRef = useRef<HTMLDivElement>(null);\r\n\r\n    const [style, api] = useSpring(() => ({\r\n      x: 0,\r\n      scale: 1,\r\n    }));\r\n\r\n    const resetState = useCallback(() => {\r\n      api.set({ x: 0 });\r\n    }, [api]);\r\n\r\n    useEffect(() => {\r\n      resetState();\r\n    }, [resetState, src]);\r\n\r\n    useGesture(\r\n      {\r\n        onDrag: ({ offset: [dx], movement: [mdx] }) => {\r\n          if (isDesktop) return;\r\n\r\n          api.start({\r\n            x:\r\n              (isFistImage && mdx > 0) || (isLastImage && mdx < 0)\r\n                ? style.x.get()\r\n                : dx,\r\n            immediate: true,\r\n          });\r\n        },\r\n        onDragEnd: ({ movement: [mdx] }) => {\r\n          if (isDesktop) return;\r\n\r\n          const width = window.innerWidth;\r\n\r\n          if (mdx < -width / 4) {\r\n            return onNext?.();\r\n          }\r\n          if (mdx > width / 4) {\r\n            return onPrev?.();\r\n          }\r\n\r\n          api.start({ x: 0 });\r\n        },\r\n      },\r\n      {\r\n        drag: {\r\n          from: () => [style.x.get(), 0],\r\n          axis: \"x\",\r\n        },\r\n        pinch: {\r\n          scaleBounds: { min: 0.5, max: 5 },\r\n          from: () => [style.scale.get(), 0],\r\n          threshold: [0.1, 5],\r\n          rubberband: false,\r\n          pinchOnWheel: false,\r\n        },\r\n        target: wrapperRef,\r\n      },\r\n    );\r\n\r\n    return (\r\n      <Wrapper ref={wrapperRef} style={style}>\r\n        <Content id=\"mainPanel\" ref={ref} isLoading={isLoading} />\r\n      </Wrapper>\r\n    );\r\n  },\r\n);\r\n\r\nMainPanel.displayName = \"MainPanel\";\r\n\r\nexport { MainPanel };\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport { animated } from \"@react-spring/web\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const MobileDrawerContainer = styled.section`\r\n  position: fixed;\r\n  z-index: 308;\r\n  width: 100%;\r\n`;\r\n\r\nexport const MobileDrawerWrapper = styled(animated.div)`\r\n  position: fixed;\r\n  bottom: 0;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  width: 100%;\r\n\r\n  background: #333333;\r\n  touch-action: none;\r\n\r\n  overflow: hidden;\r\n\r\n  .block_elem {\r\n    position: absolute;\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nexport const MobileDrawerHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  padding: 24px 30px;\r\n\r\n  touch-action: none;\r\n\r\n  svg path {\r\n    fill: rgba(255, 255, 255, 0.6);\r\n  }\r\n\r\n  .mobile-drawer_cross-icon {\r\n    margin-left: auto;\r\n  }\r\n`;\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\r\n\r\nimport { useDrag } from \"@use-gesture/react\";\r\nimport { useSpring, config } from \"@react-spring/web\";\r\n\r\nimport ViewTilesIcon from \"PUBLIC_DIR/images/view-tiles.react.svg\";\r\nimport ViewRowsIcon from \"PUBLIC_DIR/images/view-rows.react.svg\";\r\nimport CrossIcon from \"PUBLIC_DIR/images/cross.react.svg\";\r\nimport { Bookmarks } from \"../Bookmarks\";\r\n\r\nimport {\r\n  MobileDrawerContainer,\r\n  MobileDrawerHeader,\r\n  MobileDrawerWrapper,\r\n} from \"./MobileDrawer.styled\";\r\nimport { Thumbnails } from \"../SideBar/Sidebar.styled\";\r\n\r\nimport MobileDrawerProps from \"./MobileDrawer.props\";\r\n\r\nexport const MobileDrawer = ({\r\n  bookmarks,\r\n  isOpenMobileDrawer,\r\n  navigate,\r\n  resizePDFThumbnail,\r\n  setIsOpenMobileDrawer,\r\n}: MobileDrawerProps) => {\r\n  const [height, setheight] = useState(window.innerHeight);\r\n\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  const [style, api] = useSpring(() => ({ y: height, opacity: 1 }));\r\n\r\n  const [toggle, setToggle] = useState<boolean>(false);\r\n\r\n  const handleToggle = () => {\r\n    setToggle((prev) => !prev);\r\n  };\r\n\r\n  const open = useCallback(\r\n    (canceled = false, innerHeight?: number) => {\r\n      api.start({\r\n        y: (innerHeight ?? height) * 0.2,\r\n        opacity: 1,\r\n        immediate: false,\r\n        config: canceled ? config.wobbly : config.stiff,\r\n      });\r\n    },\r\n    [api, height],\r\n  );\r\n\r\n  const close = useCallback(\r\n    (velocity = 0, innerHeight?: number) => {\r\n      api.start({\r\n        y: innerHeight ?? height,\r\n        opacity: 0,\r\n        immediate: false,\r\n        config: { ...config.stiff, velocity },\r\n      });\r\n      setIsOpenMobileDrawer(false);\r\n    },\r\n    [api, height, setIsOpenMobileDrawer],\r\n  );\r\n\r\n  const handleResize = useCallback(() => {\r\n    const innerHeight = window.innerHeight;\r\n\r\n    setheight(innerHeight);\r\n    if (isOpenMobileDrawer) {\r\n      open(false, innerHeight);\r\n\r\n      setTimeout(() => {\r\n        resizePDFThumbnail();\r\n      });\r\n    } else close(0, innerHeight);\r\n  }, [close, isOpenMobileDrawer, open, resizePDFThumbnail]);\r\n\r\n  const bind = useDrag(\r\n    ({\r\n      last,\r\n      velocity: [, vy],\r\n      direction: [, dy],\r\n      movement: [, my],\r\n      cancel,\r\n      canceled,\r\n    }) => {\r\n      if (my < -70) {\r\n        cancel();\r\n      }\r\n\r\n      if (last) {\r\n        if (my > height * 0.2 || (vy > 0.5 && dy > 0)) {\r\n          close(vy);\r\n        } else {\r\n          open(canceled);\r\n        }\r\n      } else {\r\n        api.start({\r\n          y: my + height * 0.2,\r\n          opacity: Math.max(1 - my / height, 0),\r\n          immediate: true,\r\n        });\r\n      }\r\n    },\r\n    {\r\n      from: () => [0, style.y.get()],\r\n      filterTaps: true,\r\n      bounds: { top: 0 },\r\n      rubberband: true,\r\n    },\r\n  );\r\n\r\n  const handleClickOutside = useCallback(\r\n    (event: TouchEvent) => {\r\n      if (\r\n        isOpenMobileDrawer &&\r\n        containerRef.current &&\r\n        event.target instanceof Node &&\r\n        !containerRef.current.contains(event.target)\r\n      ) {\r\n        close();\r\n      }\r\n    },\r\n    [close, isOpenMobileDrawer],\r\n  );\r\n\r\n  const handleClose = (event: React.MouseEvent<SVGSVGElement, MouseEvent>) => {\r\n    event.stopPropagation();\r\n    close();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isOpenMobileDrawer) open();\r\n  }, [isOpenMobileDrawer, open]);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"touchstart\", handleClickOutside);\r\n\r\n    return () => {\r\n      // Unbind the event listener on clean up\r\n      document.removeEventListener(\"touchstart\", handleClickOutside);\r\n    };\r\n  }, [handleClickOutside]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => {\r\n      // Unbind the event listener on clean up\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, [handleResize]);\r\n\r\n  const visibility = isOpenMobileDrawer ? \"visible\" : \"hidden\";\r\n\r\n  return (\r\n    <MobileDrawerContainer ref={containerRef}>\r\n      <MobileDrawerWrapper\r\n        style={{\r\n          height,\r\n          visibility,\r\n          ...style,\r\n        }}\r\n      >\r\n        <MobileDrawerHeader {...bind()}>\r\n          {bookmarks.length > 0 &&\r\n            React.createElement(toggle ? ViewTilesIcon : ViewRowsIcon, {\r\n              onClick: handleToggle,\r\n            })}\r\n          <CrossIcon\r\n            className=\"mobile-drawer_cross-icon\"\r\n            onClick={handleClose}\r\n          />\r\n        </MobileDrawerHeader>\r\n        <div style={{ height: height * 0.8 - 64 }}>\r\n          {toggle && <Bookmarks bookmarks={bookmarks} navigate={navigate} />}\r\n          <Thumbnails id=\"viewer-thumbnail\" visible={!toggle} />\r\n        </div>\r\n      </MobileDrawerWrapper>\r\n    </MobileDrawerContainer>\r\n  );\r\n};\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport styled, { css } from \"styled-components\";\r\n\r\nimport { DesktopDetails } from \"../DesktopDetails\";\r\nimport { ViewerToolbar } from \"../ViewerToolbar\";\r\n\r\ntype Panel = { isPanelOpen?: boolean };\r\n\r\nexport const PDFViewerToolbarWrapper = styled.section`\r\n  @media (hover: hover) {\r\n    .pdf-viewer_page-count:hover + .pdf-viewer_toolbar {\r\n      background: rgba(0, 0, 0, 0.8);\r\n    }\r\n    &:hover .pdf-viewer_page-count {\r\n      background: rgba(0, 0, 0, 0.8);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PDFViewerWrapper = styled.div`\r\n  position: fixed;\r\n  z-index: 305;\r\n  inset: 0;\r\n\r\n  display: flex;\r\n  flex-direction: ${({ theme }) =>\r\n    theme.interfaceDirection === \"rtl\" ? `row-reverse` : `row`};\r\n\r\n  background: rgba(55, 55, 55, 0.6);\r\n\r\n  #mainPanel {\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    position: relative;\r\n  }\r\n  #id_viewer {\r\n    background: none !important;\r\n    ${({ theme }) =>\r\n      theme.interfaceDirection === \"rtl\" &&\r\n      css`\r\n        left: unset !important;\r\n        right: 0 !important;\r\n      `}\r\n  }\r\n  .block_elem {\r\n    position: absolute;\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n  #id_vertical_scroll {\r\n    ${({ theme }) =>\r\n      theme.interfaceDirection === \"rtl\" && \"left: 0 !important;\"}\r\n  }\r\n`;\r\n\r\nexport const ErrorMessageWrapper = styled.section`\r\n  position: fixed;\r\n  z-index: 305;\r\n  inset: 0;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  background: rgba(55, 55, 55, 0.6);\r\n`;\r\n\r\nexport const ErrorMessage = styled.p`\r\n  padding: 20px 30px;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  border-radius: 4px;\r\n  color: rgb(238, 238, 238);\r\n`;\r\n\r\nexport const DesktopTopBar = styled(DesktopDetails)<Panel>`\r\n  display: flex;\r\n  ${(props) =>\r\n    props.theme.interfaceDirection === \"rtl\"\r\n      ? css`\r\n          right: ${props.isPanelOpen ? \"306px\" : 0};\r\n        `\r\n      : css`\r\n          left: ${props.isPanelOpen ? \"306px\" : 0};\r\n        `}\r\n  width: ${(props) => (props.isPanelOpen ? \"calc(100%  - 306px)\" : \"100%\")};\r\n\r\n  .mediaPlayerClose {\r\n    position: fixed;\r\n    top: 13px;\r\n    ${({ theme }) =>\r\n      theme.interfaceDirection === \"rtl\" ? `left: 12px;` : `right: 12px;`}\r\n    height: 17px;\r\n    &:hover {\r\n      background-color: transparent;\r\n    }\r\n    svg {\r\n      path {\r\n        fill: ${(props) => props.theme.mediaViewer.iconColor};\r\n      }\r\n    }\r\n  }\r\n\r\n  .title {\r\n    padding-right: 16px;\r\n  }\r\n`;\r\n\r\nexport const PDFToolbar = styled(ViewerToolbar)<Panel>`\r\n  left: ${({ theme, isPanelOpen }) => {\r\n    const value = isPanelOpen ? 306 / 2 : 0;\r\n    const operator = theme.interfaceDirection === \"rtl\" ? \"-\" : \"+\";\r\n\r\n    return `calc(50% ${operator} ${value}px)`;\r\n  }};\r\n\r\n  .panelToggle {\r\n    ${({ theme }) =>\r\n      theme.interfaceDirection === \"rtl\" && `transform: scaleX(-1);`}\r\n  }\r\n\r\n  transition: background 0.26s ease-out 0s;\r\n`;\r\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgPanelreact(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M0 3.5A1.5 1.5 0 011.5 2h13A1.5 1.5 0 0116 3.5v9a1.5 1.5 0 01-1.5 1.5h-13A1.5 1.5 0 010 12.5v-9zM2 5a1 1 0 011-1h6v8H3a1 1 0 01-1-1V5zm9 7h2a1 1 0 001-1V5a1 1 0 00-1-1h-2v8z\",\n    fill: \"#A3A9AE\"\n  })));\n}\nexport default SvgPanelreact;","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport styled from \"styled-components\";\r\nimport { isMobile } from \"react-device-detect\";\r\n\r\nexport const PageCountWrapper = styled.div<{ isPanelOpen: boolean }>`\r\n  display: flex;\r\n  gap: 10px;\r\n  align-items: center;\r\n\r\n  position: fixed;\r\n  bottom: ${isMobile ? \"12px\" : \"108px\"};\r\n  left: ${({ theme, isPanelOpen }) => {\r\n    const value = isPanelOpen ? 306 / 2 : 0;\r\n    const operator = theme.interfaceDirection === \"rtl\" ? \"-\" : \"+\";\r\n\r\n    return `calc(50% ${operator} ${value}px)`;\r\n  }};\r\n  z-index: 307;\r\n\r\n  transform: translateX(-50%);\r\n\r\n  padding: ${isMobile ? \"12px 16px\" : \"16px 32px\"};\r\n  border-radius: 22px;\r\n  background: rgba(0, 0, 0, 0.4);\r\n\r\n  color: white;\r\n  font-size: 12px;\r\n  line-height: 16px;\r\n\r\n  box-sizing: border-box;\r\n\r\n  svg {\r\n    path {\r\n      fill: white;\r\n    }\r\n  }\r\n\r\n  user-select: none;\r\n\r\n  transition: background 0.26s ease-out 0s;\r\n\r\n  @media (hover: hover) {\r\n    &:hover {\r\n      background: rgba(0, 0, 0, 0.8);\r\n    }\r\n  }\r\n`;\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport React, {\r\n  forwardRef,\r\n  useCallback,\r\n  useImperativeHandle,\r\n  useState,\r\n} from \"react\";\r\nimport { isMobile } from \"react-device-detect\";\r\n\r\nimport PanelReactSvg from \"PUBLIC_DIR/images/panel.react.svg\";\r\nimport PageCountProps, { PageCountRef } from \"./PageCount.props\";\r\nimport { PageCountWrapper } from \"./PageCount.styled\";\r\n\r\nconst PageCount = forwardRef<PageCountRef, PageCountProps>(\r\n  ({ isPanelOpen, visible, className, setIsOpenMobileDrawer }, ref) => {\r\n    const [pagesCount, setPagesCount] = useState<number>(0);\r\n    const [pageNumber, setPageNumber] = useState<number>(0);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      setPagesCount(pagesCountArg: number) {\r\n        setPagesCount(pagesCountArg);\r\n      },\r\n      setPageNumber: (pageNumberArg: number) => {\r\n        setPageNumber(pageNumberArg);\r\n      },\r\n    }));\r\n\r\n    const openMobileDrawer = useCallback(() => {\r\n      setIsOpenMobileDrawer(true);\r\n    }, [setIsOpenMobileDrawer]);\r\n\r\n    if (!visible) return;\r\n\r\n    return (\r\n      <PageCountWrapper isPanelOpen={isPanelOpen} className={className}>\r\n        {isMobile && <PanelReactSvg onClick={openMobileDrawer} />}\r\n        <div>\r\n          <span>{pageNumber}</span> / <span>{pagesCount}</span>\r\n        </div>\r\n      </PageCountWrapper>\r\n    );\r\n  },\r\n);\r\n\r\nPageCount.displayName = \"PageCount\";\r\n\r\nexport { PageCount };\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nimport { NoUserSelect } from \"../../utils\";\r\nimport { Base, TTheme } from \"../../themes\";\r\nimport { ButtonProps, ButtonThemeProps } from \"./Button.types\";\r\nimport { ButtonSize } from \"./Button.enums\";\r\n\r\nconst activeCss = css<ButtonProps>`\r\n  background-color: ${(props) =>\r\n    props.primary\r\n      ? props.theme.button.backgroundColor.primaryActive\r\n      : props.theme.button.backgroundColor.baseActive};\r\n\r\n  color: ${(props) =>\r\n    props.primary\r\n      ? props.theme.button.color.primaryActive\r\n      : props.theme.button.color.baseActive};\r\n\r\n  ${(props) =>\r\n    !props.primary\r\n      ? css`\r\n          border: ${props.theme.button.border.baseActive};\r\n          box-sizing: ${props.theme.button.boxSizing};\r\n        `\r\n      : css`\r\n          border: ${props.theme.button.border.primaryActive};\r\n          box-sizing: ${props.theme.button.boxSizing};\r\n        `}\r\n\r\n  .btnIcon {\r\n    svg {\r\n      path {\r\n        fill: ${(props) =>\r\n          props.primary\r\n            ? props.theme.button.color.primaryActive\r\n            : props.theme.button.color.baseActive};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst hoverCss = css<ButtonProps>`\r\n  background-color: ${(props) =>\r\n    props.primary\r\n      ? props.theme.button.backgroundColor.primaryHover\r\n      : props.theme.button.backgroundColor.baseHover};\r\n\r\n  color: ${(props) =>\r\n    props.primary\r\n      ? props.theme.button.color.primaryHover\r\n      : props.theme.button.color.baseHover};\r\n\r\n  ${(props) =>\r\n    !props.primary\r\n      ? css`\r\n          border: ${props.theme.button.border.baseHover};\r\n          box-sizing: ${props.theme.button.boxSizing};\r\n        `\r\n      : css`\r\n          border: ${props.theme.button.border.primaryHover};\r\n          box-sizing: ${props.theme.button.boxSizing};\r\n        `}\r\n\r\n  .btnIcon {\r\n    svg {\r\n      path {\r\n        fill: ${(props) =>\r\n          props.primary\r\n            ? props.theme.button.color.primaryHover\r\n            : props.theme.button.color.baseHover};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst disableCss = css<ButtonProps>`\r\n  background-color: ${(props) =>\r\n    props.primary\r\n      ? props.theme.button.backgroundColor.primaryDisabled\r\n      : props.theme.button.backgroundColor.baseDisabled};\r\n\r\n  color: ${(props) =>\r\n    props.primary\r\n      ? props.theme.button.color.primaryDisabled\r\n      : props.theme.button.color.baseDisabled};\r\n\r\n  ${(props) =>\r\n    !props.primary\r\n      ? css`\r\n          border: ${props.theme.button.border.baseDisabled};\r\n          box-sizing: ${props.theme.button.boxSizing};\r\n        `\r\n      : css`\r\n          border: ${props.theme.button.border.primaryDisabled};\r\n          box-sizing: ${props.theme.button.boxSizing};\r\n        `}\r\n\r\n  .btnIcon {\r\n    svg {\r\n      path {\r\n        fill: ${(props) =>\r\n          props.primary\r\n            ? props.theme.button.color.primaryDisabled\r\n            : props.theme.button.color.baseDisabled};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst heightStyle = (props: { size?: ButtonSize; theme: TTheme }) =>\r\n  props.theme.button.height[props.size || ButtonSize.normal];\r\nconst fontSizeStyle = (props: { size?: ButtonSize; theme: TTheme }) =>\r\n  props.theme.button.fontSize[props.size || ButtonSize.normal];\r\n\r\nconst ButtonWrapper = React.forwardRef<\r\n  HTMLButtonElement,\r\n  ButtonProps & {\r\n    interfaceDirection?: boolean | string;\r\n  }\r\n>(\r\n  (\r\n    {\r\n      primary,\r\n      scale,\r\n      size,\r\n      isHovered,\r\n      isClicked,\r\n      isDisabled,\r\n      disableHover,\r\n      isLoading,\r\n      label,\r\n      minWidth,\r\n      ...props\r\n    },\r\n    ref,\r\n  ) => {\r\n    return <button ref={ref} type=\"button\" {...props} />;\r\n  },\r\n);\r\n\r\nButtonWrapper.displayName = \"ButtonWrapper\";\r\n\r\nconst StyledButton = styled(ButtonWrapper).attrs((props: ButtonProps) => ({\r\n  disabled: props.isDisabled || props.isLoading ? \"disabled\" : \"\",\r\n  tabIndex: props.tabIndex,\r\n}))`\r\n  position: relative;\r\n  direction: ${(props) => props?.interfaceDirection && \"rtl\"};\r\n  height: ${(props) => heightStyle(props)};\r\n  font-size: ${(props) => fontSizeStyle(props)};\r\n\r\n  color: ${(props) =>\r\n    !props.primary\r\n      ? props.theme.button.color.base\r\n      : props.theme.button.color.primary};\r\n\r\n  background-color: ${(props) =>\r\n    props.primary\r\n      ? props.theme.button.backgroundColor.primary\r\n      : props.theme.button.backgroundColor.base};\r\n\r\n  border: ${(props) =>\r\n    props.primary\r\n      ? props.theme.button.border.primary\r\n      : props.theme.button.border.base};\r\n\r\n  ${(props) => props.scale && `width: 100%;`};\r\n  min-width: ${(props) => props.minWidth && props.minWidth};\r\n\r\n  padding: ${(props) =>\r\n    `${props.theme.button.padding[props.size || ButtonSize.normal]}`};\r\n\r\n  cursor: ${(props) =>\r\n    props.isDisabled || props.isLoading ? \"default !important\" : \"pointer\"};\r\n\r\n  font-family: ${(props) => props.theme.fontFamily};\r\n  margin: ${(props) => props.theme.button.margin};\r\n  display: ${(props) => props.theme.button.display};\r\n  font-weight: ${(props) => props.theme.button.fontWeight};\r\n  text-align: ${(props) => props.theme.button.textAlign};\r\n  text-decoration: ${(props) => props.theme.button.textDecoration};\r\n  vertical-align: ${(props) => props.theme.button.topVerticalAlign};\r\n  border-radius: ${(props) => props.theme.button.borderRadius};\r\n  -moz-border-radius: ${(props) => props.theme.button.borderRadius};\r\n  -webkit-border-radius: ${(props) => props.theme.button.borderRadius};\r\n\r\n  ${NoUserSelect};\r\n\r\n  stroke: ${(props) => props.theme.button.stroke};\r\n  overflow: ${(props) => props.theme.button.overflow};\r\n  text-overflow: ${(props) => props.theme.button.textOverflow};\r\n  white-space: ${(props) => props.theme.button.whiteSpace};\r\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n\r\n  ${(props) =>\r\n    !props.isDisabled &&\r\n    !props.isLoading &&\r\n    (props.isHovered\r\n      ? hoverCss\r\n      : !props.disableHover &&\r\n        css`\r\n          &:hover {\r\n            ${hoverCss}\r\n          }\r\n        `)}\r\n\r\n  ${(props) =>\r\n    !props.isDisabled &&\r\n    !props.isLoading &&\r\n    (props.isClicked\r\n      ? activeCss\r\n      : css`\r\n          &:active {\r\n            ${activeCss}\r\n          }\r\n        `)}\r\n\r\n  ${(props) => (props.isDisabled || props.isLoading) && disableCss}\r\n\r\n  &:focus {\r\n    outline: ${(props) => props.theme.button.outline};\r\n  }\r\n\r\n  .loader {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    position: absolute;\r\n\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    background-color: transparent;\r\n  }\r\n\r\n  .button-content {\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 8px;\r\n    visibility: ${(props) => (props.isLoading ? \"hidden\" : \"visible\")};\r\n  }\r\n\r\n  .icon {\r\n    width: auto;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nStyledButton.defaultProps = { theme: Base };\r\n\r\nconst themeActiveCss = css<ButtonThemeProps>`\r\n  border-color: ${(props) => props.$currentColorScheme?.main?.buttons};\r\n\r\n  background: ${(props) =>\r\n    props.primary && props.$currentColorScheme?.main?.buttons};\r\n\r\n  opacity: ${(props) => !props.isDisabled && \"1\"};\r\n\r\n  filter: ${(props) =>\r\n    props.primary &&\r\n    (props.theme.isBase ? \"brightness(90%)\" : \"brightness(82%)\")};\r\n\r\n  color: ${(props) => props.$currentColorScheme?.text?.buttons};\r\n`;\r\n\r\nconst themeHoverCss = css<ButtonThemeProps>`\r\n  border-color: ${(props) => props.$currentColorScheme?.main?.buttons};\r\n\r\n  background: ${(props) =>\r\n    props.primary && props.$currentColorScheme?.main?.buttons};\r\n\r\n  opacity: ${(props) => props.primary && !props.isDisabled && \"0.85\"};\r\n\r\n  color: ${(props) =>\r\n    props.primary && props.$currentColorScheme?.text?.buttons};\r\n`;\r\n\r\nconst getDefaultStyles = ({\r\n  primary,\r\n  $currentColorScheme,\r\n  isDisabled,\r\n  isLoading,\r\n  isClicked,\r\n  isHovered,\r\n  disableHover,\r\n  title,\r\n}: ButtonThemeProps) =>\r\n  $currentColorScheme &&\r\n  !title &&\r\n  css`\r\n    ${primary &&\r\n    css`\r\n      background: ${$currentColorScheme.main?.buttons};\r\n      opacity: ${isDisabled && \"0.6\"};\r\n      border: ${`1px solid`} ${$currentColorScheme.main?.buttons};\r\n      color: ${$currentColorScheme.text?.buttons};\r\n\r\n      .loader {\r\n        svg {\r\n          color: ${$currentColorScheme.text?.buttons};\r\n        }\r\n        background-color: ${$currentColorScheme.main?.buttons};\r\n      }\r\n    `}\r\n\r\n    ${!isDisabled &&\r\n    !isLoading &&\r\n    (isHovered && primary\r\n      ? themeHoverCss\r\n      : !disableHover &&\r\n        primary &&\r\n        css`\r\n          &:hover,\r\n          &:focus {\r\n            ${themeHoverCss}\r\n          }\r\n        `)}\r\n\r\n    ${!isDisabled &&\r\n    !isLoading &&\r\n    (isClicked\r\n      ? primary && themeActiveCss\r\n      : primary &&\r\n        css`\r\n          &:active {\r\n            ${themeActiveCss}\r\n          }\r\n        `)}\r\n  `;\r\n\r\nStyledButton.defaultProps = { theme: Base };\r\n\r\nconst StyledThemeButton = styled(StyledButton)(getDefaultStyles);\r\n\r\nexport { StyledThemeButton };\r\n\r\nexport default StyledButton;\r\n"],"names":[],"sourceRoot":""}