"use strict";(self.webpackChunk_docspace_shared=self.webpackChunk_docspace_shared||[]).push([[4371],{"./components/combobox/ComboBox.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{a:()=>ComboBox});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),fast_deep_equal_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/fast-deep-equal/react.js"),fast_deep_equal_react__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(fast_deep_equal_react__WEBPACK_IMPORTED_MODULE_1__),_drop_down__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./components/drop-down/index.tsx"),_drop_down_item__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./components/drop-down-item/index.tsx"),_sub_components_ComboButton__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./components/combobox/sub-components/ComboButton.tsx"),_Combobox_styled__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./components/combobox/Combobox.styled.ts"),_Combobox_enums__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./components/combobox/Combobox.enums.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const compare=(prevProps,nextProps)=>fast_deep_equal_react__WEBPACK_IMPORTED_MODULE_1___default()(prevProps,nextProps),ComboBoxPure=props=>{const{selectedOption:selectedOptionProps}=props,[isOpen,setIsOpen]=react__WEBPACK_IMPORTED_MODULE_0__.useState(!1),[selectedOption,setSelectedOption]=react__WEBPACK_IMPORTED_MODULE_0__.useState(selectedOptionProps),ref=react__WEBPACK_IMPORTED_MODULE_0__.useRef(null),{dropDownMaxHeight,directionX,directionY,scaled=!0,size=_Combobox_enums__WEBPACK_IMPORTED_MODULE_6__.d.base,type,options,advancedOptions,isDisabled,children,noBorder,scaledOptions,displayType="default",textOverflow,showDisabledItems,comboIcon,manualY,manualX,isDefaultMode=!0,manualWidth="200px",displaySelectedOption,fixedDirection,withBlur,fillIcon,offsetLeft,modernView,withBackdrop=!0,isAside,withBackground,advancedOptionsCount,isMobileView,withoutPadding,isLoading,isNoFixedHeightOptions,hideMobileView,forceCloseClickOutside,withoutBackground,opened,setIsOpenItemAccess,dropDownId,title,className,plusBadgeValue}=props,{tabIndex,onClickSelectedItem}=props;react__WEBPACK_IMPORTED_MODULE_0__.useEffect((()=>{setIsOpen(opened||!1),setIsOpenItemAccess?.(opened||!1)}),[opened,setIsOpenItemAccess,setIsOpen]),react__WEBPACK_IMPORTED_MODULE_0__.useEffect((()=>{setSelectedOption(selectedOptionProps)}),[selectedOptionProps]);const dropDownMaxHeightProp=dropDownMaxHeight?{maxHeight:dropDownMaxHeight}:{},dropDownManualWidthProp=scaledOptions&&!isDefaultMode?{manualWidth:"100%"}:scaledOptions&&ref.current?{manualWidth:`${ref.current.clientWidth}px`}:{manualWidth},optionsLength=options.length?options.length:"toggle"!==displayType?0:1,withAdvancedOptions=react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(advancedOptions)&&!!advancedOptions?.props.children;let optionsCount=optionsLength;if(withAdvancedOptions){const advancedOptionsWithoutSeparatorLength=(react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(advancedOptions)&&advancedOptions.props?advancedOptions.props.children.filter((option=>"s1"!==option.key)):[]).length;optionsCount=advancedOptionsCount||advancedOptionsWithoutSeparatorLength?advancedOptionsWithoutSeparatorLength:6}const disableMobileView=optionsCount<4||hideMobileView,dropDownBody=advancedOptions||options.map((option=>{const disabled=option.disabled||!displaySelectedOption&&option.label===selectedOption.label,isActive=displaySelectedOption&&option.label===selectedOption.label,isSelected=option.label===selectedOption.label;return(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_drop_down_item__WEBPACK_IMPORTED_MODULE_3__.H,{...option,className:"drop-down-item",textOverflow,key:option.key,disabled,onClick:()=>(option=>{const{onSelect}=props;setSelectedOption({...option}),onSelect?.(option)})(option),onClickSelectedItem:()=>onClickSelectedItem?.(option),fillIcon,isModern:noBorder,isActive,isSelected})}));return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)(_Combobox_styled__WEBPACK_IMPORTED_MODULE_5__.X$,{ref,scaled,size,onClick:e=>{const{disableIconClick=!0,disableItemClick,isDisabled,onToggle,isLoading,setIsOpenItemAccess}=props,target=e.target;isDisabled||disableItemClick||isLoading||disableIconClick&&e&&target.closest(".optionalBlock")||target.classList.contains("ScrollbarsCustom")||target.classList.contains("ScrollbarsCustom-Thumb")||target.classList.contains("ScrollbarsCustom-Track")||target.classList.contains("backdrop-active")||(onToggle?.(e,!isOpen),setIsOpenItemAccess?.(!isOpen),setIsOpen((v=>!v)))},isOpen,disableMobileView,withoutPadding,"data-testid":"combobox",title,className,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_sub_components_ComboButton__WEBPACK_IMPORTED_MODULE_4__.F,{noBorder,isDisabled,selectedOption,withOptions:optionsLength>0,optionsLength,withAdvancedOptions,innerContainer:children,innerContainerClassName:"optionalBlock",isOpen,size,scaled,comboIcon,modernView,fillIcon,tabIndex,isLoading,type,plusBadgeValue}),"toggle"!==displayType&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_drop_down__WEBPACK_IMPORTED_MODULE_2__.C,{id:dropDownId,className:"dropdown-container not-selectable",directionX,directionY,manualY,manualX,open:isOpen,forwardedRef:ref,clickOutsideAction:e=>{const{setIsOpenItemAccess,onToggle}=props,target=e.target;ref.current&&ref.current.contains(target)||onToggle||(setIsOpenItemAccess?.(!isOpen),setIsOpen((v=>!v)))},style:advancedOptions?{padding:"6px 0px"}:{},...dropDownMaxHeightProp,...dropDownManualWidthProp,showDisabledItems,isDefaultMode,fixedDirection,withBlur,offsetLeft,withBackdrop,isAside,withBackground,isMobileView:isMobileView&&!disableMobileView,isNoFixedHeightOptions,forceCloseClickOutside,withoutBackground,eventTypes:["mousedown"],children:dropDownBody})]})};ComboBoxPure.displayName="ComboBoxPure";const ComboBox=react__WEBPACK_IMPORTED_MODULE_0__.memo(ComboBoxPure,compare);try{ComboBoxPure.displayName="ComboBoxPure",ComboBoxPure.__docgenInfo={description:"",displayName:"ComboBoxPure",props:{advancedOptions:{defaultValue:null,description:"Displays advanced options",name:"advancedOptions",required:!1,type:{name:"ReactNode"}},children:{defaultValue:null,description:"Children elements",name:"children",required:!1,type:{name:"ReactNode"}},className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string"}},directionX:{defaultValue:null,description:"X direction position",name:"directionX",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'}]}},directionY:{defaultValue:null,description:"Y direction position",name:"directionY",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'},{value:'"both"'}]}},displayType:{defaultValue:null,description:"Component Display Type",name:"displayType",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"toggle"'}]}},dropDownMaxHeight:{defaultValue:null,description:"Height of Dropdown",name:"dropDownMaxHeight",required:!1,type:{name:"number"}},showDisabledItems:{defaultValue:null,description:"Displays disabled items when displayType !== toggle",name:"showDisabledItems",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"Accepts id",name:"id",required:!1,type:{name:"string"}},dropDownId:{defaultValue:null,description:"Accepts id for dropdown container",name:"dropDownId",required:!1,type:{name:"string"}},withBackdrop:{defaultValue:null,description:"Indicates that component contains a backdrop",name:"withBackdrop",required:!1,type:{name:"boolean"}},isDisabled:{defaultValue:null,description:"Indicates that component is disabled",name:"isDisabled",required:!1,type:{name:"boolean"}},noBorder:{defaultValue:null,description:"Indicates that component is displayed without borders",name:"noBorder",required:!1,type:{name:"boolean"}},onSelect:{defaultValue:null,description:"Is triggered whenever ComboBox is a selected option",name:"onSelect",required:!0,type:{name:"(option: TOption) => void"}},opened:{defaultValue:null,description:"Sets the component open",name:"opened",required:!1,type:{name:"boolean"}},options:{defaultValue:null,description:"Combo box options",name:"options",required:!0,type:{name:"TOption[]"}},scaled:{defaultValue:null,description:"Indicates that component is scaled by parent",name:"scaled",required:!1,type:{name:"boolean"}},scaledOptions:{defaultValue:null,description:"Indicates that component`s options are scaled by ComboButton",name:"scaledOptions",required:!1,type:{name:"boolean"}},selectedOption:{defaultValue:null,description:"Selected option",name:"selectedOption",required:!0,type:{name:"TOption"}},size:{defaultValue:null,description:"Sets the component's width from the default settings",name:"size",required:!1,type:{name:"enum",value:[{value:'"base"'},{value:'"middle"'},{value:'"big"'},{value:'"huge"'},{value:'"content"'}]}},style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties"}},onToggle:{defaultValue:null,description:"The event is triggered by clicking on a component when `displayType: toggle`",name:"onToggle",required:!1,type:{name:"((e: Event | MouseEvent<Element, MouseEvent>, isOpen: boolean) => void)"}},textOverflow:{defaultValue:null,description:"Accepts css text-overflow",name:"textOverflow",required:!1,type:{name:"boolean"}},disableIconClick:{defaultValue:null,description:"Disables clicking on the icon",name:"disableIconClick",required:!1,type:{name:"boolean"}},isDefaultMode:{defaultValue:null,description:"Sets the operation mode of the component. The default option is set to portal mode",name:"isDefaultMode",required:!1,type:{name:"boolean"}},offsetDropDownY:{defaultValue:null,description:"Y offset",name:"offsetDropDownY",required:!1,type:{name:"string"}},comboIcon:{defaultValue:null,description:"Sets an icon that is displayed in the combo button",name:"comboIcon",required:!1,type:{name:"string"}},manualY:{defaultValue:null,description:"Sets the precise distance from the parent",name:"manualY",required:!1,type:{name:"string"}},manualX:{defaultValue:null,description:"Sets the precise distance from the parent",name:"manualX",required:!1,type:{name:"string"}},manualWidth:{defaultValue:null,description:"Dropdown manual width",name:"manualWidth",required:!1,type:{name:"string"}},displaySelectedOption:{defaultValue:null,description:"Displays the selected option",name:"displaySelectedOption",required:!1,type:{name:"boolean"}},fixedDirection:{defaultValue:null,description:"Disables position checking. Used for explicit direction setting",name:"fixedDirection",required:!1,type:{name:"boolean"}},disableItemClick:{defaultValue:null,description:"Disables clicking on the item",name:"disableItemClick",required:!1,type:{name:"boolean"}},fillIcon:{defaultValue:null,description:"Indicates that component will fill selected item icon",name:"fillIcon",required:!1,type:{name:"boolean"}},offsetLeft:{defaultValue:null,description:"Sets the left offset for the dropdown",name:"offsetLeft",required:!1,type:{name:"number"}},modernView:{defaultValue:null,description:"Sets the combo-box to be displayed in modern view",name:"modernView",required:!1,type:{name:"boolean"}},advancedOptionsCount:{defaultValue:null,description:"Count of advanced options",name:"advancedOptionsCount",required:!1,type:{name:"number"}},tabIndex:{defaultValue:null,description:"Accepts css tab-index style",name:"tabIndex",required:!1,type:{name:"number"}},withoutPadding:{defaultValue:null,description:"Disables the combo box padding",name:"withoutPadding",required:!1,type:{name:"boolean"}},isLoading:{defaultValue:null,description:"Indicates when the component is loading",name:"isLoading",required:!1,type:{name:"boolean"}},type:{defaultValue:null,description:"Type ComboBox",name:"type",required:!1,type:{name:"TCombobox"}},setIsOpenItemAccess:{defaultValue:null,description:"",name:"setIsOpenItemAccess",required:!1,type:{name:"((value: boolean) => void)"}},onClickSelectedItem:{defaultValue:null,description:"",name:"onClickSelectedItem",required:!1,type:{name:"((option: TOption) => void)"}},withoutBackground:{defaultValue:null,description:"",name:"withoutBackground",required:!1,type:{name:"boolean"}},forceCloseClickOutside:{defaultValue:null,description:"",name:"forceCloseClickOutside",required:!1,type:{name:"boolean"}},hideMobileView:{defaultValue:null,description:"",name:"hideMobileView",required:!1,type:{name:"boolean"}},isNoFixedHeightOptions:{defaultValue:null,description:"",name:"isNoFixedHeightOptions",required:!1,type:{name:"boolean"}},isMobileView:{defaultValue:null,description:"",name:"isMobileView",required:!1,type:{name:"boolean"}},withBackground:{defaultValue:null,description:"",name:"withBackground",required:!1,type:{name:"boolean"}},isAside:{defaultValue:null,description:"",name:"isAside",required:!1,type:{name:"boolean"}},withBlur:{defaultValue:null,description:"",name:"withBlur",required:!1,type:{name:"boolean"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},plusBadgeValue:{defaultValue:null,description:"",name:"plusBadgeValue",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/combobox/ComboBox.tsx#ComboBoxPure"]={docgenInfo:ComboBoxPure.__docgenInfo,name:"ComboBoxPure",path:"components/combobox/ComboBox.tsx#ComboBoxPure"})}catch(__react_docgen_typescript_loader_error){}try{ComboBox.displayName="ComboBox",ComboBox.__docgenInfo={description:"",displayName:"ComboBox",props:{advancedOptions:{defaultValue:null,description:"Displays advanced options",name:"advancedOptions",required:!1,type:{name:"ReactNode"}},children:{defaultValue:null,description:"Children elements",name:"children",required:!1,type:{name:"ReactNode"}},className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string"}},directionX:{defaultValue:null,description:"X direction position",name:"directionX",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'}]}},directionY:{defaultValue:null,description:"Y direction position",name:"directionY",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'},{value:'"both"'}]}},displayType:{defaultValue:null,description:"Component Display Type",name:"displayType",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"toggle"'}]}},dropDownMaxHeight:{defaultValue:null,description:"Height of Dropdown",name:"dropDownMaxHeight",required:!1,type:{name:"number"}},showDisabledItems:{defaultValue:null,description:"Displays disabled items when displayType !== toggle",name:"showDisabledItems",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"Accepts id",name:"id",required:!1,type:{name:"string"}},dropDownId:{defaultValue:null,description:"Accepts id for dropdown container",name:"dropDownId",required:!1,type:{name:"string"}},withBackdrop:{defaultValue:null,description:"Indicates that component contains a backdrop",name:"withBackdrop",required:!1,type:{name:"boolean"}},isDisabled:{defaultValue:null,description:"Indicates that component is disabled",name:"isDisabled",required:!1,type:{name:"boolean"}},noBorder:{defaultValue:null,description:"Indicates that component is displayed without borders",name:"noBorder",required:!1,type:{name:"boolean"}},onSelect:{defaultValue:null,description:"Is triggered whenever ComboBox is a selected option",name:"onSelect",required:!0,type:{name:"(option: TOption) => void"}},opened:{defaultValue:null,description:"Sets the component open",name:"opened",required:!1,type:{name:"boolean"}},options:{defaultValue:null,description:"Combo box options",name:"options",required:!0,type:{name:"TOption[]"}},scaled:{defaultValue:null,description:"Indicates that component is scaled by parent",name:"scaled",required:!1,type:{name:"boolean"}},scaledOptions:{defaultValue:null,description:"Indicates that component`s options are scaled by ComboButton",name:"scaledOptions",required:!1,type:{name:"boolean"}},selectedOption:{defaultValue:null,description:"Selected option",name:"selectedOption",required:!0,type:{name:"TOption"}},size:{defaultValue:null,description:"Sets the component's width from the default settings",name:"size",required:!1,type:{name:"enum",value:[{value:'"base"'},{value:'"middle"'},{value:'"big"'},{value:'"huge"'},{value:'"content"'}]}},style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties"}},onToggle:{defaultValue:null,description:"The event is triggered by clicking on a component when `displayType: toggle`",name:"onToggle",required:!1,type:{name:"((e: Event | MouseEvent<Element, MouseEvent>, isOpen: boolean) => void)"}},textOverflow:{defaultValue:null,description:"Accepts css text-overflow",name:"textOverflow",required:!1,type:{name:"boolean"}},disableIconClick:{defaultValue:null,description:"Disables clicking on the icon",name:"disableIconClick",required:!1,type:{name:"boolean"}},isDefaultMode:{defaultValue:null,description:"Sets the operation mode of the component. The default option is set to portal mode",name:"isDefaultMode",required:!1,type:{name:"boolean"}},offsetDropDownY:{defaultValue:null,description:"Y offset",name:"offsetDropDownY",required:!1,type:{name:"string"}},comboIcon:{defaultValue:null,description:"Sets an icon that is displayed in the combo button",name:"comboIcon",required:!1,type:{name:"string"}},manualY:{defaultValue:null,description:"Sets the precise distance from the parent",name:"manualY",required:!1,type:{name:"string"}},manualX:{defaultValue:null,description:"Sets the precise distance from the parent",name:"manualX",required:!1,type:{name:"string"}},manualWidth:{defaultValue:null,description:"Dropdown manual width",name:"manualWidth",required:!1,type:{name:"string"}},displaySelectedOption:{defaultValue:null,description:"Displays the selected option",name:"displaySelectedOption",required:!1,type:{name:"boolean"}},fixedDirection:{defaultValue:null,description:"Disables position checking. Used for explicit direction setting",name:"fixedDirection",required:!1,type:{name:"boolean"}},disableItemClick:{defaultValue:null,description:"Disables clicking on the item",name:"disableItemClick",required:!1,type:{name:"boolean"}},fillIcon:{defaultValue:null,description:"Indicates that component will fill selected item icon",name:"fillIcon",required:!1,type:{name:"boolean"}},offsetLeft:{defaultValue:null,description:"Sets the left offset for the dropdown",name:"offsetLeft",required:!1,type:{name:"number"}},modernView:{defaultValue:null,description:"Sets the combo-box to be displayed in modern view",name:"modernView",required:!1,type:{name:"boolean"}},advancedOptionsCount:{defaultValue:null,description:"Count of advanced options",name:"advancedOptionsCount",required:!1,type:{name:"number"}},tabIndex:{defaultValue:null,description:"Accepts css tab-index style",name:"tabIndex",required:!1,type:{name:"number"}},withoutPadding:{defaultValue:null,description:"Disables the combo box padding",name:"withoutPadding",required:!1,type:{name:"boolean"}},isLoading:{defaultValue:null,description:"Indicates when the component is loading",name:"isLoading",required:!1,type:{name:"boolean"}},type:{defaultValue:null,description:"Type ComboBox",name:"type",required:!1,type:{name:"TCombobox"}},setIsOpenItemAccess:{defaultValue:null,description:"",name:"setIsOpenItemAccess",required:!1,type:{name:"((value: boolean) => void)"}},onClickSelectedItem:{defaultValue:null,description:"",name:"onClickSelectedItem",required:!1,type:{name:"((option: TOption) => void)"}},withoutBackground:{defaultValue:null,description:"",name:"withoutBackground",required:!1,type:{name:"boolean"}},forceCloseClickOutside:{defaultValue:null,description:"",name:"forceCloseClickOutside",required:!1,type:{name:"boolean"}},hideMobileView:{defaultValue:null,description:"",name:"hideMobileView",required:!1,type:{name:"boolean"}},isNoFixedHeightOptions:{defaultValue:null,description:"",name:"isNoFixedHeightOptions",required:!1,type:{name:"boolean"}},isMobileView:{defaultValue:null,description:"",name:"isMobileView",required:!1,type:{name:"boolean"}},withBackground:{defaultValue:null,description:"",name:"withBackground",required:!1,type:{name:"boolean"}},isAside:{defaultValue:null,description:"",name:"isAside",required:!1,type:{name:"boolean"}},withBlur:{defaultValue:null,description:"",name:"withBlur",required:!1,type:{name:"boolean"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},plusBadgeValue:{defaultValue:null,description:"",name:"plusBadgeValue",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/combobox/ComboBox.tsx#ComboBox"]={docgenInfo:ComboBox.__docgenInfo,name:"ComboBox",path:"components/combobox/ComboBox.tsx#ComboBox"})}catch(__react_docgen_typescript_loader_error){}try{ComboBoxPure.displayName="ComboBoxPure",__function.__docgenInfo={description:"",displayName:"ComboBoxPure",props:{advancedOptions:{defaultValue:null,description:"Displays advanced options",name:"advancedOptions",required:!1,type:{name:"ReactNode"}},children:{defaultValue:null,description:"Children elements",name:"children",required:!1,type:{name:"ReactNode"}},className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string | undefined"}},directionX:{defaultValue:null,description:"X direction position",name:"directionX",required:!1,type:{name:"TDirectionX | undefined"}},directionY:{defaultValue:null,description:"Y direction position",name:"directionY",required:!1,type:{name:"TDirectionY | undefined"}},displayType:{defaultValue:null,description:"Component Display Type",name:"displayType",required:!1,type:{name:"ComboBoxDisplayType | undefined"}},dropDownMaxHeight:{defaultValue:null,description:"Height of Dropdown",name:"dropDownMaxHeight",required:!1,type:{name:"number | undefined"}},showDisabledItems:{defaultValue:null,description:"Displays disabled items when displayType !== toggle",name:"showDisabledItems",required:!1,type:{name:"boolean | undefined"}},id:{defaultValue:null,description:"Accepts id",name:"id",required:!1,type:{name:"string | undefined"}},dropDownId:{defaultValue:null,description:"Accepts id for dropdown container",name:"dropDownId",required:!1,type:{name:"string | undefined"}},withBackdrop:{defaultValue:null,description:"Indicates that component contains a backdrop",name:"withBackdrop",required:!1,type:{name:"boolean | undefined"}},isDisabled:{defaultValue:null,description:"Indicates that component is disabled",name:"isDisabled",required:!1,type:{name:"boolean | undefined"}},noBorder:{defaultValue:null,description:"Indicates that component is displayed without borders",name:"noBorder",required:!1,type:{name:"boolean | undefined"}},onSelect:{defaultValue:null,description:"Is triggered whenever ComboBox is a selected option",name:"onSelect",required:!0,type:{name:"(option: TOption) => void"}},opened:{defaultValue:null,description:"Sets the component open",name:"opened",required:!1,type:{name:"boolean | undefined"}},options:{defaultValue:null,description:"Combo box options",name:"options",required:!0,type:{name:"TOption[]"}},scaled:{defaultValue:null,description:"Indicates that component is scaled by parent",name:"scaled",required:!1,type:{name:"boolean | undefined"}},scaledOptions:{defaultValue:null,description:"Indicates that component`s options are scaled by ComboButton",name:"scaledOptions",required:!1,type:{name:"boolean | undefined"}},selectedOption:{defaultValue:null,description:"Selected option",name:"selectedOption",required:!0,type:{name:"TOption"}},size:{defaultValue:null,description:"Sets the component's width from the default settings",name:"size",required:!1,type:{name:"ComboBoxSize | undefined"}},style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties | undefined"}},onToggle:{defaultValue:null,description:"The event is triggered by clicking on a component when `displayType: toggle`",name:"onToggle",required:!1,type:{name:"((e: Event | MouseEvent<Element, MouseEvent>, isOpen: boolean) => void) | undefined"}},textOverflow:{defaultValue:null,description:"Accepts css text-overflow",name:"textOverflow",required:!1,type:{name:"boolean | undefined"}},disableIconClick:{defaultValue:null,description:"Disables clicking on the icon",name:"disableIconClick",required:!1,type:{name:"boolean | undefined"}},isDefaultMode:{defaultValue:null,description:"Sets the operation mode of the component. The default option is set to portal mode",name:"isDefaultMode",required:!1,type:{name:"boolean | undefined"}},offsetDropDownY:{defaultValue:null,description:"Y offset",name:"offsetDropDownY",required:!1,type:{name:"string | undefined"}},comboIcon:{defaultValue:null,description:"Sets an icon that is displayed in the combo button",name:"comboIcon",required:!1,type:{name:"string | undefined"}},manualY:{defaultValue:null,description:"Sets the precise distance from the parent",name:"manualY",required:!1,type:{name:"string | undefined"}},manualX:{defaultValue:null,description:"Sets the precise distance from the parent",name:"manualX",required:!1,type:{name:"string | undefined"}},manualWidth:{defaultValue:null,description:"Dropdown manual width",name:"manualWidth",required:!1,type:{name:"string | undefined"}},displaySelectedOption:{defaultValue:null,description:"Displays the selected option",name:"displaySelectedOption",required:!1,type:{name:"boolean | undefined"}},fixedDirection:{defaultValue:null,description:"Disables position checking. Used for explicit direction setting",name:"fixedDirection",required:!1,type:{name:"boolean | undefined"}},disableItemClick:{defaultValue:null,description:"Disables clicking on the item",name:"disableItemClick",required:!1,type:{name:"boolean | undefined"}},fillIcon:{defaultValue:null,description:"Indicates that component will fill selected item icon",name:"fillIcon",required:!1,type:{name:"boolean | undefined"}},offsetLeft:{defaultValue:null,description:"Sets the left offset for the dropdown",name:"offsetLeft",required:!1,type:{name:"number | undefined"}},modernView:{defaultValue:null,description:"Sets the combo-box to be displayed in modern view",name:"modernView",required:!1,type:{name:"boolean | undefined"}},advancedOptionsCount:{defaultValue:null,description:"Count of advanced options",name:"advancedOptionsCount",required:!1,type:{name:"number | undefined"}},tabIndex:{defaultValue:null,description:"Accepts css tab-index style",name:"tabIndex",required:!1,type:{name:"number | undefined"}},withoutPadding:{defaultValue:null,description:"Disables the combo box padding",name:"withoutPadding",required:!1,type:{name:"boolean | undefined"}},isLoading:{defaultValue:null,description:"Indicates when the component is loading",name:"isLoading",required:!1,type:{name:"boolean | undefined"}},type:{defaultValue:null,description:"Type ComboBox",name:"type",required:!1,type:{name:"TCombobox | undefined"}},setIsOpenItemAccess:{defaultValue:null,description:"",name:"setIsOpenItemAccess",required:!1,type:{name:"((value: boolean) => void) | undefined"}},onClickSelectedItem:{defaultValue:null,description:"",name:"onClickSelectedItem",required:!1,type:{name:"((option: TOption) => void) | undefined"}},withoutBackground:{defaultValue:null,description:"",name:"withoutBackground",required:!1,type:{name:"boolean | undefined"}},forceCloseClickOutside:{defaultValue:null,description:"",name:"forceCloseClickOutside",required:!1,type:{name:"boolean | undefined"}},hideMobileView:{defaultValue:null,description:"",name:"hideMobileView",required:!1,type:{name:"boolean | undefined"}},isNoFixedHeightOptions:{defaultValue:null,description:"",name:"isNoFixedHeightOptions",required:!1,type:{name:"boolean | undefined"}},isMobileView:{defaultValue:null,description:"",name:"isMobileView",required:!1,type:{name:"boolean | undefined"}},withBackground:{defaultValue:null,description:"",name:"withBackground",required:!1,type:{name:"boolean | undefined"}},isAside:{defaultValue:null,description:"",name:"isAside",required:!1,type:{name:"boolean | undefined"}},withBlur:{defaultValue:null,description:"",name:"withBlur",required:!1,type:{name:"boolean | undefined"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string | undefined"}},plusBadgeValue:{defaultValue:null,description:"",name:"plusBadgeValue",required:!1,type:{name:"number | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/combobox/ComboBox.tsx#ComboBoxPure"]={docgenInfo:ComboBoxPure.__docgenInfo,name:"ComboBoxPure",path:"components/combobox/ComboBox.tsx#ComboBoxPure"})}catch(__react_docgen_typescript_loader_error){}try{ComboBox.displayName="ComboBox",ComboBox.__docgenInfo={description:"",displayName:"ComboBox",props:{advancedOptions:{defaultValue:null,description:"Displays advanced options",name:"advancedOptions",required:!1,type:{name:"ReactNode"}},children:{defaultValue:null,description:"Children elements",name:"children",required:!1,type:{name:"ReactNode"}},className:{defaultValue:null,description:"Accepts class",name:"className",required:!1,type:{name:"string | undefined"}},directionX:{defaultValue:null,description:"X direction position",name:"directionX",required:!1,type:{name:"TDirectionX | undefined"}},directionY:{defaultValue:null,description:"Y direction position",name:"directionY",required:!1,type:{name:"TDirectionY | undefined"}},displayType:{defaultValue:null,description:"Component Display Type",name:"displayType",required:!1,type:{name:"ComboBoxDisplayType | undefined"}},dropDownMaxHeight:{defaultValue:null,description:"Height of Dropdown",name:"dropDownMaxHeight",required:!1,type:{name:"number | undefined"}},showDisabledItems:{defaultValue:null,description:"Displays disabled items when displayType !== toggle",name:"showDisabledItems",required:!1,type:{name:"boolean | undefined"}},id:{defaultValue:null,description:"Accepts id",name:"id",required:!1,type:{name:"string | undefined"}},dropDownId:{defaultValue:null,description:"Accepts id for dropdown container",name:"dropDownId",required:!1,type:{name:"string | undefined"}},withBackdrop:{defaultValue:null,description:"Indicates that component contains a backdrop",name:"withBackdrop",required:!1,type:{name:"boolean | undefined"}},isDisabled:{defaultValue:null,description:"Indicates that component is disabled",name:"isDisabled",required:!1,type:{name:"boolean | undefined"}},noBorder:{defaultValue:null,description:"Indicates that component is displayed without borders",name:"noBorder",required:!1,type:{name:"boolean | undefined"}},onSelect:{defaultValue:null,description:"Is triggered whenever ComboBox is a selected option",name:"onSelect",required:!0,type:{name:"(option: TOption) => void"}},opened:{defaultValue:null,description:"Sets the component open",name:"opened",required:!1,type:{name:"boolean | undefined"}},options:{defaultValue:null,description:"Combo box options",name:"options",required:!0,type:{name:"TOption[]"}},scaled:{defaultValue:null,description:"Indicates that component is scaled by parent",name:"scaled",required:!1,type:{name:"boolean | undefined"}},scaledOptions:{defaultValue:null,description:"Indicates that component`s options are scaled by ComboButton",name:"scaledOptions",required:!1,type:{name:"boolean | undefined"}},selectedOption:{defaultValue:null,description:"Selected option",name:"selectedOption",required:!0,type:{name:"TOption"}},size:{defaultValue:null,description:"Sets the component's width from the default settings",name:"size",required:!1,type:{name:"ComboBoxSize | undefined"}},style:{defaultValue:null,description:"Accepts css style",name:"style",required:!1,type:{name:"CSSProperties | undefined"}},onToggle:{defaultValue:null,description:"The event is triggered by clicking on a component when `displayType: toggle`",name:"onToggle",required:!1,type:{name:"((e: Event | MouseEvent<Element, MouseEvent>, isOpen: boolean) => void) | undefined"}},textOverflow:{defaultValue:null,description:"Accepts css text-overflow",name:"textOverflow",required:!1,type:{name:"boolean | undefined"}},disableIconClick:{defaultValue:null,description:"Disables clicking on the icon",name:"disableIconClick",required:!1,type:{name:"boolean | undefined"}},isDefaultMode:{defaultValue:null,description:"Sets the operation mode of the component. The default option is set to portal mode",name:"isDefaultMode",required:!1,type:{name:"boolean | undefined"}},offsetDropDownY:{defaultValue:null,description:"Y offset",name:"offsetDropDownY",required:!1,type:{name:"string | undefined"}},comboIcon:{defaultValue:null,description:"Sets an icon that is displayed in the combo button",name:"comboIcon",required:!1,type:{name:"string | undefined"}},manualY:{defaultValue:null,description:"Sets the precise distance from the parent",name:"manualY",required:!1,type:{name:"string | undefined"}},manualX:{defaultValue:null,description:"Sets the precise distance from the parent",name:"manualX",required:!1,type:{name:"string | undefined"}},manualWidth:{defaultValue:null,description:"Dropdown manual width",name:"manualWidth",required:!1,type:{name:"string | undefined"}},displaySelectedOption:{defaultValue:null,description:"Displays the selected option",name:"displaySelectedOption",required:!1,type:{name:"boolean | undefined"}},fixedDirection:{defaultValue:null,description:"Disables position checking. Used for explicit direction setting",name:"fixedDirection",required:!1,type:{name:"boolean | undefined"}},disableItemClick:{defaultValue:null,description:"Disables clicking on the item",name:"disableItemClick",required:!1,type:{name:"boolean | undefined"}},fillIcon:{defaultValue:null,description:"Indicates that component will fill selected item icon",name:"fillIcon",required:!1,type:{name:"boolean | undefined"}},offsetLeft:{defaultValue:null,description:"Sets the left offset for the dropdown",name:"offsetLeft",required:!1,type:{name:"number | undefined"}},modernView:{defaultValue:null,description:"Sets the combo-box to be displayed in modern view",name:"modernView",required:!1,type:{name:"boolean | undefined"}},advancedOptionsCount:{defaultValue:null,description:"Count of advanced options",name:"advancedOptionsCount",required:!1,type:{name:"number | undefined"}},tabIndex:{defaultValue:null,description:"Accepts css tab-index style",name:"tabIndex",required:!1,type:{name:"number | undefined"}},withoutPadding:{defaultValue:null,description:"Disables the combo box padding",name:"withoutPadding",required:!1,type:{name:"boolean | undefined"}},isLoading:{defaultValue:null,description:"Indicates when the component is loading",name:"isLoading",required:!1,type:{name:"boolean | undefined"}},type:{defaultValue:null,description:"Type ComboBox",name:"type",required:!1,type:{name:"TCombobox | undefined"}},setIsOpenItemAccess:{defaultValue:null,description:"",name:"setIsOpenItemAccess",required:!1,type:{name:"((value: boolean) => void) | undefined"}},onClickSelectedItem:{defaultValue:null,description:"",name:"onClickSelectedItem",required:!1,type:{name:"((option: TOption) => void) | undefined"}},withoutBackground:{defaultValue:null,description:"",name:"withoutBackground",required:!1,type:{name:"boolean | undefined"}},forceCloseClickOutside:{defaultValue:null,description:"",name:"forceCloseClickOutside",required:!1,type:{name:"boolean | undefined"}},hideMobileView:{defaultValue:null,description:"",name:"hideMobileView",required:!1,type:{name:"boolean | undefined"}},isNoFixedHeightOptions:{defaultValue:null,description:"",name:"isNoFixedHeightOptions",required:!1,type:{name:"boolean | undefined"}},isMobileView:{defaultValue:null,description:"",name:"isMobileView",required:!1,type:{name:"boolean | undefined"}},withBackground:{defaultValue:null,description:"",name:"withBackground",required:!1,type:{name:"boolean | undefined"}},isAside:{defaultValue:null,description:"",name:"isAside",required:!1,type:{name:"boolean | undefined"}},withBlur:{defaultValue:null,description:"",name:"withBlur",required:!1,type:{name:"boolean | undefined"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string | undefined"}},plusBadgeValue:{defaultValue:null,description:"",name:"plusBadgeValue",required:!1,type:{name:"number | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/combobox/ComboBox.tsx#ComboBox"]={docgenInfo:ComboBox.__docgenInfo,name:"ComboBox",path:"components/combobox/ComboBox.tsx#ComboBox"})}catch(__react_docgen_typescript_loader_error){}},"./components/combobox/Combobox.enums.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{d:()=>ComboBoxSize});let ComboBoxSize=function(ComboBoxSize){return ComboBoxSize.base="base",ComboBoxSize.middle="middle",ComboBoxSize.big="big",ComboBoxSize.huge="huge",ComboBoxSize.content="content",ComboBoxSize}({})},"./components/combobox/Combobox.styled.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{oG:()=>StyledArrowIcon,X$:()=>StyledComboBox,vE:()=>StyledIcon,vv:()=>StyledLoader,$3:()=>StyledOptionalItem,LT:()=>StyledPlusBadge,Nv:()=>StyledThemeComboButton,LQ:()=>StyledTriangleDownIcon});var _path,styled_components_browser_esm=__webpack_require__("../../node_modules/styled-components/dist/styled-components.browser.esm.js"),react=__webpack_require__("../../node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const triangle_down_react=function SvgTriangledownreact(props){return react.createElement("svg",_extends({width:6,height:3,viewBox:"0 0 6 3",fill:"none",xmlns:"http://www.w3.org/2000/svg"},props),_path||(_path=react.createElement("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M2.788 2.788a.3.3 0 00.424 0L5.488.512A.3.3 0 005.276 0H.724a.3.3 0 00-.212.512l2.276 2.276z",fill:"#333"})))};var themes=__webpack_require__("./themes/index.ts"),utils=__webpack_require__("./utils/index.ts"),loader=__webpack_require__("./components/loader/index.tsx"),Combobox_enums=__webpack_require__("./components/combobox/Combobox.enums.ts");const alternativeComboButtonStyles=styled_components_browser_esm.AH`
  .combo-button-label {
    color: ${({theme,isOpen})=>theme.comboBox.label[isOpen?"selectedColor":"alternativeColor"]};
  }

  .combo-buttons_expander-icon {
    path {
      fill: ${({theme,isOpen})=>theme.comboBox.plusBadge[isOpen?"selectedBgColor":"bgColor"]} !important;
    }
  }

  :hover {
    .combo-button-label {
      color: ${({theme})=>theme.comboBox.label.selectedColor};
    }

    .combo-buttons_expander-icon {
      path {
        fill: ${({theme})=>theme.comboBox.plusBadge.selectedBgColor} !important;
      }
    }
  }
`,StyledComboBox=styled_components_browser_esm.Ay.div`
  width: ${props=>(props.scaled?"100%":props.size===Combobox_enums.d.base&&props.theme.comboBox.width.base)||props.size===Combobox_enums.d.middle&&props.theme.comboBox.width.middle||props.size===Combobox_enums.d.big&&props.theme.comboBox.width.big||props.size===Combobox_enums.d.huge&&props.theme.comboBox.width.huge||props.size===Combobox_enums.d.content&&"fit-content"};

  position: relative;
  outline: 0;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);

  padding: ${props=>props.withoutPadding?"0":"4px 0"};

  ${props=>props.isOpen&&props.noBorder&&styled_components_browser_esm.AH`
      background: ${props.theme.comboBox.background};
      border-radius: 3px;
    `}

  .dropdown-container {
    padding: ${props=>props.advancedOptions&&props.theme.comboBox.padding};

    ${props=>!props.disableMobileView&&styled_components_browser_esm.AH`
        @media ${utils.Hw} {
          position: fixed;
          top: unset !important;
          right: 0;
          left: 0;
          bottom: 0 !important;
          width: 100%;
          width: -moz-available;
          width: -webkit-fill-available;
          width: fill-available;
          border: none;
          border-radius: 6px 6px 0px 0px;
        }
      `}
  }

  -webkit-user-select: none;

  .backdrop-active {
    z-index: 210;
  }
`;StyledComboBox.defaultProps={theme:themes.C6};const StyledTriangleDownIcon=(0,styled_components_browser_esm.Ay)(triangle_down_react)`
  ${utils.Ww}
`,modernViewButton=styled_components_browser_esm.AH`
  height: ${props=>props.theme.comboBox.button.heightModernView};
  background: ${props=>props.isOpen||props.isLoading?props.theme.comboBox.button.focusBackgroundModernView:props.theme.comboBox.button.backgroundModernView};

  border: none !important;
`,hoverModernViewButton=styled_components_browser_esm.AH`
  background: ${props=>props.isOpen||props.isLoading?props.theme.comboBox.button.focusBackgroundModernView:props.theme.comboBox.button.hoverBackgroundModernView} !important;
`,StyledComboButton=styled_components_browser_esm.Ay.div`
  display: flex;
  align-items: center;

  gap: ${props=>props.type&&"4px"};
  justify-content: center;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);

  height: ${props=>props.noBorder?props.theme.comboBox.button.height:props.theme.comboBox.button.heightWithBorder};
  width: ${props=>(props.scaled?"100%":props.size===Combobox_enums.d.base&&props.theme.comboBox.width.base)||props.size===Combobox_enums.d.middle&&props.theme.comboBox.width.middle||props.size===Combobox_enums.d.big&&props.theme.comboBox.width.big||props.size===Combobox_enums.d.huge&&props.theme.comboBox.width.huge||props.size===Combobox_enums.d.content&&"fit-content"};

  ${utils.h0};

  padding-left: ${props=>"content"===props.size?props.theme.comboBox.button.paddingLeft:props.theme.comboBox.button.selectPaddingLeft};

  padding-right: ${props=>"content"===props.size?props.displayArrow?props.theme.comboBox.button.paddingRight:props.theme.comboBox.button.paddingRightNoArrow:props.displayArrow?props.theme.comboBox.button.selectPaddingRight:props.theme.comboBox.button.selectPaddingRightNoArrow};
  ${props=>"rtl"===props.theme.interfaceDirection&&styled_components_browser_esm.AH`
        padding-right: ${"content"===props.size?props.theme.comboBox.button.paddingLeft:props.theme.comboBox.button.selectPaddingLeft};

        padding-left: ${"content"===props.size?props.displayArrow?props.theme.comboBox.button.paddingRight:props.theme.comboBox.button.paddingRightNoArrow:props.displayArrow?props.theme.comboBox.button.selectPaddingRight:props.theme.comboBox.button.selectPaddingRightNoArrow};
      `}

  background: ${props=>props.noBorder?props.theme.comboBox.button.backgroundWithBorder:props.theme.comboBox.button.background};

  color: ${props=>props.isDisabled?props.theme.comboBox.button.disabledColor:props.theme.comboBox.button.color};

  box-sizing: border-box;

  ${props=>!props.noBorder&&`\n    border:  ${props.theme.comboBox.button.border};\n    border-radius: ${props.theme.comboBox.button.borderRadius};\n  `}

  border-color: ${props=>props.isOpen&&props.theme.comboBox.button.openBorderColor};

  ${props=>props.isDisabled&&!props.noBorder&&`\n    border-color: ${props.theme.comboBox.button.disabledBorderColor};\n    background: ${props.theme.comboBox.button.disabledBackground};\n  `}

  ${props=>!props.noBorder&&"\n    height: 32px;\n  "}

  
  ${props=>props.modernView&&modernViewButton}


  
  ${props=>props.fillIcon&&styled_components_browser_esm.AH`
      .optionalBlock {
        svg {
          path {
            fill: ${props.isOpen?props.theme.iconButton.hoverColor:props.theme.iconButton.color};
          }
        }
      }
    `};

  :hover {
    border-color: ${props=>props.isOpen?props.theme.comboBox.button.hoverBorderColorOpen:props.theme.comboBox.button.hoverBorderColor};
    cursor: ${props=>props.isDisabled||!props.containOptions&&!props.withAdvancedOptions||props.isLoading?"default":"pointer"};

    ${props=>props.isDisabled&&`\n      border-color: ${props.theme.comboBox.button.hoverDisabledBorderColor};\n    `}

    ${props=>props.modernView&&!props.isDisabled&&hoverModernViewButton}

      
      ${({fillIcon})=>fillIcon&&styled_components_browser_esm.AH`
        .optionalBlock {
          svg {
            path {
              fill: ${props=>props.theme.iconButton.hoverColor};
            }
          }
        }
      `}
  }
  .combo-button-label {
    visibility: ${props=>props.isLoading?"hidden":"visible"};

    ${({theme,plusBadgeValue,noBorder})=>`${"margin-"+("rtl"===theme.interfaceDirection?"left":"right")}: ${plusBadgeValue?0:noBorder?theme.comboBox.label.marginRight:theme.comboBox.label.marginRightWithBorder};`}
    color: ${props=>props.isDisabled?props.theme.comboBox.label.disabledColor:props.theme.comboBox.label.selectedColor};

    max-width: ${props=>props.scaled?"100%":props.theme.comboBox.label.maxWidth};

    ${props=>props.noBorder&&`\n      line-height: ${props.theme.comboBox.label.lineHeightWithoutBorder};\n    `}
  }

  :focus {
    outline: none;
    border-color: ${props=>props.isOpen?props.theme.comboBox.button.hoverBorderColorOpen:props.theme.comboBox.button.hoverBorderColor};

    ${props=>props.fillIcon&&styled_components_browser_esm.AH`
        .optionalBlock {
          svg {
            path {
              fill: ${props.isOpen?props.theme.iconButton.hoverColor:props.theme.iconButton.color};
            }
          }
        }
      `}
  }

  ${({plusBadgeValue})=>plusBadgeValue&&alternativeComboButtonStyles}
`;StyledComboButton.defaultProps={theme:themes.C6};const StyledOptionalItem=styled_components_browser_esm.Ay.div`
  margin-right: ${props=>props.theme.comboBox.childrenButton.marginRight};
  ${props=>"rtl"===props.theme.interfaceDirection&&styled_components_browser_esm.AH`
      margin-right: 0;
      margin-left: ${props.theme.comboBox.childrenButton.marginRight};
    `}

  visibility: ${props=>props.isLoading?"hidden":"visible"};

  ${props=>props.fillIcon&&styled_components_browser_esm.AH`
      path {
        fill: ${props.defaultOption?props.isDisabled?props.theme.comboBox.childrenButton.defaultDisabledColor:props.theme.comboBox.childrenButton.defaultColor:props.isDisabled?props.theme.comboBox.childrenButton.disabledColor:props.theme.comboBox.childrenButton.color};
      }
    `}
`;StyledOptionalItem.defaultProps={theme:themes.C6};const StyledIcon=styled_components_browser_esm.Ay.div`
  margin-right: ${props=>props.theme.comboBox.childrenButton.marginRight};
  ${props=>"rtl"===props.theme.interfaceDirection&&styled_components_browser_esm.AH`
      margin-right: 0;
      margin-left: ${props.theme.comboBox.childrenButton.marginRight};
    `}
  width: ${props=>props.theme.comboBox.childrenButton.width};
  height: ${props=>props.theme.comboBox.childrenButton.height};

  visibility: ${props=>props.isLoading?"hidden":"visible"};
  ${props=>"rtl"===props.theme.interfaceDirection&&styled_components_browser_esm.AH`
      transform: scaleX(-1);
    `}
  .combo-button_selected-icon {
    path {
      fill: ${props=>props.defaultOption?props.isDisabled?props.theme.comboBox.childrenButton.defaultDisabledColor:props.theme.comboBox.childrenButton.defaultColor:props.isDisabled?props.theme.comboBox.childrenButton.disabledColor:props.isSelected?props.theme.comboBox.childrenButton.selectedColor:props.theme.comboBox.childrenButton.color};
    }
  }
  svg {
    &:not(:root) {
      width: 100%;
      height: 100%;
    }
  }
`;StyledIcon.defaultProps={theme:themes.C6};const StyledPlusBadge=styled_components_browser_esm.Ay.div`
  height: 12px;
  padding: 0px 3px;
  gap: 10px;
  border-radius: 12px;

  line-height: 12px;
  font-size: 9px;
  font-weight: 800;

  background-color: ${({theme,isOpen})=>isOpen?theme.comboBox.plusBadge.selectedBgColor:theme.comboBox.plusBadge.bgColor};
  color: ${({theme})=>theme.comboBox.plusBadge.color};

  ${StyledComboButton}:hover & {
    background-color: ${({theme})=>theme.comboBox.plusBadge.selectedBgColor};
  }
`,StyledArrowIcon=styled_components_browser_esm.Ay.div`
  display: flex;
  align-self: center;

  visibility: ${props=>props.isLoading?"hidden":"visible"};

  .combo-buttons_expander-icon {
    path {
      fill: ${props=>props.isDisabled?props.theme.comboBox.label.disabledColor:props.theme.comboBox.label.selectedColor};
    }
  }

  width: ${props=>props.displayArrow?props.theme.comboBox.arrow.width:"0px"};
  flex: ${props=>props.displayArrow?props.theme.comboBox.arrow.flex:"0px"};
  margin-right: ${props=>props.displayArrow?props.theme.comboBox.arrow.marginRight:"0px"};
  margin-left: ${props=>props.displayArrow?props.theme.comboBox.arrow.marginLeft:"0px"};
  ${props=>"rtl"===props.theme.interfaceDirection&&styled_components_browser_esm.AH`
      margin-right: ${props.displayArrow?props.theme.comboBox.arrow.marginLeft:"0px"};
      margin-left: ${props.displayArrow?props.theme.comboBox.arrow.marginRight:"0px"};
    `}

  ${props=>props.isOpen&&"\n    transform: scale(1, -1);\n  "}
`;StyledArrowIcon.defaultProps={theme:themes.C6};const StyledLoader=(0,styled_components_browser_esm.Ay)(loader.a)`
  position: absolute;

  ${props=>"rtl"===props.theme.interfaceDirection?styled_components_browser_esm.AH`
          margin-right: ${"content"===props.displaySize?"-16px":"-8px"};
        `:styled_components_browser_esm.AH`
          margin-left: ${"content"===props.displaySize?"-16px":"-8px"};
        `}
  margin-top: 2px;
`,StyledThemeComboButton=(0,styled_components_browser_esm.Ay)(StyledComboButton)((({$currentColorScheme,isOpen,theme})=>$currentColorScheme&&theme.isBase&&styled_components_browser_esm.AH`
    border-color: ${isOpen&&$currentColorScheme?.main?.accent};

    :focus {
      border-color: ${isOpen&&$currentColorScheme?.main?.accent};
    }
  `))},"./components/combobox/sub-components/ComboButton.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{F:()=>ComboButton});var react=__webpack_require__("../../node_modules/react/index.js"),react_svg_esm=__webpack_require__("../../node_modules/react-svg/dist/react-svg.esm.js"),utils=__webpack_require__("./utils/index.ts"),loader=__webpack_require__("./components/loader/index.tsx"),Combobox_styled=__webpack_require__("./components/combobox/Combobox.styled.ts"),components_text=__webpack_require__("./components/text/index.tsx"),badge=__webpack_require__("./components/badge/index.tsx"),styled_components_browser_esm=__webpack_require__("../../node_modules/styled-components/dist/styled-components.browser.esm.js"),jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const ComboButtonTheme=(0,react.forwardRef)(((props,ref)=>{const defaultTheme=(0,react.useContext)(styled_components_browser_esm.Dx),currentColorScheme=defaultTheme?.currentColorScheme;return(0,jsx_runtime.jsx)(Combobox_styled.Nv,{...props,ref,$currentColorScheme:currentColorScheme})}));ComboButtonTheme.displayName="ComboButtonTheme";const Combobox_theme=ComboButtonTheme;try{ComboButtonTheme.displayName="ComboButtonTheme",ComboButtonTheme.__docgenInfo={description:"",displayName:"ComboButtonTheme",props:{isDisabled:{defaultValue:null,description:"",name:"isDisabled",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},isOpen:{defaultValue:null,description:"",name:"isOpen",required:!1,type:{name:"boolean"}},isLoading:{defaultValue:null,description:"",name:"isLoading",required:!1,type:{name:"boolean"}},type:{defaultValue:null,description:"",name:"type",required:!1,type:{name:"TCombobox"}},tabIndex:{defaultValue:null,description:"",name:"tabIndex",required:!1,type:{name:"number"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"(() => void)"}},size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"base"'},{value:'"middle"'},{value:'"big"'},{value:'"huge"'},{value:'"content"'}]}},scaled:{defaultValue:null,description:"",name:"scaled",required:!1,type:{name:"boolean"}},fillIcon:{defaultValue:null,description:"",name:"fillIcon",required:!1,type:{name:"boolean"}},noBorder:{defaultValue:null,description:"",name:"noBorder",required:!1,type:{name:"boolean"}},selectedOption:{defaultValue:null,description:"",name:"selectedOption",required:!0,type:{name:"TOption"}},comboIcon:{defaultValue:null,description:"",name:"comboIcon",required:!1,type:{name:"string"}},modernView:{defaultValue:null,description:"",name:"modernView",required:!1,type:{name:"boolean"}},plusBadgeValue:{defaultValue:null,description:"",name:"plusBadgeValue",required:!1,type:{name:"number"}},$currentColorScheme:{defaultValue:null,description:"",name:"$currentColorScheme",required:!1,type:{name:"TColorScheme"}},innerContainer:{defaultValue:null,description:"",name:"innerContainer",required:!1,type:{name:"ReactNode"}},interfaceDirection:{defaultValue:null,description:"",name:"interfaceDirection",required:!1,type:{name:"string"}},isSelected:{defaultValue:null,description:"",name:"isSelected",required:!1,type:{name:"boolean"}},containOptions:{defaultValue:null,description:"",name:"containOptions",required:!1,type:{name:"number"}},displayArrow:{defaultValue:null,description:"",name:"displayArrow",required:!1,type:{name:"boolean"}},withOptions:{defaultValue:null,description:"",name:"withOptions",required:!1,type:{name:"boolean"}},optionsLength:{defaultValue:null,description:"",name:"optionsLength",required:!1,type:{name:"number"}},withAdvancedOptions:{defaultValue:null,description:"",name:"withAdvancedOptions",required:!1,type:{name:"boolean"}},innerContainerClassName:{defaultValue:null,description:"",name:"innerContainerClassName",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/combobox/Combobox.theme.tsx#ComboButtonTheme"]={docgenInfo:ComboButtonTheme.__docgenInfo,name:"ComboButtonTheme",path:"components/combobox/Combobox.theme.tsx#ComboButtonTheme"})}catch(__react_docgen_typescript_loader_error){}try{ComboButtonTheme.displayName="ComboButtonTheme",ForwardRefExoticComponent.__docgenInfo={description:"",displayName:"ComboButtonTheme",props:{isDisabled:{defaultValue:null,description:"",name:"isDisabled",required:!1,type:{name:"boolean | undefined"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string | undefined"}},isOpen:{defaultValue:null,description:"",name:"isOpen",required:!1,type:{name:"boolean | undefined"}},isLoading:{defaultValue:null,description:"",name:"isLoading",required:!1,type:{name:"boolean | undefined"}},type:{defaultValue:null,description:"",name:"type",required:!1,type:{name:"TCombobox | undefined"}},tabIndex:{defaultValue:null,description:"",name:"tabIndex",required:!1,type:{name:"number | undefined"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"(() => void) | undefined"}},size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:"ComboBoxSize | undefined"}},scaled:{defaultValue:null,description:"",name:"scaled",required:!1,type:{name:"boolean | undefined"}},fillIcon:{defaultValue:null,description:"",name:"fillIcon",required:!1,type:{name:"boolean | undefined"}},noBorder:{defaultValue:null,description:"",name:"noBorder",required:!1,type:{name:"boolean | undefined"}},selectedOption:{defaultValue:null,description:"",name:"selectedOption",required:!0,type:{name:"TOption"}},comboIcon:{defaultValue:null,description:"",name:"comboIcon",required:!1,type:{name:"string | undefined"}},modernView:{defaultValue:null,description:"",name:"modernView",required:!1,type:{name:"boolean | undefined"}},plusBadgeValue:{defaultValue:null,description:"",name:"plusBadgeValue",required:!1,type:{name:"number | undefined"}},$currentColorScheme:{defaultValue:null,description:"",name:"$currentColorScheme",required:!1,type:{name:"TColorScheme | undefined"}},innerContainer:{defaultValue:null,description:"",name:"innerContainer",required:!1,type:{name:"ReactNode"}},interfaceDirection:{defaultValue:null,description:"",name:"interfaceDirection",required:!1,type:{name:"string | undefined"}},isSelected:{defaultValue:null,description:"",name:"isSelected",required:!1,type:{name:"boolean | undefined"}},containOptions:{defaultValue:null,description:"",name:"containOptions",required:!1,type:{name:"number | undefined"}},displayArrow:{defaultValue:null,description:"",name:"displayArrow",required:!1,type:{name:"boolean | undefined"}},withOptions:{defaultValue:null,description:"",name:"withOptions",required:!1,type:{name:"boolean | undefined"}},optionsLength:{defaultValue:null,description:"",name:"optionsLength",required:!1,type:{name:"number | undefined"}},withAdvancedOptions:{defaultValue:null,description:"",name:"withAdvancedOptions",required:!1,type:{name:"boolean | undefined"}},innerContainerClassName:{defaultValue:null,description:"",name:"innerContainerClassName",required:!1,type:{name:"string | undefined"}},ref:{defaultValue:null,description:"Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}",name:"ref",required:!1,type:{name:"LegacyRef<HTMLDivElement> | undefined"}},key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"Key | null | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/combobox/Combobox.theme.tsx#ComboButtonTheme"]={docgenInfo:ComboButtonTheme.__docgenInfo,name:"ComboButtonTheme",path:"components/combobox/Combobox.theme.tsx#ComboButtonTheme"})}catch(__react_docgen_typescript_loader_error){}var Combobox_enums=__webpack_require__("./components/combobox/Combobox.enums.ts");const ComboButton=props=>{const{noBorder,onClick,isDisabled,innerContainer,innerContainerClassName="innerContainer",selectedOption,optionsLength=0,withOptions=!0,withAdvancedOptions=!1,isOpen,scaled=!1,size,comboIcon,fillIcon,modernView=!1,tabIndex,isLoading,type,plusBadgeValue}=props,defaultOption=selectedOption?.default,displayArrow=withOptions||withAdvancedOptions,comboButtonClassName="combo-button combo-button_"+(isOpen?"open":"closed");return(0,jsx_runtime.jsxs)(Combobox_theme,{isOpen,isDisabled,noBorder,containOptions:optionsLength,withAdvancedOptions,onClick,scaled,size,modernView,className:comboButtonClassName,tabIndex,displayArrow,isLoading,type,selectedOption,plusBadgeValue,children:[innerContainer&&(0,jsx_runtime.jsx)(Combobox_styled.$3,{className:innerContainerClassName,isDisabled,defaultOption,isLoading,fillIcon,children:innerContainer}),selectedOption&&selectedOption.icon&&(0,jsx_runtime.jsx)(Combobox_styled.vE,{className:"forceColor",isDisabled,defaultOption,isLoading,children:(0,jsx_runtime.jsx)(react_svg_esm.k,{src:selectedOption.icon,className:fillIcon?"combo-button_selected-icon":""})}),"badge"===type?(0,jsx_runtime.jsx)(badge.E,{label:selectedOption.label,noHover:!0,color:selectedOption.color,backgroundColor:selectedOption.backgroundColor,border:`2px solid ${selectedOption.border}`,compact:!!selectedOption.border}):"onlyIcon"!==type?(0,jsx_runtime.jsx)(components_text.E,{title:selectedOption?.label,as:"div",truncate:!0,fontWeight:600,className:"combo-button-label",dir:"auto",children:selectedOption?.label}):null,plusBadgeValue&&(0,jsx_runtime.jsx)(Combobox_styled.LT,{isOpen,children:`+${plusBadgeValue}`}),(0,jsx_runtime.jsx)(Combobox_styled.oG,{displayArrow,isOpen,className:"combo-buttons_arrow-icon",isLoading,isDisabled,children:displayArrow&&(comboIcon?(0,jsx_runtime.jsx)(react_svg_esm.k,{src:comboIcon,className:"combo-buttons_expander-icon"}):(0,jsx_runtime.jsx)(Combobox_styled.LQ,{size:utils.rF.scale,className:"combo-buttons_expander-icon"}))}),isLoading&&(0,jsx_runtime.jsx)(Combobox_styled.vv,{displaySize:size,type:loader.R.track,size:"20px"})]})};ComboButton.displayName="ComboButton",ComboButton.defaultProps={noBorder:!1,isDisabled:!1,withOptions:!0,withAdvancedOptions:!1,innerContainerClassName:"innerContainer",isOpen:!1,size:Combobox_enums.d.content,scaled:!1,modernView:!1,tabIndex:-1,isLoading:!1};try{ComboButton.displayName="ComboButton",ComboButton.__docgenInfo={description:"",displayName:"ComboButton",props:{noBorder:{defaultValue:{value:"false"},description:"",name:"noBorder",required:!1,type:{name:"boolean"}},isDisabled:{defaultValue:{value:"false"},description:"",name:"isDisabled",required:!1,type:{name:"boolean"}},selectedOption:{defaultValue:null,description:"",name:"selectedOption",required:!0,type:{name:"TOption"}},withOptions:{defaultValue:{value:"true"},description:"",name:"withOptions",required:!1,type:{name:"boolean"}},optionsLength:{defaultValue:null,description:"",name:"optionsLength",required:!1,type:{name:"number"}},withAdvancedOptions:{defaultValue:{value:"false"},description:"",name:"withAdvancedOptions",required:!1,type:{name:"boolean"}},innerContainer:{defaultValue:null,description:"",name:"innerContainer",required:!1,type:{name:"ReactNode"}},innerContainerClassName:{defaultValue:{value:"innerContainer"},description:"",name:"innerContainerClassName",required:!1,type:{name:"string"}},isOpen:{defaultValue:{value:"false"},description:"",name:"isOpen",required:!1,type:{name:"boolean"}},size:{defaultValue:{value:"ComboBoxSize.content"},description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"base"'},{value:'"middle"'},{value:'"big"'},{value:'"huge"'},{value:'"content"'}]}},scaled:{defaultValue:{value:"false"},description:"",name:"scaled",required:!1,type:{name:"boolean"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"(() => void)"}},comboIcon:{defaultValue:null,description:"",name:"comboIcon",required:!1,type:{name:"string"}},fillIcon:{defaultValue:null,description:"",name:"fillIcon",required:!1,type:{name:"boolean"}},modernView:{defaultValue:{value:"false"},description:"",name:"modernView",required:!1,type:{name:"boolean"}},tabIndex:{defaultValue:{value:"-1"},description:"",name:"tabIndex",required:!1,type:{name:"number"}},isLoading:{defaultValue:{value:"false"},description:"",name:"isLoading",required:!1,type:{name:"boolean"}},type:{defaultValue:null,description:"",name:"type",required:!1,type:{name:"TCombobox"}},plusBadgeValue:{defaultValue:null,description:"",name:"plusBadgeValue",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/combobox/sub-components/ComboButton.tsx#ComboButton"]={docgenInfo:ComboButton.__docgenInfo,name:"ComboButton",path:"components/combobox/sub-components/ComboButton.tsx#ComboButton"})}catch(__react_docgen_typescript_loader_error){}try{ComboButton.displayName="ComboButton",__function.__docgenInfo={description:"",displayName:"ComboButton",props:{noBorder:{defaultValue:{value:!1},description:"",name:"noBorder",required:!1,type:{name:"boolean | undefined"}},isDisabled:{defaultValue:{value:!1},description:"",name:"isDisabled",required:!1,type:{name:"boolean | undefined"}},selectedOption:{defaultValue:null,description:"",name:"selectedOption",required:!0,type:{name:"TOption"}},withOptions:{defaultValue:{value:!0},description:"",name:"withOptions",required:!1,type:{name:"boolean | undefined"}},optionsLength:{defaultValue:null,description:"",name:"optionsLength",required:!1,type:{name:"number | undefined"}},withAdvancedOptions:{defaultValue:{value:!1},description:"",name:"withAdvancedOptions",required:!1,type:{name:"boolean | undefined"}},innerContainer:{defaultValue:null,description:"",name:"innerContainer",required:!1,type:{name:"ReactNode"}},innerContainerClassName:{defaultValue:{value:"innerContainer"},description:"",name:"innerContainerClassName",required:!1,type:{name:"string | undefined"}},isOpen:{defaultValue:{value:!1},description:"",name:"isOpen",required:!1,type:{name:"boolean | undefined"}},size:{defaultValue:{value:"ComboBoxSize.content"},description:"",name:"size",required:!1,type:{name:"ComboBoxSize | undefined"}},scaled:{defaultValue:{value:!1},description:"",name:"scaled",required:!1,type:{name:"boolean | undefined"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"(() => void) | undefined"}},comboIcon:{defaultValue:null,description:"",name:"comboIcon",required:!1,type:{name:"string | undefined"}},fillIcon:{defaultValue:null,description:"",name:"fillIcon",required:!1,type:{name:"boolean | undefined"}},modernView:{defaultValue:{value:!1},description:"",name:"modernView",required:!1,type:{name:"boolean | undefined"}},tabIndex:{defaultValue:{value:-1},description:"",name:"tabIndex",required:!1,type:{name:"number | undefined"}},isLoading:{defaultValue:{value:!1},description:"",name:"isLoading",required:!1,type:{name:"boolean | undefined"}},type:{defaultValue:null,description:"",name:"type",required:!1,type:{name:"TCombobox | undefined"}},plusBadgeValue:{defaultValue:null,description:"",name:"plusBadgeValue",required:!1,type:{name:"number | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/combobox/sub-components/ComboButton.tsx#ComboButton"]={docgenInfo:ComboButton.__docgenInfo,name:"ComboButton",path:"components/combobox/sub-components/ComboButton.tsx#ComboButton"})}catch(__react_docgen_typescript_loader_error){}}}]);
//# sourceMappingURL=4371.b8df0347.iframe.bundle.js.map