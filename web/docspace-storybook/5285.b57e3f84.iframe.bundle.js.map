{"version":3,"file":"5285.b57e3f84.iframe.bundle.js","mappings":";AAmCA;AACA;AAEA;;;;AAMA;;AAKA;AACA;AAEA;AACA;AACA;;;;;;;AAOA;;;;AAKA;AAOA;AACA;;AAEA;;;AAaA;AACA;AACA;AAEA;;AAEA;;;AAIA;;AAYA;;AAKA;;;;;AAKA;AAMA;AAMA;AAOA;;AAmBA;AAIA;AACA;AACA;AACA;AAIA;;AAEA;AAGA;AAGA;AACA;AACA;;AAEA;AACA;AAEA;;;;;;;;;;;;AAcA;;;AAIA;;AASA;AACA;AACA;AACA;;;;;;;AAOA;;;AAGA;;;AAGA;;;;;;AAMA;;;AAGA;;;AAGA;;;;;;AAMA;;;AAGA;;;AAGA;;;AAIA;ACrMA;AAEA;AACA;AAoBA;ACnDA;AACA;AACA;;;;AAKA;;;;;;;AASA;;;;;;AAMA;;;;;;AAQA;;;;;;;AAUA;;;;;;AAMA;;;;;AASA;;ACtDA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;;;;;;;AAQA;;;;AAIA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA","sources":["webpack://@docspace/shared/./components/avatar/Avatar.styled.ts","webpack://@docspace/shared/./components/avatar/Avatar.tsx","webpack://@docspace/shared/./components/icon-button/IconButton.styled.ts","webpack://@docspace/shared/./components/tooltip/Tooltip.styled.ts"],"sourcesContent":["// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport { Base, TTheme } from \"../../themes\";\r\nimport { commonIconsStyles, NoUserSelect } from \"../../utils\";\r\n\r\nimport { CameraReactSvg } from \"./svg\";\r\nimport { AvatarSize } from \"./Avatar.enums\";\r\n\r\nconst EmptyIcon = styled(CameraReactSvg)`\r\n  ${commonIconsStyles}\r\n  border-radius: ${(props) => props.theme.avatar.image.borderRadius};\r\n`;\r\nEmptyIcon.defaultProps = { theme: Base };\r\n\r\nconst EditContainer = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n\r\n  ${(props) =>\r\n    props.theme.interfaceDirection === \"rtl\"\r\n      ? `left: ${props.theme.avatar.editContainer.right};`\r\n      : `right: ${props.theme.avatar.editContainer.right};`}\r\n\r\n  bottom: ${(props) => props.theme.avatar.editContainer.bottom};\r\n  background-color: ${(props) =>\r\n    props.theme.avatar.editContainer.backgroundColor};\r\n  border-radius: ${(props) => props.theme.avatar.editContainer.borderRadius};\r\n  height: ${(props) => props.theme.avatar.editContainer.height};\r\n  width: ${(props) => props.theme.avatar.editContainer.width};\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  .edit_icon {\r\n    svg {\r\n      path {\r\n        fill: ${(props) => props.theme.avatar.editContainer.fill};\r\n      }\r\n    }\r\n  }\r\n`;\r\nEditContainer.defaultProps = { theme: Base };\r\n\r\nconst AvatarWrapper = styled.div<{\r\n  source: string;\r\n  userName: string;\r\n  isGroup: boolean;\r\n}>`\r\n  border-radius: ${(props) => props.theme.avatar.imageContainer.borderRadius};\r\n  height: ${(props) => props.theme.avatar.imageContainer.height};\r\n\r\n  background-color: ${(props) => {\r\n    if (props.source) return props.theme.avatar.icon.background;\r\n\r\n    if (props.isGroup && props.userName)\r\n      return props.theme.avatar.imageContainer.groupBackground;\r\n\r\n    if (props.userName)\r\n      return props.theme.avatar.imageContainer.backgroundImage;\r\n\r\n    return props.theme.avatar.imageContainer.background;\r\n  }};\r\n\r\n  & > svg {\r\n    display: ${(props) => props.theme.avatar.imageContainer.svg.display};\r\n    width: ${(props) => props.theme.avatar.imageContainer.svg.width} !important;\r\n    height: ${(props) =>\r\n      props.theme.avatar.imageContainer.svg.height} !important;\r\n    margin: ${(props) => props.theme.avatar.imageContainer.svg.margin};\r\n    path {\r\n      fill: ${(props) => props.theme.avatar.imageContainer.svg.fill};\r\n    }\r\n  }\r\n`;\r\nAvatarWrapper.defaultProps = { theme: Base };\r\n\r\nconst rightStyle = (props: { size: AvatarSize; theme: TTheme }) =>\r\n  props.theme.avatar.roleWrapperContainer.right[props.size];\r\nconst bottomStyle = (props: { size: AvatarSize; theme: TTheme }) =>\r\n  props.theme.avatar.roleWrapperContainer.bottom[props.size];\r\n\r\nconst RoleWrapper = styled.div<{\r\n  size: AvatarSize;\r\n  theme: TTheme;\r\n}>`\r\n  position: absolute;\r\n  ${(props) =>\r\n    props.theme.interfaceDirection === \"rtl\"\r\n      ? `left: ${rightStyle(props)};`\r\n      : `right ${rightStyle(props)};`}\r\n\r\n  bottom: ${(props) => bottomStyle(props)};\r\n\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  height: ${(props) =>\r\n    (props.size === AvatarSize.max &&\r\n      props.theme.avatar.roleWrapperContainer.height.max) ||\r\n    (props.size === AvatarSize.medium &&\r\n      props.theme.avatar.roleWrapperContainer.height.medium) ||\r\n    \"12px\"};\r\n  width: ${(props) =>\r\n    (props.size === AvatarSize.max &&\r\n      props.theme.avatar.roleWrapperContainer.width.max) ||\r\n    (props.size === AvatarSize.medium &&\r\n      props.theme.avatar.roleWrapperContainer.width.medium) ||\r\n    \"12px\"};\r\n  min-width: ${(props) =>\r\n    (props.size === AvatarSize.max &&\r\n      props.theme.avatar.roleWrapperContainer.width.max) ||\r\n    (props.size === AvatarSize.medium &&\r\n      props.theme.avatar.roleWrapperContainer.width.medium) ||\r\n    \"12px\"};\r\n`;\r\nRoleWrapper.defaultProps = { theme: Base };\r\n\r\nconst fontSizeStyle = ({\r\n  size,\r\n  theme,\r\n  isGroup,\r\n}: {\r\n  size: AvatarSize;\r\n  theme: TTheme;\r\n  isGroup: boolean;\r\n}) => {\r\n  if (isGroup && size === AvatarSize.big)\r\n    return theme.avatar.initialsContainer.fontSize.groupBig;\r\n\r\n  return theme.avatar.initialsContainer.fontSize[size];\r\n};\r\n\r\nconst NamedAvatar = styled.div<{ size: AvatarSize; isGroup: boolean }>`\r\n  position: absolute;\r\n  color: ${(props) =>\r\n    props.isGroup\r\n      ? props.theme.avatar.initialsContainer.groupColor\r\n      : props.theme.avatar.initialsContainer.color};\r\n  left: ${(props) => props.theme.avatar.initialsContainer.left};\r\n  top: ${(props) => props.theme.avatar.initialsContainer.top};\r\n  transform: ${(props) => props.theme.avatar.initialsContainer.transform};\r\n  font-weight: ${(props) =>\r\n    props.theme.avatar.initialsContainer[\r\n      props.isGroup ? \"groupFontWeight\" : \"fontWeight\"\r\n    ]};\r\n  font-size: ${(props) => fontSizeStyle(props)};\r\n\r\n  ${NoUserSelect}\r\n`;\r\n\r\nNamedAvatar.defaultProps = { theme: Base };\r\n\r\nconst StyledImage = styled.img<{ isDefault?: boolean }>`\r\n  width: ${(props) => props.theme.avatar.image.width};\r\n  height: ${(props) => props.theme.avatar.image.height};\r\n  border-radius: ${(props) => props.theme.avatar.image.borderRadius};\r\n  // @ts-expect-error TS(2339): Property 'isDefault' does not exist on type 'Theme... Remove this comment to see the full error message\r\n  content: ${(props) => props.isDefault && props.theme.avatar.defaultImage};\r\n  ${NoUserSelect};\r\n`;\r\nStyledImage.defaultProps = { theme: Base };\r\n\r\nconst StyledIconWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  .icon,\r\n  .icon:hover {\r\n    width: 50%;\r\n    height: 50%;\r\n    path {\r\n      fill: ${(props) => props.theme.avatar.icon.color};\r\n    }\r\n  }\r\n`;\r\nStyledIconWrapper.defaultProps = { theme: Base };\r\n\r\nconst widthStyle = ({ size, theme }: { size: AvatarSize; theme: TTheme }) =>\r\n  theme.avatar.width[size];\r\nconst heightStyle = ({ size, theme }: { size: AvatarSize; theme: TTheme }) =>\r\n  theme.avatar.height[size];\r\n\r\nconst StyledAvatar = styled.div<{ size: AvatarSize; theme: TTheme }>`\r\n  position: relative;\r\n  width: ${(props) => widthStyle(props)};\r\n  min-width: ${(props) => widthStyle(props)};\r\n  height: ${(props) => heightStyle(props)};\r\n  font-family: ${(props) => props.theme.fontFamily};\r\n  font-style: normal;\r\n\r\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n\r\n  .admin_icon {\r\n    rect:nth-child(1) {\r\n      fill: ${(props) => props.theme.avatar.administrator.fill};\r\n    }\r\n    rect:nth-child(2) {\r\n      stroke: ${(props) => props.theme.avatar.administrator.stroke};\r\n    }\r\n    path {\r\n      fill: ${(props) => props.theme.avatar.administrator.color};\r\n    }\r\n  }\r\n\r\n  .guest_icon {\r\n    rect:nth-child(1) {\r\n      fill: ${(props) => props.theme.avatar.guest.fill};\r\n    }\r\n    rect:nth-child(2) {\r\n      stroke: ${(props) => props.theme.avatar.guest.stroke};\r\n    }\r\n    path {\r\n      fill: ${(props) => props.theme.avatar.guest.color};\r\n    }\r\n  }\r\n\r\n  .owner_icon {\r\n    rect:nth-child(1) {\r\n      fill: ${(props) => props.theme.avatar.owner.fill};\r\n    }\r\n    rect:nth-child(2) {\r\n      stroke: ${(props) => props.theme.avatar.owner.stroke};\r\n    }\r\n    path {\r\n      fill: ${(props) => props.theme.avatar.owner.color};\r\n    }\r\n  }\r\n`;\r\nStyledAvatar.defaultProps = { theme: Base };\r\n\r\nexport {\r\n  EmptyIcon,\r\n  EditContainer,\r\n  AvatarWrapper,\r\n  RoleWrapper,\r\n  NamedAvatar,\r\n  StyledImage,\r\n  StyledIconWrapper,\r\n  StyledAvatar,\r\n};\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport React, { memo } from \"react\";\r\n\r\nimport styled, { useTheme } from \"styled-components\";\r\n\r\nimport PencilReactSvgUrl from \"PUBLIC_DIR/images/pencil.react.svg?url\";\r\n\r\nimport { IconSizeType, commonIconsStyles } from \"../../utils\";\r\n\r\nimport { IconButton } from \"../icon-button\";\r\nimport { Text } from \"../text\";\r\nimport { TGetTooltipContent, Tooltip } from \"../tooltip\";\r\n\r\nimport {\r\n  EmptyIcon,\r\n  EditContainer,\r\n  AvatarWrapper,\r\n  RoleWrapper,\r\n  NamedAvatar,\r\n  StyledImage,\r\n  StyledAvatar,\r\n  StyledIconWrapper,\r\n} from \"./Avatar.styled\";\r\n\r\nimport { AdministratorReactSvg, OwnerReactSvg } from \"./svg\";\r\nimport { AvatarProps } from \"./Avatar.types\";\r\nimport { AvatarRole, AvatarSize } from \"./Avatar.enums\";\r\n\r\nexport { AvatarRole, AvatarSize };\r\n\r\n// const StyledGuestIcon = styled(GuestReactSvg)`\r\n//   ${commonIconsStyles}\r\n// `;\r\nconst StyledAdministratorIcon = styled(AdministratorReactSvg)`\r\n  ${commonIconsStyles}\r\n`;\r\nconst StyledOwnerIcon = styled(OwnerReactSvg)`\r\n  ${commonIconsStyles}\r\n`;\r\nconst getRoleIcon = (role: AvatarRole) => {\r\n  switch (role) {\r\n    case \"admin\":\r\n      return (\r\n        <StyledAdministratorIcon\r\n          size={IconSizeType.scale}\r\n          className=\"admin_icon\"\r\n        />\r\n      );\r\n    case \"owner\":\r\n      return (\r\n        <StyledOwnerIcon size={IconSizeType.scale} className=\"owner_icon\" />\r\n      );\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nconst getInitials = (userName: string, isGroup: boolean) => {\r\n  const initials = userName\r\n    .split(/\\s/)\r\n    .reduce(\r\n      (response: string, word: string) => (response += word.slice(0, 1)),\r\n      \"\",\r\n    )\r\n    .substring(0, 2);\r\n\r\n  return isGroup ? initials.toUpperCase() : initials;\r\n};\r\n\r\nconst Initials = ({\r\n  userName,\r\n  size,\r\n  isGroup,\r\n}: {\r\n  userName: string;\r\n  size: AvatarSize;\r\n  isGroup: boolean;\r\n}) => (\r\n  <NamedAvatar size={size} isGroup={isGroup}>\r\n    {getInitials(userName, isGroup)}\r\n  </NamedAvatar>\r\n);\r\n\r\nconst AvatarPure = ({\r\n  size,\r\n  source,\r\n  userName,\r\n  role,\r\n  editing,\r\n  editAction,\r\n  isDefaultSource = false,\r\n  hideRoleIcon,\r\n  tooltipContent,\r\n  withTooltip,\r\n  className,\r\n  onClick,\r\n  isGroup = false,\r\n  roleIcon: roleIconProp,\r\n}: AvatarProps) => {\r\n  const defaultTheme = useTheme();\r\n\r\n  const interfaceDirection = defaultTheme?.interfaceDirection;\r\n\r\n  let isDefault = false;\r\n  let isIcon = false;\r\n\r\n  if (source?.includes(\"default_user_photo\")) isDefault = true;\r\n  else if (source?.includes(\".svg\")) isIcon = true;\r\n\r\n  const avatarContent = source ? (\r\n    isIcon ? (\r\n      <StyledIconWrapper>\r\n        <IconButton iconName={source} className=\"icon\" isDisabled />\r\n      </StyledIconWrapper>\r\n    ) : (\r\n      <StyledImage src={source} isDefault={isDefault} />\r\n    )\r\n  ) : userName ? (\r\n    <Initials userName={userName} size={size} isGroup={isGroup} />\r\n  ) : isDefaultSource ? (\r\n    <StyledImage isDefault />\r\n  ) : (\r\n    <EmptyIcon size={IconSizeType.scale} />\r\n  );\r\n\r\n  const roleIcon = roleIconProp ?? getRoleIcon(role);\r\n\r\n  const uniqueTooltipId = withTooltip ? `roleTooltip_${Math.random()}` : \"\";\r\n  const tooltipPlace = interfaceDirection === \"rtl\" ? \"left\" : \"right\";\r\n\r\n  const getTooltipContent = ({ content }: TGetTooltipContent) => (\r\n    <Text fontSize=\"12px\">{content}</Text>\r\n  );\r\n\r\n  const onMouseDown = (e: React.MouseEvent) => {\r\n    if (e.button !== 1) return;\r\n\r\n    if (onClick) onClick(e);\r\n  };\r\n\r\n  return (\r\n    <StyledAvatar\r\n      size={size}\r\n      data-testid=\"avatar\"\r\n      className={className}\r\n      onMouseDown={onMouseDown}\r\n      onClick={onClick}\r\n    >\r\n      <AvatarWrapper\r\n        source={source}\r\n        userName={userName || \"\"}\r\n        className=\"avatar-wrapper\"\r\n        isGroup={isGroup}\r\n      >\r\n        {avatarContent}\r\n      </AvatarWrapper>\r\n      {editing && size === \"max\" ? (\r\n        <EditContainer>\r\n          <IconButton\r\n            className=\"edit_icon\"\r\n            iconName={PencilReactSvgUrl}\r\n            onClick={editAction}\r\n            size={16}\r\n          />\r\n        </EditContainer>\r\n      ) : (\r\n        !hideRoleIcon && (\r\n          <>\r\n            <RoleWrapper\r\n              size={size}\r\n              data-tooltip-id={uniqueTooltipId}\r\n              data-tooltip-content={tooltipContent}\r\n              className=\"avatar_role-wrapper\"\r\n            >\r\n              {roleIcon}\r\n            </RoleWrapper>\r\n            {withTooltip && (\r\n              <Tooltip\r\n                float\r\n                id={uniqueTooltipId}\r\n                getContent={getTooltipContent}\r\n                place={tooltipPlace}\r\n                opacity={1}\r\n              />\r\n            )}\r\n          </>\r\n        )\r\n      )}\r\n    </StyledAvatar>\r\n  );\r\n};\r\n\r\nconst Avatar = memo(AvatarPure);\r\n\r\nexport { Avatar, AvatarPure };\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport styled, { css } from \"styled-components\";\r\nimport { Base } from \"../../themes\";\r\nimport { IconButtonProps } from \"./IconButton.types\";\r\n\r\nconst StyledOuter = styled.div<IconButtonProps>`\r\n  width: ${(props) => (props.size ? `${props.size}px` : \"20px\")};\r\n  height: ${(props) => (props.size ? `${props.size}px` : \"20px\")};\r\n  cursor: ${(props) =>\r\n    props.isDisabled || !props.isClickable ? \"default\" : \"pointer\"};\r\n  line-height: 0;\r\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n\r\n  ${(props) =>\r\n    props.isStroke &&\r\n    css`\r\n      svg {\r\n        &:not(:root) {\r\n          width: 100%;\r\n          height: 100%;\r\n        }\r\n        path {\r\n          stroke: ${props.color || props.theme.iconButton.color};\r\n        }\r\n      }\r\n      &:hover {\r\n        svg {\r\n          path {\r\n            stroke: ${props.isDisabled\r\n              ? props.theme.iconButton.color\r\n              : props.color || props.theme.iconButton.hoverColor};\r\n          }\r\n        }\r\n      }\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.isFill &&\r\n    !props.isStroke &&\r\n    css`\r\n      svg {\r\n        &:not(:root) {\r\n          width: 100%;\r\n          height: 100%;\r\n        }\r\n        path {\r\n          fill: ${props.color || props.theme.iconButton.color};\r\n        }\r\n      }\r\n      &:hover {\r\n        svg {\r\n          path {\r\n            fill: ${props.isDisabled\r\n              ? props.theme.iconButton.color\r\n              : props.color || props.theme.iconButton.hoverColor};\r\n          }\r\n        }\r\n      }\r\n    `}\r\n`;\r\n\r\nStyledOuter.defaultProps = { theme: Base };\r\n\r\nexport default StyledOuter;\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport { Base } from \"../../themes\";\r\n\r\nconst StyledTooltip = styled.div<{ maxWidthProp?: string; color?: string }>`\r\n  .__react_component_tooltip {\r\n    background-color: ${(props) =>\r\n      props.color ? props.color : props.theme.tooltip.color};\r\n    border-radius: ${(props) => props.theme.tooltip.borderRadius};\r\n    -moz-border-radius: ${(props) => props.theme.tooltip.borderRadius};\r\n    -webkit-border-radius: ${(props) => props.theme.tooltip.borderRadius};\r\n    box-shadow: ${(props) => props.theme.tooltip.boxShadow};\r\n    -moz-box-shadow: ${(props) => props.theme.tooltip.boxShadow};\r\n    -webkit-box-shadow: ${(props) => props.theme.tooltip.boxShadow};\r\n    padding: ${(props) => props.theme.tooltip.padding};\r\n    max-width: ${(props) =>\r\n      `min(100vw, ${\r\n        props.maxWidthProp ? props.maxWidthProp : props.theme.tooltip.maxWidth\r\n      })`};\r\n    color: ${(props) => props.theme.tooltip.textColor};\r\n    z-index: 999;\r\n\r\n    box-sizing: border-box;\r\n\r\n    p,\r\n    div,\r\n    span {\r\n      color: ${(props) => props.theme.tooltip.textColor};\r\n    }\r\n\r\n    &:before {\r\n      border: ${(props) => props.theme.tooltip.before.border};\r\n    }\r\n    &:after {\r\n      border: ${(props) => props.theme.tooltip.after.border};\r\n      background-color: ${(props) =>\r\n        props.color ? props.color : props.theme.tooltip.color} !important;\r\n    }\r\n  }\r\n\r\n  .__react_component_tooltip.place-left::after {\r\n    border-left: none !important;\r\n  }\r\n\r\n  .__react_component_tooltip.place-right::after {\r\n    border-right: none !important;\r\n  }\r\n\r\n  .__react_component_tooltip.place-top::after {\r\n    border-top: none !important;\r\n  }\r\n\r\n  .__react_component_tooltip.place-bottom::after {\r\n    border-bottom: none !important;\r\n  }\r\n\r\n  .__react_component_tooltip.place-left::before {\r\n    background: none !important;\r\n  }\r\n\r\n  .__react_component_tooltip.place-right::before {\r\n    background: none !important;\r\n  }\r\n\r\n  .__react_component_tooltip.place-top::before {\r\n    background: none !important;\r\n  }\r\n\r\n  .__react_component_tooltip.place-bottom::before {\r\n    background: none !important;\r\n  }\r\n\r\n  .__react_component_tooltip.place-bottom::after,\r\n  .__react_component_tooltip.place-top::after,\r\n  .__react_component_tooltip.place-right::after,\r\n  .__react_component_tooltip.place-left::after {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nStyledTooltip.defaultProps = {\r\n  theme: Base,\r\n};\r\n\r\nexport default StyledTooltip;\r\n"],"names":[],"sourceRoot":""}