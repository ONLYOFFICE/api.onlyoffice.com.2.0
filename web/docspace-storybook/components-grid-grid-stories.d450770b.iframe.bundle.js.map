{"version":3,"file":"components-grid-grid-stories.d450770b.iframe.bundle.js","mappings":";AAyHA;AACA;AACA;AACA;AAEA;AAvDA;AAGA;;AAGA;AACA;;AAIA;;;AAGA;;AAyCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAGA;AAjCA;AAGA;AACA;AA6BA;AACA;;AChCA;;AAEA;;AAEA;;AAEA;AACA;;;AAKA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAGA;;AAEA;AACA;;;AAUA;AACA;AAQA;;AAMA;;ACtIA;;;AAGA;;AAOA;;;AAKA;AAGA;;AAEA;;AAIA;AAGA;;AAEA;AAGA;;AAGA;AACA;;AAEA;;AAEA;AAGA;;;;;;;;AAYA","sources":["webpack://@docspace/shared/./components/grid/Grid.styled.ts","webpack://@docspace/shared/./components/box/Box.styled.ts","webpack://@docspace/shared/./components/text/Text.styled.ts"],"sourcesContent":["// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport styled, { css } from \"styled-components\";\r\nimport { getCorrectFourValuesStyle } from \"../../utils\";\r\nimport { GridProps, TAreaProp, TColumnProp } from \"./Grid.types\";\r\n\r\nconst alignContentStyle = (alignContent: string) =>\r\n  `align-content: ${alignContent};`;\r\nconst alignItemsStyle = (alignItems: string) => `align-items: ${alignItems};`;\r\nconst alignSelfStyle = (alignSelf: string) => `align-self: ${alignSelf};`;\r\n\r\nconst areasStyle = (props: {\r\n  areasProp?: TAreaProp;\r\n  rowsProp?: string | string[];\r\n  columnsProp?: TColumnProp;\r\n}) => {\r\n  const areas = props.areasProp;\r\n  if (Array.isArray(areas) && areas.every((area) => Array.isArray(area))) {\r\n    return `grid-template-areas: ${areas\r\n      .map((area) => Array.isArray(area) && `\"${area.join(\" \")}\"`)\r\n      .join(\" \")};`;\r\n  }\r\n\r\n  const columnsProp = props.columnsProp;\r\n  if (Array.isArray(props.rowsProp) && Array.isArray(columnsProp)) {\r\n    const cells = props.rowsProp.map(() => columnsProp.map(() => \".\"));\r\n    props.areasProp?.forEach((area) => {\r\n      if (\"start\" in area) {\r\n        for (let row = area.start[1]; row <= area.end[1]; row += 1) {\r\n          for (let column = area.start[0]; column <= area.end[0]; column += 1) {\r\n            cells[row][column] = area.name;\r\n          }\r\n        }\r\n      }\r\n    });\r\n    return `grid-template-areas: ${cells\r\n      .map((r: string[]) => `\"${r.join(\" \")}\"`)\r\n      .join(\" \")};`;\r\n  }\r\n};\r\n\r\nconst getSizeValue = (value: string[] | string) =>\r\n  Array.isArray(value) ? `minmax(${value[0]}, ${value[1]})` : value;\r\n\r\nconst columnsStyle = (props: { columnsProp?: TColumnProp }) => {\r\n  if (Array.isArray(props.columnsProp)) {\r\n    return css`\r\n      grid-template-columns: ${props.columnsProp.map(getSizeValue).join(\" \")};\r\n    `;\r\n  }\r\n  if (typeof props.columnsProp === \"object\") {\r\n    return css`\r\n      grid-template-columns: repeat(\r\n        ${props.columnsProp.count},\r\n        ${getSizeValue(props.columnsProp.size)}\r\n      );\r\n    `;\r\n  }\r\n  return css`\r\n    grid-template-columns: repeat(\r\n      auto-fill,\r\n      ${getSizeValue(props.columnsProp || \"\")}\r\n    );\r\n  `;\r\n};\r\n\r\nconst gridAreaStyle = (gridArea: string) => `grid-area: ${gridArea};`;\r\nconst gridColumnGapStyle = (gridColumnGap: string) =>\r\n  `grid-column-gap: ${gridColumnGap};`;\r\nconst gridGapStyle = (gridGap: string) => `grid-gap: ${gridGap};`;\r\nconst gridRowGapStyle = (gridRowGap: string) => `grid-row-gap: ${gridRowGap};`;\r\nconst heightStyle = (heightProp: string) => `height: ${heightProp};`;\r\nconst justifyContentStyle = (justifyContent: string) =>\r\n  `justify-content: ${justifyContent};`;\r\nconst justifyItemsStyle = (justifyItems: string) =>\r\n  `justify-items: ${justifyItems};`;\r\nconst justifySelfStyle = (justifySelf: string) =>\r\n  `justify-self: ${justifySelf};`;\r\nconst marginStyle = (marginProp: string, interfaceDirection: string) =>\r\n  `margin: ${getCorrectFourValuesStyle(marginProp, interfaceDirection)};`;\r\nconst paddingStyle = (paddingProp: string, interfaceDirection: string) =>\r\n  `padding: ${getCorrectFourValuesStyle(paddingProp, interfaceDirection)};`;\r\n\r\nconst rowsStyle = (props: { rowsProp?: string | string[] }) => {\r\n  if (Array.isArray(props.rowsProp)) {\r\n    return css`\r\n      grid-template-rows: ${props.rowsProp.map(getSizeValue).join(\" \")};\r\n    `;\r\n  }\r\n  return css`\r\n    grid-auto-rows: ${props.rowsProp};\r\n  `;\r\n};\r\n\r\nconst widthStyle = (widthProp: string) => `width: ${widthProp};`;\r\n\r\nconst StyledGrid = styled.div<GridProps>`\r\n  ${(props) => props.alignContent && alignContentStyle(props.alignContent)}\r\n  ${(props) => props.alignItems && alignItemsStyle(props.alignItems)}\r\n  ${(props) => props.alignSelf && alignSelfStyle(props.alignSelf)}\r\n  ${(props) =>\r\n    props.areasProp && props.rowsProp && props.columnsProp && areasStyle(props)}\r\n  ${(props) => props.columnsProp && columnsStyle(props)}\r\n  display: grid;\r\n  ${(props) => props.gridArea && gridAreaStyle(props.gridArea)}\r\n  ${(props) => props.gridColumnGap && gridColumnGapStyle(props.gridColumnGap)}\r\n  ${(props) => props.gridGap && gridGapStyle(props.gridGap)}\r\n  ${(props) => props.gridRowGap && gridRowGapStyle(props.gridRowGap)}\r\n  ${(props) => props.heightProp && heightStyle(props.heightProp)}\r\n  ${(props) =>\r\n    props.justifyContent && justifyContentStyle(props.justifyContent)}\r\n  ${(props) => props.justifyItems && justifyItemsStyle(props.justifyItems)}\r\n  ${(props) => props.justifySelf && justifySelfStyle(props.justifySelf)}\r\n  ${(props) =>\r\n    props.marginProp &&\r\n    marginStyle(props.marginProp, props.theme.interfaceDirection)}\r\n  ${(props) =>\r\n    props.paddingProp &&\r\n    paddingStyle(props.paddingProp, props.theme.interfaceDirection)}\r\n  ${(props) => props.rowsProp && rowsStyle(props)}\r\n  ${(props) => props.widthProp && widthStyle(props.widthProp)}\r\n`;\r\n\r\nexport default StyledGrid;\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport {\r\n  getCorrectBorderRadius,\r\n  getCorrectFourValuesStyle,\r\n  getCorrectTextAlign,\r\n} from \"../../utils\";\r\nimport { TInterfaceDirection } from \"../../themes\";\r\n\r\nimport { BoxProps } from \"./Box.types\";\r\n\r\nconst alignContentStyle = (alignContent: string) =>\r\n  `align-content: ${alignContent};`;\r\nconst alignItemsStyle = (alignItems: string) => `align-items: ${alignItems};`;\r\nconst alignSelfStyle = (alignSelf: string) => `align-self: ${alignSelf};`;\r\nconst backgroundStyle = (backgroundProp: string) =>\r\n  `background: ${backgroundProp};`;\r\n\r\nconst borderStyle = (\r\n  borderProp:\r\n    | string\r\n    | { style: string; width: string; color: string; radius?: string },\r\n  interfaceDirection: string | TInterfaceDirection = \"ltr\",\r\n) => {\r\n  const styles = [];\r\n\r\n  if (typeof borderProp === \"string\") {\r\n    return `border: ${borderProp};`;\r\n  }\r\n\r\n  if (borderProp.style)\r\n    styles.push(\r\n      `border-style: ${getCorrectFourValuesStyle(\r\n        borderProp.style,\r\n        interfaceDirection,\r\n      )};`,\r\n    );\r\n\r\n  if (borderProp.width)\r\n    styles.push(\r\n      `border-width: ${getCorrectFourValuesStyle(\r\n        borderProp.width,\r\n        interfaceDirection,\r\n      )};`,\r\n    );\r\n\r\n  if (borderProp.color)\r\n    styles.push(\r\n      `border-color: ${getCorrectFourValuesStyle(\r\n        borderProp.color,\r\n        interfaceDirection,\r\n      )};`,\r\n    );\r\n\r\n  if (borderProp.radius)\r\n    styles.push(\r\n      `border-radius: ${getCorrectBorderRadius(\r\n        borderProp.radius,\r\n        interfaceDirection,\r\n      )};`,\r\n    );\r\n\r\n  return styles.join(\"\\n\");\r\n};\r\n\r\nconst displayStyle = (displayProp: string) => `display: ${displayProp};`;\r\nconst flexBasisStyle = (flexBasis: string) => `flex-basis: ${flexBasis};`;\r\nconst flexDirectionStyle = (flexDirection: string) =>\r\n  `flex-direction: ${flexDirection};`;\r\nconst flexStyle = (flexProp: string) => `flex: ${flexProp};`;\r\nconst flexWrapStyle = (flexWrap: string) => `flex-wrap: ${flexWrap};`;\r\nconst gridAreaStyle = (gridArea: string) => `grid-area: ${gridArea};`;\r\nconst heightStyle = (heightProp: string) => `height: ${heightProp};`;\r\nconst justifyContentStyle = (justifyContent: string) =>\r\n  `justify-content: ${justifyContent};`;\r\nconst justifyItemsStyle = (justifyItems: string) =>\r\n  `justify-items: ${justifyItems};`;\r\nconst justifySelfStyle = (justifySelf: string) =>\r\n  `justify-self: ${justifySelf};`;\r\nconst marginStyle = (marginProp: string) => `margin: ${marginProp};`;\r\nconst overflowStyle = (overflowProp: string) => `overflow: ${overflowProp};`;\r\nconst paddingStyle = (paddingProp: string) => `padding: ${paddingProp};`;\r\nconst textAlignStyle = (textAlign: string) => `text-align: ${textAlign};`;\r\nconst widthStyle = (widthProp: string) => `width: ${widthProp};`;\r\n\r\nconst StyledBox = styled.div<BoxProps>`\r\n  ${(props) => props.alignContent && alignContentStyle(props.alignContent)}\r\n\r\n  ${(props) => props.alignItems && alignItemsStyle(props.alignItems)}\r\n  \r\n  ${(props) => props.alignSelf && alignSelfStyle(props.alignSelf)}\r\n  \r\n  ${(props) => props.backgroundProp && backgroundStyle(props.backgroundProp)}\r\n  ${(props) =>\r\n    props.borderProp &&\r\n    borderStyle(props.borderProp, props.theme.interfaceDirection)}\r\n  box-sizing: border-box;\r\n\r\n  ${(props) => props.displayProp && displayStyle(props.displayProp)}\r\n\r\n  ${(props) => props.flexBasis && flexBasisStyle(props.flexBasis)}\r\n  \r\n  ${(props) => props.flexDirection && flexDirectionStyle(props.flexDirection)}\r\n  \r\n  ${(props) => props.flexProp && flexStyle(props.flexProp)}\r\n  \r\n  ${(props) => props.flexWrap && flexWrapStyle(props.flexWrap)}\r\n  \r\n  ${(props) => props.gridArea && gridAreaStyle(props.gridArea)}\r\n  \r\n  ${(props) => props.heightProp && heightStyle(props.heightProp)}\r\n  ${(props) =>\r\n    props.justifyContent && justifyContentStyle(props.justifyContent)}\r\n  \r\n  ${(props) => props.justifyItems && justifyItemsStyle(props.justifyItems)}\r\n  \r\n  ${(props) => props.justifySelf && justifySelfStyle(props.justifySelf)}\r\n  ${(props) =>\r\n    props.marginProp &&\r\n    marginStyle(\r\n      getCorrectFourValuesStyle(\r\n        props.marginProp,\r\n        props.theme.interfaceDirection,\r\n      ),\r\n    )}\r\n  outline: none;\r\n\r\n  ${(props) => props.overflowProp && overflowStyle(props.overflowProp)}\r\n  ${(props) =>\r\n    props.paddingProp &&\r\n    paddingStyle(\r\n      getCorrectFourValuesStyle(\r\n        props.paddingProp,\r\n        props.theme.interfaceDirection,\r\n      ),\r\n    )}\r\n  ${(props) =>\r\n    props.textAlign &&\r\n    textAlignStyle(\r\n      getCorrectTextAlign(props.textAlign, props.theme.interfaceDirection),\r\n    )}\r\n  \r\n  ${(props) => props.widthProp && widthStyle(props.widthProp)}\r\n`;\r\n\r\nexport { StyledBox };\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport styled, { css } from \"styled-components\";\r\n\r\nimport { Base } from \"../../themes\";\r\nimport { NoUserSelect, commonTextStyles } from \"../../utils\";\r\n\r\nimport { StyledTextProps, TextProps } from \"./Text.types\";\r\n\r\nconst styleCss = css<TextProps & StyledTextProps>`\r\n  font-size: ${(props) => props.fontSizeProp && props.fontSizeProp};\r\n  outline: 0 !important;\r\n  margin: 0;\r\n  font-weight: ${(props) =>\r\n    props.fontWeightProp\r\n      ? props.fontWeightProp\r\n      : props.isBold\r\n        ? 700\r\n        : props.theme.text.fontWeight};\r\n\r\n  ${(props) =>\r\n    props.isItalic &&\r\n    css`\r\n      font-style: italic;\r\n    `}\r\n  ${(props) =>\r\n    props.backgroundColor &&\r\n    css`\r\n      background-color: ${props.backgroundColor};\r\n    `}\r\n  ${(props) =>\r\n    props.isInline\r\n      ? css`\r\n          display: inline-block;\r\n        `\r\n      : props.display &&\r\n        css`\r\n          display: ${props.display};\r\n        `}\r\n  ${(props) =>\r\n    props.lineHeight &&\r\n    css`\r\n      line-height: ${props.lineHeight};\r\n    `}\r\n`;\r\nconst StyledText = styled.p<TextProps & StyledTextProps>`\r\n  ${styleCss};\r\n\r\n  ${commonTextStyles};\r\n\r\n  ${(props) => props.noSelect && NoUserSelect}\r\n`;\r\n\r\nStyledText.defaultProps = { theme: Base };\r\n\r\nexport const StyledAutoDirSpan = styled.span`\r\n  display: inherit;\r\n  white-space: inherit;\r\n  overflow: inherit;\r\n  text-overflow: inherit;\r\n  pointer-events: none;\r\n  width: inherit;\r\n  max-width: inherit;\r\n`;\r\n\r\nexport default StyledText;\r\n"],"names":[],"sourceRoot":""}