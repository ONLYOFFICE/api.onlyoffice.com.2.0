{"version":3,"file":"6499.2873da64.iframe.bundle.js","mappings":";AAoCA;AACA;AACA;;AAGA;AACA;AACA;AACA;AAGA;AACA;;;AAIA;AAGA;AACA;AACA;AAEA;AAuBA;;;;;;;;;;;;;AAaA;AACA;;;;AAIA;AACA;;;AAGA;;;AAGA;;;;;AAOA;;;;;;;AAUA;;;;AAQA;AChFA;AACA;;AAEA;AAIA;AAMA;;;AAIA;;AAKA;AACA;AACA;AAOA;;AAaA;;AAOA;AACA;AACA;AACA;;AAEA;AAOA;;AAOA;;;AAGA;AAIA;AACA;;;;AAIA;AAIA;AACA;;;;AAIA;AAIA;AACA;;;;AAIA;AAIA;AACA;;;;AAIA;AAIA;AACA;;;AAGA;AAGA","sources":["webpack://@docspace/shared/./components/input-block/InputBlock.styled.tsx","webpack://@docspace/shared/./components/text-input/TextInput.styled.ts"],"sourcesContent":["// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nimport { commonInputStyles } from \"../../utils\";\r\nimport { Base } from \"../../themes\";\r\n\r\nconst StyledIconBlock = styled.div<{\r\n  isDisabled?: boolean;\r\n  isClickable?: boolean;\r\n}>`\r\n  display: ${(props) => props.theme.inputBlock.display};\r\n  align-items: ${(props) => props.theme.inputBlock.alignItems};\r\n  cursor: ${(props) =>\r\n    props.isDisabled || !props.isClickable ? \"default\" : \"pointer\"};\r\n\r\n  height: ${(props) => props.theme.inputBlock.height};\r\n  padding-right: ${(props) => props.theme.inputBlock.paddingRight};\r\n  padding-left: ${(props) => props.theme.inputBlock.paddingLeft};\r\n  ${(props) =>\r\n    props.theme.interfaceDirection === \"rtl\" &&\r\n    css`\r\n      padding-left: ${props.theme.inputBlock.paddingRight};\r\n      padding-right: ${props.theme.inputBlock.paddingLeft};\r\n    `}\r\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n`;\r\nStyledIconBlock.defaultProps = { theme: Base };\r\n\r\nconst StyledChildrenBlock = styled.div`\r\n  display: ${(props) => props.theme.inputBlock.display};\r\n  align-items: ${(props) => props.theme.inputBlock.alignItems};\r\n  padding: ${(props) => props.theme.inputBlock.padding};\r\n`;\r\nStyledChildrenBlock.defaultProps = { theme: Base };\r\n\r\nconst CustomInputGroup = ({\r\n  isIconFill,\r\n  hasError,\r\n  hasWarning,\r\n  isDisabled,\r\n  scale,\r\n  hoverColor,\r\n  ...props\r\n}: {\r\n  hasError?: boolean;\r\n  hasWarning?: boolean;\r\n  isIconFill?: boolean;\r\n  isDisabled?: boolean;\r\n  scale?: boolean;\r\n  hoverColor?: string;\r\n  children: React.ReactNode;\r\n  className?: string;\r\n  style?: React.CSSProperties;\r\n}) => <div {...props} />;\r\n\r\nconst StyledInputGroup = styled(CustomInputGroup)`\r\n  display: ${(props) => props.theme.inputBlock.display};\r\n\r\n  input:-webkit-autofill,\r\n  input:-webkit-autofill:hover,\r\n  input:-webkit-autofill:focus,\r\n  input:-webkit-autofill:active {\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: #ffffff;\r\n    transition: background-color 5000s ease-in-out 0s;\r\n    box-shadow: inset 0 0 20px 20px #23232329;\r\n  }\r\n\r\n  .prepend {\r\n    display: ${(props) => props.theme.inputBlock.display};\r\n    align-items: ${(props) => props.theme.inputBlock.alignItems};\r\n  }\r\n\r\n  .append {\r\n    align-items: ${(props) => props.theme.inputBlock.alignItems};\r\n    margin: ${(props) => props.theme.inputBlock.margin};\r\n  }\r\n\r\n  ${commonInputStyles}\r\n\r\n  :focus-within {\r\n    border-color: ${(props) =>\r\n      (props.hasError && props.theme.input.focusErrorBorderColor) ||\r\n      props.theme.inputBlock.borderColor};\r\n  }\r\n\r\n  svg {\r\n    path {\r\n      fill: ${(props) =>\r\n        props.color\r\n          ? props.color\r\n          : props.theme.inputBlock.iconColor} !important;\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    svg {\r\n      path {\r\n        fill: ${(props) =>\r\n          props.hoverColor\r\n            ? props.hoverColor\r\n            : props.theme.inputBlock.hoverIconColor} !important;\r\n      }\r\n    }\r\n  }\r\n`;\r\nStyledInputGroup.defaultProps = { theme: Base };\r\n\r\nexport { StyledInputGroup, StyledChildrenBlock, StyledIconBlock };\r\n","// (c) Copyright Ascensio System SIA 2009-2024\r\n//\r\n// This program is a free software product.\r\n// You can redistribute it and/or modify it under the terms\r\n// of the GNU Affero General Public License (AGPL) version 3 as published by the Free Software\r\n// Foundation. In accordance with Section 7(a) of the GNU AGPL its Section 15 shall be amended\r\n// to the effect that Ascensio System SIA expressly excludes the warranty of non-infringement of\r\n// any third-party rights.\r\n//\r\n// This program is distributed WITHOUT ANY WARRANTY, without even the implied warranty\r\n// of MERCHANTABILITY or FITNESS FOR A PARTICULAR  PURPOSE. For details, see\r\n// the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html\r\n//\r\n// You can contact Ascensio System SIA at Lubanas st. 125a-25, Riga, Latvia, EU, LV-1021.\r\n//\r\n// The  interactive user interfaces in modified source and object code versions of the Program must\r\n// display Appropriate Legal Notices, as required under Section 5 of the GNU AGPL version 3.\r\n//\r\n// Pursuant to Section 7(b) of the License you must retain the original Product logo when\r\n// distributing the program. Pursuant to Section 7(e) we decline to grant you any rights under\r\n// trademark law for use of our trademarks.\r\n//\r\n// All the Product's GUI elements, including illustrations and icon sets, as well as technical writing\r\n// content are licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0\r\n// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport { commonInputStyles, NoUserSelect } from \"../../utils\";\r\nimport { Base } from \"../../themes\";\r\n\r\nimport { InputSize } from \"./TextInput.enums\";\r\n\r\nimport { Input } from \"./sub-components/Input\";\r\n\r\nconst StyledTextInput = styled(Input).attrs((props) => ({\r\n  id: props.id,\r\n  forwardedRef: props.forwardedRef,\r\n  name: props.name,\r\n  type: props.type,\r\n  value: props.value,\r\n  placeholder: props.placeholder,\r\n  maxLength: props.maxLength,\r\n  onChange: props.onChange,\r\n  onBlur: props.onBlur,\r\n  onFocus: props.onFocus,\r\n  readOnly: props.isReadOnly,\r\n  autoFocus: props.isAutoFocussed,\r\n  autoComplete: props.autoComplete,\r\n  tabIndex: props.tabIndex,\r\n  disabled: props.isDisabled ? \"disabled\" : \"\",\r\n}))`\r\n  ${commonInputStyles}\r\n  -webkit-appearance: ${(props) => props.theme.textInput.appearance};\r\n\r\n  background-color: ${(props) =>\r\n    props.isDisabled\r\n      ? props.theme.input.disableBackgroundColor\r\n      : props.theme.input.backgroundColor};\r\n  -webkit-text-fill-color: ${(props) =>\r\n    props.isDisabled\r\n      ? props.theme.input.disableColor\r\n      : props?.value?.length > 0\r\n        ? props.theme.text.color\r\n        : props.theme.textInput.placeholderColor} !important;\r\n  caret-color: ${(props) =>\r\n    props.isDisabled ? props.theme.input.disableColor : props.theme.text.color};\r\n  -webkit-background-clip: text !important;\r\n  box-shadow: inset 0 0 20px 20px\r\n    ${(props) =>\r\n      props.isDisabled\r\n        ? props.theme.input.disableBackgroundColor\r\n        : props.theme.input.backgroundColor} !important;\r\n\r\n  display: ${(props) => props.theme.textInput.display};\r\n  font-family: ${(props) => props.theme.fontFamily};\r\n  line-height: ${(props) =>\r\n    (props.size === InputSize.base && props.theme.textInput.lineHeight.base) ||\r\n    (props.size === InputSize.middle &&\r\n      props.theme.textInput.lineHeight.middle) ||\r\n    (props.size === InputSize.big && props.theme.textInput.lineHeight.big) ||\r\n    (props.size === InputSize.huge && props.theme.textInput.lineHeight.huge) ||\r\n    (props.size === InputSize.large && props.theme.textInput.lineHeight.large)};\r\n  font-size: ${(props) =>\r\n    props.theme.getCorrectFontSize(\r\n      (props.size === InputSize.base && props.theme.textInput.fontSize.base) ||\r\n        (props.size === InputSize.middle &&\r\n          props.theme.textInput.fontSize.middle) ||\r\n        (props.size === InputSize.big && props.theme.textInput.fontSize.big) ||\r\n        (props.size === InputSize.huge &&\r\n          props.theme.textInput.fontSize.huge) ||\r\n        (props.size === InputSize.large &&\r\n          props.theme.textInput.fontSize.large) ||\r\n        props.theme.textInput.fontSize.base,\r\n    )};\r\n\r\n  font-weight: ${(props) =>\r\n    props.fontWeight\r\n      ? props.fontWeight\r\n      : props.isBold\r\n        ? 600\r\n        : props.theme.textInput.fontWeight};\r\n\r\n  flex: ${(props) => props.theme.textInput.flex};\r\n  outline: ${(props) => props.theme.textInput.outline};\r\n  overflow: ${(props) => props.theme.textInput.overflow};\r\n  opacity: ${(props) => props.theme.textInput.opacity};\r\n\r\n  width: ${(props) =>\r\n    (props.scale && \"100%\") ||\r\n    (props.size === InputSize.base && props.theme.input.width.base) ||\r\n    (props.size === InputSize.middle && props.theme.input.width.middle) ||\r\n    (props.size === InputSize.big && props.theme.input.width.big) ||\r\n    (props.size === InputSize.huge && props.theme.input.width.huge) ||\r\n    (props.size === InputSize.large && props.theme.input.width.large)};\r\n  padding: ${(props) =>\r\n    (props.size === InputSize.base && props.theme.textInput.padding.base) ||\r\n    (props.size === InputSize.middle && props.theme.textInput.padding.middle) ||\r\n    (props.size === InputSize.big && props.theme.textInput.padding.big) ||\r\n    (props.size === InputSize.huge && props.theme.textInput.padding.huge) ||\r\n    (props.size === InputSize.large && props.theme.textInput.padding.large)};\r\n\r\n  transition: ${(props) => props.theme.textInput.transition};\r\n\r\n  ::-webkit-input-placeholder {\r\n    color: ${(props) =>\r\n      props.isDisabled\r\n        ? props.theme.textInput.disablePlaceholderColor\r\n        : props.theme.textInput.placeholderColor};\r\n    font-family: ${(props) => props.theme.fontFamily};\r\n    ${NoUserSelect}\r\n  }\r\n\r\n  :-moz-placeholder {\r\n    color: ${(props) =>\r\n      props.isDisabled\r\n        ? props.theme.textInput.disablePlaceholderColor\r\n        : props.theme.textInput.placeholderColor};\r\n    font-family: ${(props) => props.theme.fontFamily};\r\n    ${NoUserSelect}\r\n  }\r\n\r\n  ::-moz-placeholder {\r\n    color: ${(props) =>\r\n      props.isDisabled\r\n        ? props.theme.textInput.disablePlaceholderColor\r\n        : props.theme.textInput.placeholderColor};\r\n    font-family: ${(props) => props.theme.fontFamily};\r\n    ${NoUserSelect}\r\n  }\r\n\r\n  :-ms-input-placeholder {\r\n    color: ${(props) =>\r\n      props.isDisabled\r\n        ? props.theme.textInput.disablePlaceholderColor\r\n        : props.theme.textInput.placeholderColor};\r\n    font-family: ${(props) => props.theme.fontFamily};\r\n    ${NoUserSelect}\r\n  }\r\n\r\n  ::placeholder {\r\n    color: ${(props) =>\r\n      props.isDisabled\r\n        ? props.theme.textInput.disablePlaceholderColor\r\n        : props.theme.textInput.placeholderColor};\r\n    font-family: ${(props) => props.theme.fontFamily};\r\n    ${NoUserSelect}\r\n  }\r\n\r\n  ${(props) => !props.withBorder && `border: none;`}\r\n`;\r\n\r\nStyledTextInput.defaultProps = { theme: Base };\r\n\r\nexport { StyledTextInput };\r\n"],"names":[],"sourceRoot":""}