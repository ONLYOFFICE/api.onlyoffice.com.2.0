{
	"word": {
		"api": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is an example for base class methods.\");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.AddText(\" A paragraph and a numbered list were created.\");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.AddText(\" Then a chart, a shape and a table were created. The result was saved to the document.\");\noParagraph.AddElement(oRun);\noParagraph = Api.CreateParagraph();\nvar oDrawing = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noParagraph.AddDrawing(oDrawing);\noDocument.Push(oParagraph);\noParagraph = Api.CreateParagraph();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\noDrawing = Api.CreateShape(\"rect\", 5930900, 395605, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\noDocument.Push(oParagraph);\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nApi.Save();\nbuilder.SaveFile(\"docx\", \"Api.docx\");\nbuilder.CloseFile();"
		},
		"apiblocklvlsdt": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oBlockLvlSdt = Api.CreateBlockLvlSdt();\noBlockLvlSdt.GetContent().GetElement(0).AddText(\"This is the first paragraph of the content control.\");\nvar oContent = oBlockLvlSdt.GetContent();\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is the second paragraph of the content control.\");\noContent.AddElement(oParagraph);\noContent.Push(oParagraph);\noDocument.AddElement(0, oBlockLvlSdt);\nvar aParagraphs = oBlockLvlSdt.GetAllParagraphs();\naParagraphs[0].SetBold(true);\noBlockLvlSdt.Search(\"paragraph\")[1].SetItalic(true);\noBlockLvlSdt.SetLabel(\"2147483647\");\noBlockLvlSdt.SetLock(\"sdtContentLocked\");\noBlockLvlSdt.SetAlias(\"â„–1\");\noBlockLvlSdt.SetTag(\"This is a tag.\");\nvar oLabel = oBlockLvlSdt.GetLabel();\nvar oLock = oBlockLvlSdt.GetLock();\nvar oAlias = oBlockLvlSdt.GetAlias();\nvar oTag = oBlockLvlSdt.GetTag();\nvar sClassType = oBlockLvlSdt.GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class type: \" + sClassType);\noParagraph.AddLineBreak();\noParagraph.AddText(\"Lock type: \" + oLock);\noParagraph.AddLineBreak();\noParagraph.AddText(\"Label: \" + oLabel);\noParagraph.AddLineBreak();\noParagraph.AddText(\"Alias: \" + oAlias);\noParagraph.AddLineBreak();\noParagraph.AddText(\"Tag: \" + oTag);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"ApiBlockLvlSdt.docx\");\nbuilder.CloseFile();"
		},
		"apichart": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oDrawing = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noDrawing.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noDrawing.SetHorAxisTitle(\"Year\", 11);\noDrawing.SetLegendPos(\"bottom\");\noDrawing.SetShowDataLabels(false, false, true, false);\noDrawing.SetTitle(\"Financial Overview\", 13);\noParagraph.AddDrawing(oDrawing);\nbuilder.SaveFile(\"docx\", \"ApiChart.docx\");\nbuilder.CloseFile();"
		},
		"apicheckboxform": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oCheckBoxForm = Api.CreateCheckBoxForm({\"tip\": \"Specify your marital status\", \"required\": true, \"placeholder\": \"Marital status\", \"radio\": true});\noCheckBoxForm.SetRadioGroup(\"Marital status\");\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oCheckBoxForm);\noParagraph.AddText(\" Married\");\noParagraph.AddLineBreak();\noCheckBoxForm = Api.CreateCheckBoxForm({\"tip\": \"Specify your marital status\", \"required\": true, \"placeholder\": \"Marital status\", \"radio\": true});\noCheckBoxForm.SetRadioGroup(\"Marital status\");\noParagraph.AddElement(oCheckBoxForm);\noParagraph.AddText(\" Single\");\nvar sRadioGroup = oCheckBoxForm.GetRadioGroup();\nvar bRadioButton = oCheckBoxForm.IsRadioButton();\noCheckBoxForm.SetChecked(true);\nvar bChecked = oCheckBoxForm.IsChecked();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The second checkbox from this document is a radio button: \" + bRadioButton);\noParagraph.AddLineBreak();\noParagraph.AddText(\"The second checkbox from this document is checked: \" + bChecked);\noParagraph.AddLineBreak();\noParagraph.AddText(\"Radio group name of the radio buttons in this document: \" + sRadioGroup);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"ApiCheckBoxForm.docx\");\nbuilder.CloseFile();"
		},
		"apicomboboxform": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oComboBoxForm = Api.CreateComboBoxForm({\"key\": \"Personal information\", \"tip\": \"Choose your country\", \"required\": true, \"placeholder\": \"Country\", \"editable\": true, \"autoFit\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oComboBoxForm);\noComboBoxForm.SetListValues([\"Latvia\", \"USA\", \"UK\"]);\noComboBoxForm.SetText(\"France\");\noComboBoxForm.SelectListValue(\"USA\");\nvar aListValues = oComboBoxForm.GetListValues();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Combo box list values: \");\noParagraph.AddLineBreak();\nfor (let i = 0; i < aListValues.length; i++ ){\n    oParagraph.AddText(aListValues[i]);\n    oParagraph.AddLineBreak();\n}\nvar bEdit = oComboBoxForm.IsEditable();\noParagraph.AddLineBreak();\noParagraph.AddText(\"The first combo box from this document is editable: \" + bEdit);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"ApiComboBoxForm.docx\");\nbuilder.CloseFile();"
		},
		"apidocument": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oNoSpacingStyle = oDocument.GetStyle(\"No Spacing\");\nvar oSection = oDocument.GetFinalSection();\nvar oHeader = oSection.GetHeader(\"default\", true);\nvar oParagraph = oHeader.GetElement(0);\noParagraph.AddText(\"This is the text in the default header\");\nvar oTextPr = oDocument.GetDefaultTextPr();\noTextPr.SetFontSize(22);\noTextPr.SetLanguage(\"en-US\");\noTextPr.SetFontFamily(\"Calibri\");\nvar oParaPr = oDocument.GetDefaultParaPr();\noParaPr.SetSpacingLine(276, \"auto\");\noParaPr.SetSpacingAfter(200);\nvar oNormalStyle = oDocument.GetDefaultStyle(\"paragraph\");\noParaPr = oNormalStyle.GetParaPr();\noParaPr.SetSpacingLine(240, \"auto\");\noParaPr.SetJc(\"both\");\noTextPr = oNormalStyle.GetTextPr();\noTextPr.SetColor(0x26, 0x26, 0x26, false);\nvar oHeading1Style = oDocument.CreateStyle(\"Heading 1\", \"paragraph\");\noParaPr = oHeading1Style.GetParaPr();\noParaPr.SetKeepNext(true);\noParaPr.SetKeepLines(true);\noParaPr.SetSpacingAfter(240);\noTextPr = oHeading1Style.GetTextPr();\noTextPr.SetColor(0xff, 0x68, 0x00, false);\noTextPr.SetFontSize(40);\noTextPr.SetFontFamily(\"Calibri Light\");\noParagraph = oDocument.GetElement(0);\noParagraph.SetStyle(oHeading1Style);\noParagraph.AddText(\"This is a heading\");\noParagraph = Api.CreateParagraph();\nvar oRun = Api.CreateRun();\noRun.AddText(\"Number of paragraph elements at this point: \");\noRun.AddTabStop();\noRun.AddText(\"\" + oParagraph.GetElementsCount());\noRun.AddLineBreak();\noParagraph.AddElement(oRun);\noRun.AddText(\"Number of paragraph elements after we added a text run: \");\noRun.AddTabStop();\noRun.AddText(\"\" + oParagraph.GetElementsCount());\noDocument.Push(oParagraph);\nvar oNumbering = oDocument.CreateNumbering(\"bullet\");\nfor (let nLvl = 0; nLvl < 8; ++nLvl) {\n  var oNumLvl = oNumbering.GetLevel(nLvl);\n  oParagraph = Api.CreateParagraph();\n  oParagraph.AddText(\"Default bullet lvl \" + (nLvl + 1));\n  oParagraph.SetNumbering(oNumLvl);\n  oParagraph.SetContextualSpacing(true);\n  oDocument.Push(oParagraph);\n}\nbuilder.SaveFile(\"docx\", \"ApiDocument.docx\");\nbuilder.CloseFile();"
		},
		"apidocumentcontent": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nvar oDocContent = oDrawing.GetDocContent();\noDocContent.RemoveAllElements();\noParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"We removed all elements from the shape and added a new paragraph inside it.\");\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Number of elements inside the shape: \" + oDocContent.GetElementsCount());\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"ApiDocumentContent.docx\");\nbuilder.CloseFile();"
		},
		"apidrawing": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a paragraph with a shape. \");\noParagraph.AddText(\"The text wraps the rectangular box that bounds the object. \");\noParagraph.AddText(\"The distance between the shape and the text is half an inch (457200 English measure units).\");\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(155, 64, 1), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 1908000, 1404000, oFill, oStroke);\noDrawing.SetDistances(457200, 457200, 457200, 0);\noDrawing.SetWrappingStyle(\"square\");\noDrawing.SetHorAlign(\"page\", \"center\");\noParagraph.AddDrawing(oDrawing);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is another paragraph.\");\noDocument.Push(oParagraph);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The shape is aligned at the center of the page horizontally.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"ApiDrawing.docx\");\nbuilder.CloseFile();"
		},
		"apifill": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(155, 64, 1), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 1908000, 1404000, oFill, oStroke);\noDrawing.SetDistances(914400, 0, 914400, 0);\noDrawing.SetWrappingStyle(\"square\");\noParagraph.AddDrawing(oDrawing);\nvar sClassType = oFill.GetClassType();\noParagraph.AddText(\"Class Type = \" + sClassType);\nbuilder.SaveFile(\"docx\", \"ApiFill.docx\");\nbuilder.CloseFile();"
		},
		"apiformbase": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextForm = Api.CreateTextForm({\"key\": \"Personal information\", \"tip\": \"Enter your first name\", \"required\": true, \"placeholder\": \"First name\", \"comb\": true, \"maxCharacters\": 10, \"cellWidth\": 3, \"multiLine\": false, \"autoFit\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oTextForm);\noTextForm.SetBorderColor(255, 0, 0);\noTextForm.ToFixed(10 * 240, 2 * 240);\noTextForm.SetText(\"John Smith\");\nvar oTextPr = oDocument.GetDefaultTextPr();\noTextPr.SetFontSize(30);\noTextPr.SetBold(true);\noTextForm.SetTextPr(oTextPr);\nvar oFormTextPr = oTextForm.GetTextPr();\noFormTextPr.SetItalic(true);\nvar oShape = oTextForm.GetWrapperShape();\nvar oStroke = Api.CreateStroke(36000, Api.CreateSolidFill(Api.CreateRGBColor(255, 0, 0)));\noShape.SetOutLine(oStroke);\nvar oCopyForm = oTextForm.Copy();\noParagraph = Api.CreateParagraph();\noParagraph.AddElement(oCopyForm);\noDocument.Push(oParagraph);\noCopyForm.ToInline();\nvar sText = oTextForm.GetText();\nvar sClassType = oTextForm.GetClassType();\nvar sFormType = oTextForm.GetFormType();\nvar bFixed = oTextForm.IsFixed();\nvar bFixedCopy = oCopyForm.IsFixed();\nvar bRequired = oTextForm.IsRequired();\nvar sKey = oTextForm.GetFormKey();\nvar sTipText = oTextForm.GetTipText();\noCopyForm.SetText(\"John Smith\");\noCopyForm.Clear();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class type: \" + sClassType);\noParagraph.AddLineBreak();\noParagraph.AddText(\"Form type: \" + sFormType);\noParagraph.AddLineBreak();\noParagraph.AddText(\"Form text: \" + sText);\noParagraph.AddLineBreak();\noParagraph.AddText(\"The first form from this document has a fixed size: \" + bFixed);\noParagraph.AddLineBreak();\noParagraph.AddText(\"The second form from this document has a fixed size: \" + bFixedCopy);\noParagraph.AddLineBreak();\noParagraph.AddText(\"The first form from this document is required: \" + bRequired);\noParagraph.AddLineBreak();\noParagraph.AddText(\"Form key: \" + sKey);\noParagraph.AddLineBreak();\noParagraph.AddText(\"Form tip text: \" + sTipText);\noParagraph.AddLineBreak();\noParagraph.AddText(\"The second form from this document was cleared.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"ApiFormBase.docx\");\nbuilder.CloseFile();"
		},
		"apigradientstop": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(155, 64, 1), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 1908000, 1404000, oFill, oStroke);\noDrawing.SetDistances(914400, 0, 914400, 0);\noDrawing.SetWrappingStyle(\"square\");\noParagraph.AddDrawing(oDrawing);\nvar sClassType = oGs1.GetClassType();\noParagraph.AddText(\"Class Type = \" + sClassType);\nbuilder.SaveFile(\"docx\", \"ApiGradientStop.docx\");\nbuilder.CloseFile();"
		},
		"apihyperlink": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"Api ONLYOFFICE DocBuilder\");\noParagraph.AddElement(oRun);\nvar oHyperlink = oParagraph.AddHyperlink(\"https://api.onlyoffice.com/\");\noHyperlink.SetLink(\"https://api.onlyoffice.com/docbuilder/basic\");\noHyperlink.SetScreenTipText(\"ONLYOFFICE for developers\");\noHyperlink.SetDisplayedText(\"ONLYOFFICE Document Builder\");\nvar oLinkedText = oHyperlink.GetLinkedText();\nvar oScreenTipText = oHyperlink.GetScreenTipText();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Linked text: \" + oLinkedText);\noParagraph.AddLineBreak();\noParagraph.AddText(\"Screen tip text: \" + oScreenTipText);\noDocument.Push(oParagraph);\nvar oRange = oHyperlink.GetRange(0, 9);\noRange.SetBold(true);\nbuilder.SaveFile(\"docx\", \"ApiHyperlink .docx\");\nbuilder.CloseFile();"
		},
		"apiimage": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oDrawing = Api.CreateImage(\"https://api.onlyoffice.com/content/img/docbuilder/examples/coordinate_aspects.png\", 60 * 36000, 35 * 36000);\noParagraph.AddDrawing(oDrawing);\nvar sClassType = oDrawing.GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class Type = \" + sClassType);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"ApiImage.docx\");\nbuilder.CloseFile();"
		},
		"apiinlinelvlsdt": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oInlineLvlSdt = Api.CreateInlineLvlSdt();\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is an inline text content control.\");\noInlineLvlSdt.AddElement(oRun, 0);\nvar changeRun = oInlineLvlSdt.GetElement(0);\nchangeRun.SetBold(true);\noParagraph.AddInlineLvlSdt(oInlineLvlSdt);\noInlineLvlSdt.SetAlias(\"â„–1\");\nvar oAlias = oInlineLvlSdt.GetAlias();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Alias: \" + oAlias);\noDocument.Push(oParagraph);\noInlineLvlSdt.SetLabel(\"2147483647\");\nvar oLabel = oInlineLvlSdt.GetLabel();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Label: \" + oLabel);\noDocument.Push(oParagraph);\noInlineLvlSdt.SetTag(\"This is a tag\");\nvar oTag = oInlineLvlSdt.GetTag();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Tag: \" + oTag);\noDocument.Push(oParagraph);\noInlineLvlSdt.SetLock(\"contentLocked\");\nvar oLock = oInlineLvlSdt.GetLock();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Lock type: \" + oLock);\noDocument.Push(oParagraph);\nvar sClassType = oInlineLvlSdt.GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class Type = \" + sClassType);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"ApiInlineLvlSdt.docx\");\nbuilder.CloseFile();"
		},
		"apinumbering": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oNumbering = oDocument.CreateNumbering(\"bullet\");\nfor (let nLvl = 0; nLvl < 8; ++nLvl) {\n  var oNumLvl = oNumbering.GetLevel(nLvl);\n  var oParagraph = Api.CreateParagraph();\n  oParagraph.AddText(\"Default bullet lvl \" + (nLvl + 1));\n  oParagraph.SetNumbering(oNumLvl);\n  oParagraph.SetContextualSpacing(true);\n  oDocument.Push(oParagraph);\n}\nbuilder.SaveFile(\"docx\", \"ApiNumbering.docx\");\nbuilder.CloseFile();"
		},
		"apinumberinglevel": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oNumbering = oDocument.CreateNumbering(\"numbered\");\nfor (let nLvl = 0; nLvl < 8; ++nLvl) {\n  var oNumLvl = oNumbering.GetLevel(nLvl);\n  var sFormatString = \"\";\n  for (let nTempLvl = 1; nTempLvl <= (nLvl + 1); ++nTempLvl) sFormatString += \"%\" + nTempLvl + \".\";\n  oNumLvl.SetCustomType(\"lowerRoman\", sFormatString, \"left\");\n  oNumLvl.SetStart(nLvl + 1);\n  oNumLvl.SetSuff(\"space\");\n  var oParagraph = Api.CreateParagraph();\n  oParagraph.AddText(\"Custom numbered lvl \" + (nLvl + 1));\n  oParagraph.SetNumbering(oNumLvl);\n  oParagraph.SetContextualSpacing(true);\n  oDocument.Push(oParagraph);\n}\nbuilder.SaveFile(\"docx\", \"ApiNumberingLevel.docx\");\nbuilder.CloseFile();"
		},
		"apiparagraph": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a paragraph with the text in it aligned by the left side. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph.SetJc(\"left\");\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a paragraph with the text in it aligned by the right side. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph.SetJc(\"right\");\noDocument.Push(oParagraph);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a paragraph with the text in it aligned by the center. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph.SetJc(\"center\");\noDocument.Push(oParagraph);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a paragraph with the text in it aligned by both sides (justified). \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph.SetJc(\"both\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"ApiParagraph.docx\");\nbuilder.CloseFile();"
		},
		"apiparapr": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oHeading6Style = oDocument.GetStyle(\"Heading 6\");\nvar oParaPr = oHeading6Style.GetParaPr();\noParaPr.SetStyle(oHeading6Style);\noParaPr.SetJc(\"center\");\nvar oParagraph = oDocument.GetElement(0);\noParagraph.SetStyle(oHeading6Style);\noParagraph.AddText(\"This is a text in a paragraph styled with the 'Heading 6' style.\");\nbuilder.SaveFile(\"docx\", \"ApiParaPr.docx\");\nbuilder.CloseFile();"
		},
		"apipictureform": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oPictureForm = Api.CreatePictureForm({\"key\": \"Personal information\", \"tip\": \"Upload your photo\", \"required\": true, \"placeholder\": \"Photo\"});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oPictureForm);\noPictureForm.SetImage(\"https://api.onlyoffice.com/content/img/editor/e-download.png\");\noPictureForm.SetLockAspectRatio(true);\noPictureForm.SetScaleFlag(\"tooBig\");\noPictureForm.SetPicturePosition(70, 70);\noPictureForm.SetRespectBorders(true);\nvar sScaleFlag = oPictureForm.GetScaleFlag();\nvar aPosition = oPictureForm.GetPicturePosition();\nvar bLock = oPictureForm.IsLockAspectRatio();\nvar bRespectBorders = oPictureForm.IsRespectBorders();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Picture scale flag: \" + sScaleFlag);\noParagraph.AddLineBreak();\noParagraph.AddText(\"The aspect ratio of the first picture form in this document is locked: \" + bLock);\noParagraph.AddLineBreak();\noParagraph.AddText(\"The borders of the first picture form in this document are respected when scaling the image: \" + bRespectBorders);\noDocument.Push(oParagraph);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Picture position: \");\noParagraph.AddLineBreak();\nfor (let i = 0; i < aPosition.length; i++ ){\n    var nShift = aPosition[i];\n    oParagraph.AddText(\"\" + nShift);\n    oParagraph.AddLineBreak();\n}\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"ApiPictureForm.docx\");\nbuilder.CloseFile();"
		},
		"apipresetcolor": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oPresetColor = Api.CreatePresetColor(\"lightYellow\");\nvar oGs1 = Api.CreateGradientStop(oPresetColor, 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 5930900, 395605, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nvar sClassType = oPresetColor.GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class Type = \" + sClassType);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"ApiPresetColor.docx\");\nbuilder.CloseFile();"
		},
		"apirange": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is just a sample text to demonstrate the methods for ApiRange. \");\noParagraph.GetRange(57, 64).AddBookmark(\"class ApiRange\");\noParagraph.GetRange(57, 66).AddText(\"onlyoffice\", \"after\");\noParagraph.GetRange(67, 76).AddHyperlink(\"https://api.onlyoffice.com/docbuilder/basic\");\noParagraph.GetRange(67, 76).SetCaps(true);\noParagraph.GetRange(67, 76).SetSpacing(2);\noParagraph.GetRange(0, 3).SetColor(255, 164, 101);\noParagraph.GetRange(30, 40).SetFontFamily(\"Comic Sans MS\");\noParagraph.GetRange(5, 6).SetFontSize(16);\noParagraph.GetRange(57, 65).SetBold(true);\noParagraph.GetRange(15, 20).SetDoubleStrikeout(true);\noParagraph.GetRange(13, 13).SetItalic(true);\noParagraph.GetRange(22, 25).SetUnderline(true);\noParagraph.GetRange(27, 28).SetSmallCaps(true);\noParagraph.GetRange(46, 52).SetShd(\"clear\", 255, 224, 204);\noParagraph.GetRange(42, 44).SetStrikeout(true);\noParagraph.GetRange(7, 11).Delete();\nbuilder.SaveFile(\"docx\", \"ApiRange.docx\");\nbuilder.CloseFile();"
		},
		"apirgbcolor": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRGBColor = Api.CreateRGBColor(255, 164, 101);\nvar oGs1 = Api.CreateGradientStop(Api.CreatePresetColor(\"lightYellow\"), 0);\nvar oGs2 = Api.CreateGradientStop(oRGBColor, 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 5930900, 395605, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nvar sClassType = oRGBColor.GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class Type = \" + sClassType);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"ApiRGBColor.docx\");\nbuilder.CloseFile();"
		},
		"apirun": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text.\");\noRun.AddLineBreak();\noRun.AddTabStop();\noRun.AddTabStop();\noRun.AddText(\" Nothing special.\");\noRun.SetBold(true);\noParagraph.AddElement(oRun);\nvar oCopyRun = oRun.Copy();\noParagraph.AddLineBreak();\noParagraph.AddElement(oCopyRun);\noRun = Api.CreateRun();\nvar oDrawing = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noDrawing.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noDrawing.SetHorAxisTitle(\"Year\", 11);\noDrawing.SetLegendPos(\"bottom\");\noDrawing.SetShowDataLabels(false, false, true, false);\noDrawing.SetTitle(\"Financial Overview\", 13);\noRun.AddDrawing(oDrawing);\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.AddText(\"onlyoffice document builder\");\noRun.SetCaps(true);\noParagraph.AddLineBreak();\noParagraph.AddElement(oRun);\noRun.AddHyperlink(\"https://www.onlyoffice.com\", \"main page\");\nbuilder.SaveFile(\"docx\", \"ApiRun.docx\");\nbuilder.CloseFile();"
		},
		"apischemecolor": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oSchemeColor = Api.CreateSchemeColor(\"accent6\");\nvar oFill = Api.CreateSolidFill(oSchemeColor);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"curvedUpArrow\", 5930900, 595605, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nvar sClassType = oSchemeColor.GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class Type = \" + sClassType);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"ApiSchemeColor.docx\");\nbuilder.CloseFile();"
		},
		"apisection": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oSection = oDocument.GetFinalSection();\noSection.SetEqualColumns(3, 720);\noParagraph.AddText(\"This is a text split into 3 equal columns. \");\noParagraph.AddText(\"The columns are separated by the distance of half an inch.\");\noParagraph.AddColumnBreak();\noParagraph.AddText(\"This text starts from column #2. \");\noParagraph.AddText(\"This sentence is used to add lines for demonstrative purposes.\");\noParagraph.AddColumnBreak();\noParagraph.AddText(\"This text starts from column #3. \");\noParagraph.AddText(\"This sentence is used to add lines for demonstrative purposes.\");\nvar oFooter = oSection.GetFooter(\"default\", true);\noSection.SetFooterDistance(1440);\noParagraph = oFooter.GetElement(0);\noParagraph.AddText(\"This is a page footer. \");\noParagraph.AddText(\"The distance from the page bottom to the footer is 1 inch (1440 twentieths of a point).\");\nvar oHeader = oSection.GetHeader(\"default\", true);\noSection.SetHeaderDistance(1440);\noParagraph = oHeader.GetElement(0);\noParagraph.AddText(\"This is a page header. \");\noParagraph.AddText(\"The distance from the page top to the header is 1 inch (1440 twentieths of a point).\");\noSection.SetPageMargins(720, 720, 720, 720);\nbuilder.SaveFile(\"docx\", \"ApiSection.docx\");\nbuilder.CloseFile();"
		},
		"apishape": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nvar oDocContent = oDrawing.GetContent();\nvar sClassType = oDrawing.GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class Type = \" + sClassType);\noDocContent.AddElement(0, oParagraph);\noDrawing.SetVerticalTextAlign(\"top\");\nbuilder.SaveFile(\"docx\", \"ApiShape.docx\");\nbuilder.CloseFile();"
		},
		"apistroke": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRGBColor = Api.CreateRGBColor(0, 255, 0);\nvar oFill = Api.CreateSolidFill(oRGBColor);\nvar oStroke = Api.CreateStroke(5 * 36000, Api.CreateSolidFill(Api.CreateRGBColor(255, 224, 204)));\nvar oDrawing = Api.CreateShape(\"roundRect\", 5930900, 395605, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nvar sClassType = oStroke.GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class Type = \" + sClassType);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"ApiStroke.docx\");\nbuilder.CloseFile();"
		},
		"apistyle": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\noTableStyle.SetName(\"My Custom Style\");\nvar oTableStyleName = oTableStyle.GetName();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"Table style name = \" + oTableStyleName);\nvar oTable = Api.CreateTable(2, 2);\noTable.SetWidth(\"percent\", 100);\nvar oTablePr = oTableStyle.GetTablePr();\noTablePr.SetTableInd(0);\noTablePr.SetTableCellMarginTop(720);\noTablePr.SetTableCellMarginLeft(120);\noTablePr.SetTableCellMarginRight(120);\noTablePr.SetTableCellMarginBottom(0);\noDocument.Push(oTable);\noTable.SetStyle(oTableStyle);\noTable.SetTableLook(true, true, true, true, true, true);\noTableStyle.GetConditionalTableStyle(\"topLeftCell\").GetTableCellPr().SetShd(\"clear\", 255, 0, 0);\noTableStyle.GetConditionalTableStyle(\"topRightCell\").GetTableCellPr().SetShd(\"clear\", 0, 255, 0);\noTableStyle.GetConditionalTableStyle(\"bottomLeftCell\").GetTableCellPr().SetShd(\"clear\", 0, 0, 255);\noTableStyle.GetConditionalTableStyle(\"bottomRightCell\").GetTableCellPr().SetShd(\"clear\", 255, 255, 0);\nbuilder.SaveFile(\"docx\", \"ApiStyle.docx\");\nbuilder.CloseFile();"
		},
		"apitable": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTable = Api.CreateTable(5, 5);\noTable.SetWidth(\"percent\", 100);\noTable.AddColumn(oTable.GetRow(0).GetCell(1), true);\noTable.AddRow(oTable.GetRow(1).GetCell(0), true);\nvar oCopyTable = oTable.Copy();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\noTable.SetStyle(oTableStyle);\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Merged cell\");\nvar oCell = oTable.MergeCells([oTable.GetRow(1).GetCell(1), oTable.GetRow(1).GetCell(2), oTable.GetRow(2).GetCell(1), oTable.GetRow(2).GetCell(2)]);\noTable.AddElement(oCell, 0, oParagraph);\nvar oBlockLvlSdt = oTable.InsertInContentControl(1);\noDocument.AddElement(0, oBlockLvlSdt);\nvar sClassType = oTable.GetClassType();\noParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"Class Type = \" + sClassType);\nvar aSearch = oTable.Search(\"cell\");\naSearch[0].SetBold(true);\noCopyTable.SetHAlign(\"center\");\noCopyTable.SetTableBorderTop(\"single\", 4, 0, 0, 0, 255);\noCopyTable.SetTableBorderBottom(\"single\", 32, 0, 0, 0, 255);\noCopyTable.SetTableBorderLeft(\"single\", 4, 0, 0, 0, 255);\noCopyTable.SetTableBorderRight(\"single\", 4, 0, 0, 0, 255);\noCopyTable.SetTableBorderInsideV(\"single\", 4, 0, 255, 0, 0);\noCopyTable.SetTableBorderInsideH(\"single\", 4, 0, 255, 0, 0);\noDocument.Push(oCopyTable);\nbuilder.SaveFile(\"docx\", \"ApiTable.docx\");\nbuilder.CloseFile();"
		},
		"apitablecell": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(1, 1);\noTable.SetWidth(\"percent\", 100);\nvar oCell = oTable.GetCell(0, 0);\noCell.AddColumns(2, false);\noCell.AddRows(2, false);\nvar oParentRow = oCell.GetParentRow();\noParentRow.SetHeight(\"atLeast\", 1440);\nvar oParentTable = oCell.GetParentTable();\noParentTable.SetTableBorderBottom(\"single\", 4, 0, 255, 0, 0);\noCell.SetVerticalAlign(\"top\");\nvar oParagraph = oCell.GetContent().GetElement(0);\noParagraph.AddText(\"Align top\");\noCell = oTable.GetRow(0).GetCell(1);\noCell.SetVerticalAlign(\"center\");\noParagraph = oCell.GetContent().GetElement(0);\noParagraph.AddText(\"Align center\");\noCell = oTable.GetRow(0).GetCell(2);\noCell.SetVerticalAlign(\"bottom\");\noParagraph = oCell.GetContent().GetElement(0);\noParagraph.AddText(\"Align bottom\");\noTable.SetStyle(oTableStyle);\nvar oNextCell = oTable.GetCell(0, 1).GetNext();\noNextCell.GetContent().GetElement(0).SetBold(true);\nvar oPreviousCell = oTable.GetCell(0, 1).GetPrevious();\noPreviousCell.GetContent().GetElement(0).SetBold(true);\noCell = oTable.GetRow(0).GetCell(0);\noCell.SetCellBorderBottom(\"single\", 32, 0, 0, 0, 255);\noCell.SetCellBorderLeft(\"single\", 32, 0, 0, 0, 255);\noCell.SetCellBorderRight(\"single\", 32, 0, 0, 0, 255);\noCell.SetCellBorderTop(\"single\", 32, 0, 0, 0, 255);\noTable.GetCell(1, 0).GetContent().GetElement(0).AddText(\"Cell index: \" + oTable.GetCell(1, 0).GetIndex());\noDocument.Push(oTable);\nvar sClassType = oCell.GetClassType();\noParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"Class Type = \" + sClassType);\nbuilder.SaveFile(\"docx\", \"ApiTableCell.docx\");\nbuilder.CloseFile();"
		},
		"apitablecellpr": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oTableRow = oTable.GetRow(0);\noTableRow.SetHeight(\"atLeast\", 1440);\nvar oTableCellPr = oTableStyle.GetTableCellPr();\noTableCellPr.SetVerticalAlign(\"bottom\");\noTableCellPr.SetCellBorderRight(\"single\", 32, 0, 0, 0, 255);\noTableCellPr.SetCellBorderTop(\"single\", 32, 0, 0, 0, 255);\noTableCellPr.SetShd(\"clear\", 0xff, 0x68, 0x00, false);\nvar oCell = oTable.GetRow(0).GetCell(0);\nvar oParagraph = oCell.GetContent().GetElement(0);\noParagraph.AddText(\"Align bottom\");\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nvar sClassType = oTableCellPr.GetClassType();\noParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"Class Type = \" + sClassType);\nbuilder.SaveFile(\"docx\", \"ApiTableCellPr.docx\");\nbuilder.CloseFile();"
		},
		"apitablepr": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTablePr = oTableStyle.GetTablePr();\noTablePr.SetJc(\"center\");\noTablePr.SetCellSpacing(720);\noTablePr.SetTableBorderBottom(\"single\", 32, 0, 0, 0, 255);\noTablePr.SetTableBorderLeft(\"single\", 32, 0, 0, 0, 255);\noTablePr.SetTableBorderRight(\"single\", 32, 0, 0, 0, 255);\noTablePr.SetTableBorderTop(\"single\", 32, 0, 0, 0, 255);\noTablePr.SetWidth(\"percent\", 100);\nvar oTable = Api.CreateTable(4, 2);\noTable.SetTableLook(true, true, true, true, true, true);\noTablePr.SetStyleColBandSize(2);\noTableStyle.GetConditionalTableStyle(\"bandedColumn\").GetTextPr().SetBold(true);\noTable.GetRow(0).GetCell(0).GetContent().GetElement(0).AddText(\"Bold\");\noTable.GetRow(0).GetCell(1).GetContent().GetElement(0).AddText(\"Bold\");\noTable.GetRow(0).GetCell(2).GetContent().GetElement(0).AddText(\"Normal\");\noTable.GetRow(0).GetCell(3).GetContent().GetElement(0).AddText(\"Normal\");\noTable.GetRow(1).GetCell(0).GetContent().GetElement(0).AddText(\"Bold\");\noTable.GetRow(1).GetCell(1).GetContent().GetElement(0).AddText(\"Bold\");\noTable.GetRow(1).GetCell(2).GetContent().GetElement(0).AddText(\"Normal\");\noTable.GetRow(1).GetCell(3).GetContent().GetElement(0).AddText(\"Normal\");\noTable.SetStyle(oTableStyle);\nvar sClassType = oTablePr.GetClassType();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"Class Type = \" + sClassType);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"ApiTablePr.docx\");\nbuilder.CloseFile();"
		},
		"apitablerow": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oTableRow = oTable.GetRow(0);\noTableRow.SetHeight(\"atLeast\", 720);\noTableRow.AddRows(1, true);\noTableRow = oTable.GetRow(0);\nvar oCell = oTableRow.GetCell(1);\noCell.SetVerticalAlign(\"bottom\");\nvar oParagraph = oCell.GetContent().GetElement(0);\noParagraph.AddText(\"Align bottom\");\nvar nCellsCount = oTableRow.GetCellsCount();\noTableRow.GetCell(0).GetContent().GetElement(0).AddText(\"Row index: \" + oTableRow.GetIndex());\noTableRow = oTable.GetRow(1);\noTableRow.GetCell(0).GetContent().GetElement(0).AddText(\"Second row\");\noTableRow.GetNext().GetCell(0).GetContent().GetElement(0).AddText(\"Third row\");\noTableRow.GetPrevious().GetCell(1).GetContent().GetElement(0).SetBold(true);\noTableRow = oTable.GetRow(2);\noTableRow.MergeCells();\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Number of cells in the first row = \" + nCellsCount);\nvar sClassType = oTableRow.GetClassType();\noParagraph.AddLineBreak();\noParagraph.AddText(\"Class Type = \" + sClassType);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"ApiTableRow.docx\");\nbuilder.CloseFile();"
		},
		"apitablerowpr": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetTableLook(true, true, true, true, false, false);\nvar oTableRowPr = oTableStyle.GetTableRowPr();\noTableRowPr.SetTableHeader(true);\noTableRowPr.SetHeight(\"atLeast\", 720);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nvar sClassType = oTableRowPr.GetClassType();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"Class Type = \" + sClassType);\noParagraph.AddLineBreak();\noParagraph.AddText(\"We create a 3x3 table and set all table rows as the table headers:\");\nbuilder.SaveFile(\"docx\", \"ApiTableRowPr.docx\");\nbuilder.CloseFile();"
		},
		"apitablestylepr": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oTableStylePr = oTableStyle.GetConditionalTableStyle(\"topLeftCell\");\noTable.SetTableLook(true, true, true, true, true, true);\noTableStylePr.GetTextPr().SetBold(true);\nvar oParagraph = oTable.GetRow(0).GetCell(0).GetContent().GetElement(0);\noParagraph.AddText(\"Bold text\");\noParagraph = oTable.GetRow(0).GetCell(1).GetContent().GetElement(0);\noParagraph.AddText(\"Normal text\");\nvar oParaPr = oTableStylePr.GetParaPr();\noParaPr.SetJc(\"center\");\noTableStylePr.GetTableCellPr().SetShd(\"clear\", 0xEE, 0xEE, 0xEE);\noTableStylePr.GetTableRowPr().SetHeight(\"atLeast\", 720);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nvar sClassType = oTableStylePr.GetClassType();\noParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"Class Type = \" + sClassType);\nvar sTableStylePrType = oTableStylePr.GetType();\noParagraph.AddLineBreak();\noParagraph.AddText(\"Style type = \" + sTableStylePrType);\nbuilder.SaveFile(\"docx\", \"ApiTableStylePr.docx\");\nbuilder.CloseFile();"
		},
		"apitextform": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextForm = Api.CreateTextForm({\"key\": \"Personal information\", \"tip\": \"Enter your first name\", \"required\": true, \"placeholder\": \"First name\", \"multiLine\": false, \"autoFit\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oTextForm);\noTextForm.SetCharactersLimit(5);\noTextForm.SetText(\"John Smith\");\noTextForm.SetComb(true);\nvar nLimit = oTextForm.GetCharactersLimit();\nvar bComb = oTextForm.IsComb();\nvar bMultiline = oTextForm.IsMultiline();\nvar bAutoFit = oTextForm.IsAutoFit();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Characters limit: \" + nLimit);\noParagraph.AddLineBreak();\noParagraph.AddText(\"The first text form from this document is comb: \" + bComb);\noParagraph.AddLineBreak();\noParagraph.AddText(\"The first text form from this document is multiline: \" + bMultiline);\noParagraph.AddLineBreak();\noParagraph.AddText(\"The first text form from this document is autofit: \" + bAutoFit);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"ApiTextForm.docx\");\nbuilder.CloseFile();"
		},
		"apitextpr": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextPr = oDocument.GetDefaultTextPr();\noTextPr.SetFontSize(30);\noTextPr.SetBold(true);\noTextPr.SetCaps(true);\noTextPr.SetColor(0, 0, 255, false);\noTextPr.SetDoubleStrikeout(true);\noTextPr.SetFontFamily(\"Comic Sans MS\");\noTextPr.SetHighlight(255, 255, 0, false);\noTextPr.SetItalic(true);\noTextPr.SetSpacing(80);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a sample text to show the specified text properties.\");\nvar sClassType = oTextPr.GetClassType();\noParagraph.AddLineBreak();\noParagraph.AddText(\"Class Type = \" + sClassType);\nbuilder.SaveFile(\"docx\", \"ApiTextPr.docx\");\nbuilder.CloseFile();"
		},
		"apiunicolor": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oPresetColor = Api.CreatePresetColor(\"lightYellow\");\nvar oGs1 = Api.CreateGradientStop(oPresetColor, 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 5930900, 395605, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nvar sClassType = oPresetColor.GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class Type = \" + sClassType);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"ApiUniColor.docx\");\nbuilder.CloseFile();"
		},
		"Api.addcomment": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"ONLYOFFICE Document Builder\");\nApi.AddComment(oParagraph, \"ONLYOFFICE for developers\", \"Jane\");\nbuilder.SaveFile(\"docx\", \"AddComment.docx\");\nbuilder.CloseFile();"
		},
		"Api.convertdocument": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph1 = oDocument.GetElement(0);\noParagraph1.AddText(\"Heading 1\");\nvar oHeading1Style = oDocument.GetStyle(\"Heading 1\");\noParagraph1.SetStyle(oHeading1Style);\nvar oParagraph2 = Api.CreateParagraph();\noParagraph2.AddText(\"This document will be converted to Markdown.\");\noDocument.Push(oParagraph2);\nvar aSearch = oParagraph2.Search(\"Markdown\");\naSearch[0].SetBold(true);\nvar oParagraph3 = Api.CreateParagraph();\noParagraph3.AddText(\"Heading 2\");\noDocument.Push(oParagraph3);\nvar oHeading2Style = oDocument.GetStyle(\"Heading 2\");\noParagraph3.SetStyle(oHeading2Style);\nvar oParagraph4 = Api.CreateParagraph();\noParagraph4.AddText(\"There is an example of two heading levels.\");\noDocument.Push(oParagraph4);\nvar sMarkdown = Api.ConvertDocument(\"markdown\", false, false, true, false);\nvar oParagraph5 = Api.CreateParagraph();\noParagraph5.AddLineBreak();\noParagraph5.AddText(\"Markdown\").SetBold(true);\noParagraph5.AddLineBreak();\noParagraph5.AddText(sMarkdown);\noDocument.Push(oParagraph5);\nbuilder.SaveFile(\"docx\", \"ConvertDocument.docx\");\nbuilder.CloseFile();"
		},
		"Api.createblipfill": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oFill = Api.CreateBlipFill(\"https://api.onlyoffice.com/content/img/docbuilder/examples/icon_DocumentEditors.png\", \"tile\");\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"star10\", 5930900, 595605, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nbuilder.SaveFile(\"docx\", \"CreateBlipFill.docx\");\nbuilder.CloseFile();"
		},
		"Api.createblocklvlsdt": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oBlockLvlSdt = Api.CreateBlockLvlSdt();\noBlockLvlSdt.GetContent().GetElement(0).AddText(\"This is a block text content control.\");\noDocument.AddElement(0, oBlockLvlSdt);\nbuilder.SaveFile(\"docx\", \"CreateBlockLvlSdt.docx\");\nbuilder.CloseFile();"
		},
		"Api.createchart": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oDrawing = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noParagraph.AddDrawing(oDrawing);\nbuilder.SaveFile(\"docx\", \"CreateChart.docx\");\nbuilder.CloseFile();"
		},
		"Api.creategradientstop": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 5930900, 395605, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nbuilder.SaveFile(\"docx\", \"CreateGradientStop.docx\");\nbuilder.CloseFile();"
		},
		"Api.createhyperlink": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oHyperlink = Api.CreateHyperlink(\"https://api.onlyoffice.com/\", \"ONLYOFFICE Document Builder\", \"ONLYOFFICE for developers\");\nvar sType = oHyperlink.GetClassType();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"Class type of the created object: \" + sType);\nbuilder.SaveFile(\"docx\", \"CreateHyperlink.docx\");\nbuilder.CloseFile();"
		},
		"Api.createimage": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oDrawing = Api.CreateImage(\"https://api.onlyoffice.com/content/img/docbuilder/examples/coordinate_aspects.png\", 60 * 36000, 35 * 36000);\noParagraph.AddDrawing(oDrawing);\nbuilder.SaveFile(\"docx\", \"CreateImage.docx\");\nbuilder.CloseFile();"
		},
		"Api.createinlinelvlsdt": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oInlineLvlSdt = Api.CreateInlineLvlSdt();\noParagraph.AddInlineLvlSdt(oInlineLvlSdt);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is an inline text content control.\");\noInlineLvlSdt.AddElement(oRun, 0);\nbuilder.SaveFile(\"docx\", \"CreateInlineLvlSdt.docx\");\nbuilder.CloseFile();"
		},
		"Api.createlineargradientfill": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 5930900, 395605, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nbuilder.SaveFile(\"docx\", \"CreateLinearGradientFill.docx\");\nbuilder.CloseFile();"
		},
		"Api.createnofill": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 5930900, 395605, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nbuilder.SaveFile(\"docx\", \"CreateNoFill.docx\");\nbuilder.CloseFile();"
		},
		"Api.createnumbering": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oNumbering = oDocument.CreateNumbering(\"bullet\");\nfor (let nLvl = 0; nLvl < 2; ++nLvl) {\n  var oNumLvl = oNumbering.GetLevel(nLvl);\n  var oParagraph = Api.CreateParagraph();\n  oParagraph.AddText(\"This is an example of the bulleted paragraph â„– \" + (nLvl + 1));\n  oParagraph.SetNumbering(oNumLvl);\n  oDocument.Push(oParagraph);\n}\nbuilder.SaveFile(\"docx\", \"CreateNumbering.docx\");\nbuilder.CloseFile();"
		},
		"Api.createparagraph": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a new paragraph\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"CreateParagraph.docx\");\nbuilder.CloseFile();"
		},
		"Api.createpatternfill": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oFill = Api.CreatePatternFill(\"dashDnDiag\", Api.CreateRGBColor(255, 224, 204), Api.CreateRGBColor(255, 164, 101));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 5930900, 395605, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nbuilder.SaveFile(\"docx\", \"CreatePatternFill.docx\");\nbuilder.CloseFile();"
		},
		"Api.createpresetcolor": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oGs1 = Api.CreateGradientStop(Api.CreatePresetColor(\"lightYellow\"), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 5930900, 395605, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nbuilder.SaveFile(\"docx\", \"CreatePresetColor.docx\");\nbuilder.CloseFile();"
		},
		"Api.createradialgradientfill": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 5930900, 395605, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nbuilder.SaveFile(\"docx\", \"CreateRadialGradientFill.docx\");\nbuilder.CloseFile();"
		},
		"Api.createrange": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"ONLYOFFICE Document Builder\");\nvar oRange = Api.CreateRange(oParagraph, 0, 9);\noRange.SetBold(true);\nbuilder.SaveFile(\"docx\", \"CreateRange.docx\");\nbuilder.CloseFile();"
		},
		"Api.creatergbcolor": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 5930900, 395605, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nbuilder.SaveFile(\"docx\", \"CreateRGBColor.docx\");\nbuilder.CloseFile();"
		},
		"Api.createrun": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is a text run\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"docx\", \"CreateRun.docx\");\nbuilder.CloseFile();"
		},
		"Api.createschemecolor": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oSchemeColor = Api.CreateSchemeColor(\"accent6\");\nvar oFill = Api.CreateSolidFill(oSchemeColor);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"curvedUpArrow\", 5930900, 595605, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nbuilder.SaveFile(\"docx\", \"CreateSchemeColor.docx\");\nbuilder.CloseFile();"
		},
		"Api.createshape": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 5930900, 395605, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nbuilder.SaveFile(\"docx\", \"CreateShape.docx\");\nbuilder.CloseFile();"
		},
		"Api.createsolidfill": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRGBColor = Api.CreateRGBColor(0, 255, 0);\nvar oFill = Api.CreateSolidFill(oRGBColor);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"roundRect\", 5930900, 395605, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nbuilder.SaveFile(\"docx\", \"CreateSolidFill.docx\");\nbuilder.CloseFile();"
		},
		"Api.createstroke": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRGBColor = Api.CreateRGBColor(0, 255, 0);\nvar oFill = Api.CreateSolidFill(oRGBColor);\nvar oStroke = Api.CreateStroke(5 * 36000, Api.CreateSolidFill(Api.CreateRGBColor(255, 224, 204)));\nvar oDrawing = Api.CreateShape(\"roundRect\", 5930900, 395605, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nbuilder.SaveFile(\"docx\", \"CreateStroke.docx\");\nbuilder.CloseFile();"
		},
		"Api.createtable": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTable = Api.CreateTable(3, 3);\noDocument.Push(oTable);\noTable.SetTableBorderTop(\"single\", 32, 0, 0, 0, 255);\noTable.SetTableBorderBottom(\"single\", 32, 0, 0, 0, 255);\noTable.SetTableBorderLeft(\"single\", 32, 0, 0, 0, 255);\noTable.SetTableBorderRight(\"single\", 32, 0, 0, 0, 255);\noTable.SetTableBorderInsideV(\"single\", 32, 0, 255, 0, 0);\noTable.SetTableBorderInsideH(\"single\", 32, 0, 255, 0, 0);\noTable.SetWidth(\"percent\", 100);\nbuilder.SaveFile(\"docx\", \"CreateTable.docx\");\nbuilder.CloseFile();"
		},
		"Api.getdocument": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a new paragraph\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetDocument.docx\");\nbuilder.CloseFile();"
		},
		"Api.getmailmergereceptionscount": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar arrField = [\"Greeting line\", \"First name\", \"Last name\"];\nfor (let i = 0; i < 3; i++) {\n    var oRun = Api.CreateRun();\n    oRun.AddText(arrField[i]);\n    oParagraph.AddElement(oRun);\n    oRun.WrapInMailMergeField();\n    oParagraph.AddText(\" \");\n}\noParagraph.AddText(\"!\");\nApi.LoadMailMergeData([arrField, [\"Dear\", \"John\", \"Smith\"], [\"Hello\", \"Lara\", \"Davis\"]]);\nvar oTemplateDocContent = Api.GetMailMergeTemplateDocContent();\nvar nReceptionsCount     = Api.GetMailMergeReceptionsCount();\n\nvar arrReceptions = [];\nfor (let nReception = 0; nReception < nReceptionsCount; nReception++) \n{\n    Api.MailMerge(nReception, nReception);\n    var oElement1 = oDocument.GetElement(0);\n    arrReceptions.push(oElement1);\n    Api.ReplaceDocumentContent(oTemplateDocContent);\n}\noParagraph = Api.CreateParagraph();\noParagraph.AddLineBreak();\noParagraph.AddText(\"Receptions\");\noParagraph.SetBold(true);\noDocument.Push(oParagraph);\noDocument.Push(arrReceptions[0]);\noDocument.Push(arrReceptions[1]);\noParagraph = Api.CreateParagraph();\noParagraph.AddLineBreak();\noParagraph.AddText(\"The mail merge process was run twice for each mail merge reception. But the results were replaced with the mail merge template document content. This template allows you to save each mail merge reception to the separate file.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetMailMergeReceptionsCount.docx\");\nbuilder.CloseFile();"
		},
		"Api.getmailmergetemplatedoccontent": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar arrField = [\"Greeting line\", \"First name\", \"Last name\"];\nfor (let i = 0; i < 3; i++) {\n    var oRun = Api.CreateRun();\n    oRun.AddText(arrField[i]);\n    oParagraph.AddElement(oRun);\n    oRun.WrapInMailMergeField();\n    oParagraph.AddText(\" \");\n}\noParagraph.AddText(\"!\");\nApi.LoadMailMergeData([arrField, [\"Dear\", \"John\", \"Smith\"], [\"Hello\", \"Lara\", \"Davis\"]]);\nvar oTemplateDocContent = Api.GetMailMergeTemplateDocContent();\nvar nReceptionsCount     = Api.GetMailMergeReceptionsCount();\n\nvar arrReceptions = [];\nfor (let nReception = 0; nReception < nReceptionsCount; nReception++) \n{\n    Api.MailMerge(nReception, nReception);\n    var oElement1 = oDocument.GetElement(0);\n    arrReceptions.push(oElement1);\n    Api.ReplaceDocumentContent(oTemplateDocContent);\n}\noParagraph = Api.CreateParagraph();\noParagraph.AddLineBreak();\noParagraph.AddText(\"Receptions\");\noParagraph.SetBold(true);\noDocument.Push(oParagraph);\noDocument.Push(arrReceptions[0]);\noDocument.Push(arrReceptions[1]);\noParagraph = Api.CreateParagraph();\noParagraph.AddLineBreak();\noParagraph.AddText(\"The mail merge process was run twice for each mail merge reception. But the results were replaced with the mail merge template document content. This template allows you to save each mail merge reception to the separate file.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetMailMergeTemplateDocContent.docx\");\nbuilder.CloseFile();"
		},
		"Api.loadmailmergedata": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar arrField = [\"Greeting line\", \"First name\", \"Last name\"];\nfor (let i = 0; i < 3; i++) {\n    var oRun = Api.CreateRun();\n    oRun.AddText(arrField[i]);\n    oParagraph.AddElement(oRun);\n    oRun.WrapInMailMergeField();\n    oParagraph.AddText(\" \");\n}\noParagraph.AddText(\"!\");\nApi.LoadMailMergeData([arrField, [\"Dear\", \"John\", \"Smith\"], [\"Hello\", \"Lara\", \"Davis\"]]);\nApi.MailMerge();\nbuilder.SaveFile(\"docx\", \"LoadMailMergeData.docx\");\nbuilder.CloseFile();"
		},
		"Api.mailmerge": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar arrField = [\"Greeting line\", \"First name\", \"Last name\"];\nfor (let i = 0; i < 3; i++) {\n    var oRun = Api.CreateRun();\n    oRun.AddText(arrField[i]);\n    oParagraph.AddElement(oRun);\n    oRun.WrapInMailMergeField();\n    oParagraph.AddText(\" \");\n}\noParagraph.AddText(\"!\");\nApi.LoadMailMergeData([arrField, [\"Dear\", \"John\", \"Smith\"], [\"Hello\", \"Lara\", \"Davis\"]]);\nApi.MailMerge(1);\nbuilder.SaveFile(\"docx\", \"MailMerge.docx\");\nbuilder.CloseFile();"
		},
		"Api.replacedocumentcontent": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar arrField = [\"Greeting line\", \"First name\", \"Last name\"];\nfor (let i = 0; i < 3; i++) {\n    var oRun = Api.CreateRun();\n    oRun.AddText(arrField[i]);\n    oParagraph.AddElement(oRun);\n    oRun.WrapInMailMergeField();\n    oParagraph.AddText(\" \");\n}\noParagraph.AddText(\"!\");\nApi.LoadMailMergeData([arrField, [\"Dear\", \"John\", \"Smith\"], [\"Hello\", \"Lara\", \"Davis\"]]);\nvar oTemplateDocContent = Api.GetMailMergeTemplateDocContent();\nvar nReceptionsCount     = Api.GetMailMergeReceptionsCount();\n\nvar arrReceptions = [];\nfor (let nReception = 0; nReception < nReceptionsCount; nReception++) \n{\n    Api.MailMerge(nReception, nReception);\n    var oElement1 = oDocument.GetElement(0);\n    arrReceptions.push(oElement1);\n    Api.ReplaceDocumentContent(oTemplateDocContent);\n}\noParagraph = Api.CreateParagraph();\noParagraph.AddLineBreak();\noParagraph.AddText(\"Receptions\");\noParagraph.SetBold(true);\noDocument.Push(oParagraph);\noDocument.Push(arrReceptions[0]);\noDocument.Push(arrReceptions[1]);\noParagraph = Api.CreateParagraph();\noParagraph.AddLineBreak();\noParagraph.AddText(\"The mail merge process was run twice for each mail merge reception. But the results were replaced with the mail merge template document content. This template allows you to save each mail merge reception to the separate file.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"ReplaceDocumentContent.docx\");\nbuilder.CloseFile();"
		},
		"Api.replacetextsmart": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oFParagraph = oDocument.GetElement(0);\noFParagraph.AddText(\"This is the text for the first line. The line break is added after it.\");\noFParagraph.AddLineBreak();\nvar oSParagraph = Api.CreateParagraph();\noSParagraph.AddTabStop();\noSParagraph.AddText(\"This is just a sample text with a tab stop before it.\");\noDocument.Push(oSParagraph);\nvar oRange1 = oFParagraph.GetRange();\nvar oRange2 = oSParagraph.GetRange();\nvar oRange3 = oRange1.ExpandTo(oRange2);\noRange3.Select();\nvar arr = [\"test_1\", \"test_2\"];\nApi.ReplaceTextSmart(arr, \"\", \"\");\nbuilder.SaveFile(\"docx\", \"ReplaceTextSmart.docx\");\nbuilder.CloseFile();"
		},
		"Api.save": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This sample text is saved to the document.\");\nApi.Save();\nbuilder.SaveFile(\"docx\", \"Save.docx\");\nbuilder.CloseFile();"
		},
		"ApiBlockLvlSdt.addelement": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oBlockLvlSdt = Api.CreateBlockLvlSdt();\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a block text content control.\");\noBlockLvlSdt.AddElement(oParagraph, 0);\noDocument.AddElement(0, oBlockLvlSdt);\nbuilder.SaveFile(\"docx\", \"AddElement.docx\");\nbuilder.CloseFile();"
		},
		"ApiBlockLvlSdt.addtext": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oBlockLvlSdt = Api.CreateBlockLvlSdt();\noBlockLvlSdt.GetContent().GetElement(0).AddText(\"This is a block text content control.\");\noDocument.AddElement(0, oBlockLvlSdt);\nbuilder.SaveFile(\"docx\", \"AddText.docx\");\nbuilder.CloseFile();"
		},
		"ApiBlockLvlSdt.getalias": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oBlockLvlSdt = Api.CreateBlockLvlSdt();\noBlockLvlSdt.GetContent().GetElement(0).AddText(\"This is a block text content control with alias 'â„–1'.\");\noBlockLvlSdt.SetAlias(\"â„–1\");\noDocument.AddElement(0, oBlockLvlSdt);\nvar oAlias = oBlockLvlSdt.GetAlias();\nvar oParagraph = oDocument.GetElement(1);\noParagraph.AddText(\"Alias: \" + oAlias);\nbuilder.SaveFile(\"docx\", \"GetAlias.docx\");\nbuilder.CloseFile();"
		},
		"ApiBlockLvlSdt.getallcontentcontrols": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oBlockLvlSdt = Api.CreateBlockLvlSdt();\nvar oBlockLvlSdt1 = Api.CreateBlockLvlSdt();\noBlockLvlSdt1.GetContent().GetElement(0).AddText(\"This is the first block text content control.\");\nvar oBlockLvlSdt2 = Api.CreateBlockLvlSdt();\noBlockLvlSdt2.GetContent().GetElement(0).AddText(\"This is the second block text content control.\");\noBlockLvlSdt.AddElement(oBlockLvlSdt1, 0);\noBlockLvlSdt.AddElement(oBlockLvlSdt2, 1);\noDocument.AddElement(0, oBlockLvlSdt);\nvar aContentControls = oBlockLvlSdt.GetAllContentControls();\naContentControls[0].GetContent().GetElement(0).SetBold(true);\nvar sClassType = aContentControls[0].GetClassType();\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class type: \" + sClassType);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetAllContentControls.docx\");\nbuilder.CloseFile();"
		},
		"ApiBlockLvlSdt.getalldrawingobjects": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = Api.CreateParagraph();\nvar oBlockLvlSdt = Api.CreateBlockLvlSdt();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(255, 0, 255));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing1 = Api.CreateShape(\"rect\", 3212465, 963295, oFill, oStroke);\noFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\noStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing2 = Api.CreateShape(\"rect\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oDrawing1);\noParagraph.AddDrawing(oDrawing2);\noBlockLvlSdt.AddElement(oParagraph, 0);\noDocument.AddElement(0, oBlockLvlSdt);\nvar arrAllDrawingObjects = oBlockLvlSdt.GetAllDrawingObjects();\narrAllDrawingObjects[0].Delete();\nbuilder.SaveFile(\"docx\", \"GetAllDrawingObjects.docx\");\nbuilder.CloseFile();"
		},
		"ApiBlockLvlSdt.getallparagraphs": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oBlockLvlSdt = Api.CreateBlockLvlSdt();\nvar oParagraph1 = Api.CreateParagraph();\noParagraph1.AddText(\"This is the first paragraph in the content control.\");\noBlockLvlSdt.AddElement(oParagraph1, 0);\nvar oParagraph2 = Api.CreateParagraph();\noParagraph2.AddText(\"This is the second paragraph in the content control.\");\noBlockLvlSdt.AddElement(oParagraph2, 1);\noDocument.AddElement(0, oBlockLvlSdt);\nvar aParagraphs = oBlockLvlSdt.GetAllParagraphs();\naParagraphs[0].SetBold(true);\nbuilder.SaveFile(\"docx\", \"GetAllParagraphs.docx\");\nbuilder.CloseFile();"
		},
		"ApiBlockLvlSdt.getalltablesonpage": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oBlockLvlSdt = Api.CreateBlockLvlSdt();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable1 = Api.CreateTable(3, 3);\noTable1.SetWidth(\"percent\", 100);\noTable1.SetStyle(oTableStyle);\noBlockLvlSdt.AddElement(oTable1, 0);\nvar oTable2 = Api.CreateTable(2, 2);\noTable2.SetWidth(\"percent\", 100);\noTable2.SetStyle(oTableStyle);\noBlockLvlSdt.AddElement(oTable2, 1);\noDocument.AddElement(0, oBlockLvlSdt);\nvar aTables = oBlockLvlSdt.GetAllTablesOnPage(0);\nvar oCell = aTables[0].GetRow(1).GetCell(0);\naTables[0].RemoveRow(oCell);\nbuilder.SaveFile(\"docx\", \"GetAllTablesOnPage.docx\");\nbuilder.CloseFile();"
		},
		"ApiBlockLvlSdt.getclasstype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oBlockLvlSdt = Api.CreateBlockLvlSdt();\nvar oParagraph = Api.CreateParagraph();\noBlockLvlSdt.GetContent().GetElement(0).AddText(\"This is a block text content control.\");\noDocument.AddElement(0, oBlockLvlSdt);\nvar sClassType = oBlockLvlSdt.GetClassType();\noParagraph = oDocument.GetElement(1);\noParagraph.AddText(\"Class type: \" + sClassType);\nbuilder.SaveFile(\"docx\", \"GetClassType.docx\");\nbuilder.CloseFile();"
		},
		"ApiBlockLvlSdt.getcontent": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oBlockLvlSdt = Api.CreateBlockLvlSdt();\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a block text content control.\");\noBlockLvlSdt.AddElement(oParagraph, 0);\noDocument.AddElement(0, oBlockLvlSdt);\noBlockLvlSdt.GetContent().GetElement(1).AddText(\"This is a content of the container.\");\nbuilder.SaveFile(\"docx\", \"GetContent.docx\");\nbuilder.CloseFile();"
		},
		"ApiBlockLvlSdt.getlabel": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oBlockLvlSdt = Api.CreateBlockLvlSdt();\noBlockLvlSdt.GetContent().GetElement(0).AddText(\"This is a block text content control with a label set to it.\");\noBlockLvlSdt.SetLabel(\"2147483647\");\noDocument.AddElement(0, oBlockLvlSdt);\nvar oLabel = oBlockLvlSdt.GetLabel();\nvar oParagraph = oDocument.GetElement(1);\noParagraph.AddText(\"Label: \" + oLabel);\nbuilder.SaveFile(\"docx\", \"GetLabel.docx\");\nbuilder.CloseFile();"
		},
		"ApiBlockLvlSdt.getlock": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oBlockLvlSdt = Api.CreateBlockLvlSdt();\noBlockLvlSdt.GetContent().GetElement(0).AddText(\"This is a block text content control with the content lock set to it.\");\noBlockLvlSdt.SetLock(\"sdtContentLocked\");\noDocument.AddElement(0, oBlockLvlSdt);\nvar oLock = oBlockLvlSdt.GetLock();\nvar oParagraph = oDocument.GetElement(1);\noParagraph.AddText(\"Lock type: \" + oLock);\nbuilder.SaveFile(\"docx\", \"GetLock.docx\");\nbuilder.CloseFile();"
		},
		"ApiBlockLvlSdt.getparentcontentcontrol": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oBlockLvlSdt1 = Api.CreateBlockLvlSdt();\noBlockLvlSdt1.GetContent().GetElement(0).AddText(\"This is a parent block text content control.\");\noDocument.AddElement(0, oBlockLvlSdt1);\nvar oBlockLvlSdt2 = Api.CreateBlockLvlSdt();\noBlockLvlSdt2.GetContent().GetElement(0).AddText(\"This is a block text content control added in another content control.\");\noBlockLvlSdt1.AddElement(oBlockLvlSdt2, 0);\nvar oParentBlockLvlSdt = oBlockLvlSdt2.GetParentContentControl();\noParentBlockLvlSdt.SetAlias(\"â„–1\");\nbuilder.SaveFile(\"docx\", \"GetParentContentControl.docx\");\nbuilder.CloseFile();"
		},
		"ApiBlockLvlSdt.getparenttable": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nvar oBlockLvlSdt = Api.CreateBlockLvlSdt();\noBlockLvlSdt.GetContent().GetElement(0).AddText(\"This is a block text content control.\");\nvar oCell = oTable.GetRow(0).GetCell(0);\noCell.AddElement(0, oBlockLvlSdt);\nvar oParentTable = oBlockLvlSdt.GetParentTable();\noCell = oParentTable.GetRow(2).GetCell(0);\noParentTable.RemoveRow(oCell);\nbuilder.SaveFile(\"docx\", \"GetParentTable.docx\");\nbuilder.CloseFile();"
		},
		"ApiBlockLvlSdt.getparenttablecell": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nvar oBlockLvlSdt = Api.CreateBlockLvlSdt();\noBlockLvlSdt.GetContent().GetElement(0).AddText(\"This is a block text content control.\");\nvar oCell = oTable.GetRow(0).GetCell(0);\noCell.AddElement(0, oBlockLvlSdt);\nvar oParentTableCell = oBlockLvlSdt.GetParentTableCell();\noParentTableCell.SetCellBorderTop(\"single\", 32, 0, 0, 0, 255);\nbuilder.SaveFile(\"docx\", \"GetParentTableCell.docx\");\nbuilder.CloseFile();"
		},
		"ApiBlockLvlSdt.getplaceholdertext": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oBlockLvlSdt = Api.CreateBlockLvlSdt();\noDocument.AddElement(0, oBlockLvlSdt);\noBlockLvlSdt.SetPlaceholderText(\"Name\");\nvar sText = oBlockLvlSdt.GetPlaceholderText();\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Placeholder text: \" + sText);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetPlaceholderText.docx\");\nbuilder.CloseFile();"
		},
		"ApiBlockLvlSdt.getrange": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oBlockLvlSdt = Api.CreateBlockLvlSdt();\noBlockLvlSdt.GetContent().GetElement(0).AddText(\"This is a block text content control.\");\noDocument.AddElement(0, oBlockLvlSdt);\nvar oRange = oBlockLvlSdt.GetRange(10, 14);\noRange.SetBold(true);\nbuilder.SaveFile(\"docx\", \"GetRange.docx\");\nbuilder.CloseFile();"
		},
		"ApiBlockLvlSdt.gettag": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oBlockLvlSdt = Api.CreateBlockLvlSdt();\noBlockLvlSdt.GetContent().GetElement(0).AddText(\"This is a block text content control with a tag set to it.\");\noBlockLvlSdt.SetTag(\"This is a tag.\");\noDocument.AddElement(0, oBlockLvlSdt);\nvar oTag = oBlockLvlSdt.GetTag();\nvar oParagraph = oDocument.GetElement(1);\noParagraph.AddText(\"Tag: \" + oTag);\nbuilder.SaveFile(\"docx\", \"GetTag.docx\");\nbuilder.CloseFile();"
		},
		"ApiBlockLvlSdt.push": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oBlockLvlSdt = Api.CreateBlockLvlSdt();\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a block text content control.\");\noBlockLvlSdt.Push(oParagraph);\noDocument.AddElement(0, oBlockLvlSdt);\nbuilder.SaveFile(\"docx\", \"Push.docx\");\nbuilder.CloseFile();"
		},
		"ApiBlockLvlSdt.removeallelements": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oBlockLvlSdt = Api.CreateBlockLvlSdt();\noBlockLvlSdt.GetContent().GetElement(0).AddText(\"This is a block text content control.\");\noDocument.AddElement(0, oBlockLvlSdt);\noBlockLvlSdt.RemoveAllElements();\nvar oParagraph = oDocument.GetElement(1);\noParagraph.AddText(\"All elements were removed from the content control.\");\nbuilder.SaveFile(\"docx\", \"RemoveAllElements.docx\");\nbuilder.CloseFile();"
		},
		"ApiBlockLvlSdt.search": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oBlockLvlSdt = Api.CreateBlockLvlSdt();\nvar oParagraph1 = Api.CreateParagraph();\noParagraph1.AddText(\"This is the first paragraph in the content control.\");\noBlockLvlSdt.AddElement(oParagraph1, 0);\nvar oParagraph2 = Api.CreateParagraph();\noParagraph2.AddText(\"This is the second paragraph in the content control.\");\noBlockLvlSdt.AddElement(oParagraph2, 1);\noDocument.AddElement(0, oBlockLvlSdt);\noBlockLvlSdt.Search(\"paragraph\")[1].SetBold(true);\nbuilder.SaveFile(\"docx\", \"Search.docx\");\nbuilder.CloseFile();"
		},
		"ApiBlockLvlSdt.select": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oBlockLvlSdt = Api.CreateBlockLvlSdt();\noBlockLvlSdt.GetContent().GetElement(0).AddText(\"The block text content control is selected.\");\noDocument.AddElement(0, oBlockLvlSdt);\noBlockLvlSdt.Select();\nbuilder.SaveFile(\"docx\", \"Select.docx\");\nbuilder.CloseFile();"
		},
		"ApiBlockLvlSdt.setalias": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oBlockLvlSdt = Api.CreateBlockLvlSdt();\noBlockLvlSdt.GetContent().GetElement(0).AddText(\"This is a block text content control with alias 'â„–1'.\");\noBlockLvlSdt.SetAlias(\"â„–1\");\noDocument.AddElement(0, oBlockLvlSdt);\nvar oAlias = oBlockLvlSdt.GetAlias();\nvar oParagraph = oDocument.GetElement(1);\noParagraph.AddText(\"Alias: \" + oAlias);\nbuilder.SaveFile(\"docx\", \"SetAlias.docx\");\nbuilder.CloseFile();"
		},
		"ApiBlockLvlSdt.setlabel": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oBlockLvlSdt = Api.CreateBlockLvlSdt();\noBlockLvlSdt.GetContent().GetElement(0).AddText(\"This is a block text content control with a label set to it.\");\noBlockLvlSdt.SetLabel(\"2147483647\");\noDocument.AddElement(0, oBlockLvlSdt);\nvar oLabel = oBlockLvlSdt.GetLabel();\nvar oParagraph = oDocument.GetElement(1);\noParagraph.AddText(\"Label: \" + oLabel);\nbuilder.SaveFile(\"docx\", \"SetLabel.docx\");\nbuilder.CloseFile();"
		},
		"ApiBlockLvlSdt.setlock": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oBlockLvlSdt = Api.CreateBlockLvlSdt();\noBlockLvlSdt.GetContent().GetElement(0).AddText(\"This is a block text content control with the content lock set to it.\");\noBlockLvlSdt.SetLock(\"sdtContentLocked\");\noDocument.AddElement(0, oBlockLvlSdt);\nvar oLock = oBlockLvlSdt.GetLock();\nvar oParagraph = oDocument.GetElement(1);\noParagraph.AddText(\"Lock type: \" + oLock);\nbuilder.SaveFile(\"docx\", \"SetLock.docx\");\nbuilder.CloseFile();"
		},
		"ApiBlockLvlSdt.setplaceholdertext": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oBlockLvlSdt = Api.CreateBlockLvlSdt();\noDocument.AddElement(0, oBlockLvlSdt);\noBlockLvlSdt.SetPlaceholderText(\"Name\");\nbuilder.SaveFile(\"docx\", \"SetPlaceholderText.docx\");\nbuilder.CloseFile();"
		},
		"ApiBlockLvlSdt.settag": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oBlockLvlSdt = Api.CreateBlockLvlSdt();\noBlockLvlSdt.GetContent().GetElement(0).AddText(\"This is a block text content control with a tag set to it.\");\noBlockLvlSdt.SetTag(\"This is a tag.\");\noDocument.AddElement(0, oBlockLvlSdt);\nvar oTag = oBlockLvlSdt.GetTag();\nvar oParagraph = oDocument.GetElement(1);\noParagraph.AddText(\"Tag: \" + oTag);\nbuilder.SaveFile(\"docx\", \"SetTag.docx\");\nbuilder.CloseFile();"
		},
		"ApiBlockLvlSdt.settextpr": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oBlockLvlSdt = Api.CreateBlockLvlSdt();\noBlockLvlSdt.GetContent().GetElement(0).AddText(\"This is a block text content control with the font size set to 30 and the font weight set to bold.\");\noDocument.AddElement(0, oBlockLvlSdt);\nvar oTextPr = oDocument.GetDefaultTextPr();\noTextPr.SetFontSize(30);\noTextPr.SetBold(true);\noBlockLvlSdt.SetTextPr(oTextPr);\nbuilder.SaveFile(\"docx\", \"SetTextPr.docx\");\nbuilder.CloseFile();"
		},
		"ApiChart.getclasstype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oDrawing = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noDrawing.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noDrawing.SetHorAxisTitle(\"Year\", 11);\noDrawing.SetLegendPos(\"bottom\");\noDrawing.SetShowDataLabels(false, false, true, false);\noDrawing.SetTitle(\"Financial Overview\", 13);\noParagraph.AddDrawing(oDrawing);\nvar sClassType = oDrawing.GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class Type = \" + sClassType);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetClassType.docx\");\nbuilder.CloseFile();"
		},
		"ApiChart.getnextchart": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oChart = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetLegendPos(\"bottom\");\noChart.SetShowDataLabels(false, false, true, false);\noChart.SetTitle(\"Financial Overview\", 13);\noParagraph.AddDrawing(oChart);\nvar oCopyChart = oChart.Copy();\noParagraph.AddDrawing(oCopyChart);\nvar oNextChart = oChart.GetNextChart();\nvar oStroke = Api.CreateStroke(1 * 150, Api.CreateSolidFill(Api.CreateRGBColor(155, 64, 1)));\noNextChart.SetMinorHorizontalGridlines(oStroke);\nbuilder.SaveFile(\"docx\", \"GetNextChart.docx\");\nbuilder.CloseFile();"
		},
		"ApiChart.getprevchart": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oChart = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetLegendPos(\"bottom\");\noChart.SetShowDataLabels(false, false, true, false);\noChart.SetTitle(\"Financial Overview\", 13);\noParagraph.AddDrawing(oChart);\nvar oCopyChart = oChart.Copy();\noParagraph.AddDrawing(oCopyChart);\nvar oPrevChart = oCopyChart.GetPrevChart();\nvar oStroke = Api.CreateStroke(1 * 150, Api.CreateSolidFill(Api.CreateRGBColor(155, 64, 1)));\noPrevChart.SetMinorHorizontalGridlines(oStroke);\nbuilder.SaveFile(\"docx\", \"GetPrevChart.docx\");\nbuilder.CloseFile();"
		},
		"ApiChart.sethoraxislablesfontsize": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oDrawing = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noDrawing.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noDrawing.SetHorAxisTitle(\"Year\", 11);\noDrawing.SetHorAxisLablesFontSize(8);\noDrawing.SetTitle(\"Financial Overview\", 13);\noParagraph.AddDrawing(oDrawing);\nbuilder.SaveFile(\"docx\", \"SetHorAxisLablesFontSize.docx\");\nbuilder.CloseFile();"
		},
		"ApiChart.sethoraxismajortickmark": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oDrawing = Api.CreateChart(\"scatter\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noDrawing.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noDrawing.SetHorAxisTitle(\"Year\", 11);\noDrawing.SetHorAxisMajorTickMark(\"cross\");\noDrawing.SetTitle(\"Financial Overview\", 13);\noParagraph.AddDrawing(oDrawing);\nbuilder.SaveFile(\"docx\", \"SetHorAxisMajorTickMark.docx\");\nbuilder.CloseFile();"
		},
		"ApiChart.sethoraxisminortickmark": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oDrawing = Api.CreateChart(\"scatter\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noDrawing.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noDrawing.SetHorAxisTitle(\"Year\", 11);\noDrawing.SetHorAxisMinorTickMark(\"out\");\noDrawing.SetTitle(\"Financial Overview\", 13);\noParagraph.AddDrawing(oDrawing);\nbuilder.SaveFile(\"docx\", \"SetHorAxisMinorTickMark.docx\");\nbuilder.CloseFile();"
		},
		"ApiChart.sethoraxisorientation": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oDrawing = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noDrawing.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noDrawing.SetHorAxisTitle(\"Year\", 11);\noDrawing.SetHorAxisOrientation(false);\noDrawing.SetTitle(\"Financial Overview\", 13);\noParagraph.AddDrawing(oDrawing);\nbuilder.SaveFile(\"docx\", \"SetHorAxisOrientation.docx\");\nbuilder.CloseFile();"
		},
		"ApiChart.sethoraxisticklabelposition": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oDrawing = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noDrawing.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noDrawing.SetHorAxisTitle(\"Year\", 11);\noDrawing.SetHorAxisTickLabelPosition(\"high\");\noDrawing.SetTitle(\"Financial Overview\", 13);\noParagraph.AddDrawing(oDrawing);\nbuilder.SaveFile(\"docx\", \"SetHorAxisTickLabelPosition.docx\");\nbuilder.CloseFile();"
		},
		"ApiChart.sethoraxistitle": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oDrawing = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noDrawing.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noDrawing.SetHorAxisTitle(\"Year\", 11);\noDrawing.SetLegendPos(\"bottom\");\noDrawing.SetShowDataLabels(false, false, true, false);\noDrawing.SetTitle(\"Financial Overview\", 13);\noParagraph.AddDrawing(oDrawing);\nbuilder.SaveFile(\"docx\", \"SetHorAxisTitle.docx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setlegendfontsize": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oDrawing = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noDrawing.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noDrawing.SetHorAxisTitle(\"Year\", 11);\noDrawing.SetLegendFontSize(12);\noDrawing.SetTitle(\"Financial Overview\", 13);\noParagraph.AddDrawing(oDrawing);\nbuilder.SaveFile(\"docx\", \"SetLegendFontSize.docx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setlegendpos": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oDrawing = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noDrawing.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noDrawing.SetHorAxisTitle(\"Year\", 11);\noDrawing.SetLegendPos(\"bottom\");\noDrawing.SetShowDataLabels(false, false, true, false);\noDrawing.SetTitle(\"Financial Overview\", 13);\noParagraph.AddDrawing(oDrawing);\nbuilder.SaveFile(\"docx\", \"SetLegendPos.docx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setmajorhorizontalgridlines": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oDrawing = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noDrawing.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noDrawing.SetHorAxisTitle(\"Year\", 11);\nvar oStroke = Api.CreateStroke(1 * 15000, Api.CreateSolidFill(Api.CreateRGBColor(155, 64, 1)));\noDrawing.SetMajorHorizontalGridlines(oStroke);\noDrawing.SetTitle(\"Financial Overview\", 13);\noParagraph.AddDrawing(oDrawing);\nbuilder.SaveFile(\"docx\", \"SetMajorHorizontalGridlines.docx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setmajorverticalgridlines": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oDrawing = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noDrawing.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noDrawing.SetHorAxisTitle(\"Year\", 11);\nvar oStroke = Api.CreateStroke(1 * 15000, Api.CreateSolidFill(Api.CreateRGBColor(155, 64, 1)));\noDrawing.SetMajorVerticalGridlines(oStroke);\noDrawing.SetTitle(\"Financial Overview\", 13);\noParagraph.AddDrawing(oDrawing);\nbuilder.SaveFile(\"docx\", \"SetMajorVerticalGridlines.docx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setminorhorizontalgridlines": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oDrawing = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noDrawing.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noDrawing.SetHorAxisTitle(\"Year\", 11);\nvar oStroke = Api.CreateStroke(1 * 150, Api.CreateSolidFill(Api.CreateRGBColor(155, 64, 1)));\noDrawing.SetMinorHorizontalGridlines(oStroke);\noDrawing.SetTitle(\"Financial Overview\", 13);\noParagraph.AddDrawing(oDrawing);\nbuilder.SaveFile(\"docx\", \"SetMinorHorizontalGridlines.docx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setminorverticalgridlines": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oDrawing = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noDrawing.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noDrawing.SetHorAxisTitle(\"Year\", 11);\nvar oStroke = Api.CreateStroke(1 * 10000, Api.CreateSolidFill(Api.CreateRGBColor(155, 64, 1)));\noDrawing.SetMinorVerticalGridlines(oStroke);\noDrawing.SetTitle(\"Financial Overview\", 13);\noParagraph.AddDrawing(oDrawing);\nbuilder.SaveFile(\"docx\", \"SetMinorVerticalGridlines.docx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setshowdatalabels": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oDrawing = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noDrawing.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noDrawing.SetHorAxisTitle(\"Year\", 11);\noDrawing.SetLegendPos(\"bottom\");\noDrawing.SetShowDataLabels(false, false, true, false);\noDrawing.SetTitle(\"Financial Overview\", 13);\noParagraph.AddDrawing(oDrawing);\nbuilder.SaveFile(\"docx\", \"SetShowDataLabels.docx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setshowpointdatalabel": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oDrawing = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noDrawing.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noDrawing.SetHorAxisTitle(\"Year\", 11);\noDrawing.SetShowPointDataLabel(1, 0, false, false, true, false);\noDrawing.SetTitle(\"Financial Overview\", 13);\noParagraph.AddDrawing(oDrawing);\nbuilder.SaveFile(\"docx\", \"SetShowPointDataLabel.docx\");\nbuilder.CloseFile();"
		},
		"ApiChart.settitle": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oDrawing = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noDrawing.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noDrawing.SetHorAxisTitle(\"Year\", 11);\noDrawing.SetLegendPos(\"bottom\");\noDrawing.SetShowDataLabels(false, false, true, false);\noDrawing.SetTitle(\"Financial Overview\", 13);\noParagraph.AddDrawing(oDrawing);\nbuilder.SaveFile(\"docx\", \"SetTitle.docx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setveraxisorientation": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oDrawing = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noDrawing.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noDrawing.SetHorAxisTitle(\"Year\", 11);\noDrawing.SetVerAxisOrientation(false);\noDrawing.SetTitle(\"Financial Overview\", 13);\noParagraph.AddDrawing(oDrawing);\nbuilder.SaveFile(\"docx\", \"SetVerAxisOrientation.docx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setveraxistitle": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oDrawing = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noDrawing.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noDrawing.SetHorAxisTitle(\"Year\", 11);\noDrawing.SetLegendPos(\"bottom\");\noDrawing.SetShowDataLabels(false, false, true, false);\noDrawing.SetTitle(\"Financial Overview\", 13);\noParagraph.AddDrawing(oDrawing);\nbuilder.SaveFile(\"docx\", \"SetVerAxisTitle.docx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setvertaxislablesfontsize": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oDrawing = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noDrawing.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noDrawing.SetHorAxisTitle(\"Year\", 11);\noDrawing.SetVertAxisLablesFontSize(8);\noDrawing.SetTitle(\"Financial Overview\", 13);\noParagraph.AddDrawing(oDrawing);\nbuilder.SaveFile(\"docx\", \"SetVertAxisLablesFontSize.docx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setvertaxismajortickmark": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oDrawing = Api.CreateChart(\"scatter\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noDrawing.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noDrawing.SetHorAxisTitle(\"Year\", 11);\noDrawing.SetVertAxisMajorTickMark(\"cross\");\noDrawing.SetTitle(\"Financial Overview\", 13);\noParagraph.AddDrawing(oDrawing);\nbuilder.SaveFile(\"docx\", \"SetVertAxisMajorTickMark.docx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setvertaxisminortickmark": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oDrawing = Api.CreateChart(\"scatter\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noDrawing.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noDrawing.SetHorAxisTitle(\"Year\", 11);\noDrawing.SetVertAxisMinorTickMark(\"out\");\noDrawing.SetTitle(\"Financial Overview\", 13);\noParagraph.AddDrawing(oDrawing);\nbuilder.SaveFile(\"docx\", \"SetVertAxisMinorTickMark.docx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setvertaxisticklabelposition": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oDrawing = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noDrawing.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noDrawing.SetHorAxisTitle(\"Year\", 11);\noDrawing.SetVertAxisTickLabelPosition(\"high\");\noDrawing.SetTitle(\"Financial Overview\", 13);\noParagraph.AddDrawing(oDrawing);\nbuilder.SaveFile(\"docx\", \"SetVertAxisTickLabelPosition.docx\");\nbuilder.CloseFile();"
		},
		"ApiCheckBoxForm.clear": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oCheckBoxForm = Api.CreateCheckBoxForm({\"tip\": \"Specify your marital status\", \"required\": true, \"placeholder\": \"Marital status\", \"radio\": true});\noCheckBoxForm.SetRadioGroup(\"Marital status\");\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oCheckBoxForm);\noParagraph.AddText(\" Married\");\noParagraph.AddLineBreak();\noCheckBoxForm = Api.CreateCheckBoxForm({\"tip\": \"Specify your marital status\", \"required\": true, \"placeholder\": \"Marital status\", \"radio\": true});\noCheckBoxForm.SetRadioGroup(\"Marital status\");\noParagraph.AddElement(oCheckBoxForm);\noParagraph.AddText(\" Single\");\noCheckBoxForm.SetChecked(true);\noCheckBoxForm.Clear();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The second form from this document was cleared.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"Clear.docx\");\nbuilder.CloseFile();"
		},
		"ApiCheckBoxForm.getclasstype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oCheckBoxForm = Api.CreateCheckBoxForm({\"tip\": \"Specify your marital status\", \"required\": true, \"placeholder\": \"Marital status\", \"radio\": true});\noCheckBoxForm.SetRadioGroup(\"Marital status\");\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oCheckBoxForm);\noParagraph.AddText(\" Married\");\noParagraph.AddLineBreak();\noCheckBoxForm = Api.CreateCheckBoxForm({\"tip\": \"Specify your marital status\", \"required\": true, \"placeholder\": \"Marital status\", \"radio\": true});\noCheckBoxForm.SetRadioGroup(\"Marital status\");\noParagraph.AddElement(oCheckBoxForm);\noParagraph.AddText(\" Single\");\nvar sClassType = oCheckBoxForm.GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class type: \" + sClassType);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetClassType.docx\");\nbuilder.CloseFile();"
		},
		"ApiCheckBoxForm.getformkey": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oCheckBoxForm = Api.CreateCheckBoxForm({\"tip\": \"Specify your marital status\", \"required\": true, \"placeholder\": \"Marital status\", \"radio\": true});\noCheckBoxForm.SetRadioGroup(\"Marital status\");\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oCheckBoxForm);\noParagraph.AddText(\" Married\");\noParagraph.AddLineBreak();\noCheckBoxForm = Api.CreateCheckBoxForm({\"tip\": \"Specify your marital status\", \"required\": true, \"placeholder\": \"Marital status\", \"radio\": true});\noCheckBoxForm.SetRadioGroup(\"Marital status\");\noParagraph.AddElement(oCheckBoxForm);\noParagraph.AddText(\" Single\");\nvar sKey = oCheckBoxForm.GetFormKey();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Form key: \" + sKey);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetFormKey.docx\");\nbuilder.CloseFile();"
		},
		"ApiCheckBoxForm.getformtype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oCheckBoxForm = Api.CreateCheckBoxForm({\"tip\": \"Specify your marital status\", \"required\": true, \"placeholder\": \"Marital status\", \"radio\": true});\noCheckBoxForm.SetRadioGroup(\"Marital status\");\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oCheckBoxForm);\noParagraph.AddText(\" Married\");\noParagraph.AddLineBreak();\noCheckBoxForm = Api.CreateCheckBoxForm({\"tip\": \"Specify your marital status\", \"required\": true, \"placeholder\": \"Marital status\", \"radio\": true});\noCheckBoxForm.SetRadioGroup(\"Marital status\");\noParagraph.AddElement(oCheckBoxForm);\noParagraph.AddText(\" Single\");\nvar sFormType = oCheckBoxForm.GetFormType();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Form type: \" + sFormType);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetFormType.docx\");\nbuilder.CloseFile();"
		},
		"ApiCheckBoxForm.getradiogroup": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oCheckBoxForm = Api.CreateCheckBoxForm({\"tip\": \"Specify your marital status\", \"required\": true, \"placeholder\": \"Marital status\", \"radio\": true});\noCheckBoxForm.SetRadioGroup(\"Marital status\");\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oCheckBoxForm);\noParagraph.AddText(\" Married\");\noParagraph.AddLineBreak();\noCheckBoxForm = Api.CreateCheckBoxForm({\"tip\": \"Specify your marital status\", \"required\": true, \"placeholder\": \"Marital status\", \"radio\": true});\noCheckBoxForm.SetRadioGroup(\"Marital status\");\noParagraph.AddElement(oCheckBoxForm);\noParagraph.AddText(\" Single\");\nvar sRadioGroup = oCheckBoxForm.GetRadioGroup();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Radio group name of the radio buttons in this document: \" + sRadioGroup);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetRadioGroup.docx\");\nbuilder.CloseFile();"
		},
		"ApiCheckBoxForm.ischecked": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oCheckBoxForm = Api.CreateCheckBoxForm({\"key\": \"Marital status\", \"tip\": \"Specify your marital status\", \"required\": true, \"placeholder\": \"Marital status\", \"radio\": true});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oCheckBoxForm);\noParagraph.AddText(\" Married\");\noParagraph.AddLineBreak();\noCheckBoxForm = Api.CreateCheckBoxForm({\"key\": \"Marital status\", \"tip\": \"Specify your marital status\", \"required\": true, \"placeholder\": \"Marital status\", \"radio\": true});\noParagraph.AddElement(oCheckBoxForm);\noParagraph.AddText(\" Single\");\noCheckBoxForm.SetChecked(true);\nvar bChecked = oCheckBoxForm.IsChecked();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The second checkbox from this document is checked: \" + bChecked);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"IsChecked.docx\");\nbuilder.CloseFile();"
		},
		"ApiCheckBoxForm.isradiobutton": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oCheckBoxForm = Api.CreateCheckBoxForm({\"key\": \"Marital status\", \"tip\": \"Specify your marital status\", \"required\": true, \"placeholder\": \"Marital status\", \"radio\": true});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oCheckBoxForm);\noParagraph.AddText(\" Married\");\noParagraph.AddLineBreak();\noCheckBoxForm = Api.CreateCheckBoxForm({\"key\": \"Marital status\", \"tip\": \"Specify your marital status\", \"required\": true, \"placeholder\": \"Marital status\", \"radio\": true});\noParagraph.AddElement(oCheckBoxForm);\noParagraph.AddText(\" Single\");\nvar bRadioButton = oCheckBoxForm.IsRadioButton();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The second checkbox from this document is a radio button: \" + bRadioButton);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"IsRadioButton.docx\");\nbuilder.CloseFile();"
		},
		"ApiCheckBoxForm.setchecked": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oCheckBoxForm = Api.CreateCheckBoxForm({\"key\": \"Marital status\", \"tip\": \"Specify your marital status\", \"required\": true, \"placeholder\": \"Marital status\", \"radio\": true});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oCheckBoxForm);\noParagraph.AddText(\" Married\");\noParagraph.AddLineBreak();\noCheckBoxForm = Api.CreateCheckBoxForm({\"key\": \"Marital status\", \"tip\": \"Specify your marital status\", \"required\": true, \"placeholder\": \"Marital status\", \"radio\": true});\noParagraph.AddElement(oCheckBoxForm);\noParagraph.AddText(\" Single\");\noCheckBoxForm.SetChecked(true);\nbuilder.SaveFile(\"docx\", \"SetChecked.docx\");\nbuilder.CloseFile();"
		},
		"ApiCheckBoxForm.setradiogroup": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oCheckBoxForm = Api.CreateCheckBoxForm({\"tip\": \"Specify your marital status\", \"required\": true, \"placeholder\": \"Marital status\", \"radio\": true});\noCheckBoxForm.SetRadioGroup(\"Marital status\");\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oCheckBoxForm);\noParagraph.AddText(\" Married\");\noParagraph.AddLineBreak();\noCheckBoxForm = Api.CreateCheckBoxForm({\"tip\": \"Specify your marital status\", \"required\": true, \"placeholder\": \"Marital status\", \"radio\": true});\noCheckBoxForm.SetRadioGroup(\"Marital status\");\noParagraph.AddElement(oCheckBoxForm);\noParagraph.AddText(\" Single\");\nvar sRadioGroup = oCheckBoxForm.GetRadioGroup();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Radio group name of the radio buttons in this document: \" + sRadioGroup);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetRadioGroup.docx\");\nbuilder.CloseFile();"
		},
		"ApiComboBoxForm.getlistvalues": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oComboBoxForm = Api.CreateComboBoxForm({\"key\": \"Personal information\", \"tip\": \"Choose your country\", \"required\": true, \"placeholder\": \"Country\", \"editable\": false, \"autoFit\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oComboBoxForm);\noComboBoxForm.SetListValues([\"Latvia\", \"USA\", \"UK\"]);\nvar aListValues = oComboBoxForm.GetListValues();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Combo box list values: \");\noParagraph.AddLineBreak();\nfor (let i = 0; i < aListValues.length; i++ ){\n    oParagraph.AddText(aListValues[i]);\n    oParagraph.AddLineBreak();\n}\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetListValues.docx\");\nbuilder.CloseFile();"
		},
		"ApiComboBoxForm.iseditable": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oComboBoxForm = Api.CreateComboBoxForm({\"key\": \"Personal information\", \"tip\": \"Choose your country\", \"required\": true, \"placeholder\": \"Country\", \"editable\": false, \"autoFit\": false, \"items\": [\"Latvia\", \"USA\", \"UK\"]});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oComboBoxForm);\nvar bEdit = oComboBoxForm.IsEditable();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The first combo box from this document is editable: \" + bEdit);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"IsEditable.docx\");\nbuilder.CloseFile();"
		},
		"ApiComboBoxForm.selectlistvalue": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oComboBoxForm = Api.CreateComboBoxForm({\"key\": \"Personal information\", \"tip\": \"Choose your country\", \"required\": true, \"placeholder\": \"Country\", \"editable\": false, \"autoFit\": false, \"items\": [\"Latvia\", \"USA\", \"UK\"]});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oComboBoxForm);\noComboBoxForm.SelectListValue(\"USA\");\nbuilder.SaveFile(\"docx\", \"SelectListValue.docx\");\nbuilder.CloseFile();"
		},
		"ApiComboBoxForm.setlistvalues": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oComboBoxForm = Api.CreateComboBoxForm({\"key\": \"Personal information\", \"tip\": \"Choose your country\", \"required\": true, \"placeholder\": \"Country\", \"editable\": false, \"autoFit\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oComboBoxForm);\noComboBoxForm.SetListValues([\"Latvia\", \"USA\", \"UK\"]);\nbuilder.SaveFile(\"docx\", \"SetListValues.docx\");\nbuilder.CloseFile();"
		},
		"ApiComboBoxForm.settext": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oComboBoxForm = Api.CreateComboBoxForm({\"key\": \"Personal information\", \"tip\": \"Choose your country\", \"required\": true, \"placeholder\": \"Country\", \"editable\": true, \"autoFit\": false, \"items\": [\"Latvia\", \"USA\", \"UK\"]});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oComboBoxForm);\noComboBoxForm.SetText(\"France\");\nbuilder.SaveFile(\"docx\", \"SetText.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.acceptallrevisionchanges": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph1 = oDocument.GetElement(0);\noDocument.SetTrackRevisions(true);\noParagraph1.AddText(\"Reviewing documents\");\noParagraph1.SetJc(\"center\");\noParagraph1.SetFontSize(24);\noParagraph1.SetBold(true);\nvar oParagraph2 = Api.CreateParagraph();\noParagraph2.AddText(\"If you need to get review report, you can use Document Builder. The steps below will show how to do it.\");\noDocument.Push(oParagraph2);\noDocument.AcceptAllRevisionChanges();\noDocument.SetTrackRevisions(false);\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"All revision changes in this document were accepted.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"AcceptAllRevisionChanges.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.addcomment": {
			"script": "builder.CreateFile(\"docx\"); \nvar oDocument = Api.GetDocument(); \nvar oParagraph = oDocument.GetElement(0); \noParagraph.AddText(\"This is just a sample text.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"The comment was added to this document.\");\noDocument.AddComment(\"This is a comment to the document.\", \"Jane\");\nbuilder.SaveFile(\"docx\",  \"AddComment.docx\"); \nbuilder.CloseFile();"
		},
		"ApiDocument.addelement": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = Api.CreateParagraph();\nvar oRun = Api.CreateRun();\noRun.AddText(\"Number of paragraph elements at this point: \");\noRun.AddTabStop();\noRun.AddText(\"\" + oParagraph.GetElementsCount());\noRun.AddLineBreak();\noParagraph.AddElement(oRun);\noRun.AddText(\"Number of paragraph elements after we added a text run: \");\noRun.AddTabStop();\noRun.AddText(\"\" + oParagraph.GetElementsCount());\noDocument.AddElement(0, oParagraph);\nbuilder.SaveFile(\"docx\", \"AddElement.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.clearallfields": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oInlineLvlSdt = Api.CreateInlineLvlSdt();\noParagraph.AddInlineLvlSdt(oInlineLvlSdt);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is an inline text content control.\");\noInlineLvlSdt.AddElement(oRun, 0);\nvar oTextForm = Api.CreateTextForm({\"key\": \"Personal information\", \"tip\": \"Enter your first name\", \"required\": true, \"placeholder\": \"First name\", \"comb\": true, \"maxCharacters\": 10, \"cellWidth\": 3, \"multiLine\": false, \"autoFit\": false});\noParagraph.AddLineBreak();\noParagraph.AddElement(oTextForm);\noDocument.ClearAllFields();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"All fields from this document were just cleared.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"ClearAllFields.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.clearallforms": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextForm = Api.CreateTextForm({\"key\": \"Personal information\", \"tip\": \"Enter your first name\", \"required\": true, \"placeholder\": \"First name\", \"comb\": true, \"maxCharacters\": 10, \"cellWidth\": 3, \"multiLine\": false, \"autoFit\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oTextForm);\nvar oComboBoxForm = Api.CreateComboBoxForm({\"key\": \"Personal information\", \"tip\": \"Choose your country\", \"required\": true, \"placeholder\": \"Country\", \"editable\": false, \"autoFit\": false, \"items\": [\"Latvia\", \"USA\", \"UK\"]});\noParagraph.AddLineBreak();\noParagraph.AddElement(oComboBoxForm);\nvar aForms = oDocument.GetAllForms();\naForms[0].SetText(\"John Smith\");\naForms[1].SelectListValue(\"USA\");\noDocument.ClearAllForms();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"All forms from this document were just cleared.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"ClearAllForms.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.createnewhistorypoint": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a sample text.\");\noDocument.CreateNewHistoryPoint();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"New history point was just created.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"CreateNewHistoryPoint.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.createnumbering": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oNumbering = oDocument.CreateNumbering(\"bullet\");\nfor (let nLvl = 0; nLvl < 8; ++nLvl) {\n  var oNumLvl = oNumbering.GetLevel(nLvl);\n  var oParagraph = Api.CreateParagraph();\n  oParagraph.AddText(\"Default numbered lvl \" + (nLvl + 1));\n  oParagraph.SetNumbering(oNumLvl);\n  oParagraph.SetContextualSpacing(true);\n  oDocument.Push(oParagraph);\n}\nbuilder.SaveFile(\"docx\", \"CreateNumbering.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.createsection": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a new paragraph.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"Scroll down to see the new section.\");\nvar oSection = oDocument.CreateSection(oParagraph);\noSection.SetEqualColumns(1, 720);\noSection.SetPageSize(12240, 15840);\noSection.SetPageMargins(1440, 1440, 1440, 1440);\noSection.SetHeaderDistance(720);\noSection.SetFooterDistance(576);\noParagraph = Api.CreateParagraph();\noParagraph.SetSpacingBefore(100, true);\noParagraph.SetSpacingAfter(360);\noParagraph.AddText(\"This is a paragraph in a new section\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"CreateSection.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.createstyle": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oHeading1Style = oDocument.CreateStyle(\"Heading 1\", \"paragraph\");\nvar oParaPr = oHeading1Style.GetParaPr();\noParaPr.SetKeepNext(true);\noParaPr.SetKeepLines(true);\noParaPr.SetSpacingAfter(240);\nvar oTextPr = oHeading1Style.GetTextPr();\noTextPr.SetColor(0xff, 0x68, 0x00, false);\noTextPr.SetFontSize(40);\noTextPr.SetFontFamily(\"Calibri Light\");\nvar oParagraph = oDocument.GetElement(0);\noParagraph.SetStyle(oHeading1Style);\noParagraph.AddText(\"This is a heading with a style created above\");\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is just a text.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetStyle.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.deletebookmark": {
			"script": "builder.CreateFile( \"docx \"); \nvar oDocument = Api.GetDocument(); \nvar oParagraph = oDocument.GetElement(0); \noParagraph.AddText( \"ONLYOFFICE Document Builder \"); \nvar oRange = oDocument.GetRange(0, 9); \noRange.AddBookmark( \"Bookmark\"); \noDocument.DeleteBookmark(\"Bookmark\");\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The bookmark was removed from this document.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile( \"docx \",  \"DeleteBookmark.docx \"); \nbuilder.CloseFile();"
		},
		"ApiDocument.getallbookmarksnames": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument(); \nvar oParagraph = oDocument.GetElement(0); \noParagraph.AddText(\"ONLYOFFICE Document Builder\"); \nvar oRange1 = oDocument.GetRange(0, 9); \noRange1.AddBookmark(\"Bookmark 1\");\nvar oRange2 = oDocument.GetRange(11, 18); \noRange2.AddBookmark(\"Bookmark 2\");\nvar aBookmarks = oDocument.GetAllBookmarksNames();\noParagraph.AddLineBreak();\noParagraph.AddText(\"Bookmark names: \");\nfor (let i = 0; i < 2; i++ ){\n    oParagraph.AddText(aBookmarks[i] + \",\" + \" \");\n}\nbuilder.SaveFile(\"docx\", \"GetAllBookmarksNames.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.getallcaptionparagraphs": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oElement = oDocument.GetElement(0);\nvar nElementCount = oElement.GetElementsCount();\nif (nElementCount == 1) {\n    var oRun = Api.CreateRun();\n    oRun.AddText(\"Add a caption to the table. To do this, select the table below, open the References tab, click Caption, change caption parameters in the opened window if you want and click OK. After that, copy the macro above (without the first and last two lines) and run it (Plugins -> Macros).\");\n    oElement.AddElement(oRun);\n    var oTable = Api.CreateTable(3, 3);\n    var oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\n    oTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\n    oTable.SetStyle(oTableStyle);\n    oTable.SetWidth(\"percent\", 100);\n    oDocument.Push(oTable);\n}\nelse {\n    var aCaptionParagraphs = oDocument.GetAllCaptionParagraphs(\"table\");\n    aCaptionParagraphs[0].SetCaps(true);\n}\nbuilder.SaveFile(\"docx\", \"GetAllCaptionParagraphs.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.getallcharts": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oChart1 = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noParagraph.AddDrawing(oChart1);\nvar oChart2 = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart2.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart2.SetHorAxisTitle(\"Year\", 11);\noChart2.SetLegendPos(\"bottom\");\noChart2.SetShowDataLabels(false, false, true, false);\noChart2.SetTitle(\"Financial Overview\", 13);\noParagraph.AddDrawing(oChart2);\nvar aCharts = oDocument.GetAllCharts();\nvar oStroke = Api.CreateStroke(1 * 150, Api.CreateSolidFill(Api.CreateRGBColor(155, 64, 1)));\naCharts[1].SetMinorHorizontalGridlines(oStroke);\nbuilder.SaveFile(\"docx\", \"GetAllCharts.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.getallcontentcontrols": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oInlineLvlSdt = Api.CreateInlineLvlSdt();\noParagraph.AddInlineLvlSdt(oInlineLvlSdt);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is an inline text content control.\");\noInlineLvlSdt.AddElement(oRun, 0);\nvar aContentControls = oDocument.GetAllContentControls();\naContentControls[0].GetElement(0).SetBold(true);\nvar sClassType = aContentControls[0].GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class type: \" + sClassType);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetAllContentControls.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.getalldrawingobjects": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing1 = Api.CreateShape(\"rect\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oDrawing1);\nvar oDrawing2 = Api.CreateChart(\"bar3D\", [\n    [200, 240, 280],\n    [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noDrawing2.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noDrawing2.SetHorAxisTitle(\"Year\", 11);\noDrawing2.SetLegendPos(\"bottom\");\noDrawing2.SetShowDataLabels(false, false, true, false);\noDrawing2.SetTitle(\"Financial Overview\", 13);\noParagraph.AddDrawing(oDrawing2);\nvar aDrawings = oDocument.GetAllDrawingObjects();\noFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\naDrawings[0].Fill(oFill);\nbuilder.SaveFile(\"docx\", \"GetAllDrawingObjects.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.getallforms": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextForm = Api.CreateTextForm({\"key\": \"Personal information\", \"tip\": \"Enter your first name\", \"required\": true, \"placeholder\": \"First name\", \"comb\": true, \"maxCharacters\": 10, \"cellWidth\": 3, \"multiLine\": false, \"autoFit\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oTextForm);\nvar oComboBoxForm = Api.CreateComboBoxForm({\"key\": \"Personal information\", \"tip\": \"Choose your country\", \"required\": true, \"placeholder\": \"Country\", \"editable\": false, \"autoFit\": false, \"items\": [\"Latvia\", \"USA\", \"UK\"]});\noParagraph.AddLineBreak();\noParagraph.AddElement(oComboBoxForm);\nvar aForms = oDocument.GetAllForms();\naForms[0].SetText(\"John Smith\");\naForms[1].SelectListValue(\"USA\");\nbuilder.SaveFile(\"docx\", \"GetAllForms.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.getallheadingparagraphs": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oNewDocumentStyle = oDocument.GetStyle(\"Heading 1\");\nvar oParagraph = oDocument.GetElement(0);\noParagraph.SetStyle(oNewDocumentStyle);\noParagraph.AddText(\"Heading 1\");\nvar aHeadingParagraphs = oDocument.GetAllHeadingParagraphs();\naHeadingParagraphs[0].SetCaps(true);\nbuilder.SaveFile(\"docx\", \"GetAllHeadingParagraphs.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.getallimages": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oImage1 = Api.CreateImage(\"https://api.onlyoffice.com/content/img/docbuilder/examples/coordinate_aspects.png\", 60 * 36000, 35 * 36000);\noParagraph.AddDrawing(oImage1);\nvar oImage2 = Api.CreateImage(\"https://api.onlyoffice.com/content/img/editor/sharing_settings.png\", 60 * 36000, 35 * 36000);\noParagraph.AddDrawing(oImage2);\nvar aImages = oDocument.GetAllImages();\nvar sClassType = aImages[0].GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class type: \" + sClassType);\noDocument.Push(oParagraph); \nbuilder.SaveFile(\"docx\", \"GetAllImages.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.getallnumberedparagraphs": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oNumbering = oDocument.CreateNumbering(\"numbered\");\nfor (let nLvl = 0; nLvl < 8; ++nLvl) {\n  var oNumLvl = oNumbering.GetLevel(nLvl);\n  var sFormatString = \"\";\n  for (let nTempLvl = 0; nTempLvl <= nLvl; ++nTempLvl) sFormatString += \"%\" + nTempLvl + \".\";\n  oNumLvl.SetCustomType(\"lowerRoman\", sFormatString, \"left\");\n  oNumLvl.SetStart(nLvl + 1);\n  oNumLvl.SetSuff(\"space\");\n  var oParagraph = Api.CreateParagraph();\n  oParagraph.AddText(\"Custom numbered lvl \" + (nLvl + 1));\n  oParagraph.SetNumbering(oNumLvl);\n  oParagraph.SetContextualSpacing(true);\n  oDocument.Push(oParagraph);\n}\nvar aNumberedParagraphs = oDocument.GetAllNumberedParagraphs();\naNumberedParagraphs[0].SetBold(true);\nbuilder.SaveFile(\"docx\", \"GetAllNumberedParagraphs.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.getallshapes": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing1 = Api.CreateShape(\"rect\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oDrawing1);\nvar oDrawing2 = Api.CreateShape(\"wave\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oDrawing2);\nvar aDrawings = oDocument.GetAllShapes();\noFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\naDrawings[1].Fill(oFill);\nbuilder.SaveFile(\"docx\", \"GetAllShapes.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.getalltablesonpage": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.GetStyle(\"Bordered - Accent 5\");\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 50);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nvar arrTables = oDocument.GetAllTablesOnPage(0);\nvar oRow_1 = arrTables[0].GetRow(0);\noRow_1.Remove();\nbuilder.SaveFile(\"docx\", \"GetAllTablesOnPage.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.getbookmarkrange": {
			"script": "builder.CreateFile(\"docx\"); \nvar oDocument = Api.GetDocument(); \nvar oParagraph = oDocument.GetElement(0); \noParagraph.AddText(\"ONLYOFFICE Document Builder\"); \nvar oRange = oDocument.GetRange(0, 9); \noRange.AddBookmark(\"Bookmark\"); \noRange = oDocument.GetBookmarkRange(\"Bookmark\");\noRange.SetBold(true);\nbuilder.SaveFile(\"docx\",  \"GetBookmarkRange.docx\"); \nbuilder.CloseFile();"
		},
		"ApiDocument.getclasstype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = Api.CreateParagraph();\nvar sClassType = oDocument.GetClassType();\noParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"Class Type = \" + sClassType);\nbuilder.SaveFile(\"docx\", \"GetClassType.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.getcommentsreport": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph1 = oDocument.GetElement(0);\noParagraph1.AddText(\"Commenting\");\noParagraph1.SetJc(\"center\");\noParagraph1.SetFontSize(24);\noParagraph1.SetBold(true);\nvar oParagraph2 = Api.CreateParagraph();\noParagraph2.AddText(\"The Comment option allows you to leave comments on the specific words, edit and remove these comments.\");\noDocument.Push(oParagraph2);\nvar oParagraph3 = Api.CreateParagraph();\noParagraph3.AddText(\"All the comments will be saved and shown to other document users.\");\noDocument.Push(oParagraph3);\nApi.AddComment(oParagraph2, \"You can also leave comment on phrases, sentences and other document parts\", \"John Smith\");\nvar oParagraph4 = Api.CreateParagraph();\noParagraph4.AddText(\"In order to enable the comment option, the comment parameter must be set to true.\");\noDocument.Push(oParagraph4);\nvar oParagraph5 = Api.CreateParagraph();\noParagraph5.AddText(\"The document side bar will contain the Comment menu option.\");\noDocument.Push(oParagraph5);\nApi.AddComment(oParagraph4, \"You can set the comment option in the permissions section of the document initialization\", \"Mark Pottato\");\nvar oCommentsReport = oDocument.GetCommentsReport();\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddLineBreak();\noParagraph.AddLineBreak();\noParagraph.AddText(\"Comments report\");\noDocument.Push(oParagraph);\nvar nRows = 1;\nfor (let sUserName in oCommentsReport) {\n  nRows += oCommentsReport[sUserName].length;\n}\nvar nCols = 6;\nvar oTable = Api.CreateTable(nCols, nRows);\noDocument.Push(oTable);\n\nfunction privateFillCell(nCurRow, nCurCol, sText) {\n  var oRow = oTable.GetRow(nCurRow);\n  var oCell = oRow.GetCell(nCurCol);\n  var oCellContent = oCell.GetContent();\n  var oRun = oCellContent.GetElement(0).AddText(sText);\n  return {\n    Cell: oCell,\n    Run: oRun\n  };\n}\nprivateFillCell(0, 0, \"Name\");\nprivateFillCell(0, 1, \"Date\");\nprivateFillCell(0, 2, \"\");\nprivateFillCell(0, 3, \"Solved\");\nprivateFillCell(0, 4, \"Text\");\nprivateFillCell(0, 5, \"Quote text\");\nvar nCurRow = 1;\nfor (let sUserName in oCommentsReport) {\n  var arrUserComments = oCommentsReport[sUserName];\n  var arrCells = [];\n  for (let nIndex = 0, nCount = arrUserComments.length; nIndex < nCount; ++nIndex, ++nCurRow) {\n    var oCommentInfo = oCommentsReport[sUserName][nIndex];\n    arrCells.push(privateFillCell(nCurRow, 0, \"\").Cell);\n    privateFillCell(nCurRow, 1, (new Date(oCommentInfo[\"Date\"])).toString());\n    privateFillCell(nCurRow, 2, oCommentInfo[\"IsAnswer\"] === true ? \"answer\" : \"comment\");\n    if (oCommentInfo[\"IsAnswer\"] !== true) {\n      if (oCommentInfo[\"IsSolved\"] === true) privateFillCell(nCurRow, 3, \"yes\").Run.SetColor(0, 255, 0);\n      else privateFillCell(nCurRow, 3, \"no\").Run.SetColor(255, 0, 0);\n    }\n    privateFillCell(nCurRow, 4, oCommentInfo[\"CommentMessage\"] ? oCommentInfo[\"CommentMessage\"] : \"\");\n    privateFillCell(nCurRow, 5, oCommentInfo[\"QuoteText\"] ? oCommentInfo[\"QuoteText\"] : \"\");\n  }\n  var oMergedCell = oTable.MergeCells(arrCells);\n  if (oMergedCell) {\n    var oCellContent = oMergedCell.GetContent();\n    oCellContent.GetElement(0).AddText(sUserName);\n  } else if (arrCells.length > 0) {\n    oCellContent = arrCells[0].GetContent();\n    oCellContent.GetElement(0).AddText(sUserName);\n  }\n}\noTable.SetStyle(oDocument.GetStyle(\"Bordered\"));\nbuilder.SaveFile(\"docx\", \"GetCommentsReport.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.getdefaultparapr": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oParaPr = oDocument.GetDefaultParaPr();\noParaPr.SetSpacingLine(276, \"auto\");\noParaPr.SetSpacingAfter(200);\nvar oNormalStyle = oDocument.GetDefaultStyle(\"paragraph\");\noParaPr = oNormalStyle.GetParaPr();\noParaPr.SetSpacingLine(240, \"auto\");\noParaPr.SetJc(\"both\");\noParagraph.AddText(\"This is just a text.\");\nbuilder.SaveFile(\"docx\", \"GetDefaultParaPr.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.getdefaultstyle": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oParaPr = oDocument.GetDefaultParaPr();\noParaPr.SetSpacingLine(276, \"auto\");\noParaPr.SetSpacingAfter(200);\nvar oNormalStyle = oDocument.GetDefaultStyle(\"paragraph\");\noParaPr = oNormalStyle.GetParaPr();\noParaPr.SetSpacingLine(240, \"auto\");\noParaPr.SetJc(\"both\");\noParagraph.AddText(\"This is just a text.\");\nbuilder.SaveFile(\"docx\", \"GetDefaultStyle.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.getdefaulttextpr": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oTextPr = oDocument.GetDefaultTextPr();\noTextPr.SetFontSize(30);\noTextPr.SetLanguage(\"en-US\");\noTextPr.SetFontFamily(\"Comic Sans MS\");\noParagraph.AddText(\"This is just a text.\");\nbuilder.SaveFile(\"docx\", \"GetDefaultTextPr.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.getelement": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. Nothing special.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"docx\", \"GetElement.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.getelementscount": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"Number of document elements at this point: \");\noParagraph.AddTabStop();\noParagraph.AddText(\"\" + oDocument.GetElementsCount());\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Now we add one more paragraph and push it.\");\noDocument.Push(oParagraph);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Number of document elements after we added the second paragraph \");\noParagraph.AddText(\"but before we push the third one: \");\noParagraph.AddTabStop();\noParagraph.AddText(\"\" + oDocument.GetElementsCount());\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetElementsCount.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.getendnotesfirstparagraphs": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oElement = oDocument.GetElement(0);\nvar nElementCount = oElement.GetElementsCount();\nif (nElementCount == 1) {\n    var oRun = Api.CreateRun();\n    oRun.AddText(\"Add any endnote to this page. To do this, select any word or word phrase in this sentences, open the References tab, click the arrow next to the Footnote icon and choose the Insert Endnote option from the menu. Enter the endnote text. After that, copy the macro above (without the first and last two lines) and run it (Plugins -> Macros).\");\n    oElement.AddElement(oRun);\n}\nelse {\n    var aEndNotesFirstParagraphs = oDocument.GetEndNotesFirstParagraphs();\n    aEndNotesFirstParagraphs[0].SetBold(true);\n}\nbuilder.SaveFile(\"docx\", \"GetEndNotesFirstParagraphs.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.getfinalsection": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oSection = oDocument.GetFinalSection();\nvar oHeader = oSection.GetHeader(\"default\", true);\nvar oParagraph = oHeader.GetElement(0);\noParagraph.AddText(\"This is the text in the default header\");\nvar oTextPr = oDocument.GetDefaultTextPr();\noTextPr.SetFontSize(22);\noTextPr.SetLanguage(\"en-US\");\noTextPr.SetFontFamily(\"Calibri\");\nvar oParaPr = oDocument.GetDefaultParaPr();\noParaPr.SetSpacingLine(276, \"auto\");\noParaPr.SetSpacingAfter(200);\noParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a text in a paragraph.\");\nbuilder.SaveFile(\"docx\", \"GetFinalSection.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.getfootnotesfirstparagraphs": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oElement = oDocument.GetElement(0);\nvar nElementCount = oElement.GetElementsCount();\nif (nElementCount == 1) {\n    var oRun = Api.CreateRun();\n    oRun.AddText(\"Add any footnote to this page. To do this, select any word or word phrase in this sentences, open the References tab and click Footnote. Enter the footnote text. After that, copy the macro above (without the first and last two lines) and run it (Plugins -> Macros).\");\n    oElement.AddElement(oRun);\n}\nelse {\n    var aFootnotesFirstParagraphs = oDocument.GetFootnotesFirstParagraphs();\n    aFootnotesFirstParagraphs[0].SetBold(true);\n}\nbuilder.SaveFile(\"docx\", \"GetFootnotesFirstParagraphs.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.getrange": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is just a sample text.\");\nvar oRange = oDocument.GetRange(8, 11);\noRange.SetBold(true);\nbuilder.SaveFile(\"docx\", \"GetRange.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.getrangebyselect": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun1 = Api.CreateRun();\noRun1.AddText(\"ONLYOFFICE Document Builder.\");\noParagraph.AddElement(oRun1);\nvar oRun2 = Api.CreateRun();\noRun2.AddText(\" ONLYOFFICE for developers.\");\noParagraph.AddElement(oRun2);\noRun1.Select();\nvar oRange = oDocument.GetRangeBySelect();\noRange.SetBold(true);\nbuilder.SaveFile(\"docx\", \"GetRangeBySelect.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.getreviewreport": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph1 = oDocument.GetElement(0);\noDocument.SetTrackRevisions(true);\noParagraph1.AddText(\"Reviewing documents\");\noParagraph1.SetJc(\"center\");\noParagraph1.SetFontSize(24);\noParagraph1.SetBold(true);\nvar oParagraph2 = Api.CreateParagraph();\noParagraph2.AddText(\"If you need to get review report, you can use Document Builder. The steps below will show how to do it.\");\noDocument.Push(oParagraph2);\nvar oReviewReport = oDocument.GetReviewReport();\noDocument.SetTrackRevisions(false);\nvar oParagraph = Api.CreateParagraph();\noDocument.Push(oParagraph);\noParagraph = Api.CreateParagraph();\noDocument.Push(oParagraph);\noParagraph.AddText(\"Review report\");\nvar nRows = 1;\nfor (let sUserName in oReviewReport) {\n  nRows += oReviewReport[sUserName].length;\n}\nvar nCols = 4;\nvar oTable = Api.CreateTable(nCols, nRows);\noDocument.Push(oTable);\n\nfunction privateFillCell(nCurRow, nCurCol, sText) {\n  var oRow = oTable.GetRow(nCurRow);\n  var oCell = oRow.GetCell(nCurCol);\n  var oCellContent = oCell.GetContent();\n  var oRun = oCellContent.GetElement(0).AddText(sText);\n  return {\n    Cell: oCell,\n    Run: oRun\n  };\n}\nprivateFillCell(0, 0, \"Name\");\nprivateFillCell(0, 1, \"Date\");\nprivateFillCell(0, 2, \"Action\");\nprivateFillCell(0, 3, \"Text\");\nvar nCurRow = 1;\nfor (let sUserName in oReviewReport) {\n  var arrUserChanges = oReviewReport[sUserName];\n  var arrCells = [];\n  for (let nIndex = 0, nCount = arrUserChanges.length; nIndex < nCount; ++nIndex, ++nCurRow) {\n    var oChangeInfo = arrUserChanges[nIndex];\n    arrCells.push(privateFillCell(nCurRow, 0, \"\").Cell);\n    privateFillCell(nCurRow, 1, (new Date(oChangeInfo[\"Date\"])).toString());\n    var sType = oChangeInfo[\"Type\"];\n    if (\"TextAdd\" === sType) {\n      privateFillCell(nCurRow, 2, \"Added text\");\n      privateFillCell(nCurRow, 3, oChangeInfo[\"Value\"]);\n    } else if (\"TextRem\" === sType) {\n      privateFillCell(nCurRow, 2, \"Removed text\");\n      privateFillCell(nCurRow, 3, oChangeInfo[\"Value\"]).Run.SetStrikeout(true);\n    } else if (\"TextPr\" === sType) {\n      privateFillCell(nCurRow, 2, \"Formatted text\");\n    } else if (\"ParaAdd\" === sType) {\n      privateFillCell(nCurRow, 2, \"Added paragraph\");\n    } else if (\"ParaRem\" === sType) {\n      privateFillCell(nCurRow, 2, \"Removed paragraph\");\n    } else if (\"ParaPr\" === sType) {\n      privateFillCell(nCurRow, 2, \"Formatted paragraph\");\n    } else {\n      privateFillCell(nCurRow, 2, \"Unknown change\");\n    }\n  }\n  var oMergedCell = oTable.MergeCells(arrCells);\n  if (oMergedCell) {\n    var oCellContent = oMergedCell.GetContent();\n    oCellContent.GetElement(0).AddText(sUserName);\n  } else if (arrCells.length > 0) {\n    oCellContent = arrCells[0].GetContent();\n    oCellContent.GetElement(0).AddText(sUserName);\n  }\n}\noTable.SetStyle(oDocument.GetStyle(\"Bordered\"));\nbuilder.SaveFile(\"docx\", \"GetReviewReport.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.getsections": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a new paragraph.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"Scroll down to see the new section.\");\nvar oSection1 = oDocument.CreateSection(oParagraph);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a paragraph in a new section\");\noDocument.Push(oParagraph);\nvar aSections = oDocument.GetSections();\noParagraph = Api.CreateParagraph();\nvar sClassType = aSections[1].GetClassType();\noParagraph.AddText(\"Class type: \" + sClassType);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetSections.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.getstyle": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oNoSpacingStyle = oDocument.GetStyle(\"Heading 6\");\nvar oParagraph = oDocument.GetElement(0);\noParagraph.SetStyle(oNoSpacingStyle);\noParagraph.AddText(\"This is a text in a paragraph styled with the 'Heading 6' style.\");\nbuilder.SaveFile(\"docx\", \"GetStyle.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.insertcontent": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a sample text. It was inserted here.\");\noDocument.InsertContent([oParagraph]);\nbuilder.SaveFile(\"docx\", \"InsertContent.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.insertwatermark": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"A watermark was inserted into this document.\");\noDocument.InsertWatermark(\"Watermark\");\nbuilder.SaveFile(\"docx\", \"InsertWatermark.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.istrackrevisions": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noDocument.SetTrackRevisions(true);\nvar bTrackRevisions = oDocument.IsTrackRevisions();\noParagraph.AddText(\"Change tracking is enabled: \" + bTrackRevisions);\nbuilder.SaveFile(\"docx\", \"IsTrackRevisions.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.last": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a sample text â„–1.\");\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a sample text â„–2.\");\noDocument.Push(oParagraph);\nvar oElement = oDocument.Last();\noElement.SetBold(true);\nbuilder.SaveFile(\"docx\", \"Last.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.push": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph0 = oDocument.GetElement(0);\noParagraph0.AddText(\"This is paragraph #0, you must not push it to take effect.\");\nfor (let nParaIncrease = 0; nParaIncrease < 5; ++nParaIncrease) {\n  var oParagraph = Api.CreateParagraph();\n  oParagraph.AddText(\"This is paragraph #\" + (nParaIncrease + 1) + \", you must push it to take effect.\");\n  oDocument.Push(oParagraph);\n}\nbuilder.SaveFile(\"docx\", \"Push.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.rejectallrevisionchanges": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph1 = oDocument.GetElement(0);\noDocument.SetTrackRevisions(true);\noParagraph1.AddText(\"Reviewing documents\");\noParagraph1.SetJc(\"center\");\noParagraph1.SetFontSize(24);\noParagraph1.SetBold(true);\nvar oParagraph2 = Api.CreateParagraph();\noParagraph2.AddText(\"If you need to get review report, you can use Document Builder. The steps below will show how to do it.\");\noDocument.Push(oParagraph2);\noDocument.RejectAllRevisionChanges();\noDocument.SetTrackRevisions(false);\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"All revision changes in this document were rejected.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"RejectAllRevisionChanges.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.removeallelements": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\noDocument.RemoveAllElements();\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is the first paragraph. \");\noParagraph.AddText(\"We removed all document elements (including the first paragraph, created by default). \");\noParagraph.AddText(\"This paragraph now took its place.\");\noDocument.AddElement(0, oParagraph);\nbuilder.SaveFile(\"docx\", \"RemoveAllElements.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.removeelement": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph0 = oDocument.GetElement(0);\noParagraph0.AddText(\"This is paragraph #1.\");\nfor (let nParaIncrease = 0; nParaIncrease < 4; ++nParaIncrease) {\n  var oParagraph = Api.CreateParagraph();\n  oParagraph.AddText(\"This is paragraph #\" + (nParaIncrease + 2) + \".\");\n  oDocument.Push(oParagraph);\n}\noDocument.RemoveElement(2);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"We removed paragraph #3, check that out above.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"RemoveElement.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.removeselection": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"Api ONLYOFFICE\");\nvar oRange = oDocument.GetRange(0, 2);\noRange.Select();\noDocument.RemoveSelection();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The selection from the word 'Api' was removed.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"RemoveSelection.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.search": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is paragraph â„–1.\");\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is paragraph â„–2.\");\noDocument.Push(oParagraph);\nvar aSearch = oDocument.Search(\"paragraph\");\naSearch[1].SetBold(true);\nbuilder.SaveFile(\"docx\", \"Search.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.searchandreplace": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is the first sample text. The serial number of this sample text was replaced here.\");\noDocument.SearchAndReplace({\"searchString\": \"first\", \"replaceString\": \"second\"});\nbuilder.SaveFile(\"docx\", \"SearchAndReplace.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.setevenandoddhdrftr": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oSection = oDocument.CreateSection(oParagraph);\noParagraph.AddText(\"This is section #1 of the document. \");\noParagraph.AddText(\"It has a header and a footer for odd pages. \");\noParagraph.AddText(\"Scroll down to see the other pages.\");\nvar oHeader = oSection.GetHeader(\"default\", true);\noParagraph = oHeader.GetElement(0);\noParagraph.AddText(\"This is an odd page header\");\nvar oFooter = oSection.GetFooter(\"default\", true);\noParagraph = oFooter.GetElement(0);\noParagraph.AddText(\"This is an odd page footer\");\noDocument.SetEvenAndOddHdrFtr(true);\noParagraph = Api.CreateParagraph();\noSection = oDocument.CreateSection(oParagraph);\noSection.SetType(\"evenPage\");\noParagraph.AddText(\"This is section #2 of the document. \");\noParagraph.AddText(\"It has a header and a footer for even pages. \");\noParagraph.AddText(\"Scroll down to see the other pages.\");\noDocument.Push(oParagraph);\noHeader = oSection.GetHeader(\"even\", true);\noParagraph = oHeader.GetElement(0);\noParagraph.AddText(\"This is an even page header\");\noFooter = oSection.GetFooter(\"even\", true);\noParagraph = oFooter.GetElement(0);\noParagraph.AddText(\"This is an even page footer\");\noParagraph = Api.CreateParagraph();\noSection = oDocument.CreateSection(oParagraph);\noSection.SetType(\"oddPage\");\noParagraph.AddText(\"This is section #3 of the document. \");\noParagraph.AddText(\"It has a header and a footer for odd pages. \");\noParagraph.AddText(\"Scroll down to see the other pages.\");\noDocument.Push(oParagraph);\noSection = oDocument.GetFinalSection();\noSection.SetType(\"evenPage\");\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is section #4 of the document. \");\noParagraph.AddText(\"It has a header and a footer for even pages.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetEvenAndOddHdrFtr.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.setformshighlight": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextForm = Api.CreateTextForm({\"key\": \"Personal information\", \"tip\": \"Enter your first name\", \"required\": true, \"placeholder\": \"First name\", \"comb\": true, \"maxCharacters\": 10, \"cellWidth\": 3, \"multiLine\": false, \"autoFit\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oTextForm);\noDocument.SetFormsHighlight(255, 255, 0);\nbuilder.SaveFile(\"docx\", \"SetFormsHighlight.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.settrackrevisions": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noDocument.SetTrackRevisions(true);\noParagraph.AddText(\"Track revisions mode was set.\");\nbuilder.SaveFile(\"docx\", \"SetTrackRevisions.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.tohtml": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph1 = oDocument.GetElement(0);\noParagraph1.AddText(\"Heading 1\");\nvar oHeading1Style = oDocument.GetStyle(\"Heading 1\");\noParagraph1.SetStyle(oHeading1Style);\nvar oParagraph2 = Api.CreateParagraph();\noParagraph2.AddText(\"This document will be converted to HTML.\");\noDocument.Push(oParagraph2);\nvar aSearch = oParagraph2.Search(\"HTML\");\naSearch[0].SetBold(true);\nvar oParagraph3 = Api.CreateParagraph();\noParagraph3.AddText(\"Heading 2\");\noDocument.Push(oParagraph3);\nvar oHeading2Style = oDocument.GetStyle(\"Heading 2\");\noParagraph3.SetStyle(oHeading2Style);\nvar oParagraph4 = Api.CreateParagraph();\noParagraph4.AddText(\"There is an example of two heading levels.\");\noDocument.Push(oParagraph4);\nvar sHtml = Api.ConvertDocument(\"html\", false, false, false, true);\nvar oParagraph5 = Api.CreateParagraph();\noParagraph5.AddLineBreak();\noParagraph5.AddText(\"HTML\").SetBold(true);\noParagraph5.AddLineBreak();\noParagraph5.AddText(sHtml);\noDocument.Push(oParagraph5);\nbuilder.SaveFile(\"docx\", \"ToHtml.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocument.tomarkdown": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph1 = oDocument.GetElement(0);\noParagraph1.AddText(\"Heading 1\");\nvar oHeading1Style = oDocument.GetStyle(\"Heading 1\");\noParagraph1.SetStyle(oHeading1Style);\nvar oParagraph2 = Api.CreateParagraph();\noParagraph2.AddText(\"This document will be converted to Markdown.\");\noDocument.Push(oParagraph2);\nvar aSearch = oParagraph2.Search(\"Markdown\");\naSearch[0].SetBold(true);\nvar oParagraph3 = Api.CreateParagraph();\noParagraph3.AddText(\"Heading 2\");\noDocument.Push(oParagraph3);\nvar oHeading2Style = oDocument.GetStyle(\"Heading 2\");\noParagraph3.SetStyle(oHeading2Style);\nvar oParagraph4 = Api.CreateParagraph();\noParagraph4.AddText(\"There is an example of two heading levels.\");\noDocument.Push(oParagraph4);\nvar sMarkdown = oDocument.ToMarkdown(false, false, true, false);\nvar oParagraph5 = Api.CreateParagraph();\noParagraph5.AddLineBreak();\noParagraph5.AddText(\"Markdown\").SetBold(true);\noParagraph5.AddLineBreak();\noParagraph5.AddText(sMarkdown);\noDocument.Push(oParagraph5);\nbuilder.SaveFile(\"docx\", \"ToMarkdown.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocumentContent.addelement": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nvar oDocContent = oDrawing.GetDocContent();\noDocContent.RemoveAllElements();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"We removed all elements from the shape and added a new paragraph inside it.\");\noDocContent.AddElement(0, oParagraph);\nbuilder.SaveFile(\"docx\", \"AddElement.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocumentContent.getclasstype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nvar oDocContent = oDrawing.GetDocContent();\noDocContent.RemoveAllElements();\noParagraph = Api.CreateParagraph();\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"We removed all elements from the shape and added a new paragraph inside it.\");\noDocContent.AddElement(0, oParagraph);\nvar sClassType = oDocContent.GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class Type = \" + sClassType);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetClassType.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocumentContent.getelement": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oSection = oDocument.GetFinalSection();\nvar oDocContent = oSection.GetHeader(\"default\", true);\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is the text in the default header\");\nbuilder.SaveFile(\"docx\", \"GetElement.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocumentContent.getelementscount": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nvar oDocContent = oDrawing.GetDocContent();\noDocContent.RemoveAllElements();\noParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"We removed all elements from the shape and added a new paragraph inside it.\");\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Number of elements inside the shape: \" + oDocContent.GetElementsCount());\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetElementsCount.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocumentContent.getrange": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nvar oDocContent = oDrawing.GetDocContent();\noDocContent.RemoveAllElements();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is just a sample paragraph.\");\noDocContent.AddElement(0, oParagraph);\nvar oRange = oDocContent.GetRange(8, 11);\noRange.SetBold(true);\nbuilder.SaveFile(\"docx\", \"GetRange.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocumentContent.push": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nvar oDocContent = oDrawing.GetDocContent();\noDocContent.RemoveAllElements();\noParagraph = Api.CreateParagraph();\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"We removed all elements from the shape and added a new paragraph inside it.\");\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"Push.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocumentContent.removeallelements": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nvar oDocContent = oDrawing.GetDocContent();\noDocContent.RemoveAllElements();\noParagraph = Api.CreateParagraph();\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"We removed all elements from the shape and added a new paragraph inside it.\");\noDocContent.AddElement(0, oParagraph);\nbuilder.SaveFile(\"docx\", \"RemoveAllElements.docx\");\nbuilder.CloseFile();"
		},
		"ApiDocumentContent.removeelement": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 3212465, 1926590, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nvar oDocContent = oDrawing.GetDocContent();\noDocContent.RemoveAllElements();\noParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is paragraph #1.\");\nfor (let nParaIncrease = 1; nParaIncrease < 5; ++nParaIncrease) {\n  oParagraph = Api.CreateParagraph();\n  oParagraph.AddText(\"This is paragraph #\" + (nParaIncrease + 1) + \".\");\n  oDocContent.Push(oParagraph);\n}\noDocContent.RemoveElement(2);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"We removed paragraph #3, check that out above.\");\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"RemoveElement.docx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.addbreak": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\noDrawing.InsertParagraph(\"Added a line break after this paragraph.\", \"before\", false);\noDrawing.AddBreak(1, \"before\");\nbuilder.SaveFile(\"docx\", \"AddBreak.docx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.copy": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"cube\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nvar oCopyDrawing = oDrawing.Copy();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(155, 64, 1), 100000);\noFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\noCopyDrawing.Fill(oFill);\noParagraph.AddDrawing(oCopyDrawing);\nbuilder.SaveFile(\"docx\", \"Copy.docx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.delete": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\noDrawing.Delete();\noParagraph.AddLineBreak();\noParagraph.AddText(\"In this paragraph, the Drawing object has been deleted.\");\nbuilder.SaveFile(\"docx\", \"Delete.docx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.fill": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"cube\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nvar oCopyDrawing = oDrawing.Copy();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(155, 64, 1), 100000);\noFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\noCopyDrawing.Fill(oFill);\noParagraph.AddDrawing(oCopyDrawing);\nbuilder.SaveFile(\"docx\", \"Fill.docx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.getclasstype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nvar sClassType = oDrawing.GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class Type = \" + sClassType);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetClassType.docx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.getnextdrawing": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"cube\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nvar oCopyDrawing = oDrawing.Copy();\noParagraph.AddDrawing(oCopyDrawing);\nvar oNextDrawing = oDrawing.GetNextDrawing();\noNextDrawing.SetHorFlip(true);\nbuilder.SaveFile(\"docx\", \"GetNextDrawing.docx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.getparentcontentcontrol": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = Api.CreateParagraph();\nvar oBlockLvlSdt = Api.CreateBlockLvlSdt();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(255, 0, 255));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\noBlockLvlSdt.AddElement(oParagraph, 0);\noDocument.AddElement(0, oBlockLvlSdt);\nvar oParentContentControl = oDrawing.GetParentContentControl();\noParentContentControl.AddText(\"This is a parent content control.\");\nbuilder.SaveFile(\"docx\", \"GetParentContentControl.docx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.getparentparagraph": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nvar oParentParagraph = oDrawing.GetParentParagraph();\noParentParagraph.AddLineBreak();\noParentParagraph.AddText(\"This is a parent paragraph\");\nbuilder.SaveFile(\"docx\", \"GetParentParagraph.docx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.getparenttable": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = Api.CreateParagraph();\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nvar oCell = oTable.GetCell(1, 1);\noCell.AddElement(0, oParagraph);\noDocument.Push(oTable);\nvar oParentTable = oDrawing.GetParentTable();\nvar oTableStyle = oDocument.GetStyle(\"Bordered - Accent 5\");   \noParentTable.SetStyle(oTableStyle);\nbuilder.SaveFile(\"docx\", \"GetParentTable.docx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.getparenttablecell": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = Api.CreateParagraph();\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 3212465, 963295, oFill, oStroke);\nvar oCell = oTable.GetCell(1, 1);\noCell.GetContent().GetElement(0).AddDrawing(oDrawing);\noDocument.Push(oTable);\nvar oParentCell = oDrawing.GetParentTableCell();\nvar oCellContent = oParentCell.GetContent().GetElement(0);\noCellContent.AddLineBreak();\noCellContent.AddText(\"This is a parent cell\");\nbuilder.SaveFile(\"docx\", \"GetParentTableCell.docx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.getprevdrawing": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"cube\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nvar oCopyDrawing = oDrawing.Copy();\noParagraph.AddDrawing(oCopyDrawing);\nvar oNextDrawing = oCopyDrawing.GetPrevDrawing();\noNextDrawing.SetHorFlip(true);\nbuilder.SaveFile(\"docx\", \"GetPrevDrawing.docx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.insertincontentcontrol": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This graphic object was wrapped in content control\");\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\noDrawing.InsertInContentControl(1);\nbuilder.SaveFile(\"docx\", \"InsertInContentControl.docx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.insertparagraph": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\noDrawing.InsertParagraph(\"This is inserted paragraph.\", \"before\", true);\nbuilder.SaveFile(\"docx\", \"InsertParagraph.docx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.scaleheight": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nfor (let i = 3; i > 0; i-- ){\n    var oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\n    var oStroke = Api.CreateStroke(0, Api.CreateNoFill());\n    var oDrawing = Api.CreateShape(\"cube\", 3212465, 963295, oFill, oStroke);\n    oParagraph.AddDrawing(oDrawing);\n    oDrawing.ScaleHeight( i );\n}\nbuilder.SaveFile(\"docx\", \"ScaleHeight.docx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.scalewidth": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nfor (let i = 1; i < 4; i++ ){\n    var oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\n    var oStroke = Api.CreateStroke(0, Api.CreateNoFill());\n    var oDrawing = Api.CreateShape(\"cube\", 963295, 963295, oFill, oStroke);\n    oParagraph.AddDrawing(oDrawing);\n    oDrawing.ScaleWidth( i );\n}\nbuilder.SaveFile(\"docx\", \"ScaleWidth.docx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.select": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\noDrawing.InsertParagraph(\"The Select property is applied to the drawing object\", \"before\", false);\noDrawing.Select();\nbuilder.SaveFile(\"docx\", \"Select.docx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.setdistances": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a paragraph with a shape. \");\noParagraph.AddText(\"The text wraps the rectangular box that bounds the object. \");\noParagraph.AddText(\"The distance between the shape and the text is 1 inch (914400 English measure units).\");\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(155, 64, 1), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 1908000, 1404000, oFill, oStroke);\noDrawing.SetDistances(914400, 0, 914400, 0);\noDrawing.SetWrappingStyle(\"square\");\noParagraph.AddDrawing(oDrawing);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is another paragraph.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetDistances.docx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.sethoralign": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a paragraph with a shape. \");\noParagraph.AddText(\"The text wraps the rectangular box that bounds the object. \");\noParagraph.AddText(\"The distance between the shape and the text is half an inch (457200 English measure units).\");\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(155, 64, 1), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 1908000, 1404000, oFill, oStroke);\noDrawing.SetDistances(457200, 457200, 457200, 0);\noDrawing.SetWrappingStyle(\"square\");\noDrawing.SetHorAlign(\"page\", \"center\");\noParagraph.AddDrawing(oDrawing);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is another paragraph.\");\noDocument.Push(oParagraph);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The shape is aligned at the center of the page horizontally.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetHorAlign.docx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.sethorflip": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"cube\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\noDrawing.SetHorFlip(true);\nbuilder.SaveFile(\"docx\", \"SetHorFlip.docx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.sethorposition": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a paragraph with a shape. \");\noParagraph.AddText(\"The text wraps the rectangular box that bounds the object. \");\noParagraph.AddText(\"The distance between the shape and the text is half an inch (457200 English measure units).\");\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(155, 64, 1), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 1908000, 1404000, oFill, oStroke);\noDrawing.SetDistances(457200, 457200, 457200, 0);\noDrawing.SetWrappingStyle(\"square\");\noDrawing.SetHorPosition(\"rightMargin\", 0);\noParagraph.AddDrawing(oDrawing);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is another paragraph.\");\noDocument.Push(oParagraph);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The shape is aligned next to the right margin horizontally.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetHorPosition.docx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.setoutline": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"cube\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oDrawing); \nvar oCopyDrawing = oDrawing.Copy();\noStroke = Api.CreateStroke(36000, Api.CreateSolidFill(Api.CreateRGBColor(0, 0, 0)));\noCopyDrawing.SetOutLine(oStroke);\noParagraph.AddDrawing(oCopyDrawing);\nbuilder.SaveFile(\"docx\", \"SetOutLine.docx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.setsize": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a paragraph with a shape. \");\noParagraph.AddText(\"The text wraps the rectangular box that bounds the object. \");\noParagraph.AddText(\"The distance between the shape and the text is half an inch (457200 English measure units).\");\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(155, 64, 1), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 1908000, 1404000, oFill, oStroke);\noDrawing.SetDistances(457200, 457200, 457200, 0);\noDrawing.SetWrappingStyle(\"square\");\noDrawing.SetSize(2 * 914400, 2 * 914400);\noParagraph.AddDrawing(oDrawing);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The shape was created with a size of 53x39 millimeters, then resized to the size of 2x2 inches.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetSize.docx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.setveralign": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a paragraph with a shape. \");\noParagraph.AddText(\"The text wraps the rectangular box that bounds the object. \");\noParagraph.AddText(\"The distance between the shape and the text (horizontally) is half an inch (457200 English measure units).\");\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(155, 64, 1), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 1908000, 1404000, oFill, oStroke);\noDrawing.SetDistances(457200, 457200, 457200, 0);\noDrawing.SetWrappingStyle(\"square\");\noDrawing.SetVerAlign(\"page\", \"top\");\noParagraph.AddDrawing(oDrawing);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The shape is aligned to the top of the page.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetVerAlign.docx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.setverposition": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a paragraph with a shape. \");\noParagraph.AddText(\"The text wraps the rectangular box that bounds the object. \");\noParagraph.AddText(\"The distance between the shape and the text (horizontally) is half an inch (457200 English measure units).\");\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(155, 64, 1), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 1908000, 1404000, oFill, oStroke);\noDrawing.SetDistances(457200, 457200, 457200, 0);\noDrawing.SetWrappingStyle(\"square\");\noDrawing.SetVerPosition(\"page\", 914400);\noParagraph.AddDrawing(oDrawing);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The shape is aligned to the top of the page, and outstands from the page top 1 inch.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetVerPosition.docx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.setvertflip": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"cube\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\noDrawing.SetVertFlip(true);\nbuilder.SaveFile(\"docx\", \"SetVertFlip.docx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.setwrappingstyle": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a paragraph with a shape. \");\noParagraph.AddText(\"The text wraps the rectangular box that bounds the object. \");\noParagraph.AddText(\"The distance between the shape and the text (horizontally) is half an inch (457200 English measure units).\");\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(155, 64, 1), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 1908000, 1404000, oFill, oStroke);\noDrawing.SetDistances(457200, 457200, 457200, 0);\noDrawing.SetWrappingStyle(\"square\");\noParagraph.AddDrawing(oDrawing);\nbuilder.SaveFile(\"docx\", \"SetWrappingStyle.docx\");\nbuilder.CloseFile();"
		},
		"ApiFill.getclasstype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(155, 64, 1), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 1908000, 1404000, oFill, oStroke);\noDrawing.SetDistances(914400, 0, 914400, 0);\noDrawing.SetWrappingStyle(\"square\");\noParagraph.AddDrawing(oDrawing);\nvar sClassType = oFill.GetClassType();\noParagraph.AddText(\"Class Type = \" + sClassType);\nbuilder.SaveFile(\"docx\", \"GetClassType.docx\");\nbuilder.CloseFile();"
		},
		"ApiFormBase.clear": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextForm = Api.CreateTextForm({\"key\": \"Personal information\", \"tip\": \"Enter your first name\", \"required\": true, \"placeholder\": \"First name\", \"comb\": true, \"maxCharacters\": 10, \"cellWidth\": 3, \"multiLine\": false, \"autoFit\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oTextForm);\noTextForm.SetText(\"John Smith\");\noTextForm.Clear();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The first form from this document was cleared.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"Clear.docx\");\nbuilder.CloseFile();"
		},
		"ApiFormBase.copy": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextForm = Api.CreateTextForm({\"key\": \"Personal information\", \"tip\": \"Enter your first name\", \"required\": true, \"placeholder\": \"First name\", \"comb\": true, \"maxCharacters\": 10, \"cellWidth\": 3, \"multiLine\": false, \"autoFit\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oTextForm);\nvar oCopyTextForm = oTextForm.Copy();\noParagraph.AddLineBreak();\noParagraph.AddElement(oCopyTextForm);\nbuilder.SaveFile(\"docx\", \"Copy.docx\");\nbuilder.CloseFile();"
		},
		"ApiFormBase.getclasstype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextForm = Api.CreateTextForm({\"key\": \"Personal information\", \"tip\": \"Enter your first name\", \"required\": true, \"placeholder\": \"First name\", \"comb\": true, \"maxCharacters\": 10, \"cellWidth\": 3, \"multiLine\": false, \"autoFit\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oTextForm);\nvar sClassType = oTextForm.GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class type: \" + sClassType);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetClassType.docx\");\nbuilder.CloseFile();"
		},
		"ApiFormBase.getformkey": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oComboBoxForm = Api.CreateComboBoxForm({\"key\": \"Personal information\", \"tip\": \"Choose your country\", \"required\": true, \"placeholder\": \"Country\", \"editable\": false, \"autoFit\": false, \"items\": [\"Latvia\", \"USA\", \"UK\"]});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oComboBoxForm);\nvar sKey = oComboBoxForm.GetFormKey();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Form key: \" + sKey);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetFormKey.docx\");\nbuilder.CloseFile();"
		},
		"ApiFormBase.getformtype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextForm = Api.CreateTextForm({\"key\": \"Personal information\", \"tip\": \"Enter your first name\", \"required\": true, \"placeholder\": \"First name\", \"comb\": true, \"maxCharacters\": 10, \"cellWidth\": 3, \"multiLine\": false, \"autoFit\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oTextForm);\nvar sFormType = oTextForm.GetFormType();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Form type: \" + sFormType);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetFormType.docx\");\nbuilder.CloseFile();"
		},
		"ApiFormBase.gettext": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextForm = Api.CreateTextForm({\"key\": \"Personal information\", \"tip\": \"Enter your first name\", \"required\": true, \"placeholder\": \"First name\", \"comb\": true, \"maxCharacters\": 10, \"cellWidth\": 3, \"multiLine\": false, \"autoFit\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oTextForm);\nvar sText = oTextForm.GetText();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Form text: \" + sText);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetText.docx\");\nbuilder.CloseFile();"
		},
		"ApiFormBase.gettextpr": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextForm = Api.CreateTextForm({\"key\": \"Personal information\", \"tip\": \"Enter your first name\", \"required\": true, \"placeholder\": \"First name\", \"comb\": true, \"maxCharacters\": 10, \"cellWidth\": 3, \"multiLine\": false, \"autoFit\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oTextForm);\nvar oTextPr = oDocument.GetDefaultTextPr();\noTextPr.SetFontSize(30);\noTextPr.SetBold(true);\noTextForm.SetTextPr(oTextPr);\nvar oFormTextPr = oTextForm.GetTextPr();\noFormTextPr.SetItalic(true);\nbuilder.SaveFile(\"docx\", \"GetTextPr.docx\");\nbuilder.CloseFile();"
		},
		"ApiFormBase.gettiptext": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oComboBoxForm = Api.CreateComboBoxForm({\"key\": \"Personal information\", \"tip\": \"Choose your country\", \"required\": true, \"placeholder\": \"Country\", \"editable\": false, \"autoFit\": false, \"items\": [\"Latvia\", \"USA\", \"UK\"]});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oComboBoxForm);\nvar sTipText = oComboBoxForm.GetTipText();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Form tip text: \" + sTipText);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetTipText.docx\");\nbuilder.CloseFile();"
		},
		"ApiFormBase.getwrappershape": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextForm = Api.CreateTextForm({\"key\": \"Personal information\", \"tip\": \"Enter your first name\", \"required\": true, \"placeholder\": \"First name\", \"comb\": true, \"maxCharacters\": 10, \"cellWidth\": 3, \"multiLine\": false, \"autoFit\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oTextForm);\noTextForm.ToFixed(10 * 240, 2 * 240);\nvar oShape = oTextForm.GetWrapperShape();\nvar oStroke = Api.CreateStroke(36000, Api.CreateSolidFill(Api.CreateRGBColor(255, 0, 0)));\noShape.SetOutLine(oStroke);\nbuilder.SaveFile(\"docx\", \"GetWrapperShape.docx\");\nbuilder.CloseFile();"
		},
		"ApiFormBase.isfixed": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextForm = Api.CreateTextForm({\"key\": \"Personal information\", \"tip\": \"Enter your first name\", \"required\": true, \"placeholder\": \"First name\", \"comb\": true, \"maxCharacters\": 10, \"cellWidth\": 3, \"multiLine\": false, \"autoFit\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oTextForm);\noTextForm.ToFixed(10 * 240, 2 * 240);\nvar bFixed = oTextForm.IsFixed();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The first form from this document is fixed: \" + bFixed);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"IsFixed.docx\");\nbuilder.CloseFile();"
		},
		"ApiFormBase.isrequired": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextForm = Api.CreateTextForm({\"key\": \"Personal information\", \"tip\": \"Enter your first name\", \"required\": true, \"placeholder\": \"First name\", \"comb\": true, \"maxCharacters\": 10, \"cellWidth\": 3, \"multiLine\": false, \"autoFit\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oTextForm);\nvar bRequired = oTextForm.IsRequired();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The first form from this document is required: \" + bRequired);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"IsRequired.docx\");\nbuilder.CloseFile();"
		},
		"ApiFormBase.setbackgroundcolor": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextForm = Api.CreateTextForm({\"key\": \"Personal information\", \"tip\": \"Enter your first name\", \"required\": true, \"placeholder\": \"First name\", \"comb\": true, \"maxCharacters\": 10, \"cellWidth\": 3, \"multiLine\": false, \"autoFit\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oTextForm);\noTextForm.SetBackgroundColor(255, 255, 0);\nbuilder.SaveFile(\"docx\", \"SetBackgroundColor.docx\");\nbuilder.CloseFile();"
		},
		"ApiFormBase.setbordercolor": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextForm = Api.CreateTextForm({\"key\": \"Personal information\", \"tip\": \"Enter your first name\", \"required\": true, \"placeholder\": \"First name\", \"comb\": true, \"maxCharacters\": 10, \"cellWidth\": 3, \"multiLine\": false, \"autoFit\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oTextForm);\noTextForm.SetBorderColor(255, 0, 0);\nbuilder.SaveFile(\"docx\", \"SetBorderColor.docx\");\nbuilder.CloseFile();"
		},
		"ApiFormBase.setformkey": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextForm = Api.CreateTextForm({\"tip\": \"Enter your first name\", \"required\": true, \"placeholder\": \"First name\", \"comb\": true, \"maxCharacters\": 10, \"cellWidth\": 3, \"multiLine\": false, \"autoFit\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oTextForm);\noTextForm.SetFormKey(\"Personal information\");\nvar sKey = oTextForm.GetFormKey();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Form key: \" + sKey);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetFormKey.docx\");\nbuilder.CloseFile();"
		},
		"ApiFormBase.setplaceholdertext": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextForm = Api.CreateTextForm({\"key\": \"Personal information\", \"tip\": \"Enter your first name\", \"required\": true, \"comb\": true, \"maxCharacters\": 10, \"cellWidth\": 3, \"multiLine\": false, \"autoFit\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oTextForm);\noTextForm.SetPlaceholderText(\"First name\");\nbuilder.SaveFile(\"docx\", \"SetPlaceholderText.docx\");\nbuilder.CloseFile();"
		},
		"ApiFormBase.setrequired": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextForm = Api.CreateTextForm({\"key\": \"Personal information\", \"tip\": \"Enter your first name\", \"placeholder\": \"First name\", \"comb\": true, \"maxCharacters\": 10, \"cellWidth\": 3, \"multiLine\": false, \"autoFit\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oTextForm);\noTextForm.SetRequired(true);\nvar bRequired = oTextForm.IsRequired();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The first form from this document is required: \" + bRequired);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetRequired.docx\");\nbuilder.CloseFile();"
		},
		"ApiFormBase.settextpr": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextForm = Api.CreateTextForm({\"key\": \"Personal information\", \"tip\": \"Enter your first name\", \"required\": true, \"placeholder\": \"First name\", \"comb\": true, \"maxCharacters\": 10, \"cellWidth\": 3, \"multiLine\": false, \"autoFit\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oTextForm);\nvar oTextPr = oDocument.GetDefaultTextPr();\noTextPr.SetFontSize(30);\noTextPr.SetBold(true);\noTextForm.SetTextPr(oTextPr);\nbuilder.SaveFile(\"docx\", \"SetTextPr.docx\");\nbuilder.CloseFile();"
		},
		"ApiFormBase.settiptext": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextForm = Api.CreateTextForm({\"key\": \"Personal information\", \"required\": true, \"placeholder\": \"First name\", \"comb\": true, \"maxCharacters\": 10, \"cellWidth\": 3, \"multiLine\": false, \"autoFit\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oTextForm);\noTextForm.SetTipText(\"Enter your first name\");\nvar sTipText = oTextForm.GetTipText();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Tip text: \" + sTipText);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetTipText.docx\");\nbuilder.CloseFile();"
		},
		"ApiFormBase.tofixed": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextForm = Api.CreateTextForm({\"key\": \"Personal information\", \"tip\": \"Enter your first name\", \"required\": true, \"placeholder\": \"First name\", \"comb\": true, \"maxCharacters\": 10, \"cellWidth\": 3, \"multiLine\": false, \"autoFit\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oTextForm);\noTextForm.ToFixed(10 * 240, 2 * 240);\nvar bFixed = oTextForm.IsFixed();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The first form from this document has a fixed size: \" + bFixed);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"ToFixed.docx\");\nbuilder.CloseFile();"
		},
		"ApiFormBase.toinline": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextForm = Api.CreateTextForm({\"key\": \"Personal information\", \"tip\": \"Enter your first name\", \"required\": true, \"placeholder\": \"First name\", \"comb\": true, \"maxCharacters\": 10, \"cellWidth\": 3, \"multiLine\": false, \"autoFit\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oTextForm);\noTextForm.ToFixed(10 * 240, 2 * 240);\nvar oCopyForm = oTextForm.Copy();\noParagraph = Api.CreateParagraph();\noParagraph.AddElement(oCopyForm);\noDocument.Push(oParagraph);\noCopyForm.ToInline();\nvar bFixed = oTextForm.IsFixed();\nvar bFixedCopy = oCopyForm.IsFixed();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The first form from this document has a fixed size: \" + bFixed);\noParagraph.AddLineBreak();\noParagraph.AddText(\"The second form from this document has a fixed size: \" + bFixedCopy);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"ToInline.docx\");\nbuilder.CloseFile();"
		},
		"ApiGradientStop.getclasstype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(155, 64, 1), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 1908000, 1404000, oFill, oStroke);\noDrawing.SetDistances(914400, 0, 914400, 0);\noDrawing.SetWrappingStyle(\"square\");\noParagraph.AddDrawing(oDrawing);\nvar sClassType = oGs1.GetClassType();\noParagraph.AddText(\"Class Type = \" + sClassType);\nbuilder.SaveFile(\"docx\", \"GetClassType.docx\");\nbuilder.CloseFile();"
		},
		"ApiHyperlink.getclasstype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"ONLYOFFICE Document Builder\");\noParagraph.AddElement(oRun);\nvar oHyperlink = oParagraph.AddHyperlink(\"https://api.onlyoffice.com/docbuilder/basic\");\nvar sClassType = oHyperlink.GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class type: \" + sClassType);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetClassType.docx\");\nbuilder.CloseFile();"
		},
		"ApiHyperlink.getdisplayedtext": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"ONLYOFFICE Document Builder\");\nvar oHyperlink = oParagraph.AddHyperlink(\"https://api.onlyoffice.com/docbuilder/basic\");\nvar sDisplayedText = oHyperlink.GetDisplayedText();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Displayed text: \" + sDisplayedText);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetDisplayedText.docx\");\nbuilder.CloseFile();"
		},
		"ApiHyperlink.getelement": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun1 = Api.CreateRun();\noRun1.AddText(\"Api Document Builder.\");\noParagraph.AddElement(oRun1, 0);\nvar oRun2 = Api.CreateRun();\noRun2.AddText(\" ONLYOFFICE for developers\");\noParagraph.AddElement(oRun2, 1);\nvar oHyperlink = oParagraph.AddHyperlink(\"https://api.onlyoffice.com/docbuilder/basic\");\nvar oElement = oHyperlink.GetElement(1);\noParagraph = Api.CreateParagraph();\noParagraph.AddElement(oElement);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetElement.docx\");\nbuilder.CloseFile();"
		},
		"ApiHyperlink.getelementscount": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun1 = Api.CreateRun();\noRun1.AddText(\"Api Document Builder.\");\noParagraph.AddElement(oRun1, 0);\nvar oRun2 = Api.CreateRun();\noRun2.AddText(\" ONLYOFFICE for developers\");\noParagraph.AddElement(oRun2, 1);\nvar oHyperlink = oParagraph.AddHyperlink(\"https://api.onlyoffice.com/docbuilder/basic\");\nvar nElementsCount = oHyperlink.GetElementsCount();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Number of elements in hyperlink: \" + nElementsCount);\noParagraph.AddLineBreak();\noParagraph.AddText(\"Elements: oParagraph, oRun1, oRun2, oHyperlink\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetElementsCount.docx\");\nbuilder.CloseFile();"
		},
		"ApiHyperlink.getlinkedtext": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"ONLYOFFICE Document Builder\");\noParagraph.AddElement(oRun);\nvar oHyperlink = oParagraph.AddHyperlink(\"https://api.onlyoffice.com/docbuilder/basic\");\noHyperlink.SetLink(\"https://api.onlyoffice.com/\");\nvar sLinkedText = oHyperlink.GetLinkedText();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Linked text: \" + sLinkedText);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetLinkedText.docx\");\nbuilder.CloseFile();"
		},
		"ApiHyperlink.getrange": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"Api Document Builder\");\nvar oHyperlink = oParagraph.AddHyperlink(\"https://api.onlyoffice.com/docbuilder/basic\");\nvar oRange = oHyperlink.GetRange(0, 2);\noRange.SetBold(true);\nbuilder.SaveFile(\"docx\", \"GetRange .docx\");\nbuilder.CloseFile();"
		},
		"ApiHyperlink.getscreentiptext": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"ONLYOFFICE Document Builder\");\noParagraph.AddElement(oRun);\nvar oHyperlink = oParagraph.AddHyperlink(\"https://api.onlyoffice.com/docbuilder/basic\");\noHyperlink.SetScreenTipText(\"ONLYOFFICE for developers\");\nvar sScreenTipText = oHyperlink.GetScreenTipText();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Screen tip text: \" + sScreenTipText);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetScreenTipText.docx\");\nbuilder.CloseFile();"
		},
		"ApiHyperlink.setdisplayedtext": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"ONLYOFFICE Document Builder\");\noParagraph.AddElement(oRun);\nvar oHyperlink = oParagraph.AddHyperlink(\"https://api.onlyoffice.com/docbuilder/basic\");\noHyperlink.SetDisplayedText(\"Api ONLYOFFICE DocBuilder\");\nbuilder.SaveFile(\"docx\", \"SetDisplayedText.docx\");\nbuilder.CloseFile();"
		},
		"ApiHyperlink.setlink": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"ONLYOFFICE Document Builder\");\noParagraph.AddElement(oRun);\nvar oHyperlink = oParagraph.AddHyperlink(\"https://api.onlyoffice.com/docbuilder/basic\");\noHyperlink.SetLink(\"https://api.onlyoffice.com/\");\nbuilder.SaveFile(\"docx\", \"SetLink.docx\");\nbuilder.CloseFile();"
		},
		"ApiHyperlink.setscreentiptext": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"ONLYOFFICE Document Builder\");\noParagraph.AddElement(oRun);\nvar oHyperlink = oParagraph.AddHyperlink(\"https://api.onlyoffice.com/docbuilder/basic\");\noHyperlink.SetScreenTipText(\"ONLYOFFICE for developers\");\nvar sScreenTipText = oHyperlink.GetScreenTipText();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Screen tip text: \" + sScreenTipText);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetScreenTipText.docx\");\nbuilder.CloseFile();"
		},
		"ApiImage.getclasstype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oDrawing = Api.CreateImage(\"https://api.onlyoffice.com/content/img/docbuilder/examples/coordinate_aspects.png\", 60 * 36000, 35 * 36000);\noParagraph.AddDrawing(oDrawing);\nvar sClassType = oDrawing.GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class Type = \" + sClassType);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetClassType.docx\");\nbuilder.CloseFile();"
		},
		"ApiImage.getnextimage": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oImage1 = Api.CreateImage(\"https://api.onlyoffice.com/content/img/docbuilder/examples/coordinate_aspects.png\", 60 * 36000, 35 * 36000);\noParagraph.AddDrawing(oImage1);\nvar oImage2 = Api.CreateImage(\"https://helpcenter.onlyoffice.com/images/Help/GettingStarted/Documents/big/EditDocument.png\", 60 * 36000, 35 * 36000);\noParagraph.AddLineBreak();\noParagraph.AddDrawing(oImage2);\nvar oNextImage = oImage1.GetNextImage();\nvar oCopyImage = oNextImage.Copy();\noParagraph.AddLineBreak();\noParagraph.AddDrawing(oCopyImage);\nbuilder.SaveFile(\"docx\", \"GetNextImage.docx\");\nbuilder.CloseFile();"
		},
		"ApiImage.getprevimage": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oImage1 = Api.CreateImage(\"https://api.onlyoffice.com/content/img/docbuilder/examples/coordinate_aspects.png\", 60 * 36000, 35 * 36000);\noParagraph.AddDrawing(oImage1);\nvar oImage2 = Api.CreateImage(\"https://helpcenter.onlyoffice.com/images/Help/GettingStarted/Documents/big/EditDocument.png\", 60 * 36000, 35 * 36000);\noParagraph.AddLineBreak();\noParagraph.AddDrawing(oImage2);\nvar oPrevImage = oImage2.GetPrevImage();\nvar oCopyImage = oPrevImage.Copy();\noParagraph.AddLineBreak();\noParagraph.AddDrawing(oCopyImage);\nbuilder.SaveFile(\"docx\", \"GetPrevImage.docx\");\nbuilder.CloseFile();"
		},
		"ApiInlineLvlSdt.addelement": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oInlineLvlSdt = Api.CreateInlineLvlSdt();\noParagraph.AddInlineLvlSdt(oInlineLvlSdt);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is an inline text content control with a text run in it.\");\noInlineLvlSdt.AddElement(oRun, 0);\nbuilder.SaveFile(\"docx\", \"AddElement.docx\");\nbuilder.CloseFile();"
		},
		"ApiInlineLvlSdt.addtext": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oInlineLvlSdt = Api.CreateInlineLvlSdt();\noInlineLvlSdt.AddText(\"This is an inline text content control.\");\noParagraph.AddInlineLvlSdt(oInlineLvlSdt);\nbuilder.SaveFile(\"docx\", \"AddText.docx\");\nbuilder.CloseFile();"
		},
		"ApiInlineLvlSdt.copy": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oInlineLvlSdt = Api.CreateInlineLvlSdt();\noInlineLvlSdt.AddText(\"This is an inline text content control.\");\noParagraph.AddInlineLvlSdt(oInlineLvlSdt);\nvar oCopyInlineLvlSdt = oInlineLvlSdt .Copy();\noParagraph.AddLineBreak();\noParagraph.AddInlineLvlSdt(oCopyInlineLvlSdt);\nbuilder.SaveFile(\"docx\", \"Copy.docx\");\nbuilder.CloseFile();"
		},
		"ApiInlineLvlSdt.delete": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oInlineLvlSdt = Api.CreateInlineLvlSdt();\noInlineLvlSdt.AddText(\"This is an inline text content control.\");\noParagraph.AddInlineLvlSdt(oInlineLvlSdt);\noInlineLvlSdt.Delete();\noParagraph.AddText(\"The inline text content control was removed.\");\nbuilder.SaveFile(\"docx\", \"Delete.docx\");\nbuilder.CloseFile();"
		},
		"ApiInlineLvlSdt.getalias": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oInlineLvlSdt = Api.CreateInlineLvlSdt();\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is an inline text content control with alias 'â„–1'.\");\noInlineLvlSdt.AddElement(oRun, 0);\noInlineLvlSdt.SetAlias(\"â„–1\");\noParagraph.AddInlineLvlSdt(oInlineLvlSdt);\nvar oAlias = oInlineLvlSdt.GetAlias();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Alias: \" + oAlias);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetAlias.docx\");\nbuilder.CloseFile();"
		},
		"ApiInlineLvlSdt.getclasstype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oInlineLvlSdt = Api.CreateInlineLvlSdt();\noParagraph.AddInlineLvlSdt(oInlineLvlSdt);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is an inline text content control.\");\noInlineLvlSdt.AddElement(oRun, 0);\nvar sClassType = oInlineLvlSdt.GetClassType();\noParagraph.AddLineBreak();\noParagraph.AddText(\"Class Type = \" + sClassType);\nbuilder.SaveFile(\"docx\", \"GetClassType.docx\");\nbuilder.CloseFile();"
		},
		"ApiInlineLvlSdt.getelement": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oInlineLvlSdt = Api.CreateInlineLvlSdt();\noParagraph.AddInlineLvlSdt(oInlineLvlSdt);\nfor (let nPos = 0; nPos < 10; ++nPos) {\n    var curRun = Api.CreateRun();\n    curRun.AddText(\"This is text run \" + (nPos + 1) + \". \");\n    oInlineLvlSdt.AddElement(curRun);\n}\nvar changeRun = oInlineLvlSdt.GetElement(4);\nchangeRun.SetBold(true);\noParagraph.AddLineBreak();\noParagraph.AddLineBreak();\noParagraph.AddLineBreak();\noParagraph.AddText(\"We added 10 text runs to the above inline text content control. Then we changed the fifth run, so it is different from the others.\");\nbuilder.SaveFile(\"docx\", \"GetElement.docx\");\nbuilder.CloseFile();"
		},
		"ApiInlineLvlSdt.getelementscount": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oInlineLvlSdt = Api.CreateInlineLvlSdt();\noParagraph.AddInlineLvlSdt(oInlineLvlSdt);\noParagraph.AddLineBreak();\noInlineLvlSdtCount = oInlineLvlSdt.GetElementsCount();\noParagraph.AddText(\"Number of elements in oInlineLvlSdt (before adding anything) = \" + oInlineLvlSdtCount);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is an inline text content control. \");\noInlineLvlSdt.AddElement(oRun, 0);\noParagraph.AddLineBreak();\nvar oInlineLvlSdtCount = oInlineLvlSdt.GetElementsCount();\noParagraph.AddText(\"Number of elements in oInlineLvlSdt (after adding one element) = \" + oInlineLvlSdtCount);\nvar oRun1 = Api.CreateRun();\noRun1.AddText(\"One more element of the inline text content control.\");\noInlineLvlSdt.AddElement(oRun1, 1);\noInlineLvlSdtCount = oInlineLvlSdt.GetElementsCount();\noParagraph.AddLineBreak();\noParagraph.AddText(\"Number of elements in oInlineLvlSdt (after adding one more element) = \" + oInlineLvlSdtCount);\nbuilder.SaveFile(\"docx\", \"GetElementsCount.docx\");\nbuilder.CloseFile();"
		},
		"ApiInlineLvlSdt.getlabel": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oInlineLvlSdt = Api.CreateInlineLvlSdt();\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is an inline text content control with a label set to it.\");\noInlineLvlSdt.AddElement(oRun, 0);\noInlineLvlSdt.SetLabel(\"2147483647\");\noParagraph.AddInlineLvlSdt(oInlineLvlSdt);\nvar sLabel = oInlineLvlSdt.GetLabel();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Label: \" + sLabel);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetLabel.docx\");\nbuilder.CloseFile();"
		},
		"ApiInlineLvlSdt.getlock": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oInlineLvlSdt = Api.CreateInlineLvlSdt();\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is an inline text content control with the content lock set to it.\");\noInlineLvlSdt.AddElement(oRun, 0);\noInlineLvlSdt.SetLock(\"sdtContentLocked\");\noParagraph.AddInlineLvlSdt(oInlineLvlSdt);\nvar sLock = oInlineLvlSdt.GetLock();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Lock type: \" + sLock);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetLock.docx\");\nbuilder.CloseFile();"
		},
		"ApiInlineLvlSdt.getparentcontentcontrol": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oInlineLvlSdt1 = Api.CreateInlineLvlSdt();\noInlineLvlSdt1.AddText(\"This is a parent inline text content control.\");\noParagraph.AddInlineLvlSdt(oInlineLvlSdt1);\nvar oInlineLvlSdt2 = Api.CreateInlineLvlSdt();\noInlineLvlSdt2.AddText(\"This is an inline text content control added in another content control.\");\noInlineLvlSdt1.AddElement(oInlineLvlSdt2, 0);\nvar oParentInlineLvlSdt = oInlineLvlSdt2.GetParentContentControl();\noParentInlineLvlSdt.SetAlias(\"â„–1\");\nbuilder.SaveFile(\"docx\", \"GetParentContentControl.docx\");\nbuilder.CloseFile();"
		},
		"ApiInlineLvlSdt.getparentparagraph": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a parent paragraph. \");\nvar oInlineLvlSdt = Api.CreateInlineLvlSdt();\noInlineLvlSdt.AddText(\"This is an inline text content control added to the paragraph.\");\noParagraph.AddInlineLvlSdt(oInlineLvlSdt);\nvar oParentParagraph = oInlineLvlSdt.GetParentParagraph();\noParentParagraph.SetBold(true);\nbuilder.SaveFile(\"docx\", \"GetParentParagraph.docx\");\nbuilder.CloseFile();"
		},
		"ApiInlineLvlSdt.getparenttable": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nvar oInlineLvlSdt = Api.CreateInlineLvlSdt();\noInlineLvlSdt.AddText(\"This is an inline text content control.\");\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddElement(oInlineLvlSdt, 0);\nvar oCell = oTable.GetRow(0).GetCell(0);\noCell.AddElement(0, oParagraph);\nvar oParentTable = oInlineLvlSdt.GetParentTable();\noCell = oParentTable.GetRow(2).GetCell(0);\noParentTable.RemoveRow(oCell);\nbuilder.SaveFile(\"docx\", \"GetParentTable.docx\");\nbuilder.CloseFile();"
		},
		"ApiInlineLvlSdt.getparenttablecell": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nvar oInlineLvlSdt = Api.CreateInlineLvlSdt();\noInlineLvlSdt.AddText(\"This is an inline text content control.\");\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddElement(oInlineLvlSdt, 0);\nvar oCell = oTable.GetRow(0).GetCell(0);\noCell.AddElement(0, oParagraph);\nvar oParentTableCell = oInlineLvlSdt.GetParentTableCell();\noParentTableCell.SetShd(\"clear\", 0xff, 0x68, 0x00, false);\nbuilder.SaveFile(\"docx\", \"GetParentTableCell.docx\");\nbuilder.CloseFile();"
		},
		"ApiInlineLvlSdt.getplaceholdertext": {
			"script": "builder.CreateFile(\"docxf\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"Add a combo box to the next line (Forms -> Combo Box), copy the macro above (without the first and last two lines) and run it (Plugins -> Macros).\");\noParagraph.AddElement(oRun);\nvar aForms = oDocument.GetAllForms();\noParagraph.RemoveElement(0);\nvar sText = aForms[0].GetPlaceholderText();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Placeholder text: \" + sText);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docxf\", \"GetPlaceholderText.docxf\");\nbuilder.CloseFile();"
		},
		"ApiInlineLvlSdt.getrange": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oInlineLvlSdt = Api.CreateInlineLvlSdt();\noInlineLvlSdt.AddText(\"This is an inline text content control.\");\noParagraph.AddInlineLvlSdt(oInlineLvlSdt);\nvar oRange = oInlineLvlSdt.GetRange(11, 16);\noRange.SetBold(true);\nbuilder.SaveFile(\"docx\", \"GetRange.docx\");\nbuilder.CloseFile();"
		},
		"ApiInlineLvlSdt.gettag": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oInlineLvlSdt = Api.CreateInlineLvlSdt();\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is an inline text content control with a tag set to it.\");\noInlineLvlSdt.AddElement(oRun, 0);\noInlineLvlSdt.SetTag(\"This is a tag\");\noParagraph.AddInlineLvlSdt(oInlineLvlSdt);\nvar sTag = oInlineLvlSdt.GetTag();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Tag: \" + sTag);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetTag.docx\");\nbuilder.CloseFile();"
		},
		"ApiInlineLvlSdt.isform": {
			"script": "builder.CreateFile(\"docxf\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"Add a combo box to the next line (Forms -> Combo Box), copy the macro above (without the first and last two lines) and run it (Plugins -> Macros).\");\noParagraph.AddElement(oRun);\nvar aForms = oDocument.GetAllForms();\noParagraph.RemoveElement(0);\nvar bForm = aForms[0].IsForm();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The first content control from this document is a form: \" + bForm);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docxf\", \"IsForm.docxf\");\nbuilder.CloseFile();"
		},
		"ApiInlineLvlSdt.push": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oInlineLvlSdt = Api.CreateInlineLvlSdt();\noParagraph.AddInlineLvlSdt(oInlineLvlSdt);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is an inline text content control. \");\noInlineLvlSdt.AddElement(oRun, 0);\noRun = Api.CreateRun();\noRun.AddText(\"This sentence was pushed here.\");\noInlineLvlSdt.Push(oRun);\nbuilder.SaveFile(\"docx\", \"Push.docx\");\nbuilder.CloseFile();"
		},
		"ApiInlineLvlSdt.removeallelements": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oInlineLvlSdt = Api.CreateInlineLvlSdt();\noParagraph.AddInlineLvlSdt(oInlineLvlSdt);\noInlineLvlSdt.AddText(\"This is an inline text content control.\");\noInlineLvlSdt.RemoveAllElements();\noInlineLvlSdt.AddText(\"We removed all the inline content control elements.\");\nbuilder.SaveFile(\"docx\", \"RemoveAllElements.docx\");\nbuilder.CloseFile();"
		},
		"ApiInlineLvlSdt.removeelement": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oInlineLvlSdt = Api.CreateInlineLvlSdt();\noParagraph.AddInlineLvlSdt(oInlineLvlSdt);\nvar oRun1 = Api.CreateRun();\noRun1.AddText(\"This is the first text run in the inline text content control.\");\noInlineLvlSdt.AddElement(oRun1, 0);\nvar oRun2 = Api.CreateRun();\noRun2.AddText(\"This is the second text run in the inline text content control. The first text run was removed.\");\noInlineLvlSdt.AddElement(oRun2, 1);\noInlineLvlSdt.RemoveElement(0);\nbuilder.SaveFile(\"docx\", \"RemoveElement.docx\");\nbuilder.CloseFile();"
		},
		"ApiInlineLvlSdt.setalias": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oInlineLvlSdt = Api.CreateInlineLvlSdt();\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is an inline text content control with alias 'â„–1'.\");\noInlineLvlSdt.AddElement(oRun, 0);\noInlineLvlSdt.SetAlias(\"â„–1\");\noParagraph.AddInlineLvlSdt(oInlineLvlSdt);\nvar sAlias = oInlineLvlSdt.GetAlias();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Alias: \" + sAlias);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetAlias.docx\");\nbuilder.CloseFile();"
		},
		"ApiInlineLvlSdt.setlabel": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oInlineLvlSdt = Api.CreateInlineLvlSdt();\noParagraph.AddInlineLvlSdt(oInlineLvlSdt);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is an inline text content control with a label set to it.\");\noInlineLvlSdt.SetLabel(\"2147483647\");\noInlineLvlSdt.AddElement(oRun, 0);\nvar sLabel = oInlineLvlSdt.GetLabel();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Label: \" + sLabel);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetLabel.docx\");\nbuilder.CloseFile();"
		},
		"ApiInlineLvlSdt.setlock": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oInlineLvlSdt = Api.CreateInlineLvlSdt();\noParagraph.AddInlineLvlSdt(oInlineLvlSdt);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is an inline text content control with the content lock set to it.\");\noInlineLvlSdt.SetLock(\"sdtContentLocked\");\noInlineLvlSdt.AddElement(oRun, 0);\nvar sLock = oInlineLvlSdt.GetLock();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Lock type: \" + sLock);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetLock.docx\");\nbuilder.CloseFile();"
		},
		"ApiInlineLvlSdt.setplaceholdertext": {
			"script": "builder.CreateFile(\"docxf\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"Add a combo box to the next line (Forms -> Combo Box), copy the macro above (without the first and last two lines) and run it (Plugins -> Macros).\");\noParagraph.AddElement(oRun);\nvar aForms = oDocument.GetAllForms();\noParagraph.RemoveElement(0);\nvar sText = aForms[0].SetPlaceholderText(\"Name\");\nbuilder.SaveFile(\"docxf\", \"SetPlaceholderText.docxf\");\nbuilder.CloseFile();"
		},
		"ApiInlineLvlSdt.settag": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oInlineLvlSdt = Api.CreateInlineLvlSdt();\noParagraph.AddInlineLvlSdt(oInlineLvlSdt);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is an inline text content control with a tag set to it.\");\noInlineLvlSdt.SetTag(\"This is a tag\");\noInlineLvlSdt.AddElement(oRun, 0);\nvar sTag = oInlineLvlSdt.GetTag();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Tag: \" + sTag);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetTag.docx\");\nbuilder.CloseFile();"
		},
		"ApiInlineLvlSdt.settextpr": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oInlineLvlSdt = Api.CreateInlineLvlSdt();\noInlineLvlSdt.AddText(\"This is an inline text content control with the font size set to 30 and the font weight set to bold.\");\noParagraph.AddInlineLvlSdt(oInlineLvlSdt);\nvar oTextPr = oDocument.GetDefaultTextPr();\noTextPr.SetFontSize(30);\noTextPr.SetBold(true);\noInlineLvlSdt.SetTextPr(oTextPr);\nbuilder.SaveFile(\"docx\", \"SetTextPr.docx\");\nbuilder.CloseFile();"
		},
		"ApiNumbering.getclasstype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oNumbering = oDocument.CreateNumbering(\"bullet\");\nfor (let nLvl = 0; nLvl < 8; ++nLvl) {\n  var oNumLvl = oNumbering.GetLevel(nLvl);\n  var oParagraph = Api.CreateParagraph();\n  oParagraph.AddText(\"Default bullet lvl \" + (nLvl + 1));\n  oParagraph.SetNumbering(oNumLvl);\n  oParagraph.SetContextualSpacing(true);\n  oDocument.Push(oParagraph);\n}\nvar sClassType = oNumbering.GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class Type = \" + sClassType);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetClassType.docx\");\nbuilder.CloseFile();"
		},
		"ApiNumbering.getlevel": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oNumbering = oDocument.CreateNumbering(\"bullet\");\nfor (let nLvl = 0; nLvl < 8; ++nLvl) {\n  var oNumLvl = oNumbering.GetLevel(nLvl);\n  var oParagraph = Api.CreateParagraph();\n  oParagraph.AddText(\"Default bullet lvl \" + (nLvl + 1));\n  oParagraph.SetNumbering(oNumLvl);\n  oParagraph.SetContextualSpacing(true);\n  oDocument.Push(oParagraph);\n}\nbuilder.SaveFile(\"docx\", \"GetLevel.docx\");\nbuilder.CloseFile();"
		},
		"ApiNumberingLevel.getclasstype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oNumbering = oDocument.CreateNumbering(\"bullet\");\nfor (let nLvl = 0; nLvl < 8; ++nLvl) {\n  var oNumLvl = oNumbering.GetLevel(nLvl);\n  var oParagraph = Api.CreateParagraph();\n  oParagraph.AddText(\"Default bullet lvl \" + (nLvl + 1));\n  oParagraph.SetNumbering(oNumLvl);\n  oParagraph.SetContextualSpacing(true);\n  oDocument.Push(oParagraph);\n}\nvar sClassType = oNumLvl.GetClassType();\noParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"Class Type = \" + sClassType);\nbuilder.SaveFile(\"docx\", \"GetClassType.docx\");\nbuilder.CloseFile();"
		},
		"ApiNumberingLevel.getlevelindex": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oNumbering = oDocument.CreateNumbering(\"numbered\");\nvar oNumLvl = oNumbering.GetLevel(0);\nvar oNumLvl1 = oNumbering.GetLevel(1);\noNumLvl1.SetRestart(false);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.SetNumbering(oNumLvl);\noParagraph.AddText(\"This is the first element of a parent numbered list which starts with '1'\");\noParagraph = Api.CreateParagraph();\noParagraph.SetNumbering(oNumLvl1);\noParagraph.AddText(\"This is the first element of a child numbered list which starts with 'a'\");\noDocument.Push(oParagraph);\noParagraph = Api.CreateParagraph();\noParagraph.SetNumbering(oNumLvl1);\noParagraph.AddText(\"This is the second element of a child numbered list which starts with 'b'\");\noDocument.Push(oParagraph);\noParagraph = Api.CreateParagraph();\nvar nLevelIndex = oNumLvl.GetLevelIndex();\noParagraph.AddText(\"Level index for the parent numbered list = \" + nLevelIndex);\noDocument.Push(oParagraph);\noParagraph = Api.CreateParagraph();\nnLevelIndex = oNumLvl1.GetLevelIndex();\noParagraph.AddText(\"Level index for the element of a child numbered list  = \" + nLevelIndex);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetLevelIndex.docx\");\nbuilder.CloseFile();"
		},
		"ApiNumberingLevel.getnumbering": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oNumbering = oDocument.CreateNumbering(\"numbered\");\nvar oNumLvl = oNumbering.GetLevel(0);\nvar oNumLvl1 = oNumbering.GetLevel(1);\noNumLvl1.SetRestart(false);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.SetNumbering(oNumLvl);\noParagraph.AddText(\"This is the first element of a parent numbered list which starts with '1'\");\noParagraph = Api.CreateParagraph();\noParagraph.SetNumbering(oNumLvl1);\noParagraph.AddText(\"This is the first element of a child numbered list which starts with 'a'\");\noDocument.Push(oParagraph);\noParagraph = Api.CreateParagraph();\noParagraph.SetNumbering(oNumLvl1);\noParagraph.AddText(\"This is the second element of a child numbered list which starts with 'b'\");\noDocument.Push(oParagraph);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a paragraph without a numbering. \");\noParagraph.AddText(\"It can be inserted between the numbered elements.\");\noDocument.Push(oParagraph);\noNumbering = oNumLvl.GetNumbering();\nvar oNumLvl2 = oNumbering.GetLevel(oNumLvl.GetLevelIndex());\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is the second element of a parent numbered list which starts with '2'\");\noParagraph.SetNumbering(oNumLvl2);\noParagraph.SetContextualSpacing(true);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetNumbering.docx\");\nbuilder.CloseFile();"
		},
		"ApiNumberingLevel.getparapr": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oNumbering = oDocument.CreateNumbering(\"numbered\");\nvar oNumLvl = oNumbering.GetLevel(0);\nvar oParaPr = oNumLvl.GetParaPr();\noParaPr.SetSpacingLine(480, \"auto\");\noParaPr.SetJc(\"both\");\noParaPr.SetIndFirstLine(720);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.SetNumbering(oNumLvl);\noParagraph.AddText(\"This is the first element of a parent numbered list which starts with '1'\");\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is the second element of a parent numbered list which starts with '2'\");\noParagraph.SetNumbering(oNumLvl);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetParaPr.docx\");\nbuilder.CloseFile();"
		},
		"ApiNumberingLevel.gettextpr": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oNumbering = oDocument.CreateNumbering(\"numbered\");\nvar oNumLvl = oNumbering.GetLevel(0);\nvar oTextPr = oNumLvl.GetTextPr();\noTextPr.SetBold(true);\noTextPr.SetFontFamily(\"Calibri\");\noTextPr.SetFontSize(28);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.SetNumbering(oNumLvl);\noParagraph.AddText(\"This is the first element of a numbered list which starts with '1'\");\noParagraph = Api.CreateParagraph();\noParagraph.SetNumbering(oNumLvl);\noParagraph.AddText(\"This is the second element of a numbered list which starts with '2'\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetTextPr.docx\");\nbuilder.CloseFile();"
		},
		"ApiNumberingLevel.setcustomtype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oNumbering = oDocument.CreateNumbering(\"numbered\");\nfor (let nLvl = 0; nLvl < 8; ++nLvl) {\n  var oNumLvl = oNumbering.GetLevel(nLvl);\n  var sFormatString = \"\";\n  for (let nTempLvl = 0; nTempLvl <= nLvl; ++nTempLvl) sFormatString += \"%\" + nTempLvl + \".\";\n  oNumLvl.SetCustomType(\"lowerRoman\", sFormatString, \"left\");\n  oNumLvl.SetStart(nLvl + 1);\n  oNumLvl.SetSuff(\"space\");\n  var oParagraph = Api.CreateParagraph();\n  oParagraph.AddText(\"Custom numbered lvl \" + (nLvl + 1));\n  oParagraph.SetNumbering(oNumLvl);\n  oParagraph.SetContextualSpacing(true);\n  oDocument.Push(oParagraph);\n  oParagraph = Api.CreateParagraph();\n  oParagraph.AddText(\"Custom numbered lvl \" + (nLvl + 1));\n  oParagraph.SetNumbering(oNumLvl);\n  oParagraph.SetContextualSpacing(true);\n  oDocument.Push(oParagraph);\n}\nbuilder.SaveFile(\"docx\", \"SetCustomType.docx\");\nbuilder.CloseFile();"
		},
		"ApiNumberingLevel.setrestart": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oNumbering = oDocument.CreateNumbering(\"numbered\");\nvar oNumLvl = oNumbering.GetLevel(0);\nvar oNumLvl1 = oNumbering.GetLevel(1);\noNumLvl1.SetRestart(false);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.SetNumbering(oNumLvl);\noParagraph.AddText(\"This is the first element of a parent numbered list which starts with '1'\");\noParagraph = Api.CreateParagraph();\noParagraph.SetNumbering(oNumLvl1);\noParagraph.AddText(\"This is the first element of a child numbered list which starts with 'a'\");\noDocument.Push(oParagraph);\noParagraph = Api.CreateParagraph();\noParagraph.SetNumbering(oNumLvl1);\noParagraph.AddText(\"This is the second element of a child numbered list which starts with 'b'\");\noDocument.Push(oParagraph);\noParagraph = Api.CreateParagraph();\noParagraph.SetNumbering(oNumLvl);\noParagraph.AddText(\"This is the second element of a parent numbered list which starts with '2'\");\noDocument.Push(oParagraph);\noParagraph = Api.CreateParagraph();\noParagraph.SetNumbering(oNumLvl1);\noParagraph.AddText(\"This is the third element of a child numbered list which starts with 'c'\");\noDocument.Push(oParagraph);\noParagraph = Api.CreateParagraph();\noParagraph.SetNumbering(oNumLvl1);\noParagraph.AddText(\"This is the fourth element of a child numbered list which starts with 'd'\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetRestart.docx\");\nbuilder.CloseFile();"
		},
		"ApiNumberingLevel.setstart": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oNumbering = oDocument.CreateNumbering(\"numbered\");\nvar oNumLvl = oNumbering.GetLevel(0);\nvar oNumLvl1 = oNumbering.GetLevel(1);\noNumLvl1.SetStart(5);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.SetNumbering(oNumLvl);\noParagraph.AddText(\"This is the first element of a parent numbered list which starts with '1'\");\noParagraph = Api.CreateParagraph();\noParagraph.SetNumbering(oNumLvl1);\noParagraph.AddText(\"This is the first element of a child numbered list which starts with 'e'\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetStart.docx\");\nbuilder.CloseFile();"
		},
		"ApiNumberingLevel.setsuff": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oNumbering = oDocument.CreateNumbering(\"numbered\");\nvar oNumLvl = oNumbering.GetLevel(0);\noNumLvl.SetCustomType(\"decimalZero\", \"repeating text %1\", \"left\");\noNumLvl.SetSuff(\"space\");\nvar oParagraph = oDocument.GetElement(0);\noParagraph.SetNumbering(oNumLvl);\noParagraph.AddText(\"This is the first element of a numbered list using custom text with numbering\");\noParagraph = Api.CreateParagraph();\noParagraph.SetNumbering(oNumLvl);\noParagraph.AddText(\"This is the second element of a numbered list using custom text with numbering\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetSuff.docx\");\nbuilder.CloseFile();"
		},
		"ApiNumberingLevel.settemplatetype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oNumbering = oDocument.CreateNumbering(\"numbered\");\nvar oNumLvl = oNumbering.GetLevel(0);\noNumLvl.SetTemplateType(\"A.\");\nvar oParagraph = oDocument.GetElement(0);\noParagraph.SetNumbering(oNumLvl);\noParagraph.AddText(\"This is the first element of an A.-B.-C. numbered list\");\noParagraph = Api.CreateParagraph();\noParagraph.SetNumbering(oNumLvl);\noParagraph.AddText(\"This is the second element of an A.-B.-C. numbered list\");\noDocument.Push(oParagraph);\noParagraph = Api.CreateParagraph();\noParagraph.SetNumbering(oNumLvl);\noParagraph.AddText(\"This is the third element of an A.-B.-C. numbered list\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetTemplateType.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.addbookmarkcrossref": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument(); \nvar oParagraph = oDocument.GetElement(0); \noParagraph.AddText(\"ONLYOFFICE Document Builder\"); \nvar oRange = oDocument.GetRange(0, 9); \noRange.AddBookmark(\"Bookmark\");\nvar aBookmarks = oDocument.GetAllBookmarksNames();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"A bookmark was added \");\noDocument.Push(oParagraph);\noParagraph.AddBookmarkCrossRef(\"aboveBelow\", aBookmarks[0]);\nbuilder.SaveFile(\"docx\", \"AddBookmarkCrossRef.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.addcaptioncrossref": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oElement = oDocument.GetElement(0);\nvar nElementCount = oElement.GetElementsCount();\nif (nElementCount == 1) {\n    var oRun = Api.CreateRun();\n    oRun.AddText(\"Add a caption to the table. To do this, select the table below, open the References tab, click Caption, change caption parameters in the opened window if you want and click OK. After that, copy the macro above (without the first and last two lines) and run it (Plugins -> Macros).\");\n    oElement.AddElement(oRun);\n    var oTable = Api.CreateTable(3, 3);\n    var oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\n    oTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\n    oTable.SetStyle(oTableStyle);\n    oTable.SetWidth(\"percent\", 100);\n    oDocument.Push(oTable);\n}\nelse {\n    var aCaptionParagraphs = oDocument.GetAllCaptionParagraphs(\"table\");\n    var oParagraph = Api.CreateParagraph();\n    oParagraph.AddText(\"Complete \");\n    oDocument.Push(oParagraph);\n    oParagraph.AddCaptionCrossRef(\"table\", \"labelNumber\", aCaptionParagraphs[0]);\n}\nbuilder.SaveFile(\"docx\", \"AddCaptionCrossRef.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.addcolumnbreak": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oSection = oDocument.GetFinalSection();\noSection.SetEqualColumns(2, 720);\nvar oRun = oParagraph.AddText(\"This is the text for the first column. It is written all in one text run. Nothing special.\");\noParagraph.AddColumnBreak();\noRun = oParagraph.AddText(\"This is the text which starts from the beginning of the second column. \");\noRun = oParagraph.AddText(\"It is written in two text runs, you need a space at the end of the first run sentence to separate them.\");\nbuilder.SaveFile(\"docx\", \"AddColumnBreak.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.addcomment": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is just a sample paragraph.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"The comment was added to this document.\");\noParagraph.AddComment(\"comment\", \"Jane\");\nbuilder.SaveFile(\"docx\", \"AddComment.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.adddrawing": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oDrawing = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noDrawing.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noDrawing.SetHorAxisTitle(\"Year\", 11);\noDrawing.SetLegendPos(\"bottom\");\noDrawing.SetShowDataLabels(false, false, true, false);\noDrawing.SetTitle(\"Financial Overview\", 13);\noParagraph.AddDrawing(oDrawing);\nbuilder.SaveFile(\"docx\", \"AddDrawing.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.addelement": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a text run. Nothing special.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"docx\", \"AddElement.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.addendnotecrossref": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oElement = oDocument.GetElement(0);\nvar nElementCount = oElement.GetElementsCount();\nif (nElementCount == 1) {\n    var oRun = Api.CreateRun();\n    oRun.AddText(\"Add any endnote to this page. To do this, select any word or word phrase in this sentences, open the References tab, click the arrow next to the Footnote icon and choose the Insert Endnote option from the menu. Enter the endnote text. After that, copy the macro above (without the first and last two lines) and run it (Plugins -> Macros).\");\n    oElement.AddElement(oRun);\n}\nelse {\n    var aEndNotesFirstParagraphs = oDocument.GetEndNotesFirstParagraphs();\n    var oParagraph = Api.CreateParagraph();\n    oParagraph.AddText(\"For more information on previous sentences see endnote on page \");\n    oDocument.Push(oParagraph);\n    oParagraph.AddEndnoteCrossRef(\"pageNum\", aEndNotesFirstParagraphs[0]);\n}\nbuilder.SaveFile(\"docx\", \"AddEndnoteCrossRef.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.addfootnotecrossref": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oElement = oDocument.GetElement(0);\nvar nElementCount = oElement.GetElementsCount();\nif (nElementCount == 1) {\n    var oRun = Api.CreateRun();\n    oRun.AddText(\"Add any footnote to this page. To do this, select any word or word phrase in this sentences, open the References tab and click Footnote. Enter the footnote text. After that, copy the macro above (without the first and last two lines) and run it (Plugins -> Macros).\");\n    oElement.AddElement(oRun);\n}\nelse {\n    var aFootnotesFirstParagraphs = oDocument.GetFootnotesFirstParagraphs();\n    var oParagraph = Api.CreateParagraph();\n    oParagraph.AddText(\"For more information on previous sentences see footnote \");\n    oDocument.Push(oParagraph);\n    oParagraph.AddFootnoteCrossRef(\"formFootnoteNum\", aFootnotesFirstParagraphs[0]);\n}\nbuilder.SaveFile(\"docx\", \"AddFootnoteCrossRef.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.addheadingcrossref": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oNewDocumentStyle = oDocument.GetStyle(\"Heading 1\");\nvar oParagraph = oDocument.GetElement(0);\noParagraph.SetStyle(oNewDocumentStyle);\noParagraph.AddText(\"Cross-reference method\");\nvar aHeadingParagraphs = oDocument.GetAllHeadingParagraphs();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Heading 1 style is applied to the heading \");\noDocument.Push(oParagraph);\noParagraph.AddHeadingCrossRef(\"text\", aHeadingParagraphs[0]);\nbuilder.SaveFile(\"docx\", \"AddHeadingCrossRef.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.addhyperlink": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"ONLYOFFICE Document Builder\");\noParagraph.AddElement(oRun);\noParagraph.AddHyperlink(\"https://api.onlyoffice.com/docbuilder/basic\", \"docbuilder\");\nbuilder.SaveFile(\"docx\", \"AddHyperlink.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.addinlinelvlsdt": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oInlineLvlSdt = Api.CreateInlineLvlSdt();\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is an inline text content control.\");\noInlineLvlSdt.AddElement(oRun, 0);\noParagraph.AddInlineLvlSdt(oInlineLvlSdt);\nbuilder.SaveFile(\"docx\", \"AddInlineLvlSdt.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.addlinebreak": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = oParagraph.AddText(\"This is the text for the first line. Nothing special.\");\noParagraph.AddLineBreak();\noRun = oParagraph.AddText(\"This is the text which starts from the beginning of the second line. \");\noRun = oParagraph.AddText(\"It is written in two text runs, you need a space at the end of the first run sentence to separate them.\");\nbuilder.SaveFile(\"docx\", \"AddLineBreak.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.addnumberedcrossref": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oNumbering = oDocument.CreateNumbering(\"numbered\");\nfor (let nLvl = 0; nLvl < 8; ++nLvl) {\n  var oNumLvl = oNumbering.GetLevel(nLvl);\n  var sFormatString = \"\";\n  for (let nTempLvl = 0; nTempLvl <= nLvl; ++nTempLvl) sFormatString += \"%\" + nTempLvl + \".\";\n  oNumLvl.SetCustomType(\"lowerRoman\", sFormatString, \"left\");\n  oNumLvl.SetStart(nLvl + 1);\n  oNumLvl.SetSuff(\"space\");\n  var oParagraph = Api.CreateParagraph();\n  oParagraph.AddText(\"Custom numbered lvl \" + (nLvl + 1));\n  oParagraph.SetNumbering(oNumLvl);\n  oParagraph.SetContextualSpacing(true);\n  oDocument.Push(oParagraph);\n}\nvar aNumberedParagraphs = oDocument.GetAllNumberedParagraphs();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"An example of the customized numbering type can be found in the paragraph â„– \");\noDocument.Push(oParagraph);\noParagraph.AddNumberedCrossRef(\"paraNum\", aNumberedParagraphs[1], true, true);\nbuilder.SaveFile(\"docx\", \"AddNumberedCrossRef.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.addpagebreak": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = oParagraph.AddText(\"This is the text for the first page. After it a page break will be added. Scroll down to the second page to see the text there.\");\noParagraph.AddPageBreak();\noRun = oParagraph.AddText(\"This is the text which starts from the beginning of the second page. \");\noRun = oParagraph.AddText(\"It is written in two text runs, you need a space at the end of the first run sentence to separate them.\");\nbuilder.SaveFile(\"docx\", \"AddPageBreak.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.addpagenumber": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"First page\");\noParagraph.AddPageBreak();\noParagraph.AddText(\"Second page\");\noParagraph.AddPageBreak();\noParagraph.AddText(\"Third page\");\nvar oSection = oDocument.GetFinalSection();\nvar oHeader = oSection.GetHeader(\"default\", true);\noParagraph = oHeader.GetElement(0);\noParagraph.AddText(\"Page #\");\noParagraph.AddPageNumber();\noFooter = oSection.GetFooter(\"default\", true);\noParagraph = oFooter.GetElement(0);\noParagraph.AddText(\"Page #\");\noParagraph.AddPageNumber();\nbuilder.SaveFile(\"docx\", \"AddPageNumber.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.addpagescount": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"First page\");\noParagraph.AddPageBreak();\noParagraph.AddText(\"Second page\");\nvar oSection = oDocument.GetFinalSection();\nvar oHeader = oSection.GetHeader(\"default\", true);\noParagraph = oHeader.GetElement(0);\noParagraph.AddText(\"Page \");\noParagraph.AddPageNumber();\noParagraph.AddText(\" of \");\noParagraph.AddPagesCount();\nbuilder.SaveFile(\"docx\", \"AddPagesCount.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.addtabstop": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is just a sample text. After it three tab stops will be added.\");\noParagraph.AddTabStop();\noParagraph.AddTabStop();\noParagraph.AddTabStop();\noParagraph.AddText(\"This is the text which starts after the tab stops.\");\nbuilder.SaveFile(\"docx\", \"AddTabStop.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.addtext": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is just a sample text. Nothing special.\");\nbuilder.SaveFile(\"docx\", \"AddText.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.copy": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph1 = oDocument.GetElement(0);\noParagraph1.AddText(\"This is just a sample text that was copied.\");\nvar oParagraph2 = oParagraph1.Copy();\noDocument.Push(oParagraph2);\nbuilder.SaveFile(\"docx\", \"Copy.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.delete": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph1 = oDocument.GetElement(0);\noParagraph1.AddText(\"This is just a sample paragraph â„–1.\");\nvar oParagraph2 = Api.CreateParagraph();\noParagraph2.AddText(\"This is just a sample paragraph â„–2.\");\noDocument.Push(oParagraph2);\noParagraph1.Delete();\noParagraph2.AddLineBreak();\noParagraph2.AddText(\"The sample paragraph â„–1 was removed.\");\nbuilder.SaveFile(\"docx\", \"Delete.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getallcharts": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oChart1 = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noParagraph.AddDrawing(oChart1);\nvar oChart2 = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart2.SetTitle(\"Financial Overview\", 13);\noParagraph.AddDrawing(oChart2);\nvar aCharts = oParagraph.GetAllCharts();\nvar oStroke = Api.CreateStroke(1 * 150, Api.CreateSolidFill(Api.CreateRGBColor(155, 64, 1)));\naCharts[1].SetMinorHorizontalGridlines(oStroke);\nbuilder.SaveFile(\"docx\", \"GetAllCharts.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getallcontentcontrols": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oInlineLvlSdt = Api.CreateInlineLvlSdt();\noParagraph.AddInlineLvlSdt(oInlineLvlSdt);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is an inline text content control.\");\noInlineLvlSdt.AddElement(oRun);\nvar aContentControls = oParagraph.GetAllContentControls();\naContentControls[0].GetElement(0).SetBold(true);\nvar sClassType = aContentControls[0].GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class type: \" + sClassType);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetAllContentControls.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getalldrawingobjects": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing1 = Api.CreateShape(\"rect\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oDrawing1);\nvar oDrawing2 = Api.CreateChart(\"bar3D\", [\n    [200, 240, 280],\n    [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noDrawing2.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noDrawing2.SetHorAxisTitle(\"Year\", 11);\noDrawing2.SetLegendPos(\"bottom\");\noDrawing2.SetShowDataLabels(false, false, true, false);\noDrawing2.SetTitle(\"Financial Overview\", 13);\noParagraph.AddDrawing(oDrawing2);\nvar aDrawings = oParagraph.GetAllDrawingObjects();\noFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\naDrawings[0].Fill(oFill);\nbuilder.SaveFile(\"docx\", \"GetAllDrawingObjects.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getallimages": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oImage1 = Api.CreateImage(\"https://api.onlyoffice.com/content/img/docbuilder/examples/coordinate_aspects.png\", 60 * 36000, 35 * 36000);\noParagraph.AddDrawing(oImage1);\nvar oImage2 = Api.CreateImage(\"https://api.onlyoffice.com/content/img/editor/sharing_settings.png\", 60 * 36000, 35 * 36000);\noParagraph.AddDrawing(oImage2);\nvar aImages = oParagraph.GetAllImages();\nvar sClassType = aImages[0].GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class type: \" + sClassType);\noDocument.Push(oParagraph); \nbuilder.SaveFile(\"docx\", \"GetAllImages.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getallshapes": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing1 = Api.CreateShape(\"rect\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oDrawing1);\nvar oDrawing2 = Api.CreateShape(\"wave\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oDrawing2);\nvar aDrawings = oParagraph.GetAllShapes();\noFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\naDrawings[1].Fill(oFill);\nbuilder.SaveFile(\"docx\", \"GetAllShapes.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getclasstype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar sClassType = oParagraph.GetClassType();\noParagraph.AddText(\"Class Type = \" + sClassType);\nbuilder.SaveFile(\"docx\", \"GetClassType.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getelement": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = Api.CreateParagraph();\noParagraph.RemoveAllElements();\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is the text for the first text run. Do not forget a space at its end to separate from the second one. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.AddText(\"This is the text for the second run. We will set it bold afterwards. It also needs space at its end. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.AddText(\"This is the text for the third run. It ends the paragraph.\");\noParagraph.AddElement(oRun);\noRun = oParagraph.GetElement(1);\noRun.SetBold(true);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetElement.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getelementscount": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.RemoveAllElements();\nvar oRun = Api.CreateRun();\noRun.AddText(\"Number of paragraph elements at this point: \");\noRun.AddTabStop();\noRun.AddText(\"\" + oParagraph.GetElementsCount());\noRun.AddLineBreak();\noParagraph.AddElement(oRun);\noRun.AddText(\"Number of paragraph elements after we added a text run: \");\noRun.AddTabStop();\noRun.AddText(\"\" + oParagraph.GetElementsCount());\nbuilder.SaveFile(\"docx\", \"GetElementsCount.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getindfirstline": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a paragraph with the indent of 1 inch set to the first line. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph.SetIndFirstLine(1440);\nvar nIndFirstLine = oParagraph.GetIndFirstLine();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"First line indent: \" + nIndFirstLine);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetIndFirstLine.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getindleft": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a paragraph with the indent of 2 inches set to it. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph.SetIndLeft(2880);\nvar nIndLeft = oParagraph.GetIndLeft();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Left indent: \" + nIndLeft);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetIndLeft.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getindright": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a paragraph with the right offset of 2 inches set to it. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph.SetJc(\"right\");\noParagraph.SetIndRight(2880);\nvar nIndRight = oParagraph.GetIndRight();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Right indent: \" + nIndRight);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetIndRight.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getjc": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a paragraph with the text in it aligned by the center. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph.SetJc(\"center\");\nvar sJc = oParagraph.GetJc();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Justification: \" + sJc);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetJc.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getlastrunwithtext": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nfor (let nRunIncrease = 0; nRunIncrease < 5; ++nRunIncrease) {\n    var oRun = Api.CreateRun();\n    oRun.AddText(\"This run # \" + (nRunIncrease + 1) );\n    oParagraph.Push(oRun);\n    oParagraph.AddLineBreak();\n}\nvar oLastRun = oParagraph.GetLastRunWithText();\noLastRun.AddText(\" Last run.\");\nbuilder.SaveFile(\"docx\", \"GetLastRunWithText.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getnext": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph1 = oDocument.GetElement(0);\noParagraph1.AddText(\"This is just a sample paragraph â„–1.\");\nvar oParagraph2 = Api.CreateParagraph();\noParagraph2.AddText(\"This is just a sample paragraph â„–2.\");\noDocument.Push(oParagraph2);\nvar oNextParagraph = oParagraph1.GetNext();\noNextParagraph.SetBold(true);\nbuilder.SaveFile(\"docx\", \"GetNext.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getnumbering": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oNumbering = oDocument.CreateNumbering(\"numbered\");\nvar oNumLvl = oNumbering.GetLevel(0);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is the first element of a numbered list\");\noParagraph.SetNumbering(oNumLvl);\noParagraph.SetContextualSpacing(true);\nvar oNumbering1 = oParagraph.GetNumbering();\noNumLvl = oNumbering.GetLevel(0);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is the second element of a numbered list\");\noParagraph.SetNumbering(oNumLvl);\noParagraph.SetContextualSpacing(true);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetNumbering.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getparagraphmarktextpr": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We set the font size, font color and spacing for the paragraph mark. \");\noParagraph.AddText(\"You can see it if you download the document, open it and enable the invisible symbols display.\");\nvar oParagraphMarkTextPr = oParagraph.GetParagraphMarkTextPr();\noParagraphMarkTextPr.SetFontSize(52);\noParagraphMarkTextPr.SetColor(255, 255, 0, false);\noParagraphMarkTextPr.SetSpacing(5);\nbuilder.SaveFile(\"docx\", \"GetParagraphMarkTextPr.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getparapr": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oParaStyle = oDocument.GetDefaultStyle(\"paragraph\");\noParagraph = oDocument.GetElement(0);\noParagraph.SetStyle(oParaStyle);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetSpacingLine(480, \"auto\");\noParaPr.SetJc(\"both\");\noParaPr.SetIndFirstLine(720);\noParagraph.AddText(\"This is a paragraph with the line spacing, text justification and indent set using the paragraph style. \");\noParagraph.AddText(\"We do not change the style of the paragraph itself. \");\noParagraph.AddText(\"Only document-wide paragraph styles are applied.\");\nbuilder.SaveFile(\"docx\", \"GetParaPr.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getparentcontentcontrol": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oBlockLvlSdt = Api.CreateBlockLvlSdt();\noDocument.Push(oBlockLvlSdt, 0);\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a paragraph added to the block text content control.\");\noBlockLvlSdt.AddElement(oParagraph, 0);\nvar oParentBlockLvlSdt = oParagraph.GetParentContentControl();\noParentBlockLvlSdt.GetRange(0, 3).SetBold(true);\nbuilder.SaveFile(\"docx\", \"GetParentContentControl.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getparenttable": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is just a sample text.\");\nvar oCell = oTable.GetCell(0,0);\noTable.AddElement(oCell, 0, oParagraph);\nvar oParentTable = oParagraph.GetParentTable();\noCell = oParentTable.GetRow(2).GetCell(0);\noParentTable.RemoveRow(oCell);\nbuilder.SaveFile(\"docx\", \"GetParentTable.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getparenttablecell": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is just a sample text.\");\nvar oCell = oTable.GetCell(0,0);\noTable.AddElement(oCell, 0, oParagraph);\nvar oParentTableCell = oParagraph.GetParentTableCell();\noParentTableCell.SetShd(\"clear\", 0xff, 0x68, 0x00, false);\nbuilder.SaveFile(\"docx\", \"GetParentTableCell.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getprevious": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph1 = oDocument.GetElement(0);\noParagraph1.AddText(\"This is just a sample paragraph â„–1.\");\nvar oParagraph2 = Api.CreateParagraph();\noParagraph2.AddText(\"This is just a sample paragraph â„–2.\");\noDocument.Push(oParagraph2);\nvar oPreviousParagraph = oParagraph2.GetPrevious();\noPreviousParagraph.SetBold(true);\nbuilder.SaveFile(\"docx\", \"GetPrevious.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getrange": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is just a sample paragraph.\");\nvar oRange = oParagraph.GetRange(8, 11);\noRange.SetBold(true);\nbuilder.SaveFile(\"docx\", \"GetRange.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getshd": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is an example of setting a shade to a paragraph. \");\noParagraph.SetShd(\"clear\", 255, 0, 0, false);\nvar oShade = oParagraph.GetShd();\noParagraph = Api.CreateParagraph();\nvar oFill = Api.CreateSolidFill(oShade);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 10 * 36000, 3 * 36000, oFill, oStroke);\noParagraph.AddText(\"Shade: \");\noParagraph.AddDrawing(oDrawing);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetShd.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getspacingafter": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph1 = oDocument.GetElement(0);\noParagraph1.AddText(\"This is an example of setting a space after a paragraph. \");\noParagraph1.AddText(\"The second paragraph will have an offset of one inch from the top. \");\noParagraph1.AddText(\"This is due to the fact that the first paragraph has this offset enabled.\");\noParagraph1.SetSpacingAfter(1440);\nvar oParagraph2 = Api.CreateParagraph();\noParagraph2.AddText(\"This is the second paragraph and it is one inch away from the first paragraph.\");\noParagraph2.AddLineBreak();\nvar nSpacingAfter = oParagraph1.GetSpacingAfter();\noParagraph2.AddText(\"Spacing after: \" + nSpacingAfter);\noDocument.Push(oParagraph2);\nbuilder.SaveFile(\"docx\", \"GetSpacingAfter.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getspacingbefore": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph1 = oDocument.GetElement(0);\noParagraph1.AddText(\"This is an example of setting a space before a paragraph. \");\noParagraph1.AddText(\"The second paragraph will have an offset of one inch from the top. \");\noParagraph1.AddText(\"This is due to the fact that the second paragraph has this offset enabled.\");\nvar oParagraph2 = Api.CreateParagraph();\noParagraph2.AddText(\"This is the second paragraph and it is one inch away from the first paragraph.\");\noParagraph2.SetSpacingBefore(1440);\noParagraph2.AddLineBreak();\nvar nSpacingBefore = oParagraph2.GetSpacingBefore();\noParagraph2.AddText(\"Spacing before: \" + nSpacingBefore);\noDocument.Push(oParagraph2);\nbuilder.SaveFile(\"docx\", \"GetSpacingBefore.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getspacinglinerule": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.SetSpacingLine(3 * 240, \"auto\");\noParagraph.AddText(\"Paragraph 1. Spacing: 3 times of a common paragraph line spacing.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddLineBreak();\nvar sSpacingLineRule = oParagraph.GetSpacingLineRule();\noParagraph.AddText(\"Spacing line rule: \" + sSpacingLineRule);\nbuilder.SaveFile(\"docx\", \"GetSpacingLineRule.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getspacinglinevalue": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.SetSpacingLine(3 * 240, \"auto\");\noParagraph.AddText(\"Paragraph 1. Spacing: 3 times of a common paragraph line spacing.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddLineBreak();\nvar nSpacingLineValue = oParagraph.GetSpacingLineValue();\noParagraph.AddText(\"Spacing line value: \" + nSpacingLineValue);\nbuilder.SaveFile(\"docx\", \"GetSpacingLineValue.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getstyle": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oNewDocumentStyle = oDocument.GetStyle(\"Heading 6\");\nvar oParagraph = oDocument.GetElement(0);\noParagraph.SetStyle(oNewDocumentStyle);\noParagraph.AddText(\"This is a text in a paragraph styled with the 'Heading 6' style.\");\nvar oStyle = oParagraph.GetStyle();\noParagraph.AddLineBreak();\noParagraph.AddText(\"Style: \" + oStyle.GetName());\nbuilder.SaveFile(\"docx\", \"GetStyle.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.gettext": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is just a sample text.\");\nvar sText = oParagraph.GetText();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The text of the first paragraph: \" + sText);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetText.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.gettextpr": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph1 = oDocument.GetElement(0);\noParagraph1.AddText(\"This is just a sample text.\");\nvar oParagraph2 = Api.CreateParagraph();\noParagraph2.AddText(\"This is a sample text with the font size set to 30 and the font weight set to bold.\");\noDocument.Push(oParagraph2);\noParagraph2.SetColor(0, 0, 255).SetBold(true);\nvar oTextPr = oParagraph2.GetTextPr();\noParagraph1.SetTextPr(oTextPr);\nbuilder.SaveFile(\"docx\", \"GetTextPr.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.insertincontentcontrol": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a paragraph inserted into the content control.\");\nvar oBlockLvlSdt = oParagraph.InsertInContentControl(1);\noDocument.AddElement(0, oBlockLvlSdt);\nbuilder.SaveFile(\"docx\", \"InsertInContentControl.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.insertparagraph": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph1 = oDocument.GetElement(0);\noParagraph1.AddText(\"This is just a sample text.\");\nvar oParagraph2 = Api.CreateParagraph();\noParagraph2.AddText(\"This paragraph was inserted here.\");\noParagraph1.InsertParagraph(oParagraph2, \"after\", true);\nbuilder.SaveFile(\"docx\", \"InsertParagraph.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.last": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun_1 = Api.CreateRun();\noRun_1.AddText(\"This is an Run with text. \");\noParagraph.Push(oRun_1);\nvar oRun_2 = Api.CreateRun();\noRun_2.AddText(\"And this is the last Run in the paragraph.\");\noParagraph.Push(oRun_2);\nvar oLastRun = oParagraph.Last();\noLastRun.SetBold(true);\nbuilder.SaveFile(\"docx\", \"Last.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.push": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is run #0, you must not push it to take effect.\");\noParagraph.AddElement(oRun);\noParagraph.AddLineBreak();\nfor (let nRunIncrease = 0; nRunIncrease < 5; ++nRunIncrease) {\n  oRun = Api.CreateRun();\n  oRun.AddText(\"This is run #\" + (nRunIncrease + 1) + \", you must push it to take effect.\");\n  oParagraph.AddLineBreak();\n  oParagraph.Push(oRun);\n}\nbuilder.SaveFile(\"docx\", \"Push.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.removeallelements": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is the first text run in the current paragraph.\");\noParagraph.AddElement(oRun);\noParagraph.RemoveAllElements();\noRun = Api.CreateRun();\noRun.AddText(\"We removed all the paragraph elements and added a new text run inside it.\");\noParagraph.AddElement(oRun);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"RemoveAllElements.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.removeelement": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.RemoveAllElements();\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is the first paragraph element. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.AddText(\"This is the second paragraph element. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.AddText(\"This is the third paragraph element (it will be removed from the paragraph and we will not see it). \");\noParagraph.AddElement(oRun);\noParagraph.AddLineBreak();\noRun = Api.CreateRun();\noRun.AddText(\"This is the fourth paragraph element - it became the third, because we removed the previous run from the paragraph. \");\noParagraph.AddElement(oRun);\noParagraph.AddLineBreak();\noRun = Api.CreateRun();\noRun.AddText(\"Please note that line breaks are not counted into paragraph elements!\");\noParagraph.AddElement(oRun);\noParagraph.RemoveElement(2);\nbuilder.SaveFile(\"docx\", \"RemoveElement.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.search": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is just a sample text. This text was added to the paragraph.\");\nvar aSearch = oParagraph.Search(\"text\");\naSearch[0].SetBold(true);\nbuilder.SaveFile(\"docx\", \"Search.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.select": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = editor.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"ONLYOFFICE Document Builder\");\nvar bResult = oParagraph.Select();\nif (bResult === true) {\n    oParagraph.SetItalic(true);\n}\nbuilder.SaveFile(\"docx\", \"Select.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setbetweenborder": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is the first paragraph. We will add a thick green border between it and the next paragraph. \");\noParagraph.AddText(\"No additional spacing between the border and the paragraphs is added.\");\noParagraph.SetBetweenBorder(\"single\", 24, 0, 0, 255, 0);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is the second paragraph. We will add a thin red border between it and the next paragraph. \");\noParagraph.AddText(\"We added additional spacing between the border and the paragraphs.\");\noParagraph.SetBetweenBorder(\"single\", 12, 10, 255, 0, 0);\noDocument.Push(oParagraph);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is the third paragraph. The border can be displayed above it only, as there are no new paragraphs after it.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetBetweenBorder.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setbold": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = editor.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a paragraph with the font set to bold.\");\noParagraph.SetBold(true);\nbuilder.SaveFile(\"docx\", \"SetBold.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setbottomborder": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is the first paragraph. We will add a thin red border below it.\");\noParagraph.SetBottomBorder(\"single\", 8, 0, 255, 0, 0);\nbuilder.SaveFile(\"docx\", \"SetBottomBorder.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setcaps": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a paragraph with the font set to capitalized letters.\");\noParagraph.SetCaps(true);\nbuilder.SaveFile(\"docx\", \"SetCaps.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setcolor": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a paragraph with the font color set to blue.\");\noParagraph.SetColor(0, 0, 255);\nbuilder.SaveFile(\"docx\", \"SetColor.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setcontextualspacing": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a paragraph with contextual spacing set to 'false'.\");\noParagraph.SetContextualSpacing(false);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a paragraph with contextual spacing set to 'false'.\");\noParagraph.SetContextualSpacing(false);\noDocument.Push(oParagraph);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a paragraph with contextual spacing set to 'false'.\");\noParagraph.SetContextualSpacing(false);\noDocument.Push(oParagraph);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a paragraph with contextual spacing set to 'true'.\");\noParagraph.SetContextualSpacing(true);\noDocument.Push(oParagraph);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a paragraph with contextual spacing set to 'true'.\");\noParagraph.SetContextualSpacing(true);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetContextualSpacing.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setdoublestrikeout": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a paragraph with the text struck out with two lines.\");\noParagraph.SetDoubleStrikeout(true);\nbuilder.SaveFile(\"docx\", \"SetDoubleStrikeout.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setfontfamily": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a paragraph with the font family set to 'Consolas'.\");\noParagraph.SetFontFamily(\"Consolas\");\nbuilder.SaveFile(\"docx\", \"SetFontFamily.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setfontsize": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is just a sample paragraph with the font size set to 24 points.\");\noParagraph.SetFontSize(48);\nbuilder.SaveFile(\"docx\", \"SetFontSize.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.sethighlight": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a paragraph with the text highlighted with green color.\");\noParagraph.SetHighlight(\"green\");\nbuilder.SaveFile(\"docx\", \"SetHighlight.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setindfirstline": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a paragraph with the indent of 1 inch set to the first line. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph.SetIndFirstLine(1440);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a paragraph without any indent set to the first line. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetIndFirstLine.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setindleft": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a paragraph with the indent of 2 inches set to it. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.SetIndLeft(2880);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a paragraph without any indent set to it. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetIndLeft.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setindright": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a paragraph with the right offset of 2 inches set to it. \");\noParagraph.AddText(\"We also aligned the text in it by the right side. \");\noParagraph.AddText(\"This sentence is used to add lines for demonstrative purposes.\");\noParagraph.SetJc(\"right\");\noParagraph.SetIndRight(2880);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a paragraph without any offset set to it. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetIndRight.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setitalic": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a text run with the font set to italicized letters.\");\noParagraph.SetItalic(true);\nbuilder.SaveFile(\"docx\", \"SetItalic.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setjc": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a paragraph with the text in it aligned by the left side. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph.SetJc(\"left\");\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a paragraph with the text in it aligned by the right side. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph.SetJc(\"right\");\noDocument.Push(oParagraph);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a paragraph with the text in it aligned by the center. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph.SetJc(\"center\");\noDocument.Push(oParagraph);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a paragraph with the text in it aligned by both sides (justified). \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph.SetJc(\"both\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetJc.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setkeeplines": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is an example of how the paragraph tries to keep lines together. \");\noParagraph.AddText(\"Scroll down to the second page to see it.\");\nfor (let x = 0; x < 5; ++x) {\n  oParagraph = Api.CreateParagraph();\n  for (let i = 0; i < 10; ++i) {\n    oParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\n  }\n  oDocument.Push(oParagraph);\n}\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The paragraph lines are moved to the next page to keep them together. \");\nfor (let i = 0; i < 10; ++i) {\n  oParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\n}\noParagraph.SetKeepLines(true);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetKeepLines.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setkeepnext": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is an example of how the paragraph tries to keep together with the next paragraph. \");\noParagraph.AddText(\"Scroll down to the second page to see it. \");\nfor (let x = 0; x < 5; ++x) {\n  oParagraph = Api.CreateParagraph();\n  for (let i = 0; i < 10; ++i) {\n    oParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\n  }\n  oParagraph.SetKeepNext(true);\n  oDocument.Push(oParagraph);\n}\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The paragraph lines stay on the same page as the previous paragraph. \");\nfor (let i = 0; i < 10; ++i) {\n  oParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\n}\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetKeepNext.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setleftborder": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is the first paragraph. We will add a two point green border at its left side. \");\noParagraph.AddText(\"The space between the left side of the paragraph and the border is 8 points. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph.SetLeftBorder(\"single\", 16, 8, 0, 255, 0);\nbuilder.SaveFile(\"docx\", \"SetLeftBorder.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setnumbering": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oNumbering = oDocument.CreateNumbering(\"bullet\");\nfor (let nLvl = 0; nLvl < 8; ++nLvl) {\n  var oNumLvl = oNumbering.GetLevel(nLvl);\n  var oParagraph = Api.CreateParagraph();\n  oParagraph.AddText(\"Default bullet lvl \" + (nLvl + 1));\n  oParagraph.SetNumbering(oNumLvl);\n  oParagraph.SetContextualSpacing(true);\n  oDocument.Push(oParagraph);\n}\nbuilder.SaveFile(\"docx\", \"SetNumbering.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setnumpr": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oMyStyle = oDocument.CreateStyle(\"My document style\");\nvar oParaPr = oMyStyle.GetParaPr();\nvar oNumbering = oDocument.CreateNumbering(\"bullet\");\nfor (let nLvl = 0; nLvl < 8; ++nLvl) {\n  var oNumLvl = oNumbering.GetLevel(nLvl);\n  var oParagraph = Api.CreateParagraph();\n  oParagraph.AddText(\"Default bullet lvl \" + (nLvl + 1));\n  oParagraph.SetNumbering(oNumLvl);\n  oParagraph.SetContextualSpacing(true);\n  oDocument.Push(oParagraph);\n}\noParagraph = Api.CreateParagraph();\noParagraph.SetStyle(oMyStyle);\noParagraph.SetNumPr(oNumbering, 3);\noParagraph.AddText(\"This is a paragraph styled as level 4 of a bulleted list.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetNumPr.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setpagebreakbefore": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is an example of setting a page break before a paragraph. \");\noParagraph.AddText(\"The second paragraph will start from a new page, as it has a page break before it. \");\noParagraph.AddText(\"Scroll down to the second page to see it. \");\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is the second paragraph and it has page break before it enabled.\");\noParagraph.SetPageBreakBefore(true);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetPageBreakBefore.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setposition": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is just a sample text. \");\nvar oParagraph2 = Api.CreateParagraph();\noParagraph2.AddText(\"This is a paragraph with the text lowered 15 points (30 half-points).\");\noDocument.Push(oParagraph2);\noParagraph2.SetPosition(-30);\nbuilder.SaveFile(\"docx\", \"SetPosition.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setrightborder": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is the first paragraph. We will add a two point red border at its right side. \");\noParagraph.AddText(\"The space between the right side of the paragraph and the border is 8 points. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph.SetRightBorder(\"single\", 16, 8, 255, 0, 0);\nbuilder.SaveFile(\"docx\", \"SetRightBorder.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setshd": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is an example of setting a shade to a paragraph. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.SetShd(\"clear\", 255, 0, 0, false);\nbuilder.SaveFile(\"docx\", \"SetShd.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setsmallcaps": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a paragraph with the font set to small capitalized letters.\");\noParagraph.SetSmallCaps(true);\nbuilder.SaveFile(\"docx\", \"SetSmallCaps.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setspacing": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is just a sample paragraph.\");\noParagraph.SetSpacing(2);\nbuilder.SaveFile(\"docx\", \"SetSpacing.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setspacingafter": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is an example of setting a space after a paragraph. \");\noParagraph.AddText(\"The second paragraph will have an offset of one inch from the top. \");\noParagraph.AddText(\"This is due to the fact that the first paragraph has this offset enabled.\");\noParagraph.SetSpacingAfter(1440);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is the second paragraph and it is one inch away from the first paragraph.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetSpacingAfter.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setspacingbefore": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is an example of setting a space before a paragraph. \");\noParagraph.AddText(\"The second paragraph will have an offset of one inch from the top. \");\noParagraph.AddText(\"This is due to the fact that the second paragraph has this offset enabled.\");\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is the second paragraph and it is one inch away from the first paragraph.\");\noParagraph.SetSpacingBefore(1440);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetSpacingBefore.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setspacingline": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.SetSpacingLine(3 * 240, \"auto\");\noParagraph.AddText(\"Paragraph 1. Spacing: 3 times of a common paragraph line spacing.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph = Api.CreateParagraph();\noParagraph.SetSpacingLine(200, \"exact\");\noParagraph.AddText(\"Paragraph 2. Spacing: exact 10 points.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noDocument.Push(oParagraph);\noParagraph = Api.CreateParagraph();\noParagraph.SetSpacingLine(400, \"atLeast\");\noParagraph.AddText(\"Paragraph 3. Spacing: atLeast 20 points.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetSpacingLine.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setstrikeout": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a paragraph with the text struck out with a single line.\");\noParagraph.SetStrikeout(true);\nbuilder.SaveFile(\"docx\", \"SetStrikeout.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setstyle": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oNewDocumentStyle = oDocument.GetStyle(\"Heading 6\");\nvar oParagraph = oDocument.GetElement(0);\noParagraph.SetStyle(oNewDocumentStyle);\noParagraph.AddText(\"This is a text in a paragraph styled with the 'Heading 6' style.\");\nbuilder.SaveFile(\"docx\", \"SetStyle.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.settabs": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.SetTabs([1440, 4320, 7200], [\"left\", \"center\", \"right\"]);\noParagraph.AddTabStop();\noParagraph.AddText(\"Custom tab - 1 inch left\");\noParagraph.AddLineBreak();\noParagraph.AddTabStop();\noParagraph.AddTabStop();\noParagraph.AddText(\"Custom tab - 3 inches center\");\noParagraph.AddLineBreak();\noParagraph.AddTabStop();\noParagraph.AddTabStop();\noParagraph.AddTabStop();\noParagraph.AddText(\"Custom tab - 5 inches right\");\nbuilder.SaveFile(\"docx\", \"SetTabs.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.settextpr": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a sample text with the font size set to 30 and the font weight set to bold.\");\nvar oTextPr = oDocument.GetDefaultTextPr();\noTextPr.SetFontSize(30);\noTextPr.SetBold(true);\noParagraph.SetTextPr(oTextPr);\nbuilder.SaveFile(\"docx\", \"SetTextPr.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.settopborder": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is the first paragraph. We will add a thick green border above it.\");\noParagraph.SetTopBorder(\"single\", 24, 0, 0, 255, 0);\nbuilder.SaveFile(\"docx\", \"SetTopBorder.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setunderline": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a paragraph with the text underlined with a single line.\");\noParagraph.SetUnderline(true);\nbuilder.SaveFile(\"docx\", \"SetUnderline.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setvertalign": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a paragraph with the text aligned below the baseline vertically.\");\noParagraph.SetVertAlign(\"subscript\");\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a paragraph with the text aligned above the baseline vertically.\");\noParagraph.SetVertAlign(\"superscript\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetVertAlign.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setwidowcontrol": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"The single line of the last paragraph on this page will be prevented from being displayed on a separate page. \");\nfor (let x = 0; x < 5; ++x) {\n  oParagraph = Api.CreateParagraph();\n  for (let i = 0; i < 10; ++i) {\n    oParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\n  }\n  oDocument.Push(oParagraph);\n}\noParagraph = Api.CreateParagraph();\nfor (let i = 0; i < 4; ++i) {\n  oParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\n}\noParagraph.SetWidowControl(true);\noParagraph.AddText(\"This last line is displayed on the next page, because we used the set widow control method set to 'true'.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetWidowControl.docx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.wrapinmailmergefield": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"Paragraph wrapped in 'Mail Merge Field'\");\noParagraph.WrapInMailMergeField();\nbuilder.SaveFile(\"docx\", \"WrapInMailMergeField.docx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.getclasstype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oMyStyle = oDocument.CreateStyle(\"My document style\");\nvar oParaPr = oMyStyle.GetParaPr();\noParaPr.SetLeftBorder(\"single\", 24, 0, 0, 255, 0);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.SetStyle(oMyStyle);\noParagraph.AddText(\"This is the first paragraph. \");\noParagraph.AddText(\"The paragraph properties styled above set a border at its left side.\");\nvar sClassType = oParaPr.GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class Type = \" + sClassType);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetClassType.docx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.getindfirstline": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetIndFirstLine(1440);\noParagraph.AddText(\"This is the first paragraph with the indent of 1 inch set to the first line. \");\noParagraph.AddText(\"This indent is set by the paragraph style. No paragraph inline style is applied. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\nvar nIndFirstLine = oParaPr.GetIndFirstLine();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"First line indent: \" + nIndFirstLine);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetIndFirstLine.docx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.getindleft": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetIndLeft(2880);\noParagraph.AddText(\"This is the first paragraph with the indent of 2 inches set to it. \");\noParagraph.AddText(\"This indent is set by the paragraph style. No paragraph inline style is applied. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\nvar nIndLeft = oParaPr.GetIndLeft();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Left indent: \" + nIndLeft);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetIndLeft.docx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.getindright": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetJc(\"right\");\noParaPr.SetIndRight(2880);\noParagraph.AddText(\"This is the first paragraph with the right offset of 2 inches set to it. \");\noParagraph.AddText(\"This indent is set by the paragraph style. No paragraph inline style is applied. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\nvar nIndRight = oParaPr.GetIndRight();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Right indent: \" + nIndRight);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetIndRight.docx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.getjc": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParagraph.AddText(\"This is a paragraph with the text in it aligned by the center. \");\noParagraph.AddText(\"The justification is specified in the paragraph style. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParaPr.SetJc(\"center\");\nvar sJc = oParaPr.GetJc();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Justification: \" + sJc);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetJc.docx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.getspacingafter": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph1 = oDocument.GetElement(0);\nvar oParaPr = oParagraph1.GetParaPr();\noParaPr.SetSpacingAfter(1440);\noParagraph1.AddText(\"This is an example of setting a space after a paragraph. \");\noParagraph1.AddText(\"The second paragraph will have an offset of one inch from the top. \");\noParagraph1.AddText(\"This is due to the fact that the first paragraph has this offset enabled.\");\nvar oParagraph2 = Api.CreateParagraph();\noParagraph2.AddText(\"This is the second paragraph and it is one inch away from the first paragraph.\");\noParagraph2.AddLineBreak();\nvar nSpacingAfter = oParaPr.GetSpacingAfter();\noParagraph2.AddText(\"Spacing after: \" + nSpacingAfter);\noDocument.Push(oParagraph2);\nbuilder.SaveFile(\"docx\", \"GetSpacingAfter.docx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.getspacingbefore": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is an example of setting a space before a paragraph. \");\noParagraph.AddText(\"The second paragraph will have an offset of one inch from the top. \");\noParagraph.AddText(\"This is due to the fact that the second paragraph has this offset enabled.\");\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is the second paragraph and it is one inch away from the first paragraph.\");\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetSpacingBefore(1440);\noParagraph.AddLineBreak();\nvar nSpacingBefore = oParaPr.GetSpacingBefore();\noParagraph.AddText(\"Spacing before: \" + nSpacingBefore);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetSpacingBefore.docx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.getspacinglinerule": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetSpacingLine(3 * 240, \"auto\");\noParagraph.AddText(\"Paragraph 1. Spacing: 3 times of a common paragraph line spacing.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddLineBreak();\nvar sSpacingLineRule = oParaPr.GetSpacingLineRule();\noParagraph.AddText(\"Spacing line rule: \" + sSpacingLineRule);\nbuilder.SaveFile(\"docx\", \"GetSpacingLineRule.docx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.getspacinglinevalue": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetSpacingLine(3 * 240, \"auto\");\noParagraph.AddText(\"Paragraph 1. Spacing: 3 times of a common paragraph line spacing.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddLineBreak();\nvar nSpacingLineValue = oParaPr.GetSpacingLineValue();\noParagraph.AddText(\"Spacing line value: \" + nSpacingLineValue);\nbuilder.SaveFile(\"docx\", \"GetSpacingLineValue.docx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.getstyle": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oHeading6Style = oDocument.GetStyle(\"Heading 6\");\nvar oParagraph = oDocument.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetJc(\"center\");\noParaPr.SetStyle(oHeading6Style);\noParagraph.AddText(\"This is a text in a paragraph styled with the 'Heading 6' style.\");\nvar oStyle = oParaPr.GetStyle();\noParagraph.AddLineBreak();\noParagraph.AddText(\"Style: \" + oStyle.GetName());\nbuilder.SaveFile(\"docx\", \"GetStyle.docx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.setbetweenborder": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oMyStyle = oDocument.CreateStyle(\"My document style\");\nvar oParaPr = oMyStyle.GetParaPr();\noParaPr.SetBetweenBorder(\"single\", 24, 0, 0, 255, 0);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.SetStyle(oMyStyle);\noParagraph.AddText(\"This is the first paragraph. \");\noParagraph.AddText(\"The paragraph properties styled above set a border between paragraphs.\");\noParagraph = Api.CreateParagraph();\noParagraph.SetStyle(oMyStyle);\noParagraph.AddText(\"This is the second paragraph. \");\noParagraph.AddText(\"No need to add anything additionally to it. \");\noParagraph.AddText(\"The borders between the paragraphs have already been set.\");\noDocument.Push(oParagraph);\noParagraph = Api.CreateParagraph();\noParagraph.SetStyle(oMyStyle);\noParagraph.AddText(\"This is the third paragraph. \");\noParagraph.AddText(\"No need to add anything additionally to it. \");\noParagraph.AddText(\"The borders between the paragraphs have already been set.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetBetweenBorder.docx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.setbottomborder": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oMyStyle = oDocument.CreateStyle(\"My document style\");\nvar oParaPr = oMyStyle.GetParaPr();\noParaPr.SetBottomBorder(\"single\", 24, 0, 0, 255, 0);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.SetStyle(oMyStyle);\noParagraph.AddText(\"This is the first paragraph. \");\noParagraph.AddText(\"The paragraph properties styled above set a border below it.\");\nbuilder.SaveFile(\"docx\", \"SetBottomBorder.docx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.setcontextualspacing": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oMyStyle = oDocument.CreateStyle(\"My document style\");\nvar oParaPr = oMyStyle.GetParaPr();\noParaPr.SetContextualSpacing(true);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a paragraph with contextual spacing set to 'false' (no paragraph style is applied).\");\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a paragraph with contextual spacing set to 'false' (no paragraph style is applied).\");\noDocument.Push(oParagraph);\noParagraph = Api.CreateParagraph();\noParagraph.SetStyle(oMyStyle);\noParagraph.AddText(\"This is a paragraph with contextual spacing set to 'true' (paragraph style is applied).\");\noDocument.Push(oParagraph);\noParagraph = Api.CreateParagraph();\noParagraph.SetStyle(oMyStyle);\noParagraph.AddText(\"This is a paragraph with contextual spacing set to 'true' (paragraph style is applied).\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetContextualSpacing.docx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.setindfirstline": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oMyStyle = oDocument.CreateStyle(\"My document style\");\nvar oParaPr = oMyStyle.GetParaPr();\noParaPr.SetIndFirstLine(1440);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.SetStyle(oMyStyle);\noParagraph.AddText(\"This is the first paragraph with the indent of 1 inch set to the first line. \");\noParagraph.AddText(\"This indent is set by the paragraph style. No paragraph inline style is applied. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph = Api.CreateParagraph();\noParagraph.SetStyle(oMyStyle);\noParagraph.AddText(\"This is the second paragraph with the indent of 1 inch set to the first line. \");\noParagraph.AddText(\"This indent is set by the paragraph style. No paragraph inline style is applied. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetIndFirstLine.docx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.setindleft": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oMyStyle = oDocument.CreateStyle(\"My document style\");\nvar oParaPr = oMyStyle.GetParaPr();\noParaPr.SetIndLeft(2880);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.SetStyle(oMyStyle);\noParagraph.AddText(\"This is the first paragraph with the indent of 2 inches set to it. \");\noParagraph.AddText(\"This indent is set by the paragraph style. No paragraph inline style is applied. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph = Api.CreateParagraph();\noParagraph.SetStyle(oMyStyle);\noParagraph.AddText(\"This is the second paragraph with the indent of 2 inches set to it. \");\noParagraph.AddText(\"This indent is set by the paragraph style. No paragraph inline style is applied. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetIndLeft.docx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.setindright": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oMyStyle = oDocument.CreateStyle(\"My document style\");\nvar oParaPr = oMyStyle.GetParaPr();\noParaPr.SetIndRight(2880);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.SetStyle(oMyStyle);\noParagraph.AddText(\"This is the first paragraph with the right offset of 2 inches set to it. \");\noParagraph.AddText(\"This offset is set by the paragraph style. No paragraph inline style is applied. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph = Api.CreateParagraph();\noParagraph.SetStyle(oMyStyle);\noParagraph.AddText(\"This is the second paragraph with the right offset of 2 inches set to it. \");\noParagraph.AddText(\"This offset is set by the paragraph style. No paragraph inline style is applied. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetIndRight.docx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.setjc": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oMyStyleLeft = oDocument.CreateStyle(\"My style with left text alignment\");\nvar oParaPr = oMyStyleLeft.GetParaPr();\noParaPr.SetJc(\"left\");\nvar oMyStyleRight = oDocument.CreateStyle(\"My style with right text alignment\");\noParaPr = oMyStyleRight.GetParaPr();\noParaPr.SetJc(\"right\");\nvar oMyStyleCenter = oDocument.CreateStyle(\"My style with center text alignment\");\noParaPr = oMyStyleCenter.GetParaPr();\noParaPr.SetJc(\"center\");\nvar oMyStyleBoth = oDocument.CreateStyle(\"My style with justify text alignment\");\noParaPr = oMyStyleBoth.GetParaPr();\noParaPr.SetJc(\"both\");\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a paragraph with the text in it aligned by the left side. \");\noParagraph.AddText(\"The justification is specified in the paragraph style. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph.SetStyle(oMyStyleLeft);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a paragraph with the text in it aligned by the right side. \");\noParagraph.AddText(\"The justification is specified in the paragraph style. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph.SetStyle(oMyStyleRight);\noDocument.Push(oParagraph);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a paragraph with the text in it aligned by the center. \");\noParagraph.AddText(\"The justification is specified in the paragraph style. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph.SetStyle(oMyStyleCenter);\noDocument.Push(oParagraph);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a paragraph with the text in it aligned by both sides (justified). \");\noParagraph.AddText(\"The justification is specified in the paragraph style. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph.SetStyle(oMyStyleBoth);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetJc.docx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.setkeeplines": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oMyStyle = oDocument.CreateStyle(\"My document style\");\nvar oParaPr = oMyStyle.GetParaPr();\noParaPr.SetKeepLines(true);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is an example of how the paragraph tries to keep lines together. \");\noParagraph.AddText(\"Scroll down to the second page to see it.\");\nfor (let x = 0; x < 5; ++x) {\n  oParagraph = Api.CreateParagraph();\n  for (let i = 0; i < 10; ++i) {\n    oParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\n  }\n  oDocument.Push(oParagraph);\n}\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The paragraph lines are moved to the next page to keep them together. \");\nfor (let i = 0; i < 10; ++i) {\n  oParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\n}\noParagraph.SetStyle(oMyStyle);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetKeepLines.docx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.setkeepnext": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oMyStyle = oDocument.CreateStyle(\"My document style\");\nvar oParaPr = oMyStyle.GetParaPr();\noParaPr.SetKeepNext(true);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is an example of how the paragraph tries to keep together with the next paragraph. \");\noParagraph.AddText(\"Scroll down to the second page to see it. \");\nfor (let x = 0; x < 5; ++x) {\n  oParagraph = Api.CreateParagraph();\n  for (let i = 0; i < 10; ++i) {\n    oParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\n  }\n  oParagraph.SetStyle(oMyStyle);\n  oDocument.Push(oParagraph);\n}\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The paragraph lines stay on the same page as the previous paragraph. \");\nfor (let i = 0; i < 10; ++i) {\n  oParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\n}\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetKeepNext.docx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.setleftborder": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oMyStyle = oDocument.CreateStyle(\"My document style\");\nvar oParaPr = oMyStyle.GetParaPr();\noParaPr.SetLeftBorder(\"single\", 24, 0, 0, 255, 0);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.SetStyle(oMyStyle);\noParagraph.AddText(\"This is the first paragraph. \");\noParagraph.AddText(\"The paragraph properties styled above set a border at its left side.\");\nbuilder.SaveFile(\"docx\", \"SetLeftBorder.docx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.setnumpr": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oMyStyle = oDocument.CreateStyle(\"My document style\");\nvar oParaPr = oMyStyle.GetParaPr();\nvar oNumbering = oDocument.CreateNumbering(\"bullet\");\noParaPr.SetNumPr(oNumbering);\nfor (let nLvl = 0; nLvl < 8; ++nLvl) {\n  var oNumLvl = oNumbering.GetLevel(nLvl);\n  var oParagraph = Api.CreateParagraph();\n  oParagraph.AddText(\"Default bullet lvl \" + (nLvl + 1));\n  oParagraph.SetNumbering(oNumLvl);\n  oParagraph.SetContextualSpacing(true);\n  oDocument.Push(oParagraph);\n}\noParagraph = Api.CreateParagraph();\noParagraph.SetStyle(oMyStyle);\noParagraph.AddText(\"This is a paragraph styled as a bulleted list.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetNumPr.docx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.setpagebreakbefore": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oMyStyle = oDocument.CreateStyle(\"My document style\");\nvar oParaPr = oMyStyle.GetParaPr();\noParaPr.SetPageBreakBefore(true);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is an example of setting a page break before a paragraph. \");\noParagraph.AddText(\"The second paragraph will start from a new page, as it has a page break before it. \");\noParagraph.AddText(\"Scroll down to the second page to see it. \");\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is the second paragraph and it has page break before it enabled.\");\noParagraph.SetStyle(oMyStyle);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetPageBreakBefore.docx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.setrightborder": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oMyStyle = oDocument.CreateStyle(\"My document style\");\nvar oParaPr = oMyStyle.GetParaPr();\noParaPr.SetRightBorder(\"single\", 24, 0, 0, 255, 0);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.SetStyle(oMyStyle);\noParagraph.AddText(\"This is the first paragraph. \");\noParagraph.AddText(\"The paragraph properties styled above set a border at its right side.\");\nbuilder.SaveFile(\"docx\", \"SetRightBorder.docx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.setshd": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oMyStyle = oDocument.CreateStyle(\"My document style\");\nvar oParaPr = oMyStyle.GetParaPr();\noParaPr.SetShd(\"clear\", 0, 255, 0, false);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is an example of setting a shading to a paragraph.\");\noParagraph.SetStyle(oMyStyle);\nbuilder.SaveFile(\"docx\", \"SetShd.docx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.setspacingafter": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oMyStyle = oDocument.CreateStyle(\"My document style\");\nvar oParaPr = oMyStyle.GetParaPr();\noParaPr.SetSpacingAfter(1440);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is an example of setting a space after a paragraph. \");\noParagraph.AddText(\"The second paragraph will have an offset of one inch from the top. \");\noParagraph.AddText(\"This is due to the fact that the first paragraph has this offset enabled.\");\noParagraph.SetStyle(oMyStyle);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is the second paragraph and it is one inch away from the first paragraph.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetSpacingAfter.docx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.setspacingbefore": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oMyStyle = oDocument.CreateStyle(\"My document style\");\nvar oParaPr = oMyStyle.GetParaPr();\noParaPr.SetSpacingBefore(1440);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is an example of setting a space before a paragraph. \");\noParagraph.AddText(\"The second paragraph will have an offset of one inch from the top. \");\noParagraph.AddText(\"This is due to the fact that the second paragraph has this offset enabled.\");\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is the second paragraph and it is one inch away from the first paragraph.\");\noParagraph.SetStyle(oMyStyle);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetSpacingBefore.docx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.setspacingline": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oMyStyle1 = oDocument.CreateStyle(\"My document style #1\");\nvar oParaPr = oMyStyle1.GetParaPr();\noParaPr.SetSpacingLine(3 * 240, \"auto\");\nvar oMyStyle2 = oDocument.CreateStyle(\"My document style #2\");\noParaPr = oMyStyle2.GetParaPr();\noParaPr.SetSpacingLine(200, \"exact\");\nvar oMyStyle3 = oDocument.CreateStyle(\"My document style #3\");\noParaPr = oMyStyle3.GetParaPr();\noParaPr.SetSpacingLine(400, \"atLeast\");\nvar oParagraph = oDocument.GetElement(0);\noParagraph.SetStyle(oMyStyle1);\noParagraph.AddText(\"Paragraph 1. Spacing: 3 times of a common paragraph line spacing.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph = Api.CreateParagraph();\noParagraph.SetStyle(oMyStyle2);\noParagraph.AddText(\"Paragraph 2. Spacing: exact 10 points.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noDocument.Push(oParagraph);\noParagraph = Api.CreateParagraph();\noParagraph.SetStyle(oMyStyle3);\noParagraph.AddText(\"Paragraph 3. Spacing: atLeast 20 points.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetSpacingLine.docx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.setstyle": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oHeading6Style = oDocument.GetStyle(\"Heading 6\");\nvar oParaPr = oHeading6Style.GetParaPr();\noParaPr.SetJc(\"center\");\nvar oParagraph = oDocument.GetElement(0);\noParagraph.SetStyle(oHeading6Style);\noParagraph.AddText(\"This is a text in a paragraph styled with the 'Heading 6' style.\");\nbuilder.SaveFile(\"docx\", \"SetStyle.docx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.settabs": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oMyStyle = oDocument.CreateStyle(\"My document style\");\nvar oParaPr = oMyStyle.GetParaPr();\noParaPr.SetTabs([1440, 4320, 7200], [\"left\", \"center\", \"right\"]);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.SetStyle(oMyStyle);\noParagraph.AddTabStop();\noParagraph.AddText(\"Custom tab - 1 inch left\");\noParagraph.AddLineBreak();\noParagraph.AddTabStop();\noParagraph.AddTabStop();\noParagraph.AddText(\"Custom tab - 3 inches center\");\noParagraph.AddLineBreak();\noParagraph.AddTabStop();\noParagraph.AddTabStop();\noParagraph.AddTabStop();\noParagraph.AddText(\"Custom tab - 5 inches right\");\nbuilder.SaveFile(\"docx\", \"SetTabs.docx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.settopborder": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oMyStyle = oDocument.CreateStyle(\"My document style\");\nvar oParaPr = oMyStyle.GetParaPr();\noParaPr.SetTopBorder(\"single\", 24, 0, 0, 255, 0);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.SetStyle(oMyStyle);\noParagraph.AddText(\"This is the first paragraph. \");\noParagraph.AddText(\"The paragraph properties styled above set a border above it.\");\nbuilder.SaveFile(\"docx\", \"SetTopBorder.docx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.setwidowcontrol": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oMyStyle = oDocument.CreateStyle(\"My document style\");\nvar oParaPr = oMyStyle.GetParaPr();\noParaPr.SetWidowControl(true);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"The single line of the last paragraph on this page will be prevented from being displayed on a separate page. \");\nfor (let x = 0; x < 5; ++x) {\n  oParagraph = Api.CreateParagraph();\n  for (let i = 0; i < 10; ++i) {\n    oParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\n  }\n  oDocument.Push(oParagraph);\n}\noParagraph = Api.CreateParagraph();\nfor (let i = 0; i < 3; ++i) {\n  oParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\n}\noParagraph.SetStyle(oMyStyle);\noParagraph.AddText(\"This last line would be displayed on the next page, if we had not used the set widow control method.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetWidowControl.docx\");\nbuilder.CloseFile();"
		},
		"ApiPictureForm.getpictureposition": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oPictureForm = Api.CreatePictureForm({\"key\": \"Personal information\", \"tip\": \"Upload your photo\", \"required\": true, \"placeholder\": \"Photo\", \"scaleFlag\": \"tooBig\", \"lockAspectRatio\": true, \"respectBorders\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oPictureForm);\noPictureForm.SetImage(\"https://api.onlyoffice.com/content/img/editor/e-download.png\");\noPictureForm.SetPicturePosition(70, 70);\nvar aPosition = oPictureForm.GetPicturePosition();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Picture position: \");\noParagraph.AddLineBreak();\nfor (let i = 0; i < aPosition.length; i++ ){\n    var nShift = aPosition[i];\n    oParagraph.AddText(\"\" + nShift);\n    oParagraph.AddLineBreak();\n}\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetPicturePosition.docx\");\nbuilder.CloseFile();"
		},
		"ApiPictureForm.getscaleflag": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oPictureForm = Api.CreatePictureForm({\"key\": \"Personal information\", \"tip\": \"Upload your photo\", \"required\": true, \"placeholder\": \"Photo\", \"scaleFlag\": \"tooBig\", \"lockAspectRatio\": true, \"respectBorders\": false, \"shiftX\": 50, \"shiftY\": 50});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oPictureForm);\noPictureForm.SetImage(\"https://api.onlyoffice.com/content/img/editor/e-download.png\");\nvar sScaleFlag = oPictureForm.GetScaleFlag();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Picture scale flag: \" + sScaleFlag);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetScaleFlag.docx\");\nbuilder.CloseFile();"
		},
		"ApiPictureForm.islockaspectratio": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oPictureForm = Api.CreatePictureForm({\"key\": \"Personal information\", \"tip\": \"Upload your photo\", \"required\": true, \"placeholder\": \"Photo\", \"scaleFlag\": \"tooBig\", \"respectBorders\": false, \"shiftX\": 50, \"shiftY\": 50});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oPictureForm);\noPictureForm.SetImage(\"https://api.onlyoffice.com/content/img/editor/e-download.png\");\noPictureForm.SetLockAspectRatio(true);\nvar bLock = oPictureForm.IsLockAspectRatio();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The aspect ratio of the first picture form in this document is locked: \" + bLock);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"IsLockAspectRatio.docx\");\nbuilder.CloseFile();"
		},
		"ApiPictureForm.isrespectborders": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oPictureForm = Api.CreatePictureForm({\"key\": \"Personal information\", \"tip\": \"Upload your photo\", \"required\": true, \"placeholder\": \"Photo\", \"scaleFlag\": \"tooBig\", \"lockAspectRatio\": true, \"shiftX\": 50, \"shiftY\": 50});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oPictureForm);\noPictureForm.SetImage(\"https://api.onlyoffice.com/content/img/editor/e-download.png\");\noPictureForm.SetRespectBorders(true);\nvar bRespectBorders = oPictureForm.IsRespectBorders();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The borders of the first picture form in this document are respected when scaling the image: \" + bRespectBorders);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"IsRespectBorders.docx\");\nbuilder.CloseFile();"
		},
		"ApiPictureForm.setlockaspectratio": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oPictureForm = Api.CreatePictureForm({\"key\": \"Personal information\", \"tip\": \"Upload your photo\", \"required\": true, \"placeholder\": \"Photo\", \"scaleFlag\": \"tooBig\", \"respectBorders\": false, \"shiftX\": 50, \"shiftY\": 50});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oPictureForm);\noPictureForm.SetImage(\"https://api.onlyoffice.com/content/img/editor/e-download.png\");\noPictureForm.SetLockAspectRatio(true);\nvar bLock = oPictureForm.IsLockAspectRatio();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The aspect ratio of the first picture form in this document is locked: \" + bLock);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetLockAspectRatio.docx\");\nbuilder.CloseFile();"
		},
		"ApiPictureForm.setpictureposition": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oPictureForm = Api.CreatePictureForm({\"key\": \"Personal information\", \"tip\": \"Upload your photo\", \"required\": true, \"placeholder\": \"Photo\", \"scaleFlag\": \"tooBig\", \"lockAspectRatio\": true, \"respectBorders\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oPictureForm);\noPictureForm.SetImage(\"https://api.onlyoffice.com/content/img/editor/e-download.png\");\noPictureForm.SetPicturePosition(70, 70);\nvar aPosition = oPictureForm.GetPicturePosition();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Picture position: \");\noParagraph.AddLineBreak();\nfor (let i = 0; i < aPosition.length; i++ ){\n    var nShift = aPosition[i];\n    oParagraph.AddText(\"\" + nShift);\n    oParagraph.AddLineBreak();\n}\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetPicturePosition.docx\");\nbuilder.CloseFile();"
		},
		"ApiPictureForm.setrespectborders": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oPictureForm = Api.CreatePictureForm({\"key\": \"Personal information\", \"tip\": \"Upload your photo\", \"required\": true, \"placeholder\": \"Photo\", \"scaleFlag\": \"tooBig\", \"lockAspectRatio\": true, \"shiftX\": 50, \"shiftY\": 50});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oPictureForm);\noPictureForm.SetImage(\"https://api.onlyoffice.com/content/img/editor/e-download.png\");\noPictureForm.SetRespectBorders(true);\nvar bRespectBorders = oPictureForm.IsRespectBorders();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The borders of the first picture form in this document are respected when scaling the image: \" + bRespectBorders);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetRespectBorders.docx\");\nbuilder.CloseFile();"
		},
		"ApiPictureForm.setscaleflag": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oPictureForm = Api.CreatePictureForm({\"key\": \"Personal information\", \"tip\": \"Upload your photo\", \"required\": true, \"placeholder\": \"Photo\", \"lockAspectRatio\": true, \"respectBorders\": false, \"shiftX\": 50, \"shiftY\": 50});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oPictureForm);\noPictureForm.SetImage(\"https://api.onlyoffice.com/content/img/editor/e-download.png\");\noPictureForm.SetScaleFlag(\"tooBig\");\nvar sScaleFlag = oPictureForm.GetScaleFlag();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Picture scale flag: \" + sScaleFlag);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetScaleFlag.docx\");\nbuilder.CloseFile();"
		},
		"ApiPresetColor.getclasstype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oPresetColor = Api.CreatePresetColor(\"lightYellow\");\nvar oGs1 = Api.CreateGradientStop(oPresetColor, 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 5930900, 395605, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nvar sClassType = oPresetColor.GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class Type = \" + sClassType);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetClassType.docx\");\nbuilder.CloseFile();"
		},
		"ApiRange.addbookmark": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"ONLYOFFICE Document Builder\");\nvar oRange = oDocument.GetRange(0, 9);\noRange.AddBookmark(\"Bookmark\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"A bookmark was added to the 'ONLYOFFICE' range.\");\nbuilder.SaveFile(\"docx\", \"AddBookmark.docx\");\nbuilder.CloseFile();"
		},
		"ApiRange.addhyperlink": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"ONLYOFFICE Document Builder\");\nvar oRange = oDocument.GetRange(0, 9);\noRange.AddHyperlink(\"https://www.onlyoffice.com/\", \"Main portal\");\nbuilder.SaveFile(\"docx\", \"AddHyperlink.docx\");\nbuilder.CloseFile();"
		},
		"ApiRange.addtext": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"Document\");\nvar oRange = oDocument.GetRange(0, 7);\noRange.AddText(\"ONLYOFFICE \", \"before\");\noRange.AddText(\" Builder\", \"after\");\nbuilder.SaveFile(\"docx\", \"AddText.docx\");\nbuilder.CloseFile();"
		},
		"ApiRange.delete": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"ONLYOFFICE delete text Document Builder\");\nvar oRange = oDocument.GetRange(10, 21);\noRange.Delete();\nbuilder.SaveFile(\"docx\", \"Delete.docx\");\nbuilder.CloseFile();"
		},
		"ApiRange.expandto": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"Lorem ipsum dolor sit amet,\");\noParagraph.AddText(\" consectetuer adipiscing elit,\");\noParagraph.AddText(\" sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.\");\nvar oRangeFirst = oDocument.GetRange(0, 22);\nvar oRangeSecond = oDocument.GetRange(49, 123);\nvar oRange = oRangeFirst.ExpandTo(oRangeSecond);\noRange.SetItalic(true);\nbuilder.SaveFile(\"docx\", \"ExpandTo.docx\");\nbuilder.CloseFile();"
		},
		"ApiRange.getallparagraphs": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = editor.GetDocument();\nvar oFParagraph = oDocument.GetElement(0);\noFParagraph.AddText(\"First paragraph\");\nvar oSParagraph = editor.CreateParagraph();\noSParagraph.AddText(\"Second Paragraph\");\noDocument.Push(oSParagraph);\nvar oRange = oDocument.GetRange(0, 28);\nvar arrParagraphs = oRange.GetAllParagraphs();\narrParagraphs[0].SetBold(\"true\");\nbuilder.SaveFile(\"docx\", \"GetAllParagraphs.docx\");\nbuilder.CloseFile();"
		},
		"ApiRange.getclasstype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"ONLYOFFICE Document Builder\");\nvar oRange = oParagraph.GetRange(0, 9);\nvar sClassType = oRange.GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class type: \" + sClassType);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetClassType.docx\");\nbuilder.CloseFile();"
		},
		"ApiRange.getparagraph": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oFParagraph = oDocument.GetElement(0);\noFParagraph.AddText(\"First paragraph\");\nvar oSParagraph = Api.CreateParagraph();\noSParagraph.AddText(\"Second Paragraph\");\noDocument.Push(oSParagraph);\nvar oRange = oDocument.GetRange(0, 28);\nvar oRangeParagraph = oRange.GetParagraph(1);\noRangeParagraph.SetBold(\"true\");\nbuilder.SaveFile(\"docx\", \"GetParagraph.docx\");\nbuilder.CloseFile();"
		},
		"ApiRange.gettext": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"ONLYOFFICE Document Builder\");\nvar oRange = oDocument.GetRange(0, 24);\nvar oParagraph2 = Api.CreateParagraph();\noParagraph2.AddText(oRange.GetText());\noDocument.Push(oParagraph2);\nbuilder.SaveFile(\"docx\", \"GetText.docx\");\nbuilder.CloseFile();"
		},
		"ApiRange.intersectwith": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"Lorem ipsum dolor sit amet,\");\noParagraph.AddText(\" consectetuer adipiscing elit,\");\noParagraph.AddText(\" sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.\");\nvar oRangeFirst = oDocument.GetRange(0, 49);\nvar oRangeSecond = oDocument.GetRange(22, 123);\nvar oRange = oRangeFirst.IntersectWith(oRangeSecond);\noRange.SetBold(true);\nbuilder.SaveFile(\"docx\", \"IntersectWith.docx\");\nbuilder.CloseFile();"
		},
		"ApiRange.select": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"ONLYOFFICE Document Builder\");\nvar oRange = oParagraph.GetRange(0, 9);\noRange.Select();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The word 'ONLYOFFICE' was just selected.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"Select.docx\");\nbuilder.CloseFile();"
		},
		"ApiRange.setbold": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"ONLYOFFICE Document Builder\");\nvar oRange = oDocument.GetRange(0, 24);\noRange.SetBold(true);\nbuilder.SaveFile(\"docx\", \"SetBold.docx\");\nbuilder.CloseFile();"
		},
		"ApiRange.setcaps": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"ONLYOFFICE Document Builder\");\nvar oRange = oDocument.GetRange(10, 17);\noRange.SetCaps(true);\nbuilder.SaveFile(\"docx\", \"SetCaps.docx\");\nbuilder.CloseFile();"
		},
		"ApiRange.setcolor": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"ONLYOFFICE Document Builder\");\nvar oRange = oDocument.GetRange(0, 24);\noRange.SetColor(255, 164, 101);\nbuilder.SaveFile(\"docx\", \"SetColor.docx\");\nbuilder.CloseFile();"
		},
		"ApiRange.setdoublestrikeout": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"ONLYOFFICE Document Server Builder\");\nvar oRange = oDocument.GetRange(18, 23);\noRange.SetDoubleStrikeout(true);\nbuilder.SaveFile(\"docx\", \"SetDoubleStrikeout.docx\");\nbuilder.CloseFile();"
		},
		"ApiRange.setfontfamily": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is just a sample text. \");\noParagraph.AddText(\"This is a text run with the font family set to 'Comic Sans MS'.\");\nvar oRange = oDocument.GetRange(22, 71);\noRange.SetFontFamily(\"Consolas\");\nbuilder.SaveFile(\"docx\", \"SetFontFamily.docx\");\nbuilder.CloseFile();"
		},
		"ApiRange.setfontsize": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"ONLYOFFICE Document Builder\");\nvar oRange = oDocument.GetRange(0, 24);\noRange.SetFontSize(14);\nbuilder.SaveFile(\"docx\", \"SetFontSize.docx\");\nbuilder.CloseFile();"
		},
		"ApiRange.sethighlight": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"ONLYOFFICE Document Builder\");\nvar oRange = oDocument.GetRange(0, 26);\noRange.SetHighlight(\"green\");\nbuilder.SaveFile(\"docx\", \"SetHighlight.docx\");\nbuilder.CloseFile();"
		},
		"ApiRange.setitalic": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"ONLYOFFICE Document Builder\");\nvar oRange = oDocument.GetRange(0, 24);\noRange.SetItalic(true);\nbuilder.SaveFile(\"docx\", \"SetItalic.docx\");\nbuilder.CloseFile();"
		},
		"ApiRange.setposition": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is just a sample text. \");\noParagraph.AddText(\"This is a text run with the text raised 5 points (10 half-points).\");\nvar oRange = oDocument.GetRange(22, 75);\noRange.SetPosition(10);\nbuilder.SaveFile(\"docx\", \"SetPosition.docx\");\nbuilder.CloseFile();"
		},
		"ApiRange.setshd": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"ONLYOFFICE Document Builder\");\nvar oRange = oDocument.GetRange(0, 24);\noRange.SetShd(\"clear\", 255, 224, 204);\nbuilder.SaveFile(\"docx\", \"SetShd.docx\");\nbuilder.CloseFile();"
		},
		"ApiRange.setsmallcaps": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"ONLYOFFICE Document Builder\");\nvar oRange = oDocument.GetRange(10, 24);\noRange.SetSmallCaps(true);\nbuilder.SaveFile(\"docx\", \"SetSmallCaps.docx\");\nbuilder.CloseFile();"
		},
		"ApiRange.setspacing": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"ONLYOFFICE Document Builder\");\nvar oRange = oDocument.GetRange(0, 24);\noRange.SetSpacing(2);\nbuilder.SaveFile(\"docx\", \"SetSpacing.docx\");\nbuilder.CloseFile();"
		},
		"ApiRange.setstrikeout": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"ONLYOFFICE Document Server Builder\");\nvar oRange = oDocument.GetRange(18, 23);\noRange.SetStrikeout(true);\nbuilder.SaveFile(\"docx\", \"SetStrikeout.docx\");\nbuilder.CloseFile();"
		},
		"ApiRange.setstyle": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"ONLYOFFICE Document Builder\");\nvar oRange = oDocument.GetRange(0, 26);\nvar oStyle = oDocument.GetStyle(\"Heading 2\");\noRange.SetStyle(oStyle);\nbuilder.SaveFile(\"docx\", \"SetStyle.docx\");\nbuilder.CloseFile();"
		},
		"ApiRange.settextpr": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"ONLYOFFICE Document Builder\");\nvar oTextPr = oParagraph.GetTextPr();\noTextPr.SetItalic(true);\nvar oRange = oDocument.GetRange(0, 24);\noRange.SetTextPr(oTextPr);\nbuilder.SaveFile(\"docx\", \"SetTextPr.docx\");\nbuilder.CloseFile();"
		},
		"ApiRange.setunderline": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"ONLYOFFICE Document Builder\");\nvar oRange = oDocument.GetRange(0, 24);\noRange.SetUnderline(true);\nbuilder.SaveFile(\"docx\", \"SetUnderline.docx\");\nbuilder.CloseFile();"
		},
		"ApiRange.setvertalign": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"ONLYOFFICE Copyright Document Builder\");\nvar oRange = oDocument.GetRange(10, 18);\noRange.SetVertAlign(\"superscript\");\nbuilder.SaveFile(\"docx\", \"SetVertAlign.docx\");\nbuilder.CloseFile();"
		},
		"ApiRGBColor.getclasstype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRGBColor = Api.CreateRGBColor(255, 164, 101);\nvar oGs1 = Api.CreateGradientStop(Api.CreatePresetColor(\"lightYellow\"), 0);\nvar oGs2 = Api.CreateGradientStop(oRGBColor, 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 5930900, 395605, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nvar sClassType = oRGBColor.GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class Type = \" + sClassType);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetClassType.docx\");\nbuilder.CloseFile();"
		},
		"ApiRun.addcolumnbreak": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oSection = oDocument.GetFinalSection(oParagraph);\noSection.SetEqualColumns(2, 720);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is the text for the first column. It is written all in one text run. Nothing special.\");\noRun.AddColumnBreak();\noRun.AddText(\"This is the text which starts from the beginning of the second column. \");\noRun.AddText(\"It is written in two text runs, you need a space at the end of the first run sentence to separate them.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"docx\", \"AddColumnBreak.docx\");\nbuilder.CloseFile();"
		},
		"ApiRun.adddrawing": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\nvar oDrawing = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noDrawing.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noDrawing.SetHorAxisTitle(\"Year\", 11);\noDrawing.SetLegendPos(\"bottom\");\noDrawing.SetShowDataLabels(false, false, true, false);\noDrawing.SetTitle(\"Financial Overview\", 13);\noRun.AddDrawing(oDrawing);\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"docx\", \"AddDrawing.docx\");\nbuilder.CloseFile();"
		},
		"ApiRun.addhyperlink": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"ONLYOFFICE Document Builder\");\noParagraph.AddElement(oRun);\noRun.AddHyperlink(\"https://www.onlyoffice.com\", \"main page\");\nbuilder.SaveFile(\"docx\", \"AddHyperlink.docx\");\nbuilder.CloseFile();"
		},
		"ApiRun.addlinebreak": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is the text for the first line. Nothing special.\");\noRun.AddLineBreak();\noRun.AddText(\"This is the text which starts from the beginning of the second line. \");\noRun.AddText(\"It is written in two text runs, you need a space at the end of the first run sentence to separate them.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"docx\", \"AddLineBreak.docx\");\nbuilder.CloseFile();"
		},
		"ApiRun.addpagebreak": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is the text for the first page. After it a page break will be added. Scroll down to the second page to see the text there.\");\noRun.AddPageBreak();\noRun.AddText(\"This is the text which starts from the beginning of the second page. \");\noRun.AddText(\"It is written in two text runs, you need a space at the end of the first run sentence to separate them.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"docx\", \"AddPageBreak.docx\");\nbuilder.CloseFile();"
		},
		"ApiRun.addtabstop": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. After it three tab stops will be added.\");\noRun.AddTabStop();\noRun.AddTabStop();\noRun.AddTabStop();\noRun.AddText(\"This is the text which starts after the tab stops.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"docx\", \"AddTabStop.docx\");\nbuilder.CloseFile();"
		},
		"ApiRun.addtext": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. Nothing special.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"docx\", \"AddText.docx\");\nbuilder.CloseFile();"
		},
		"ApiRun.clearcontent": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noRun.AddText(\"But you will not see it in the resulting document, as it will be cleared.\");\noParagraph.AddElement(oRun);\noRun.ClearContent();\noParagraph = Api.CreateParagraph();\noRun = Api.CreateRun();\noRun.AddText(\"The text in the previous paragraph cannot be seen, as it has been cleared.\");\noParagraph.AddElement(oRun);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"ClearContent.docx\");\nbuilder.CloseFile();"
		},
		"ApiRun.copy": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun1 = Api.CreateRun();\noRun1.AddText(\"This is just a sample text that was copied. \");\noParagraph.AddElement(oRun1);\nvar oRun2 = oRun1.Copy();\noParagraph.AddElement(oRun2);\nbuilder.SaveFile(\"docx\", \"Copy.docx\");\nbuilder.CloseFile();"
		},
		"ApiRun.delete": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun1 = Api.CreateRun();\noRun1.AddText(\"This is run â„–1.\");\noParagraph.AddElement(oRun1);\nvar oRun2 = Api.CreateRun();\noRun2.AddText(\"This is run â„–2.\");\noParagraph.AddElement(oRun2);\noRun1.RemoveAllElements();\noParagraph.AddLineBreak();\noParagraph.AddText(\"The first run was removed from the document.\");\nbuilder.SaveFile(\"docx\", \"Delete.docx\");\nbuilder.CloseFile();"
		},
		"ApiRun.getclasstype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. Nothing special.\");\noParagraph.AddElement(oRun);\nvar sClassType = oRun.GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class Type = \" + sClassType);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetClassType.docx\");\nbuilder.CloseFile();"
		},
		"ApiRun.getparentcontentcontrol": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oBlockLvlSdt = Api.CreateBlockLvlSdt();\nvar oParagraph = Api.CreateParagraph();\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is a block text content control.\");\noParagraph.Push(oRun);\noBlockLvlSdt.AddElement(oParagraph, 0);\noDocument.AddElement(0, oBlockLvlSdt);\nvar oContentControl = oRun.GetParentContentControl();\nvar sClassType = oContentControl.GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class type: \" + sClassType);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetParentContentControl.docx\");\nbuilder.CloseFile();"
		},
		"ApiRun.getparenttable": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nvar oParagraph = Api.CreateParagraph();\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text.\");\noParagraph.AddElement(oRun);\nvar oCell = oTable.GetCell(0,0);\noTable.AddElement(oCell, 0, oParagraph);\nvar oParentTable = oRun.GetParentTable();\noCell = oParentTable.GetRow(2).GetCell(0);\noParentTable.RemoveRow(oCell);\nbuilder.SaveFile(\"docx\", \"GetParentTable.docx\");\nbuilder.CloseFile();"
		},
		"ApiRun.getparenttablecell": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nvar oParagraph = Api.CreateParagraph();\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text.\");\noParagraph.AddElement(oRun);\nvar oCell = oTable.GetCell(0,0);\noTable.AddElement(oCell, 0, oParagraph);\nvar oParentTableCell = oRun.GetParentTableCell();\noParentTableCell.SetShd(\"clear\", 0xff, 0x68, 0x00, false);\nbuilder.SaveFile(\"docx\", \"GetParentTableCell.docx\");\nbuilder.CloseFile();"
		},
		"ApiRun.getrange": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text.\");\noParagraph.AddElement(oRun);\nvar oRange = oRun.GetRange(0, 3);\noRange.SetBold(true);\nbuilder.SaveFile(\"docx\", \"GetRange.docx\");\nbuilder.CloseFile();"
		},
		"ApiRun.gettextpr": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oMyNewRunStyle = oDocument.CreateStyle(\"My New Run Style\", \"run\");\nvar oTextPr = oMyNewRunStyle.GetTextPr();\noTextPr.SetCaps(true);\noTextPr.SetFontFamily(\"Calibri Light\");\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noRun.AddText(\"The text properties are changed and the style is added to the paragraph. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetStyle(oMyNewRunStyle);\noRun.AddText(\"This is a text run with its own style.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"docx\", \"GetTextPr.docx\");\nbuilder.CloseFile();"
		},
		"ApiRun.removeallelements": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun1 = Api.CreateRun();\noRun1.AddText(\"This is sample text â„–1.\");\noParagraph.AddElement(oRun1);\nvar oRun2 = Api.CreateRun();\noRun2.AddText(\"This is sample text â„–2.\");\noParagraph.AddElement(oRun2);\noRun1.RemoveAllElements();\noParagraph.AddLineBreak();\noParagraph.AddText(\"The sample text â„–1 was removed from the document.\");\nbuilder.SaveFile(\"docx\", \"RemoveAllElements.docx\");\nbuilder.CloseFile();"
		},
		"ApiRun.select": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text.\");\noParagraph.AddElement(oRun);\noRun.Select();\noParagraph.AddLineBreak();\noParagraph.AddText(\"The text from the first run was selected.\");\nbuilder.SaveFile(\"docx\", \"Select.docx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setbold": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetBold(true);\noRun.AddText(\"This is a text run with the font set to bold.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"docx\", \"SetBold.docx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setcaps": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetCaps(true);\noRun.AddText(\"This is a text run with the font set to capitalized letters.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"docx\", \"SetCaps.docx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setcolor": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetColor(0, 0, 255);\noRun.AddText(\"This is a text run with the font color set to blue.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"docx\", \"SetColor.docx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setdoublestrikeout": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetDoubleStrikeout(true);\noRun.AddText(\"This is a text run with the text struck out with two lines.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"docx\", \"SetDoubleStrikeout.docx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setfill": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is a text run with the font color set to blue.\");\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(0, 0, 255));\noRun.SetFill(oFill);\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"docx\", \"SetFill.docx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setfontfamily": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetFontFamily(\"Calibri Light\");\noRun.AddText(\"This is a text run with the font family set to 'Calibri Light'.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"docx\", \"SetFontFamily.docx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setfontsize": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetFontSize(30);\noRun.AddText(\"This is a text run with the font size set to 15 points (30 half-points).\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"docx\", \"SetFontSize.docx\");\nbuilder.CloseFile();"
		},
		"ApiRun.sethighlight": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetHighlight(\"green\");\noRun.AddText(\"This is a text run with the text highlighted with green color.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"docx\", \"SetHighlight.docx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setitalic": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetItalic(true);\noRun.AddText(\"This is a text run with the font set to italicized letters.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"docx\", \"SetItalic.docx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setlanguage": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetLanguage(\"en-CA\");\noRun.AddText(\"This is a text run with the text language set to English (Canada).\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"docx\", \"SetLanguage.docx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setposition": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetPosition(10);\noRun.AddText(\"This is a text run with the text raised 5 points (10 half-points).\");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetPosition(-16);\noRun.AddText(\"This is a text run with the text lowered 8 points (16 half-points).\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"docx\", \"SetPosition.docx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setshd": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetShd(\"clear\", 0, 255, 0);\noRun.AddText(\"This is a text run with the text shading set to green.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"docx\", \"SetShd.docx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setsmallcaps": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetSmallCaps(true);\noRun.AddText(\"This is a text run with the font set to small capitalized letters.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"docx\", \"SetSmallCaps.docx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setspacing": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetSpacing(80);\noRun.AddText(\"This is a text run with the text spacing set to 4 points (20 twentieths of a point).\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"docx\", \"SetSpacing.docx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setstrikeout": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetStrikeout(true);\noRun.AddText(\"This is a text run with the text struck out with a single line.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"docx\", \"SetStrikeout.docx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setstyle": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oMyNewRunStyle = oDocument.CreateStyle(\"My New Run Style\", \"run\");\nvar oTextPr = oMyNewRunStyle.GetTextPr();\noTextPr.SetCaps(true);\noTextPr.SetFontFamily(\"Calibri Light\");\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noRun.AddText(\"The text properties are changed and the style is added to the paragraph. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetStyle(oMyNewRunStyle);\noRun.AddText(\"This is a text run with its own style.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"docx\", \"SetStyle.docx\");\nbuilder.CloseFile();"
		},
		"ApiRun.settextpr": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text.\");\noParagraph.AddElement(oRun);\nvar oTextPr = oDocument.GetDefaultTextPr();\noTextPr.SetFontSize(30);\noTextPr.SetBold(true);\noRun.SetTextPr(oTextPr);\nbuilder.SaveFile(\"docx\", \"SetTextPr.docx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setunderline": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetUnderline(true);\noRun.AddText(\"This is a text run with the text underlined with a single line.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"docx\", \"SetUnderline.docx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setvertalign": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetVertAlign(\"subscript\");\noRun.AddText(\"This is a text run with the text aligned below the baseline vertically. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetVertAlign(\"baseline\");\noRun.AddText(\"This is a text run with the text aligned by the baseline vertically. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetVertAlign(\"superscript\");\noRun.AddText(\"This is a text run with the text aligned above the baseline vertically.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"docx\", \"SetVertAlign.docx\");\nbuilder.CloseFile();"
		},
		"ApiRun.wrapinmailmergefield": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"Name\");\noParagraph.AddElement(oRun);\noRun.WrapInMailMergeField();\noParagraph.AddLineBreak();\noRun = Api.CreateRun();\noRun.AddText(\"Surname\");\noParagraph.AddElement(oRun);\noRun.WrapInMailMergeField();\nbuilder.SaveFile(\"docx\", \"WrapInMailMergeField.docx\");\nbuilder.CloseFile();"
		},
		"ApiSchemeColor.getclasstype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oSchemeColor = Api.CreateSchemeColor(\"accent6\");\nvar oFill = Api.CreateSolidFill(oSchemeColor);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"curvedUpArrow\", 5930900, 595605, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nvar sClassType = oSchemeColor.GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class Type = \" + sClassType);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetClassType.docx\");\nbuilder.CloseFile();"
		},
		"ApiSection.getclasstype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oSection = oDocument.GetFinalSection();\noSection.SetPageMargins(720, 720, 720, 720);\noSection.SetPageSize(7200, 4320);\nvar sClassType = oSection.GetClassType();\noParagraph.AddText(\"Class Type = \" + sClassType);\nbuilder.SaveFile(\"docx\", \"GetClassType.docx\");\nbuilder.CloseFile();"
		},
		"ApiSection.getfooter": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a page with a footer. \");\noParagraph.AddText(\"Scroll down the page to see it.\");\nvar oSection = oDocument.GetFinalSection();\nvar oFooter = oSection.GetFooter(\"default\", true);\noParagraph = oFooter.GetElement(0);\noParagraph.AddText(\"This is a page footer\");\nbuilder.SaveFile(\"docx\", \"GetFooter.docx\");\nbuilder.CloseFile();"
		},
		"ApiSection.getheader": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a page with a header. \");\noParagraph.AddText(\"See it above.\");\nvar oSection = oDocument.GetFinalSection();\nvar oHeader = oSection.GetHeader(\"default\", true);\noParagraph = oHeader.GetElement(0);\noParagraph.AddText(\"This is a page header\");\nbuilder.SaveFile(\"docx\", \"GetHeader.docx\");\nbuilder.CloseFile();"
		},
		"ApiSection.getnext": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a new paragraph.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"Scroll down to see the new section.\");\nvar oSection1 = oDocument.CreateSection(oParagraph);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a paragraph in the first section\");\noDocument.Push(oParagraph);\nvar oSection2 = oDocument.CreateSection(oParagraph);\nvar oNextSection = oSection1.GetNext();\noNextSection.SetPageMargins(7200, 2880, 1440, 5760);\nbuilder.SaveFile(\"docx\", \"GetNext.docx\");\nbuilder.CloseFile();"
		},
		"ApiSection.getprevious": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a new paragraph.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"Scroll down to see the new section.\");\nvar oSection1 = oDocument.CreateSection(oParagraph);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a paragraph in the first section\");\noDocument.Push(oParagraph);\nvar oSection2 = oDocument.CreateSection(oParagraph);\nvar oPreviousSection = oSection2.GetPrevious();\noPreviousSection.SetPageMargins(7200, 2880, 1440, 5760);\nbuilder.SaveFile(\"docx\", \"GetPrevious.docx\");\nbuilder.CloseFile();"
		},
		"ApiSection.removefooter": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This page first was with a footer. \");\noParagraph.AddText(\"Scroll down the page to see if it was removed.\");\nvar oSection = oDocument.CreateSection(oParagraph);\nvar oFooter = oSection.GetFooter(\"default\", true);\noParagraph = oFooter.GetElement(0);\noParagraph.AddText(\"This is page footer #1. \");\noParagraph.AddText(\"You will not see it, as it will be removed.\");\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a page with a footer. \");\noParagraph.AddText(\"Scroll down the page to see it.\");\noDocument.Push(oParagraph);\nvar oSection1 = oDocument.GetFinalSection();\noFooter = oSection1.GetFooter(\"default\", true);\noParagraph = oFooter.GetElement(0);\noParagraph.AddText(\"This is page footer #2. \");\noParagraph.AddText(\"Only this footer can be seen, as the first one has been removed.\");\noSection.RemoveFooter(\"default\");\nbuilder.SaveFile(\"docx\", \"RemoveFooter.docx\");\nbuilder.CloseFile();"
		},
		"ApiSection.removeheader": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This page first was with a header. \");\noParagraph.AddText(\"The header has been removed, you cannot see it. \");\noParagraph.AddText(\"Scroll down to the next page to see the header there.\");\nvar oSection = oDocument.CreateSection(oParagraph);\nvar oHeader = oSection.GetHeader(\"default\", true);\noParagraph = oHeader.GetElement(0);\noParagraph.AddText(\"This is page header #1. \");\noParagraph.AddText(\"You will not see it, as it will be removed.\");\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a page with a header. \");\noDocument.Push(oParagraph);\nvar oSection1 = oDocument.GetFinalSection();\noHeader = oSection1.GetHeader(\"default\", true);\noParagraph = oHeader.GetElement(0);\noParagraph.AddText(\"This is page header #2. \");\noParagraph.AddText(\"Only this header can be seen, as the first one has been removed.\");\noSection.RemoveHeader(\"default\");\nbuilder.SaveFile(\"docx\", \"RemoveHeader.docx\");\nbuilder.CloseFile();"
		},
		"ApiSection.setequalcolumns": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oSection = oDocument.GetFinalSection();\noSection.SetEqualColumns(3, 720);\noParagraph.AddText(\"This is a text split into 3 equal columns. \");\noParagraph.AddText(\"The columns are separated by the distance of half an inch.\");\noParagraph.AddColumnBreak();\noParagraph.AddText(\"This text starts from column #2. \");\noParagraph.AddText(\"This sentence is used to add lines for demonstrative purposes.\");\noParagraph.AddColumnBreak();\noParagraph.AddText(\"This text starts from column #3. \");\noParagraph.AddText(\"This sentence is used to add lines for demonstrative purposes.\");\nbuilder.SaveFile(\"docx\", \"SetEqualColumns.docx\");\nbuilder.CloseFile();"
		},
		"ApiSection.setfooterdistance": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a page with a footer. \");\noParagraph.AddText(\"Scroll down the page to see it.\");\nvar oSection = oDocument.GetFinalSection();\nvar oFooter = oSection.GetFooter(\"default\", true);\noSection.SetFooterDistance(1440);\noParagraph = oFooter.GetElement(0);\noParagraph.AddText(\"This is a page footer. \");\noParagraph.AddText(\"The distance from the page bottom to the footer is 1 inch (1440 twentieths of a point).\");\nbuilder.SaveFile(\"docx\", \"SetFooterDistance.docx\");\nbuilder.CloseFile();"
		},
		"ApiSection.setheaderdistance": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a page with a header. \");\noParagraph.AddText(\"Scroll down the page to see it.\");\nvar oSection = oDocument.GetFinalSection();\nvar oHeader = oSection.GetHeader(\"default\", true);\noSection.SetHeaderDistance(1440);\noParagraph = oHeader.GetElement(0);\noParagraph.AddText(\"This is a page header. \");\noParagraph.AddText(\"The distance from the page top to the header is 1 inch (1440 twentieths of a point).\");\nbuilder.SaveFile(\"docx\", \"SetHeaderDistance.docx\");\nbuilder.CloseFile();"
		},
		"ApiSection.setnotequalcolumns": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oSection = oDocument.GetFinalSection();\noSection.SetNotEqualColumns([1440, 2880, 4320], [720, 480]);\noParagraph.AddText(\"This is a text split into 3 non-equal columns. \");\noParagraph.AddText(\"The first column is 1 inch wide (1440 twentieths of a point).\");\noParagraph.AddColumnBreak();\noParagraph.AddText(\"This text starts from column #2. \");\noParagraph.AddText(\"This column is 2 inches wide (2880 twentieths of a point). \");\noParagraph.AddText(\"The distance between this column and column #1 is half an inch (720 twentieths of a point).\");\noParagraph.AddColumnBreak();\noParagraph.AddText(\"This text starts from column #3. \");\noParagraph.AddText(\"This column is 3 inches wide (4320 twentieths of a point). \");\noParagraph.AddText(\"The distance between this column and column #2 is 1/3 of an inch (480 twentieths of a point).\");\nbuilder.SaveFile(\"docx\", \"SetNotEqualColumns.docx\");\nbuilder.CloseFile();"
		},
		"ApiSection.setpagemargins": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a page with margins set. \");\noParagraph.AddText(\"The left margin is 5 inches wide (7200 twentieths of a point). \");\noParagraph.AddText(\"The top margin is 2 inches high (2880 twentieths of a point). \");\noParagraph.AddText(\"The right margin is 1 inch wide (1440 twentieths of a point). \");\noParagraph.AddText(\"The bottom margin is 4 inches high (5760 twentieths of a point). \");\nvar oSection = oDocument.GetFinalSection();\noSection.SetPageMargins(7200, 2880, 1440, 5760);\nbuilder.SaveFile(\"docx\", \"SetPageMargins.docx\");\nbuilder.CloseFile();"
		},
		"ApiSection.setpagesize": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a page with a page size set. \");\noParagraph.AddText(\"The page width is 5 inches (7200 twentieths of a point). \");\noParagraph.AddText(\"The page height is 3 inches (4320 twentieths of a point). \");\noParagraph.AddText(\"The font size is default (11 points).\");\nvar oSection = oDocument.GetFinalSection();\noSection.SetPageMargins(720, 720, 720, 720);\noSection.SetPageSize(7200, 4320);\nbuilder.SaveFile(\"docx\", \"SetPageSize.docx\");\nbuilder.CloseFile();"
		},
		"ApiSection.settitlepage": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This page does not have a footer, as it is a title page. \");\noParagraph.AddText(\"Scroll down the page to see if the footer was removed.\");\nvar oSection = oDocument.CreateSection(oParagraph);\noSection.SetTitlePage(true);\nvar oFooter = oSection.GetFooter(\"default\", true);\noParagraph = oFooter.GetElement(0);\noParagraph.AddText(\"This is page footer. \");\noParagraph.AddText(\"You will only see it for page #2.\");\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is page #2 and it has a footer. \");\noParagraph.AddText(\"Scroll down the page to see it.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetTitlePage.docx\");\nbuilder.CloseFile();"
		},
		"ApiSection.settype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oSection = oDocument.CreateSection(oParagraph);\noParagraph.AddText(\"This is section #1 of the document. \");\noSection = oDocument.GetFinalSection();\noSection.SetType(\"continuous\");\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is section #2 and we set 'Continuous' type to it. \");\noParagraph.AddText(\"As you can see, the section is not on a new page. \");\noParagraph.AddText(\"If this section had some other type (nextPage, oddPage, evenPage), it would start a new page.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetType.docx\");\nbuilder.CloseFile();"
		},
		"ApiShape.getclasstype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nvar oDocContent = oDrawing.GetContent();\nvar sClassType = oDrawing.GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class Type = \" + sClassType);\noDocContent.AddElement(0, oParagraph);\nbuilder.SaveFile(\"docx\", \"GetClassType.docx\");\nbuilder.CloseFile();"
		},
		"ApiShape.getcontent": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nvar oDocContent = oDrawing.GetContent();\nvar sClassType = oDrawing.GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class Type = \" + sClassType);\noDocContent.AddElement(0, oParagraph);\nbuilder.SaveFile(\"docx\", \"GetContent.docx\");\nbuilder.CloseFile();"
		},
		"ApiShape.getdoccontent": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nvar oDocContent = oDrawing.GetDocContent();\nvar sClassType = oDrawing.GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class Type = \" + sClassType);\noDocContent.AddElement(0, oParagraph);\nbuilder.SaveFile(\"docx\", \"GetDocContent.docx\");\nbuilder.CloseFile();"
		},
		"ApiShape.getnextshape": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape1 = Api.CreateShape(\"rect\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oShape1);\nvar oShape2 = Api.CreateShape(\"wave\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oShape2);\nvar oNextShape = oShape1.GetNextShape();\noFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\noNextShape.Fill(oFill);\nbuilder.SaveFile(\"docx\", \"GetNextShape.docx\");\nbuilder.CloseFile();"
		},
		"ApiShape.getprevshape": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape1 = Api.CreateShape(\"rect\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oShape1);\nvar oShape2 = Api.CreateShape(\"wave\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oShape2);\nvar oPrevShape = oShape2.GetPrevShape();\noFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\noPrevShape.Fill(oFill);\nbuilder.SaveFile(\"docx\", \"GetPrevShape.docx\");\nbuilder.CloseFile();"
		},
		"ApiShape.setpaddings": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nvar oDocContent = oDrawing.GetDocContent();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a sample text with paddings set to it.\");\noDocContent.Push(oParagraph);\noDrawing.SetPaddings(20 * 36000, 5 * 36000, 5 * 36000, 3 * 36000);\nbuilder.SaveFile(\"docx\", \"SetPaddings.docx\");\nbuilder.CloseFile();"
		},
		"ApiShape.setverticaltextalign": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 3212465, 963295, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nvar oDocContent = oDrawing.GetContent();\nvar sClassType = oDrawing.GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class Type = \" + sClassType);\noDocContent.AddElement(0, oParagraph);\noDrawing.SetVerticalTextAlign(\"top\");\nbuilder.SaveFile(\"docx\", \"SetVerticalTextAlign.docx\");\nbuilder.CloseFile();"
		},
		"ApiStroke.getclasstype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRGBColor = Api.CreateRGBColor(0, 255, 0);\nvar oFill = Api.CreateSolidFill(oRGBColor);\nvar oStroke = Api.CreateStroke(5 * 36000, Api.CreateSolidFill(Api.CreateRGBColor(255, 224, 204)));\nvar oDrawing = Api.CreateShape(\"roundRect\", 5930900, 395605, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nvar sClassType = oStroke.GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class Type = \" + sClassType);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetClassType.docx\");\nbuilder.CloseFile();"
		},
		"ApiStyle.getclasstype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.GetStyle(\"Bordered - Accent 5\");\noTableStyle.SetName(\"My Custom Style\");\nvar oTable = Api.CreateTable(2, 2);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nvar sClassType = oTableStyle.GetClassType();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"Class Type = \" + sClassType);\nbuilder.SaveFile(\"docx\", \"GetClassType.docx\");\nbuilder.CloseFile();"
		},
		"ApiStyle.getconditionaltablestyle": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTable = Api.CreateTable(2, 2);\noTable.SetWidth(\"percent\", 100);\noDocument.Push(oTable);\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTable.SetStyle(oTableStyle);\noTable.SetTableLook(true, true, true, true, true, true);\noTableStyle.GetTablePr().SetTableBorderTop(\"single\", 4, 0, 0, 0, 255);\noTableStyle.GetTablePr().SetTableBorderBottom(\"single\", 4, 0, 0, 0, 255);\noTableStyle.GetTablePr().SetTableBorderLeft(\"single\", 4, 0, 0, 0, 255);\noTableStyle.GetTablePr().SetTableBorderRight(\"single\", 4, 0, 0, 0, 255);\noTableStyle.GetTablePr().SetTableBorderInsideV(\"single\", 4, 0, 255, 0, 0);\noTableStyle.GetTablePr().SetTableBorderInsideH(\"single\", 4, 0, 255, 0, 0);\noTableStyle.GetConditionalTableStyle(\"bandedColumn\").GetTextPr().SetItalic(true);\nvar oCellContent = oTable.GetRow(0).GetCell(0).GetContent();\nvar oParagraph = oCellContent.GetElement(0);\noParagraph.AddText(\"This cell font is set to italic\");\noCellContent = oTable.GetRow(1).GetCell(0).GetContent();\noParagraph = oCellContent.GetElement(0);\noParagraph.AddText(\"This cell font is also set to italic\");\noCellContent = oTable.GetRow(0).GetCell(1).GetContent();\noParagraph = oCellContent.GetElement(0);\noParagraph.AddText(\"This cell font remains default\");\noCellContent = oTable.GetRow(1).GetCell(1).GetContent();\noParagraph = oCellContent.GetElement(0);\noParagraph.AddText(\"This cell font also remains default\");\nbuilder.SaveFile(\"docx\", \"GetConditionalTableStyle.docx\");\nbuilder.CloseFile();"
		},
		"ApiStyle.getname": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.GetStyle(\"Bordered - Accent 5\");\noTableStyle.SetName(\"My Custom Style\");\nvar oTable = Api.CreateTable(2, 2);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nvar sTableStyleName = oTableStyle.GetName();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"Table style name = \" + sTableStyleName);\nbuilder.SaveFile(\"docx\", \"GetName.docx\");\nbuilder.CloseFile();"
		},
		"ApiStyle.getparapr": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oNormalStyle = oDocument.GetDefaultStyle(\"paragraph\");\nvar oParaPr = oNormalStyle.GetParaPr();\noParaPr.SetSpacingLine(480, \"auto\");\noParaPr.SetJc(\"both\");\noParaPr.SetIndFirstLine(720);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a paragraph with the line spacing, text justification and indent set using the paragraph style. \");\noParagraph.AddText(\"We do not change the style of the paragraph itself. \");\noParagraph.AddText(\"Only document-wide paragraph styles are applied.\");\nbuilder.SaveFile(\"docx\", \"GetParaPr.docx\");\nbuilder.CloseFile();"
		},
		"ApiStyle.gettablecellpr": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\nvar oTable = Api.CreateTable(2, 3);\noTable.SetWidth(\"percent\", 100);\noDocument.Push(oTable);\noTable.SetStyle(oTableStyle);\noTable.SetTableLook(true, true, true, true, true, true);\noTableStyle.GetConditionalTableStyle(\"topLeftCell\").GetTableCellPr().SetShd(\"clear\", 255, 0, 0);\noTableStyle.GetConditionalTableStyle(\"topRightCell\").GetTableCellPr().SetShd(\"clear\", 0, 255, 0);\noTableStyle.GetConditionalTableStyle(\"bottomLeftCell\").GetTableCellPr().SetShd(\"clear\", 0, 0, 255);\noTableStyle.GetConditionalTableStyle(\"bottomRightCell\").GetTableCellPr().SetShd(\"clear\", 255, 255, 0);\nbuilder.SaveFile(\"docx\", \"GetTableCellPr.docx\");\nbuilder.CloseFile();"
		},
		"ApiStyle.gettablepr": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\nvar oTable = Api.CreateTable(2, 2);\noTable.SetWidth(\"percent\", 100);\nvar oTablePr = oTableStyle.GetTablePr();\noTablePr.SetTableInd(0);\noTablePr.SetTableCellMarginTop(720);\noTablePr.SetTableCellMarginLeft(120);\noTablePr.SetTableCellMarginRight(120);\noTablePr.SetTableCellMarginBottom(0);\noDocument.Push(oTable);\noTable.SetStyle(oTableStyle);\noTable.SetTableLook(true, true, true, true, true, true);\noTableStyle.GetConditionalTableStyle(\"topLeftCell\").GetTableCellPr().SetShd(\"clear\", 255, 0, 0);\noTableStyle.GetConditionalTableStyle(\"topRightCell\").GetTableCellPr().SetShd(\"clear\", 0, 255, 0);\noTableStyle.GetConditionalTableStyle(\"bottomLeftCell\").GetTableCellPr().SetShd(\"clear\", 0, 0, 255);\noTableStyle.GetConditionalTableStyle(\"bottomRightCell\").GetTableCellPr().SetShd(\"clear\", 255, 255, 0);\nbuilder.SaveFile(\"docx\", \"GetTablePr.docx\");\nbuilder.CloseFile();"
		},
		"ApiStyle.gettablerowpr": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\nvar oTable = Api.CreateTable(2, 2);\noTable.SetWidth(\"percent\", 100);\noDocument.Push(oTable);\noTable.SetStyle(oTableStyle);\noTable.SetTableLook(true, true, true, true, false, false);\noTableStyle.GetTableRowPr().SetHeight(\"atLeast\", 1440);\noTableStyle.GetConditionalTableStyle(\"topLeftCell\").GetTableCellPr().SetShd(\"clear\", 255, 0, 0);\noTableStyle.GetConditionalTableStyle(\"topRightCell\").GetTableCellPr().SetShd(\"clear\", 0, 255, 0);\noTableStyle.GetConditionalTableStyle(\"bottomLeftCell\").GetTableCellPr().SetShd(\"clear\", 0, 0, 255);\noTableStyle.GetConditionalTableStyle(\"bottomRightCell\").GetTableCellPr().SetShd(\"clear\", 255, 255, 0);\nbuilder.SaveFile(\"docx\", \"GetTableRowPr.docx\");\nbuilder.CloseFile();"
		},
		"ApiStyle.gettextpr": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oNormalStyle = oDocument.GetDefaultStyle(\"paragraph\");\nvar oTextPr = oNormalStyle.GetTextPr();\noTextPr.SetColor(0x26, 0x26, 0x26, false);\noTextPr.SetFontFamily(\"Calibri Light\");\noTextPr.SetFontSize(32);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is a paragraph with the text color, font family and font size set using the text style. \");\noParagraph.AddText(\"We do not change the style of the paragraph itself. \");\noParagraph.AddText(\"Only document-wide text styles are applied.\");\nbuilder.SaveFile(\"docx\", \"GetTextPr.docx\");\nbuilder.CloseFile();"
		},
		"ApiStyle.gettype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.GetStyle(\"Bordered - Accent 5\");\noTableStyle.SetName(\"My Custom Style\");\nvar oTable = Api.CreateTable(2, 2);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nvar oTableStyleType = oTableStyle.GetType();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"Style type = \" + oTableStyleType);\nbuilder.SaveFile(\"docx\", \"GetType.docx\");\nbuilder.CloseFile();"
		},
		"ApiStyle.setbasedon": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(2, 2);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetBasedOn.docx\");\nbuilder.CloseFile();"
		},
		"ApiStyle.setname": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.GetStyle(\"Bordered - Accent 5\");\noTableStyle.SetName(\"My Custom Style\");\nvar oTable = Api.CreateTable(2, 2);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nvar sTableStyleName = oTableStyle.GetName();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"Table style name = \" + sTableStyleName);\nbuilder.SaveFile(\"docx\", \"SetName.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.addcolumn": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We create a 2x2 table and add a new column, so that it becomes 3x2:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(2, 2);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noTable.AddColumn(oTable.GetRow(0).GetCell(1), true);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"AddColumn.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.addcolumns": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nvar oCell = oTable.GetCell(0, 0).GetContent().GetElement(0).AddText(\"Two new columns were added after this cell.\");\noTable.AddColumns(oCell, 2, false);\nbuilder.SaveFile(\"docx\", \"AddColumns.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.addelement": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is just a sample text in the first cell.\");\nvar oCell = oTable.GetCell(0,0);\noTable.AddElement(oCell, 0, oParagraph);\nbuilder.SaveFile(\"docx\", \"AddElement.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.addrow": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We create a 2x2 table and add a new row, so that it becomes 2x3:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(2, 2);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noTable.AddRow(oTable.GetRow(1).GetCell(0), true);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"AddRow.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.addrows": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nvar oCell = oTable.GetCell(0, 0).GetContent().GetElement(0).AddText(\"Two new rows were added after this cell.\");\noTable.AddRows(oCell, 2, false);\nbuilder.SaveFile(\"docx\", \"AddRows.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.clear": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noTable.GetCell(0, 0).GetContent().GetElement(0).AddText(\"This is just a sample text.\");\noDocument.Push(oTable);\noTable.Clear();\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The content of the table was cleared.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"Clear.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.copy": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(2, 2);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nvar oCopyTable = oTable.Copy();\noDocument.Push(oCopyTable);\nbuilder.SaveFile(\"docx\", \"Copy.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.getcell": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nvar oCell = oTable.GetCell(0, 0);\noCell.GetContent().GetElement(0).AddText(\"Cell #1\");\nbuilder.SaveFile(\"docx\", \"GetCell.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.getclasstype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nvar sClassType = oTable.GetClassType();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"Class Type = \" + sClassType);\nbuilder.SaveFile(\"docx\", \"GetClassType.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.getparentcontentcontrol": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oBlockLvlSdt = Api.CreateBlockLvlSdt();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noBlockLvlSdt.AddElement(oTable, 0);\noDocument.AddElement(0, oBlockLvlSdt);\nvar oParentContentControl = oTable.GetParentContentControl();\noParentContentControl.SetAlias(\"â„–1\");\nbuilder.SaveFile(\"docx\", \"GetParentContentControl.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.getparenttable": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable1 = Api.CreateTable(3, 3);\noTable1.SetWidth(\"percent\", 100);\noTable1.SetStyle(oTableStyle);\noDocument.Push(oTable1);\nvar oTable2 = Api.CreateTable(2, 2);\noTable2.SetWidth(\"percent\", 100);\noTable2.SetStyle(oTableStyle);\nvar oCell = oTable1.GetCell(0,0);\noTable1.AddElement(oCell, 0, oTable2);\nvar oParentTable = oTable2.GetParentTable();\noCell = oParentTable.GetRow(2).GetCell(0);\noParentTable.RemoveRow(oCell);\nbuilder.SaveFile(\"docx\", \"GetParentTable.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.getparenttablecell": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable1 = Api.CreateTable(3, 3);\noTable1.SetWidth(\"percent\", 100);\noTable1.SetStyle(oTableStyle);\noDocument.Push(oTable1);\nvar oTable2 = Api.CreateTable(2, 2);\noTable2.SetWidth(\"percent\", 100);\noTable2.SetStyle(oTableStyle);\nvar oCell = oTable1.GetCell(0,0);\noTable1.AddElement(oCell, 0, oTable2);\nvar oParentTableCell = oTable2.GetParentTableCell();\noParentTableCell.SetShd(\"clear\", 0xff, 0x68, 0x00, false);\nbuilder.SaveFile(\"docx\", \"GetParentTableCell.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.getrange": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\noTable.GetCell(0, 0).GetContent().GetElement(0).AddText(\"This is just a sample text.\");\nvar oRange = oTable.GetRange(0, 3);\noRange.SetBold(true);\nbuilder.SaveFile(\"docx\", \"GetRange.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.getrow": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We create a 2x2 table and add a new row, so that it becomes 2x3:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(2, 2);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noTable.AddRow(oTable.GetRow(1).GetCell(0), true);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"GetRow.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.getrowscount": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We create a 2x2 table and add a new row, so that it becomes 2x3:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(2, 2);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\nvar nTableRowsNumber = oTable.GetRowsCount();\noTable.AddRow(oTable.GetRow(1).GetCell(0), true);\nvar nTableRowsNumber1 = oTable.GetRowsCount();\noDocument.Push(oTable);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The table above had \" + nTableRowsNumber + \" rows before we added a new one. \");\noParagraph.AddText(\"Now this table has \" + nTableRowsNumber1 + \" rows.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetRowsCount.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.insertincontentcontrol": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\nvar oBlockLvlSdt = oTable.InsertInContentControl(1);\noDocument.AddElement(0, oBlockLvlSdt);\nbuilder.SaveFile(\"docx\", \"InsertInContentControl.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.mergecells": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(5, 5);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\nvar oCell = oTable.MergeCells([oTable.GetRow(1).GetCell(1), oTable.GetRow(1).GetCell(2), oTable.GetRow(2).GetCell(1), oTable.GetRow(2).GetCell(2)]);\noCell.GetContent().GetElement(0).AddText(\"Merged cell\");\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"MergeCells.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.removecolumn": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We create a 3x3 table and remove one column (the second one), so that it becomes 2x3:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\nvar oCell = oTable.GetRow(2).GetCell(1);\noTable.RemoveColumn(oCell);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"RemoveColumn.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.removerow": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We create a 3x3 table and remove one row (the second one), so that it becomes 3x2:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\nvar oCell = oTable.GetRow(1).GetCell(0);\noTable.RemoveRow(oCell);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"RemoveRow.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.search": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noTable.GetCell(0, 0).GetContent().GetElement(0).AddText(\"Cell 1\");\noTable.GetCell(0, 1).GetContent().GetElement(0).AddText(\"Cell 2\");\noTable.GetCell(0, 2).GetContent().GetElement(0).AddText(\"Cell 3\");\noDocument.Push(oTable);\nvar aSearch = oTable.Search(\"Cell\");\naSearch[0].SetBold(true);\nbuilder.SaveFile(\"docx\", \"Search.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.select": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\noTable.GetCell(0, 0).GetContent().GetElement(0).AddText(\"This table is selected.\");\noTable.Select();\nbuilder.SaveFile(\"docx\", \"Select.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.setbackgroundcolor": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(4, 2);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noTable.SetBackgroundColor(255, 255, 0, false);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetBackgroundColor.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.setcellspacing": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We create a 3x3 table and set the cell spacing to half an inch:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetStyle(oTableStyle);\noTable.SetCellSpacing(720);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetCellSpacing.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.sethalign": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\noTable.GetCell(0, 0).GetContent().GetElement(0).AddText(\"This is just a sample text.\");\noTable.SetHAlign(\"center\");\nbuilder.SaveFile(\"docx\", \"SetHAlign.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.setjc": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"The table is aligned at the center of the page horizontally.\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(2, 2);\noTable.SetWidth(\"percent\", 50);\noTable.SetStyle(oTableStyle);\noTable.SetJc(\"center\");\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetJc.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.setpaddings": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\noTable.GetCell(0, 0).GetContent().GetElement(0).AddText(\"This is just a sample text.\");\noTable.SetPaddings(10, 10, 5, 5);\nbuilder.SaveFile(\"docx\", \"SetPaddings.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.setshd": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We added a gray shading to the table:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(2, 2);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noTable.SetShd(\"clear\", 0xEE, 0xEE, 0xEE, false);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetShd.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.setstyle": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We create a table and apply one of the existing styles to it:\");\nvar oTableStyle = oDocument.GetStyle(\"Bordered - Accent 5\");\nvar oTable = Api.CreateTable(2, 2);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetStyle.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.setstylecolbandsize": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\noDocument.RemoveAllElements();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\nvar oTable = Api.CreateTable(4, 2);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noTable.SetTableLook(true, true, true, true, true, true);\noTable.SetStyleColBandSize(2);\noTableStyle.GetConditionalTableStyle(\"bandedColumn\").GetTextPr().SetBold(true);\noTable.GetRow(0).GetCell(0).GetContent().GetElement(0).AddText(\"Bold\");\noTable.GetRow(0).GetCell(1).GetContent().GetElement(0).AddText(\"Bold\");\noTable.GetRow(0).GetCell(2).GetContent().GetElement(0).AddText(\"Normal\");\noTable.GetRow(0).GetCell(3).GetContent().GetElement(0).AddText(\"Normal\");\noTable.GetRow(1).GetCell(0).GetContent().GetElement(0).AddText(\"Bold\");\noTable.GetRow(1).GetCell(1).GetContent().GetElement(0).AddText(\"Bold\");\noTable.GetRow(1).GetCell(2).GetContent().GetElement(0).AddText(\"Normal\");\noTable.GetRow(1).GetCell(3).GetContent().GetElement(0).AddText(\"Normal\");\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetStyleColBandSize.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.setstylerowbandsize": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\noDocument.RemoveAllElements();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\nvar oTable = Api.CreateTable(2, 4);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noTable.SetTableLook(true, true, true, true, true, true);\noTable.SetStyleRowBandSize(2);\noTableStyle.GetConditionalTableStyle(\"bandedRow\").GetTextPr().SetBold(true);\noTable.GetRow(0).GetCell(0).GetContent().GetElement(0).AddText(\"Normal\");\noTable.GetRow(0).GetCell(1).GetContent().GetElement(0).AddText(\"Normal\");\noTable.GetRow(1).GetCell(0).GetContent().GetElement(0).AddText(\"Bold\");\noTable.GetRow(1).GetCell(1).GetContent().GetElement(0).AddText(\"Bold\");\noTable.GetRow(2).GetCell(0).GetContent().GetElement(0).AddText(\"Bold\");\noTable.GetRow(2).GetCell(1).GetContent().GetElement(0).AddText(\"Bold\");\noTable.GetRow(3).GetCell(0).GetContent().GetElement(0).AddText(\"Normal\");\noTable.GetRow(3).GetCell(1).GetContent().GetElement(0).AddText(\"Normal\");\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetStyleRowBandSize.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.settableborderbottom": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We create a 3x3 table and add the bottom 4 point blue border:\");\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetTableBorderTop(\"single\", 4, 0, 0, 0, 255);\noTable.SetTableBorderBottom(\"single\", 32, 0, 0, 0, 255);\noTable.SetTableBorderLeft(\"single\", 4, 0, 0, 0, 255);\noTable.SetTableBorderRight(\"single\", 4, 0, 0, 0, 255);\noTable.SetTableBorderInsideV(\"single\", 4, 0, 255, 0, 0);\noTable.SetTableBorderInsideH(\"single\", 4, 0, 255, 0, 0);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetTableBorderBottom.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.settableborderinsideh": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We create a 3x3 table and add the inside horizontal 4 point red borders:\");\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetTableBorderTop(\"single\", 4, 0, 0, 0, 255);\noTable.SetTableBorderBottom(\"single\", 4, 0, 0, 0, 255);\noTable.SetTableBorderLeft(\"single\", 4, 0, 0, 0, 255);\noTable.SetTableBorderRight(\"single\", 4, 0, 0, 0, 255);\noTable.SetTableBorderInsideV(\"single\", 4, 0, 255, 0, 0);\noTable.SetTableBorderInsideH(\"single\", 32, 0, 255, 0, 0);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetTableBorderInsideH.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.settableborderinsidev": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We create a 3x3 table and add the inside vertical 4 point red borders:\");\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetTableBorderTop(\"single\", 4, 0, 0, 0, 255);\noTable.SetTableBorderBottom(\"single\", 4, 0, 0, 0, 255);\noTable.SetTableBorderLeft(\"single\", 4, 0, 0, 0, 255);\noTable.SetTableBorderRight(\"single\", 4, 0, 0, 0, 255);\noTable.SetTableBorderInsideV(\"single\", 32, 0, 255, 0, 0);\noTable.SetTableBorderInsideH(\"single\", 4, 0, 255, 0, 0);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetTableBorderInsideV.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.settableborderleft": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We create a 3x3 table and add the left 4 point blue border:\");\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetTableBorderTop(\"single\", 4, 0, 0, 0, 255);\noTable.SetTableBorderBottom(\"single\", 4, 0, 0, 0, 255);\noTable.SetTableBorderLeft(\"single\", 32, 0, 0, 0, 255);\noTable.SetTableBorderRight(\"single\", 4, 0, 0, 0, 255);\noTable.SetTableBorderInsideV(\"single\", 4, 0, 255, 0, 0);\noTable.SetTableBorderInsideH(\"single\", 4, 0, 255, 0, 0);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetTableBorderLeft.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.settableborderright": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We create a 3x3 table and add the right 4 point blue border:\");\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetTableBorderTop(\"single\", 4, 0, 0, 0, 255);\noTable.SetTableBorderBottom(\"single\", 4, 0, 0, 0, 255);\noTable.SetTableBorderLeft(\"single\", 4, 0, 0, 0, 255);\noTable.SetTableBorderRight(\"single\", 32, 0, 0, 0, 255);\noTable.SetTableBorderInsideV(\"single\", 4, 0, 255, 0, 0);\noTable.SetTableBorderInsideH(\"single\", 4, 0, 255, 0, 0);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetTableBorderRight.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.settablebordertop": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We create a 3x3 table and add the top 4 point blue border:\");\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetTableBorderTop(\"single\", 32, 0, 0, 0, 255);\noTable.SetTableBorderBottom(\"single\", 4, 0, 0, 0, 255);\noTable.SetTableBorderLeft(\"single\", 4, 0, 0, 0, 255);\noTable.SetTableBorderRight(\"single\", 4, 0, 0, 0, 255);\noTable.SetTableBorderInsideV(\"single\", 4, 0, 255, 0, 0);\noTable.SetTableBorderInsideH(\"single\", 4, 0, 255, 0, 0);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetTableBorderTop.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.settablecellmarginbottom": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\nvar oCell = oTable.GetCell(0, 0).GetContent().GetElement(0).AddText(\"This is just a sample text to show that the bottom cell margin is 36 points.\");\noTable.SetTableCellMarginBottom(720);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetTableCellMarginBottom.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.settablecellmarginleft": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\nvar oCell = oTable.GetCell(0, 0).GetContent().GetElement(0).AddText(\"This is just a sample text to show that the left cell margin is 36 points.\");\noTable.SetTableCellMarginLeft(720);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetTableCellMarginLeft.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.settablecellmarginright": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\nvar oCell = oTable.GetCell(0, 0).GetContent().GetElement(0).AddText(\"This is just a sample text to show that the right cell margin is 36 points.\");\noTable.SetTableCellMarginRight(720);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetTableCellMarginRight.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.settablecellmargintop": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\nvar oCell = oTable.GetCell(0, 0).GetContent().GetElement(0).AddText(\"This is just a sample text to show that the top cell margin is 36 points.\");\noTable.SetTableCellMarginTop(720);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetTableCellMarginTop.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.settableind": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We set the indent of 1 inch for the table:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 50);\noTable.SetStyle(oTableStyle);\noTable.SetTableInd(1440);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetTableInd.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.settablelayout": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We set the table cells to preserve their size:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetTableLayout(\"fixed\");\nvar oCell = oTable.GetRow(0).GetCell(0);\noCell.GetContent().GetElement(0).AddText(\"Fixed layout\");\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetTableLayout.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.settablelook": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We set the table look to override the current table style:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noTable.SetTableLook(true, true, true, true, true, true);\noTableStyle.GetConditionalTableStyle(\"topLeftCell\").GetTableCellPr().SetShd(\"clear\", 255, 0, 0);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetTableLook.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.settextpr": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noTable.GetCell(0, 0).GetContent().GetElement(0).AddText(\"Cell 1\");\noTable.GetCell(0, 1).GetContent().GetElement(0).AddText(\"Cell 2\");\noTable.GetCell(0, 2).GetContent().GetElement(0).AddText(\"Cell 3\");\noDocument.Push(oTable);\nvar oTextPr = oDocument.GetDefaultTextPr();\noTextPr.SetFontSize(30);\noTextPr.SetBold(true);\noTable.SetTextPr(oTextPr);\nbuilder.SaveFile(\"docx\", \"SetTextPr.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.setvalign": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"The table was added to the bottom of the page. Scroll down to see it.\"); \nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\noTable.SetWrappingStyle(false);\noTable.SetTableBorderTop(\"single\", 4, 0, 0, 0, 255);\noTable.SetTableBorderBottom(\"single\", 4, 0, 0, 0, 255);\noTable.SetTableBorderLeft(\"single\", 32, 0, 0, 0, 255);\noTable.SetTableBorderRight(\"single\", 4, 0, 0, 0, 255);\noTable.SetTableBorderInsideV(\"single\", 4, 0, 255, 0, 0);\noTable.SetTableBorderInsideH(\"single\", 4, 0, 255, 0, 0);\noTable.GetCell(0, 0).GetContent().GetElement(0).AddText(\"This is just a sample text.\");\noTable.SetVAlign(\"bottom\");\nbuilder.SaveFile(\"docx\", \"SetVAlign.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.setwidth": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We set the table width to 100 percent:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetWidth.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.setwrappingstyle": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"This is just a sample text.\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable1 = Api.CreateTable(3, 3);\noTable1.SetWidth(\"percent\", 100);\noTable1.SetStyle(oTableStyle);\noDocument.Push(oTable1);\noTable1.GetCell(0, 0).GetContent().GetElement(0).AddText(\"Table 1\");\nvar oTable2 = Api.CreateTable(3, 3);\noTable2.SetWidth(\"percent\", 100);\noTable2.SetStyle(oTableStyle);\noDocument.Push(oTable2);\noTable2.GetCell(0, 0).GetContent().GetElement(0).AddText(\"Table 2\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"The tables were added to the paragraph. Table 1 is inline and Table 2 is not.\");\noTable1.SetWrappingStyle(true);\noTable2.SetWrappingStyle(false);\nbuilder.SaveFile(\"docx\", \"SetWrappingStyle.docx\");\nbuilder.CloseFile();"
		},
		"ApiTable.split": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nvar oCell = oTable.GetCell(0, 0);\noTable.Split(oCell, 2, 2);\nbuilder.SaveFile(\"docx\", \"Split.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.addcolumns": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\noTable.GetCell(0, 0).GetContent().GetElement(0).AddText(\"Two new columns were added after this cell.\");\noTable.GetCell(0, 0).AddColumns(2, false);\nbuilder.SaveFile(\"docx\", \"AddColumns.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.addelement": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is just a sample text in the first cell.\");\nvar oCell = oTable.GetCell(0, 0);\noCell.AddElement(0, oParagraph);\nbuilder.SaveFile(\"docx\", \"AddElement.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.addrows": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\noTable.GetCell(0, 0).GetContent().GetElement(0).AddText(\"Two new rows were added after this cell.\");\noTable.GetCell(0, 0).AddRows(2, false);\nbuilder.SaveFile(\"docx\", \"AddRows.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.clear": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noTable.GetCell(0, 0).GetContent().GetElement(0).AddText(\"This is just a sample text.\");\noDocument.Push(oTable);\noTable.GetCell(0, 0).Clear();\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The content of the table cell was cleared.\");\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"Clear.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.getclasstype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oCell = oTable.GetRow(0).GetCell(0);\noCell.GetContent().GetElement(0).AddText(\"Cell #1\");\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nvar sClassType = oCell.GetClassType();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"Class Type = \" + sClassType);\nbuilder.SaveFile(\"docx\", \"GetClassType.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.getcontent": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oCell = oTable.GetRow(0).GetCell(0);\noCell.GetContent().GetElement(0).AddText(\"Cell #1\");\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"GetContent.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.getindex": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\noTable.GetCell(0, 0).GetContent().GetElement(0).AddText(\"Cell index: \" + oTable.GetCell(0, 0).GetIndex());\nbuilder.SaveFile(\"docx\", \"GetIndex.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.getnext": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noTable.GetCell(0, 0).GetContent().GetElement(0).AddText(\"Cell 1\");\noTable.GetCell(0, 1).GetContent().GetElement(0).AddText(\"Cell 2\");\noDocument.Push(oTable);\nvar oNextCell = oTable.GetCell(0, 0).GetNext();\noNextCell.GetContent().GetElement(0).SetBold(true);\nbuilder.SaveFile(\"docx\", \"GetNext.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.getparentrow": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\noTable.GetCell(0, 0).GetContent().GetElement(0).AddText(\"Cell 1\");\nvar oParentRow = oTable.GetCell(0, 0).GetParentRow();\noParentRow.SetHeight(\"atLeast\", 720);\nbuilder.SaveFile(\"docx\", \"GetParentRow.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.getparenttable": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\noTable.GetCell(0, 0).GetContent().GetElement(0).AddText(\"Cell 1\");\nvar oParentTable = oTable.GetCell(0, 0).GetParentTable();\noParentTable.SetTableBorderTop(\"single\", 32, 0, 0, 0, 255);\nbuilder.SaveFile(\"docx\", \"GetParentTable.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.getprevious": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noTable.GetCell(0, 0).GetContent().GetElement(0).AddText(\"Cell 1\");\noTable.GetCell(0, 1).GetContent().GetElement(0).AddText(\"Cell 2\");\noDocument.Push(oTable);\nvar oPreviousCell = oTable.GetCell(0, 1).GetPrevious();\noPreviousCell.GetContent().GetElement(0).SetBold(true);\nbuilder.SaveFile(\"docx\", \"GetPrevious.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.getrowindex": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\noTable.GetCell(0, 0).GetContent().GetElement(0).AddText(\"Row index: \" + oTable.GetCell(0, 0).GetRowIndex());\nbuilder.SaveFile(\"docx\", \"GetRowIndex.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.removecolumn": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\noTable.GetCell(0, 0).GetContent().GetElement(0).AddText(\"Cell 1\");\noTable.GetCell(0, 0).RemoveColumn();\noTable.GetCell(0, 0).GetContent().GetElement(0).AddText(\"A column with Cell 1 was removed.\");\nbuilder.SaveFile(\"docx\", \"RemoveColumn.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.removerow": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\noTable.GetCell(0, 0).GetContent().GetElement(0).AddText(\"Cell 1\");\noTable.GetCell(0, 0).RemoveRow();\noTable.GetCell(0, 0).GetContent().GetElement(0).AddText(\"A row with Cell 1 was removed.\");\nbuilder.SaveFile(\"docx\", \"RemoveRow.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.search": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noTable.GetCell(0, 0).GetContent().GetElement(0).AddText(\"Cell 1. This cell is in the first row.\");\noDocument.Push(oTable);\nvar aSearch = oTable.GetCell(0, 0).Search(\"Cell\");\naSearch[1].SetBold(true);\nbuilder.SaveFile(\"docx\", \"Search.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.setbackgroundcolor": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(4, 2);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\nvar oCell = oTable.GetRow(0).GetCell(0);\noCell.SetBackgroundColor(255, 255, 0, false);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetBackgroundColor.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.setcellborderbottom": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We create a 3x3 table and add the bottom 4 point blue border to cell #1:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oCell = oTable.GetRow(0).GetCell(0);\noCell.SetCellBorderBottom(\"single\", 32, 0, 0, 0, 255);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetCellBorderBottom.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.setcellborderleft": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We create a 3x3 table and add the left 4 point blue border to cell #1:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oCell = oTable.GetRow(0).GetCell(0);\noCell.SetCellBorderLeft(\"single\", 32, 0, 0, 0, 255);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetCellBorderLeft.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.setcellborderright": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We create a 3x3 table and add the right 4 point blue border to cell #1:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oCell = oTable.GetRow(0).GetCell(0);\noCell.SetCellBorderRight(\"single\", 32, 0, 0, 0, 255);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetCellBorderRight.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.setcellbordertop": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We create a 3x3 table and add the top 4 point blue border to cell #1:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oCell = oTable.GetRow(0).GetCell(0);\noCell.SetCellBorderTop(\"single\", 32, 0, 0, 0, 255);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetCellBorderTop.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.setcellmarginbottom": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oCell = oTable.GetRow(0).GetCell(0);\noCell.SetCellMarginBottom(720);\noCell.GetContent().GetElement(0).AddText(\"This is just a sample text to show that the bottom cell margin is 36 points.\");\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetCellMarginBottom.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.setcellmarginleft": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oCell = oTable.GetRow(0).GetCell(0);\noCell.SetCellMarginLeft(720);\noCell.GetContent().GetElement(0).AddText(\"This is just a sample text to show that the left cell margin is 36 points.\");\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetCellMarginLeft.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.setcellmarginright": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oCell = oTable.GetRow(0).GetCell(0);\noCell.SetCellMarginRight(720);\noCell.GetContent().GetElement(0).AddText(\"This is just a sample text to show that the right cell margin is 36 points.\");\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetCellMarginRight.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.setcellmargintop": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oCell = oTable.GetRow(0).GetCell(0);\noCell.SetCellMarginTop(720);\noCell.GetContent().GetElement(0).AddText(\"This is just a sample text to show that the top cell margin is 36 points.\");\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetCellMarginTop.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.setcellpr": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable1 = Api.CreateTable(3, 3);\noTable1.SetWidth(\"percent\", 100);\noTable1.SetStyle(oTableStyle);\nvar oTableCellPr = oTableStyle.GetTableCellPr();\noTable1.GetCell(0, 0).GetContent().GetElement(0).AddText(\"Cell 1\");\noTableCellPr.SetCellMarginTop(720);\noDocument.Push(oTable1);\nvar oTable2 = Api.CreateTable(3, 3);\noTable2.SetWidth(\"percent\", 100);\noTable2.SetStyle(oTableStyle);\noTable2.GetCell(0, 0).GetContent().GetElement(0).AddText(\"Cell 1\");\noDocument.Push(oTable2);\noTable2.GetCell(0, 0).SetCellPr(oTableCellPr);\nbuilder.SaveFile(\"docx\", \"SetCellPr.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.setcolumnbackgroundcolor": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(4, 2);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\nvar oCell = oTable.GetRow(0).GetCell(0);\noCell.SetColumnBackgroundColor(255, 255, 0, false);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetColumnBackgroundColor.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.setnowrap": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTablePr = oTableStyle.GetTablePr();\nvar oTable = Api.CreateTable(3, 3);\noTablePr.SetTableLayout(\"autofit\");\noTable.SetTableLook(true, true, true, true, false, false);\noTable.SetStyle(oTableStyle);\nvar oCell = oTable.GetRow(0).GetCell(0);\noCell.GetContent().GetElement(0).AddText(\"This is a table with the autofit type of the table layout.\");\noDocument.Push(oTable);\nvar oCopyTable1 = oTable.Copy();\noCopyTable1.SetWidth(\"percent\", 10);\noCell = oCopyTable1.GetRow(0).GetCell(0);\noCell.Clear();\noCell.GetContent().GetElement(0).AddText(\"This is a table cell where text is wrapped when we try to change table width.\");\noCell.SetNoWrap(false);\noDocument.Push(oCopyTable1);\nvar oCopyTable2 = oTable.Copy();\noCopyTable2.SetWidth(\"percent\", 10);\noCell = oCopyTable2.GetRow(0).GetCell(0);\noCell.Clear();\noCell.GetContent().GetElement(0).AddText(\"This is a table cell where text is not wrapped when we try to change table width.\");\noCell.SetNoWrap(true);\noDocument.Push(oCopyTable2);\nbuilder.SaveFile(\"docx\", \"SetNoWrap.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.setshd": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We create a 3x3 table and add a red shading to cell #1:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oCell = oTable.GetRow(0).GetCell(0);\noCell.SetShd(\"clear\", 0xff, 0x68, 0x00, false);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetShd.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.settextdirection": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oTableRow = oTable.GetRow(0);\noTableRow.SetHeight(\"atLeast\", 1440);\nvar oCell = oTable.GetRow(0).GetCell(0);\noCell.SetTextDirection(\"btlr\");\nvar oParagraph = oCell.GetContent().GetElement(0);\noParagraph.AddText(\"btlr\");\noCell = oTable.GetRow(0).GetCell(1);\noCell.SetTextDirection(\"tbrl\");\noParagraph = oCell.GetContent().GetElement(0);\noParagraph.AddText(\"tbrl\");\noCell = oTable.GetRow(1).GetCell(0);\noCell.SetTextDirection(\"lrtb\");\noParagraph = oCell.GetContent().GetElement(0);\noParagraph.AddText(\"lrtb\");\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetTextDirection.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.settextpr": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noTable.GetCell(0, 0).GetContent().GetElement(0).AddText(\"Cell 1\");\noDocument.Push(oTable);\nvar oTextPr = oDocument.GetDefaultTextPr();\noTextPr.SetFontSize(30);\noTextPr.SetBold(true);\noTable.GetCell(0, 0).SetTextPr(oTextPr);\nbuilder.SaveFile(\"docx\", \"SetTextPr.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.setverticalalign": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oTableRow = oTable.GetRow(0);\noTableRow.SetHeight(\"atLeast\", 1440);\nvar oCell = oTable.GetRow(0).GetCell(0);\noCell.SetVerticalAlign(\"top\");\nvar oParagraph = oCell.GetContent().GetElement(0);\noParagraph.AddText(\"Align top\");\noCell = oTable.GetRow(0).GetCell(1);\noCell.SetVerticalAlign(\"center\");\noParagraph = oCell.GetContent().GetElement(0);\noParagraph.AddText(\"Align center\");\noCell = oTable.GetRow(0).GetCell(2);\noCell.SetVerticalAlign(\"bottom\");\noParagraph = oCell.GetContent().GetElement(0);\noParagraph.AddText(\"Align bottom\");\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetVerticalAlign.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.setwidth": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oCell = oTable.GetRow(0).GetCell(0);\noCell.SetWidth(\"twips\", 2880);\nvar oParagraph = oCell.GetContent().GetElement(0);\noParagraph.AddText(\"2 inches\");\noCell = oTable.GetRow(0).GetCell(1);\noCell.SetWidth(\"twips\", 1440);\noParagraph = oCell.GetContent().GetElement(0);\noParagraph.AddText(\"1 inch\");\noCell = oTable.GetRow(0).GetCell(2);\noCell.SetWidth(\"twips\", 4320);\noParagraph = oCell.GetContent().GetElement(0);\noParagraph.AddText(\"3 inches\");\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetWidth.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.split": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nvar oCell = oTable.GetCell(0, 0);\noCell.Split(2, 2);\nbuilder.SaveFile(\"docx\", \"Split.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCellPr.getclasstype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oTableCellPr = oTableStyle.GetTableCellPr();\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nvar sClassType = oTableCellPr.GetClassType();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"Class Type = \" + sClassType);\nbuilder.SaveFile(\"docx\", \"GetClassType.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCellPr.setcellborderbottom": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We create a 3x3 table and add the bottom 4 point blue border to all cells:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oTableCellPr = oTableStyle.GetTableCellPr();\noTableCellPr.SetCellBorderBottom(\"single\", 32, 0, 0, 0, 255);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetCellBorderBottom.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCellPr.setcellborderleft": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We create a 3x3 table and add the left 4 point blue border to all cells:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oTableCellPr = oTableStyle.GetTableCellPr();\noTableCellPr.SetCellBorderLeft(\"single\", 32, 0, 0, 0, 255);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetCellBorderLeft.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCellPr.setcellborderright": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We create a 3x3 table and add the right 4 point blue border to all cells:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oTableCellPr = oTableStyle.GetTableCellPr();\noTableCellPr.SetCellBorderRight(\"single\", 32, 0, 0, 0, 255);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetCellBorderRight.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCellPr.setcellbordertop": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We create a 3x3 table and add the top 4 point blue border to all cells:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oTableCellPr = oTableStyle.GetTableCellPr();\noTableCellPr.SetCellBorderTop(\"single\", 32, 0, 0, 0, 255);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetCellBorderTop.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCellPr.setcellmarginbottom": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\nvar oCell = oTable.GetRow(0).GetCell(0);\noCell.GetContent().GetElement(0).AddText(\"This is just a sample text to show that the bottom margin for all the table cells is 36 points.\");\noTable.SetWidth(\"percent\", 100);\nvar oTableCellPr = oTableStyle.GetTableCellPr();\noTableCellPr.SetCellMarginBottom(720);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetCellMarginBottom.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCellPr.setcellmarginleft": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\nvar oCell = oTable.GetRow(0).GetCell(0);\noCell.GetContent().GetElement(0).AddText(\"This is just a sample text to show that the left margin for all the table cells is 36 points.\");\noTable.SetWidth(\"percent\", 100);\nvar oTableCellPr = oTableStyle.GetTableCellPr();\noTableCellPr.SetCellMarginLeft(720);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetCellMarginLeft.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCellPr.setcellmarginright": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\nvar oCell = oTable.GetRow(0).GetCell(0);\noCell.GetContent().GetElement(0).AddText(\"This is just a sample text to show that the right margin for all the table cells is 36 points.\");\noTable.SetWidth(\"percent\", 100);\nvar oTableCellPr = oTableStyle.GetTableCellPr();\noTableCellPr.SetCellMarginRight(720);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetCellMarginRight.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCellPr.setcellmargintop": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\nvar oCell = oTable.GetRow(0).GetCell(0);\noCell.GetContent().GetElement(0).AddText(\"This is just a sample text to show that the top margin for all the table cells is 36 points.\");\noTable.SetWidth(\"percent\", 100);\nvar oTableCellPr = oTableStyle.GetTableCellPr();\noTableCellPr.SetCellMarginTop(720);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetCellMarginTop.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCellPr.setnowrap": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTablePr = oTableStyle.GetTablePr();\nvar oTable = Api.CreateTable(3, 3);\noTablePr.SetTableLayout(\"autofit\");\noTable.SetTableLook(true, true, true, true, false, false);\noTable.SetStyle(oTableStyle);\nvar oCell = oTable.GetRow(0).GetCell(0);\noCell.GetContent().GetElement(0).AddText(\"This is a table with the autofit type of the table layout.\");\noDocument.Push(oTable);\nvar oCopyTable1 = oTable.Copy();\noCopyTable1.SetWidth(\"percent\", 10);\noCell = oCopyTable1.GetRow(0).GetCell(0);\noCell.Clear();\noCell.GetContent().GetElement(0).AddText(\"This is a table cell where text is wrapped when we try to change table width.\");\nvar oTableCellPr = oTableStyle.GetTableCellPr();\noTableCellPr.SetNoWrap(false);\noDocument.Push(oCopyTable1);\nvar oCopyTable2 = oTable.Copy();\noCopyTable2.SetWidth(\"percent\", 10);\noCell = oCopyTable2.GetRow(0).GetCell(0);\noCell.Clear();\noCell.GetContent().GetElement(0).AddText(\"This is a table cell where text is not wrapped when we try to change table width.\");\noTableCellPr.SetNoWrap(true);\noCopyTable2.SetStyle(oTableStyle);\noDocument.Push(oCopyTable2);\nbuilder.SaveFile(\"docx\", \"SetNoWrap.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCellPr.setshd": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We create a 3x3 table and add add a red shading to all cells:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oTableCellPr = oTableStyle.GetTableCellPr();\noTableCellPr.SetShd(\"clear\", 0xff, 0x68, 0x00, false);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetShd.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCellPr.settextdirection": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oTableRow = oTable.GetRow(0);\noTableRow.SetHeight(\"atLeast\", 1440);\nvar oTableCellPr = oTableStyle.GetTableCellPr();\noTableCellPr.SetTextDirection(\"btlr\");\nvar oCell = oTable.GetRow(0).GetCell(0);\nvar oParagraph = oCell.GetContent().GetElement(0);\noParagraph.AddText(\"btlr\");\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetTextDirection.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCellPr.setverticalalign": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oTableRow = oTable.GetRow(0);\noTableRow.SetHeight(\"atLeast\", 1440);\nvar oTableCellPr = oTableStyle.GetTableCellPr();\noTableCellPr.SetVerticalAlign(\"bottom\");\nvar oCell = oTable.GetRow(0).GetCell(0);\nvar oParagraph = oCell.GetContent().GetElement(0);\noParagraph.AddText(\"Align bottom\");\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetVerticalAlign.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableCellPr.setwidth": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"All cells are at least 2 inches wide:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\nvar oTableCellPr = oTableStyle.GetTableCellPr();\noTableCellPr.SetWidth(\"twips\", 2880);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetWidth.docx\");\nbuilder.CloseFile();"
		},
		"ApiTablePr.getclasstype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTablePr = oTableStyle.GetTablePr();\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nvar sClassType = oTablePr.GetClassType();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"Class Type = \" + sClassType);\nbuilder.SaveFile(\"docx\", \"GetClassType.docx\");\nbuilder.CloseFile();"
		},
		"ApiTablePr.setcellspacing": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We create a 3x3 table and set the cell spacing to half an inch:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTablePr = oTableStyle.GetTablePr();\nvar oTable = Api.CreateTable(3, 3);\noTable.SetStyle(oTableStyle);\noTablePr.SetCellSpacing(720);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetCellSpacing.docx\");\nbuilder.CloseFile();"
		},
		"ApiTablePr.setjc": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"The table is aligned at the center of the page horizontally:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTablePr = oTableStyle.GetTablePr();\noTablePr.SetJc(\"center\");\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 50);\noTable.SetTableLook(true, true, true, true, false, false);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetJc.docx\");\nbuilder.CloseFile();"
		},
		"ApiTablePr.setshd": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We added a gray shading to the table:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTablePr = oTableStyle.GetTablePr();\nvar oTable = Api.CreateTable(3, 3);\noTablePr.SetShd(\"clear\", 0xEE, 0xEE, 0xEE, false);\noTable.SetTableLook(true, true, true, true, false, false);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetShd.docx\");\nbuilder.CloseFile();"
		},
		"ApiTablePr.setstylecolbandsize": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\noDocument.RemoveAllElements();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\nvar oTable = Api.CreateTable(4, 2);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\nvar oTablePr = oTableStyle.GetTablePr();\noTable.SetTableLook(true, true, true, true, true, true);\noTablePr.SetStyleColBandSize(2);\noTableStyle.GetConditionalTableStyle(\"bandedColumn\").GetTextPr().SetBold(true);\noTable.GetRow(0).GetCell(0).GetContent().GetElement(0).AddText(\"Bold\");\noTable.GetRow(0).GetCell(1).GetContent().GetElement(0).AddText(\"Bold\");\noTable.GetRow(0).GetCell(2).GetContent().GetElement(0).AddText(\"Normal\");\noTable.GetRow(0).GetCell(3).GetContent().GetElement(0).AddText(\"Normal\");\noTable.GetRow(1).GetCell(0).GetContent().GetElement(0).AddText(\"Bold\");\noTable.GetRow(1).GetCell(1).GetContent().GetElement(0).AddText(\"Bold\");\noTable.GetRow(1).GetCell(2).GetContent().GetElement(0).AddText(\"Normal\");\noTable.GetRow(1).GetCell(3).GetContent().GetElement(0).AddText(\"Normal\");\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetStyleColBandSize.docx\");\nbuilder.CloseFile();"
		},
		"ApiTablePr.setstylerowbandsize": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\noDocument.RemoveAllElements();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\nvar oTable = Api.CreateTable(2, 4);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\nvar oTablePr = oTableStyle.GetTablePr();\noTable.SetTableLook(true, true, true, true, true, true);\noTablePr.SetStyleRowBandSize(2);\noTableStyle.GetConditionalTableStyle(\"bandedRow\").GetTextPr().SetBold(true);\noTable.GetRow(0).GetCell(0).GetContent().GetElement(0).AddText(\"Normal\");\noTable.GetRow(0).GetCell(1).GetContent().GetElement(0).AddText(\"Normal\");\noTable.GetRow(1).GetCell(0).GetContent().GetElement(0).AddText(\"Bold\");\noTable.GetRow(1).GetCell(1).GetContent().GetElement(0).AddText(\"Bold\");\noTable.GetRow(2).GetCell(0).GetContent().GetElement(0).AddText(\"Bold\");\noTable.GetRow(2).GetCell(1).GetContent().GetElement(0).AddText(\"Bold\");\noTable.GetRow(3).GetCell(0).GetContent().GetElement(0).AddText(\"Normal\");\noTable.GetRow(3).GetCell(1).GetContent().GetElement(0).AddText(\"Normal\");\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetStyleRowBandSize.docx\");\nbuilder.CloseFile();"
		},
		"ApiTablePr.settableborderbottom": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We add the bottom 4 point blue border:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTablePr = oTableStyle.GetTablePr();\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTablePr.SetTableBorderBottom(\"single\", 32, 0, 0, 0, 255);\noTable.SetTableLook(true, true, true, true, true, true);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetTableBorderBottom.docx\");\nbuilder.CloseFile();"
		},
		"ApiTablePr.settableborderinsideh": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We add the inside horizontal 4 point blue border:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTablePr = oTableStyle.GetTablePr();\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTablePr.SetTableBorderInsideH(\"single\", 32, 0, 0, 0, 255);\noTable.SetTableLook(true, true, true, true, false, false);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetTableBorderInsideH.docx\");\nbuilder.CloseFile();"
		},
		"ApiTablePr.settableborderinsidev": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We add the inside vertical 4 point blue border:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTablePr = oTableStyle.GetTablePr();\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTablePr.SetTableBorderInsideV(\"single\", 32, 0, 0, 0, 255);\noTable.SetTableLook(true, true, true, true, false, false);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetTableBorderInsideV.docx\");\nbuilder.CloseFile();"
		},
		"ApiTablePr.settableborderleft": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We add the left 4 point blue border:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTablePr = oTableStyle.GetTablePr();\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTablePr.SetTableBorderLeft(\"single\", 32, 0, 0, 0, 255);\noTable.SetTableLook(true, true, true, true, false, false);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetTableBorderLeft.docx\");\nbuilder.CloseFile();"
		},
		"ApiTablePr.settableborderright": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We add the right 4 point blue border:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTablePr = oTableStyle.GetTablePr();\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTablePr.SetTableBorderRight(\"single\", 32, 0, 0, 0, 255);\noTable.SetTableLook(true, true, true, true, false, false);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetTableBorderRight.docx\");\nbuilder.CloseFile();"
		},
		"ApiTablePr.settablebordertop": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We add the top 4 point blue border:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTablePr = oTableStyle.GetTablePr();\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTablePr.SetTableBorderTop(\"single\", 32, 0, 0, 0, 255);\noTable.SetTableLook(true, true, true, true, false, false);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetTableBorderTop.docx\");\nbuilder.CloseFile();"
		},
		"ApiTablePr.settablecellmarginbottom": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTablePr = oTableStyle.GetTablePr();\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTablePr.SetTableCellMarginBottom(720);\noTable.SetTableLook(true, true, true, true, false, false);\noTable.SetStyle(oTableStyle);\nvar oCell = oTable.GetCell(0, 0).GetContent().GetElement(0).AddText(\"This is just a sample text to show that the bottom cell margin is 36 points.\");\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetTableCellMarginBottom.docx\");\nbuilder.CloseFile();"
		},
		"ApiTablePr.settablecellmarginleft": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTablePr = oTableStyle.GetTablePr();\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTablePr.SetTableCellMarginLeft(720);\noTable.SetTableLook(true, true, true, true, false, false);\noTable.SetStyle(oTableStyle);\nvar oCell = oTable.GetCell(0, 0).GetContent().GetElement(0).AddText(\"This is just a sample text to show that the left cell margin is 36 points.\");\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetTableCellMarginLeft.docx\");\nbuilder.CloseFile();"
		},
		"ApiTablePr.settablecellmarginright": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTablePr = oTableStyle.GetTablePr();\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTablePr.SetTableCellMarginRight(720);\noTable.SetTableLook(true, true, true, true, false, false);\noTable.SetStyle(oTableStyle);\nvar oCell = oTable.GetCell(0, 0).GetContent().GetElement(0).AddText(\"This is just a sample text to show that the right cell margin is 36 points.\");\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetTableCellMarginRight.docx\");\nbuilder.CloseFile();"
		},
		"ApiTablePr.settablecellmargintop": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTablePr = oTableStyle.GetTablePr();\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTablePr.SetTableCellMarginTop(720);\noTable.SetTableLook(true, true, true, true, false, false);\noTable.SetStyle(oTableStyle);\nvar oCell = oTable.GetCell(0, 0).GetContent().GetElement(0).AddText(\"This is just a sample text to show that the top cell margin is 36 points.\");\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetTableCellMarginTop.docx\");\nbuilder.CloseFile();"
		},
		"ApiTablePr.settableind": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We set the indent of 1 inch for the table:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTablePr = oTableStyle.GetTablePr();\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTablePr.SetTableInd(1440);\noTable.SetTableLook(true, true, true, true, false, false);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetTableInd.docx\");\nbuilder.CloseFile();"
		},
		"ApiTablePr.settablelayout": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We set the table cells to preserve their size:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTablePr = oTableStyle.GetTablePr();\nvar oTable = Api.CreateTable(3, 3);\noTablePr.SetTableLayout(\"fixed\");\noTable.SetTableLook(true, true, true, true, false, false);\noTable.SetStyle(oTableStyle);\nvar oCell = oTable.GetRow(0).GetCell(0);\noCell.GetContent().GetElement(0).AddText(\"Fixed layout\");\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetTableLayout.docx\");\nbuilder.CloseFile();"
		},
		"ApiTablePr.setwidth": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We set the table cells to preserve their size:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTablePr = oTableStyle.GetTablePr();\nvar oTable = Api.CreateTable(3, 3);\noTablePr.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetWidth.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableRow.addrows": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTable = Api.CreateTable(3, 3);\nvar oRow = oTable.GetRow(0);\noRow.GetCell(0).GetContent().GetElement(0).AddText(\"Second row\");\noTable.SetWidth(\"percent\", 100);\noRow.AddRows(1, true);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"AddRows.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableRow.clear": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTable = Api.CreateTable(3, 3);\nvar oRow = oTable.GetRow(0);\noRow.GetCell(0).GetContent().GetElement(0).AddText(\"First row\");\noRow.Clear();\noRow = oTable.GetRow(1);\noRow.GetCell(0).GetContent().GetElement(0).AddText(\"The first row content was cleared.\");\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"Clear.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableRow.getcell": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oTableRow = oTable.GetRow(0);\noTableRow.SetHeight(\"atLeast\", 1440);\nvar oCell = oTableRow.GetCell(1);\noCell.SetVerticalAlign(\"bottom\");\nvar oParagraph = oCell.GetContent().GetElement(0);\noParagraph.AddText(\"Align bottom\");\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"GetCell.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableRow.getcellscount": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oTableRow = oTable.GetRow(0);\nvar nCellsCount = oTableRow.GetCellsCount();\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"Number of cells in the first row = \" + nCellsCount);\nbuilder.SaveFile(\"docx\", \"GetCellsCount.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableRow.getclasstype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oTableRow = oTable.GetRow(0);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nvar sClassType = oTableRow.GetClassType();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"Class Type = \" + sClassType);\nbuilder.SaveFile(\"docx\", \"GetClassType.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableRow.getindex": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oRow = oTable.GetRow(1);\noRow.GetCell(0).GetContent().GetElement(0).AddText(\"Row index: \" + oRow.GetIndex());\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"GetIndex.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableRow.getnext": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTable = Api.CreateTable(3, 3);\nvar oRow = oTable.GetRow(0);\noRow.GetCell(0).GetContent().GetElement(0).AddText(\"First row\");\noRow.GetNext().GetCell(0).GetContent().GetElement(0).AddText(\"Second row\");\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"GetNext.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableRow.getparenttable": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oRow = oTable.GetRow(0);\nvar oParentTable = oRow.GetParentTable();\noParentTable.SetTableBorderBottom(\"single\", 32, 0, 0, 0, 255);\noDocument.Push(oParentTable);\nbuilder.SaveFile(\"docx\", \"GetParentTable.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableRow.getprevious": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTable = Api.CreateTable(3, 3);\nvar oRow = oTable.GetRow(1);\noRow.GetCell(1).GetContent().GetElement(0).AddText(\"Second row\");\noRow.GetPrevious().GetCell(1).GetContent().GetElement(0).AddText(\"First row\");\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"GetPrevious.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableRow.mergecells": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTable = Api.CreateTable(3, 3);\nvar oRow = oTable.GetRow(0);\nvar oTableStyle = oDocument.GetStyle(\"Table Grid\");\noTable.SetStyle(oTableStyle);\noTable.SetWidth(\"percent\", 100);\noRow.MergeCells();\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"MergeCells.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableRow.remove": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTable = Api.CreateTable(3, 3);\nvar oRow = oTable.GetRow(0);\noRow.GetCell(0).GetContent().GetElement(0).AddText(\"First row\");\noRow.Remove();\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"Remove.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableRow.search": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTable = Api.CreateTable(3, 3);\nvar oRow = oTable.GetRow(0);\noRow.GetCell(0).GetContent().GetElement(0).AddText(\"text\");\noRow.GetCell(1).GetContent().GetElement(0).AddText(\"text\");\noRow.GetCell(2).GetContent().GetElement(0).AddText(\"text\");\noDocument.Push(oTable);\nvar aRowSearch = oRow.Search(\"tex\", true);\naRowSearch[1].SetBold(\"true\");\nbuilder.SaveFile(\"docx\", \"Search.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableRow.setbackgroundcolor": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(4, 2);\noTable.SetWidth(\"percent\", 100);\noTable.SetStyle(oTableStyle);\nvar oTableRow = oTable.GetRow(1);\noTableRow.SetBackgroundColor(255, 255, 0, false);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetBackgroundColor.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableRow.setheight": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We create a 3x3 table and set the height of half an inch to row #1:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oTableRow = oTable.GetRow(0);\noTableRow.SetHeight(\"atLeast\", 720);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetHeight.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableRow.settableheader": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We create a 3x90 table and set row #1 as the table header:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 90);\noTable.SetWidth(\"percent\", 100);\nvar oTableRow = oTable.GetRow(0);\noTableRow.SetTableHeader(true);\nvar oCell = oTableRow.GetCell(0);\noParagraph = oCell.GetContent().GetElement(0);\noParagraph.AddText(\"Header cell #1\");\noCell = oTableRow.GetCell(1);\noParagraph = oCell.GetContent().GetElement(0);\noParagraph.AddText(\"Header cell #2\");\noCell = oTableRow.GetCell(2);\noParagraph = oCell.GetContent().GetElement(0);\noParagraph.AddText(\"Header cell #3\");\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetTableHeader.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableRow.settextpr": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTable = Api.CreateTable(3, 3);\nvar oRow = oTable.GetRow(0);\nvar oTextPr = oDocument.GetDefaultTextPr();\noTextPr.SetBold(true);\noRow.GetCell(0).GetContent().GetElement(0).AddText(\"First row\");\noRow.SetTextPr(oTextPr);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetTextPr.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableRowPr.getclasstype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oTableRowPr = oTableStyle.GetTableRowPr();\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nvar sClassType = oTableRowPr.GetClassType();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"Class Type = \" + sClassType);\nbuilder.SaveFile(\"docx\", \"GetClassType.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableRowPr.setheight": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We create a 3x3 table and set the height of half an inch to all the rows:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetTableLook(true, true, true, true, false, false);\nvar oTableRowPr = oTableStyle.GetTableRowPr();\noTableRowPr.SetHeight(\"atLeast\", 720);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetHeight.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableRowPr.settableheader": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We create a 3x3 table and set all table rows as the table headers:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\noTable.SetTableLook(true, true, true, true, false, false);\nvar oTableRowPr = oTableStyle.GetTableRowPr();\noTableRowPr.SetTableHeader(true);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"SetTableHeader.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableStylePr.getclasstype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oTableStylePr = oTableStyle.GetConditionalTableStyle();\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nvar sClassType = oTableStylePr.GetClassType();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"Class Type = \" + sClassType);\nbuilder.SaveFile(\"docx\", \"GetClassType.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableStylePr.getparapr": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We create a 3x3 table and set the text alignment to center for row #1:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oTableStylePr = oTableStyle.GetConditionalTableStyle(\"firstRow\");\noTable.SetTableLook(true, true, true, true, true, true);\nvar oParaPr = oTableStylePr.GetParaPr();\noParaPr.SetJc(\"center\");\noParagraph = oTable.GetRow(0).GetCell(0).GetContent().GetElement(0);\noParagraph.AddText(\"This is a paragraph with the text in it aligned by the center.\");\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"GetParaPr.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableStylePr.gettablecellpr": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We create a 3x3 table and set the gray shading for cell #1:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oTableStylePr = oTableStyle.GetConditionalTableStyle(\"topLeftCell\");\noTable.SetTableLook(true, true, true, true, true, true);\noTableStylePr.GetTableCellPr().SetShd(\"clear\", 0xEE, 0xEE, 0xEE);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"GetTableCellPr.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableStylePr.gettablepr": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We create a 3x3 table and set the bottom 4 point green border to it:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oTableStylePr = oTableStyle.GetConditionalTableStyle(\"wholeTable\");\noTable.SetTableLook(true, true, true, true, true, true);\noTableStylePr.GetTablePr().SetTableBorderBottom(\"single\", 32, 0, 0, 255, 0);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"GetTablePr.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableStylePr.gettablerowpr": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We create a 3x3 table and set the height of half an inch to all the rows:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oTableStylePr = oTableStyle.GetConditionalTableStyle(\"wholeTable\");\noTable.SetTableLook(true, true, true, true, true, true);\noTableStylePr.GetTableRowPr().SetHeight(\"atLeast\", 720);\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"GetTableRowPr.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableStylePr.gettextpr": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"We create a 3x3 table and set the bold font weight to the text in cell #1:\");\nvar oTableStyle = oDocument.CreateStyle(\"CustomTableStyle\", \"table\");\noTableStyle.SetBasedOn(oDocument.GetStyle(\"Bordered - Accent 5\"));\nvar oTable = Api.CreateTable(3, 3);\noTable.SetWidth(\"percent\", 100);\nvar oTableStylePr = oTableStyle.GetConditionalTableStyle(\"topLeftCell\");\noTable.SetTableLook(true, true, true, true, true, true);\noTableStylePr.GetTextPr().SetBold(true);\noParagraph = oTable.GetRow(0).GetCell(0).GetContent().GetElement(0);\noParagraph.AddText(\"Bold text\");\noParagraph = oTable.GetRow(0).GetCell(1).GetContent().GetElement(0);\noParagraph.AddText(\"Normal text\");\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nbuilder.SaveFile(\"docx\", \"GetTextPr.docx\");\nbuilder.CloseFile();"
		},
		"ApiTableStylePr.gettype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTableStyle = oDocument.GetStyle(\"Bordered - Accent 5\");\noTableStyle.SetName(\"My Custom Style\");\nvar oTable = Api.CreateTable(2, 2);\noTable.SetWidth(\"percent\", 100);\nvar oTableStylePr = oTableStyle.GetConditionalTableStyle(\"topLeftCell\");\noTable.SetStyle(oTableStyle);\noDocument.Push(oTable);\nvar sTableStylePrType = oTableStylePr.GetType();\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"Style type = \" + sTableStylePrType);\nbuilder.SaveFile(\"docx\", \"GetType.docx\");\nbuilder.CloseFile();"
		},
		"ApiTextForm.getcharacterslimit": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextForm = Api.CreateTextForm({\"key\": \"Personal information\", \"tip\": \"Enter your first name\", \"required\": true, \"placeholder\": \"First name\", \"comb\": true, \"cellWidth\": 3, \"multiLine\": false, \"autoFit\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oTextForm);\noTextForm.SetCharactersLimit(5);\noTextForm.SetText(\"John Smith\");\nvar nLimit = oTextForm.GetCharactersLimit();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Characters limit: \" + nLimit);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetCharactersLimit.docx\");\nbuilder.CloseFile();"
		},
		"ApiTextForm.isautofit": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextForm = Api.CreateTextForm({\"key\": \"Personal information\", \"tip\": \"Enter your first name\", \"required\": true, \"placeholder\": \"First name\", \"comb\": true, \"maxCharacters\": 10, \"cellWidth\": 3, \"multiLine\": false, \"autoFit\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oTextForm);\nvar bAutoFit = oTextForm.IsAutoFit();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The first text form from this document is autofit: \" + bAutoFit);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"IsAutoFit.docx\");\nbuilder.CloseFile();"
		},
		"ApiTextForm.iscomb": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextForm = Api.CreateTextForm({\"key\": \"Personal information\", \"tip\": \"Enter your first name\", \"required\": true, \"placeholder\": \"First name\", \"maxCharacters\": 10, \"multiLine\": false, \"autoFit\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oTextForm);\noTextForm.SetComb(true);\nvar bComb = oTextForm.IsComb();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The first text form from this document is comb: \" + bComb);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"IsComb.docx\");\nbuilder.CloseFile();"
		},
		"ApiTextForm.ismultiline": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextForm = Api.CreateTextForm({\"key\": \"Personal information\", \"tip\": \"Enter your first name\", \"required\": true, \"placeholder\": \"First name\", \"comb\": true, \"maxCharacters\": 10, \"cellWidth\": 3, \"multiLine\": false, \"autoFit\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oTextForm);\nvar bMultiline = oTextForm.IsMultiline();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The first text form from this document is multiline: \" + bMultiline);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"IsMultiline.docx\");\nbuilder.CloseFile();"
		},
		"ApiTextForm.setautofit": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextForm = Api.CreateTextForm({\"key\": \"Personal information\", \"tip\": \"Enter your first name\", \"required\": true, \"placeholder\": \"First name\", \"multiLine\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oTextForm);\noTextForm.ToFixed(6 * 240, 2 * 240);\noTextForm.SetAutoFit(true);\nvar bAutoFit = oTextForm.IsAutoFit();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The first text form from this document is autofit: \" + bAutoFit);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetAutoFit.docx\");\nbuilder.CloseFile();"
		},
		"ApiTextForm.setcellwidth": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextForm = Api.CreateTextForm({\"key\": \"Personal information\", \"tip\": \"Enter your first name\", \"required\": true, \"placeholder\": \"First name\", \"maxCharacters\": 10, \"multiLine\": false, \"autoFit\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oTextForm);\noTextForm.SetComb(true);\noTextForm.SetCellWidth(7);\nbuilder.SaveFile(\"docx\", \"SetCellWidth.docx\");\nbuilder.CloseFile();"
		},
		"ApiTextForm.setcharacterslimit": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextForm = Api.CreateTextForm({\"key\": \"Personal information\", \"tip\": \"Enter your first name\", \"required\": true, \"placeholder\": \"First name\", \"comb\": true, \"cellWidth\": 3, \"multiLine\": false, \"autoFit\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oTextForm);\noTextForm.SetCharactersLimit(5);\noTextForm.SetText(\"John Smith\");\nvar nLimit = oTextForm.GetCharactersLimit();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Characters limit: \" + nLimit);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetCharactersLimit.docx\");\nbuilder.CloseFile();"
		},
		"ApiTextForm.setcomb": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextForm = Api.CreateTextForm({\"key\": \"Personal information\", \"tip\": \"Enter your first name\", \"required\": true, \"placeholder\": \"First name\", \"maxCharacters\": 10, \"multiLine\": false, \"autoFit\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oTextForm);\noTextForm.SetComb(true);\nvar bComb = oTextForm.IsComb();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The first text form from this document is comb: \" + bComb);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetComb.docx\");\nbuilder.CloseFile();"
		},
		"ApiTextForm.setmultiline": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextForm = Api.CreateTextForm({\"key\": \"Personal information\", \"tip\": \"Enter your first name\", \"required\": true, \"placeholder\": \"First name\", \"autoFit\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oTextForm);\noTextForm.ToFixed(3 * 240, 3 * 240);\noTextForm.SetMultiline(true);\nvar bMultiline = oTextForm.IsMultiline();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The first text form from this document is multiline: \" + bMultiline);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"SetMultiline.docx\");\nbuilder.CloseFile();"
		},
		"ApiTextForm.settext": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextForm = Api.CreateTextForm({\"key\": \"Personal information\", \"tip\": \"Enter your first name\", \"required\": true, \"placeholder\": \"First name\", \"comb\": true, \"maxCharacters\": 10, \"cellWidth\": 3, \"multiLine\": false, \"autoFit\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oTextForm);\noTextForm.SetText(\"John Smith\");\nbuilder.SaveFile(\"docx\", \"SetText.docx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.getclasstype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextPr = oDocument.GetDefaultTextPr();\noTextPr.SetFontSize(30);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"A sample text with the font size set to 15 points using the text properties.\");\nvar sClassType = oTextPr.GetClassType();\noParagraph.AddLineBreak();\noParagraph.AddText(\"Class Type = \" + sClassType);\nbuilder.SaveFile(\"docx\", \"GetClassType.docx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setbold": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextPr = oDocument.GetDefaultTextPr();\noTextPr.SetBold(true);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"A sample text with the font weight set to bold using the text properties.\");\nbuilder.SaveFile(\"docx\", \"SetBold.docx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setcaps": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextPr = oDocument.GetDefaultTextPr();\noTextPr.SetCaps(true);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"A sample text set to capital letters using the text properties.\");\nbuilder.SaveFile(\"docx\", \"SetCaps.docx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setcolor": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextPr = oDocument.GetDefaultTextPr();\noTextPr.SetColor(0, 0, 255, false);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"A sample text with the color set to blue using the text properties.\");\nbuilder.SaveFile(\"docx\", \"SetColor.docx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setdoublestrikeout": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextPr = oDocument.GetDefaultTextPr();\noTextPr.SetDoubleStrikeout(true);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"A sample text struck out with two lines using the text properties.\");\nbuilder.SaveFile(\"docx\", \"SetDoubleStrikeout.docx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setfill": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(0, 0, 255));\nvar oTextPr = oDocument.GetDefaultTextPr();\noTextPr.SetFill(oFill);\noParagraph.AddText(\"This is a text run with the font color set to blue.\");\noParagraph.SetTextPr(oTextPr);\nbuilder.SaveFile(\"docx\", \"SetFill.docx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setfontfamily": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextPr = oDocument.GetDefaultTextPr();\noTextPr.SetFontFamily(\"Comic Sans MS\");\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"A sample text with the font family set to 'Comic Sans MS' using the text properties.\");\nbuilder.SaveFile(\"docx\", \"SetFontFamily.docx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setfontsize": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextPr = oDocument.GetDefaultTextPr();\noTextPr.SetFontSize(30);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"A sample text with the font size set to 15 points using the text properties.\");\nbuilder.SaveFile(\"docx\", \"SetFontSize.docx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.sethighlight": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextPr = oDocument.GetDefaultTextPr();\noTextPr.SetHighlight(\"green\");\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"A sample text highlighted with green color using the text properties.\");\nbuilder.SaveFile(\"docx\", \"SetHighlight.docx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setitalic": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextPr = oDocument.GetDefaultTextPr();\noTextPr.SetItalic(true);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"A sample text with the font set to italicized letters using the text properties.\");\nbuilder.SaveFile(\"docx\", \"SetItalic.docx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setlanguage": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextPr = oDocument.GetDefaultTextPr();\noTextPr.SetLanguage(\"en-CA\");\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"A sample text with the language set to English (Canada) using the text properties.\");\nbuilder.SaveFile(\"docx\", \"SetLanguage.docx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setposition": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oMyNewRunStyle1 = oDocument.CreateStyle(\"My New Run Style 1\", \"run\");\nvar oTextPr1 = oMyNewRunStyle1.GetTextPr();\noTextPr1.SetPosition(10);\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetStyle(oMyNewRunStyle1);\noRun.AddText(\"This is a text run with the text raised 5 points (10 half-points). \");\noParagraph.AddElement(oRun);\nvar oMyNewRunStyle2 = oDocument.CreateStyle(\"My New Run Style 2\", \"run\");\nvar oTextPr2 = oMyNewRunStyle2.GetTextPr();\noTextPr2.SetPosition(-16);\noRun = Api.CreateRun();\noRun.SetStyle(oMyNewRunStyle2);\noRun.AddText(\"This is a text run with the text lowered 8 points (16 half-points).\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"docx\", \"SetPosition.docx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setshd": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextPr = oDocument.GetDefaultTextPr();\noTextPr.SetShd(\"clear\", 0, 255, 0);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"A sample text with the shading set to green.\");\nbuilder.SaveFile(\"docx\", \"SetShd.docx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setsmallcaps": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextPr = oDocument.GetDefaultTextPr();\noTextPr.SetSmallCaps(true);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"A sample text with the font set to small capitalized letters.\");\nbuilder.SaveFile(\"docx\", \"SetSmallCaps.docx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setspacing": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextPr = oDocument.GetDefaultTextPr();\noTextPr.SetSpacing(80);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"A sample text with the spacing set to 4 points (80 twentieths of a point).\");\nbuilder.SaveFile(\"docx\", \"SetSpacing.docx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setstrikeout": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextPr = oDocument.GetDefaultTextPr();\noTextPr.SetStrikeout(true);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"A sample text struck out with a single line.\");\nbuilder.SaveFile(\"docx\", \"SetStrikeout.docx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setstyle": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oMyNewRunStyle = oDocument.CreateStyle(\"My New Run Style\", \"run\");\nvar oTextPr = oMyNewRunStyle.GetTextPr();\noTextPr.SetCaps(true);\noTextPr.SetFontFamily(\"Calibri Light\");\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noRun.AddText(\"The text properties are changed and the style is added to the paragraph. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetStyle(oMyNewRunStyle);\noRun.AddText(\"This is a text run with its own style.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"docx\", \"SetStyle.docx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setunderline": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oTextPr = oDocument.GetDefaultTextPr();\noTextPr.SetUnderline(true);\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddText(\"A sample text underlined with a single line.\");\nbuilder.SaveFile(\"docx\", \"SetUnderline.docx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setvertalign": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\nvar oMyNewRunStyle1 = oDocument.CreateStyle(\"My New Run Style 1\", \"run\");\nvar oTextPr1 = oMyNewRunStyle1.GetTextPr();\noTextPr1.SetVertAlign(\"subscript\");\noRun = Api.CreateRun();\noRun.SetStyle(oMyNewRunStyle1);\noRun.AddText(\"This is a text run with the text aligned below the baseline vertically. \");\noParagraph.AddElement(oRun);\nvar oMyNewRunStyle2 = oDocument.CreateStyle(\"My New Run Style 2\", \"run\");\nvar oTextPr2 = oMyNewRunStyle2.GetTextPr();\noTextPr2.SetVertAlign(\"baseline\");\noRun = Api.CreateRun();\noRun.SetStyle(oMyNewRunStyle2);\noRun.AddText(\"This is a text run with the text aligned by the baseline vertically. \");\noParagraph.AddElement(oRun);\nvar oMyNewRunStyle3 = oDocument.CreateStyle(\"My New Run Style 3\", \"run\");\nvar oTextPr3 = oMyNewRunStyle3.GetTextPr();\noTextPr3.SetVertAlign(\"superscript\");\noRun = Api.CreateRun();\noRun.SetStyle(oMyNewRunStyle3);\noRun.AddText(\"This is a text run with the text aligned above the baseline vertically.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"docx\", \"SetVertAlign.docx\");\nbuilder.CloseFile();"
		},
		"ApiUniColor.getclasstype": {
			"script": "builder.CreateFile(\"docx\");\nvar oDocument = Api.GetDocument();\nvar oParagraph = oDocument.GetElement(0);\nvar oPresetColor = Api.CreatePresetColor(\"lightYellow\");\nvar oGs1 = Api.CreateGradientStop(oPresetColor, 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"rect\", 5930900, 395605, oFill, oStroke);\noParagraph.AddDrawing(oDrawing);\nvar sClassType = oPresetColor.GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class Type = \" + sClassType);\noDocument.Push(oParagraph);\nbuilder.SaveFile(\"docx\", \"GetClassType.docx\");\nbuilder.CloseFile();"
		}
	},
	"cell": {
		"api": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oSheet = Api.AddSheet(\"New sheet\");\nvar oWorksheet = Api.GetSheet(\"New sheet\");\nApi.SetLocale(\"en-CA\");\noWorksheet.GetRange(\"A1\").SetValue(\"Locale: \");\noWorksheet.GetRange(\"B1\").SetValue(Api.GetLocale());\nApi.AddDefName(\"locale\", \"Sheet1!$A$1:$B$1\");\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 35 * 36000, oFill, oStroke, 0, 5 * 36000, 0, 10 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\" This is an example for base class methods.\");\nvar oBullet = Api.CreateNumbering(\"ArabicParenR\", 1);\noParagraph = Api.CreateParagraph();\noParagraph.SetBullet(oBullet);\noParagraph.AddText(\" A sheet named 'New sheet' was added.\");\noDocContent.Push(oParagraph);\noParagraph = Api.CreateParagraph();\noParagraph.SetBullet(oBullet);\noParagraph.AddText(\" The language of the document was set to English (Canada).\");\noDocContent.Push(oParagraph);\noParagraph = Api.CreateParagraph();\noParagraph.SetBullet(oBullet);\noParagraph.AddText(\" A green shape was created with numbered paragraphs in it.\");\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"Api.xlsx\");\nbuilder.CloseFile();"
		},
		"apiareas": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oRange = oWorksheet.GetRange(\"B1:D1\");\noRange.SetValue(\"1\");\noRange.Select();\nvar oAreas = oRange.GetAreas();\nvar oParent = oAreas.GetParent();\nvar sType = oParent.GetClassType();\noRange = oWorksheet.GetRange('A4');\noRange.SetValue(\"The areas parent: \");\noRange.AutoFit(false, true);\noWorksheet.GetRange('B4').Paste(oParent);\noRange = oWorksheet.GetRange('A5');\noRange.SetValue(\"The type of the areas parent: \");\noRange.AutoFit(false, true);\noWorksheet.GetRange('B5').SetValue(sType);\nvar nCount = oAreas.GetCount();\noRange = oWorksheet.GetRange('A6');\noRange.SetValue(\"The number of ranges in the areas: \");\noRange.AutoFit(false, true);\noWorksheet.GetRange('B6').SetValue(nCount);\nvar oItem = oAreas.GetItem(1);\noRange = oWorksheet.GetRange('A7');\noRange.SetValue(\"The first item from the areas: \");\noRange.AutoFit(false, true);\noWorksheet.GetRange('B7').Paste(oItem);\nbuilder.SaveFile(\"xlsx\", \"ApiAreas.xlsx\");\nbuilder.CloseFile();"
		},
		"apibullet": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oBullet = Api.CreateNumbering(\"ArabicParenR\", 1);\noParagraph.SetBullet(oBullet);\noParagraph.AddText(\" This is an example of the bulleted paragraph.\");\noParagraph = Api.CreateParagraph();\noParagraph.SetBullet(oBullet);\noParagraph.AddText(\" This is an example of the bulleted paragraph.\");\noDocContent.Push(oParagraph);\nvar sClassType = oBullet.GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class Type = \" + sClassType);\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"ApiBullet.xlsx\");\nbuilder.CloseFile();"
		},
		"apichart": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.SetName(\"sheet 1\");\noWorksheet.GetRange(\"B1\").SetValue(\"Row 1\");\noWorksheet.GetRange(\"C1\").SetValue(\"Row 2\");\noWorksheet.GetRange(\"D1\").SetValue(\"Row 3\");\noWorksheet.GetRange(\"A2\").SetValue(\"Category 1\");\noWorksheet.GetRange(\"A3\").SetValue(\"Category 2\");\noWorksheet.GetRange(\"A4\").SetValue(\"Category 3\");\noWorksheet.GetRange(\"A5\").SetValue(\"Category 4\");\noWorksheet.GetRange(\"B2\").SetValue(\"4.3\");\noWorksheet.GetRange(\"B3\").SetValue(\"2.5\");\noWorksheet.GetRange(\"B4\").SetValue(\"3.5\");\noWorksheet.GetRange(\"B5\").SetValue(\"4.5\");\noWorksheet.GetRange(\"C2\").SetValue(\"2.4\");\noWorksheet.GetRange(\"C3\").SetValue(\"4.4\");\noWorksheet.GetRange(\"C4\").SetValue(\"1.8\");\noWorksheet.GetRange(\"C5\").SetValue(\"2.8\");\noWorksheet.GetRange(\"D2\").SetValue(\"2\");\noWorksheet.GetRange(\"D3\").SetValue(\"2\");\noWorksheet.GetRange(\"D4\").SetValue(\"3\");\noWorksheet.GetRange(\"D5\").SetValue(\"5\");\nvar oChart = oWorksheet.AddChart(\"'sheet 1'!$A$1:$D$5\", true, \"bar\", 2, 100 * 36000, 70 * 36000, 0, 2 * 36000, 5, 3 * 36000);\noChart.SetVerAxisTitle(\"Vertical Title\", 10);\noChart.SetHorAxisTitle(\"Horizontal Title\", 11);\noChart.SetLegendPos(\"right\");\noChart.SetShowDataLabels(false, false, true, false);\noChart.SetTitle(\"Main Chart Title\", 13);\nbuilder.SaveFile(\"xlsx\", \"ApiChart.xlsx\");\nbuilder.CloseFile();"
		},
		"apicolor": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oColor = Api.CreateColorFromRGB(49, 133, 154);\noWorksheet.GetRange(\"A2\").SetValue(\"Text with color\");\noWorksheet.GetRange(\"A2\").SetFontColor(oColor);\nvar sColorClassType = oColor.GetClassType();\noWorksheet.GetRange(\"A4\").SetValue(\"Class type = \" + sColorClassType);\nbuilder.SaveFile(\"xlsx\", \"ApiColor.xlsx\");\nbuilder.CloseFile();"
		},
		"apicomment": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A1\").SetValue(\"1\");\nvar oRange = oWorksheet.GetRange(\"A1\");\noRange.AddComment(\"This is just a number.\");\nvar oComment = oRange.GetComment();\noWorksheet.GetRange(\"A3\").SetValue(\"Comment: \" + oComment.GetText());\nvar sType = oComment.GetClassType();\noWorksheet.GetRange(\"A4\").SetValue(\"Type: \" + sType + \" (number of comment data type)\");\nbuilder.SaveFile(\"xlsx\", \"ApiComment.xlsx\");\nbuilder.CloseFile();"
		},
		"apidocumentcontent": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 200 * 36000, 60 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is paragraph #1.\");\nfor (let nParaIncrease = 1; nParaIncrease < 5; ++nParaIncrease) {\n  oParagraph = Api.CreateParagraph();\n  oParagraph.AddText(\"This is paragraph #\" + (nParaIncrease + 1) + \".\");\n  oDocContent.Push(oParagraph);\n}\noDocContent.RemoveElement(2);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"We removed paragraph #3, check that out above.\");\noDocContent.Push(oParagraph);\nvar sClassType = oDocContent.GetClassType();\noParagraph.AddLineBreak();\noParagraph.AddText(\"Class Type = \" + sClassType);\noParagraph.AddLineBreak();\noParagraph.AddText(\"Number of elements inside the shape: \" + oDocContent.GetElementsCount());\noParagraph.AddLineBreak();\nbuilder.SaveFile(\"xlsx\", \"ApiDocumentContent.xlsx\");\nbuilder.CloseFile();"
		},
		"apidrawing": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = oWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\noDrawing.SetSize(80 * 36000, 40 * 36000);\noDrawing.SetPosition(0, 2 * 36000, 2, 3 * 36000);\nvar sClassType = oDrawing.GetClassType();\noWorksheet.GetRange(\"A1\").SetValue(\"Class Type = \" + sClassType);\nbuilder.SaveFile(\"xlsx\", \"ApiDrawing.xlsx\");\nbuilder.CloseFile();"
		},
		"apifill": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\noWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 1, 3 * 36000);\nvar sClassType = oFill.GetClassType();\noWorksheet.SetColumnWidth(0, 15);\noWorksheet.SetColumnWidth(1, 10);\noWorksheet.GetRange(\"A1\").SetValue(\"Class Type = \" + sClassType);\nbuilder.SaveFile(\"xlsx\", \"ApiFill.xlsx\");\nbuilder.CloseFile();"
		},
		"apigradientstop": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\noWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 1, 3 * 36000);\nvar sClassType = oGs1.GetClassType();\noWorksheet.SetColumnWidth(0, 15);\noWorksheet.SetColumnWidth(1, 10);\noWorksheet.GetRange(\"A1\").SetValue(\"Class Type = \" + sClassType);\nbuilder.SaveFile(\"xlsx\", \"ApiGradientStop.xlsx\");\nbuilder.CloseFile();"
		},
		"apiimage": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oImage = oWorksheet.AddImage(\"https://api.onlyoffice.com/content/img/docbuilder/examples/coordinate_aspects.png\", 60 * 36000, 35 * 36000, 0, 2 * 36000, 2, 3 * 36000);\nvar sClassType = oImage.GetClassType();\noWorksheet.SetColumnWidth(0, 15);\noWorksheet.SetColumnWidth(1, 10);\noWorksheet.GetRange(\"A1\").SetValue(\"Class Type = \");\noWorksheet.GetRange(\"B1\").SetValue(sClassType);\nbuilder.SaveFile(\"xlsx\", \"ApiImage.xlsx\");\nbuilder.CloseFile();"
		},
		"apiname": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A1\").SetValue(\"1\");\noWorksheet.GetRange(\"B1\").SetValue(\"2\");\noWorksheet.GetRange(\"C1\").SetValue(\"=SUM(A1:B1)\");\nApi.AddDefName(\"numbers\", \"Sheet1!$A$1:$B$1\");\nvar oDefName = Api.GetDefName(\"numbers\");\noDefName.SetName(\"summa\");\noDefName.SetRefersTo(\"=SUM(A1:B1)\");\nvar oNewDefName = Api.GetDefName(\"summa\");\noWorksheet.GetRange(\"A3\").SetValue(\"A new name of the range: \" + oNewDefName.GetName());\noWorksheet.GetRange(\"A4\").SetValue(\"The name 'summa' refers to the formula from the cell C1.\");\noWorksheet.GetRange(\"A5\").SetValue(\"Formula: \" + oDefName.GetRefersTo());\nbuilder.SaveFile(\"xlsx\", \"ApiName.xlsx\");\nbuilder.CloseFile();"
		},
		"apiparagraph": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 130 * 36000, 60 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"Number of paragraph elements at this point: \");\noRun.AddTabStop();\noRun.AddText(\"\" + oParagraph.GetElementsCount());\noRun.AddLineBreak();\noParagraph.AddElement(oRun);\noRun = oParagraph.GetElement(1);\noRun.SetBold(true);\noParagraph.AddLineBreak();\noParagraph.AddText(\"This is a paragraph with the text in it aligned by the center. \");\noParagraph.SetJc(\"center\");\nvar oParagraph1 = Api.CreateParagraph();\noParagraph1.AddText(\"This is just a sample text. After it a tab stop will be added.\");\noParagraph1.AddTabStop();\noParagraph1.AddText(\"This is the text which starts after the tab stop.\");\noParagraph1.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph1.SetIndFirstLine(1440);\noDocContent.Push(oParagraph1);\nvar oParagraph2 = Api.CreateParagraph();\nvar nIndFirstLine = oParagraph1.GetIndFirstLine();\noParagraph2.AddText(\"First line indent: \" + nIndFirstLine);\noDocContent.Push(oParagraph2);\nvar oParagraph3 = Api.CreateParagraph();\nvar sClassType = oParagraph3.GetClassType();\noParagraph3.AddLineBreak();\noParagraph3.AddText(\"Class Type = \" + sClassType);\noDocContent.Push(oParagraph3);\nvar oNextParagraph = oParagraph2.GetNext();\noNextParagraph.SetBold(true);\nvar oPreviousParagraph = oParagraph3.GetPrevious();\noPreviousParagraph.SetItalic(true);\nbuilder.SaveFile(\"xlsx\", \"ApiParagraph.xlsx\");\nbuilder.CloseFile();"
		},
		"apiparapr": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParagraph.AddText(\"This is a paragraph with the text in it aligned by the center. \");\noParaPr.SetJc(\"center\");\noParaPr.SetIndFirstLine(1440);\nvar oParagraph1 = Api.CreateParagraph();\nvar nIndFirstLine = oParaPr.GetIndFirstLine();\noParagraph1.AddText(\"First line indent: \" + nIndFirstLine);\noDocContent.Push(oParagraph1);\nvar oParagraph2 = Api.CreateParagraph();\nvar sClassType = oParaPr.GetClassType();\noParagraph2.AddText(\"Class Type = \" + sClassType);\noDocContent.Push(oParagraph2);\nbuilder.SaveFile(\"xlsx\", \"ApiParaPr.xlsx\");\nbuilder.CloseFile();"
		},
		"apipresetcolor": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oPresetColor = Api.CreatePresetColor(\"lightYellow\");\nvar oGs1 = Api.CreateGradientStop(oPresetColor, 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\noWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 1, 3 * 36000);\nvar sClassType = oPresetColor.GetClassType();\noWorksheet.SetColumnWidth(0, 15);\noWorksheet.SetColumnWidth(1, 10);\noWorksheet.GetRange(\"A1\").SetValue(\"Class Type = \");\noWorksheet.GetRange(\"B1\").SetValue(sClassType);\nbuilder.SaveFile(\"xlsx\", \"ApiPresetColor.xlsx\");\nbuilder.CloseFile();"
		},
		"apirange": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oRange = oWorksheet.GetRange(\"A1\");\noRange.SetValue(2);\noRange.AddComment(\"This is just a number.\");\noWorksheet.GetRange(\"B1\").SetValue(2);\noWorksheet.GetRange(\"C1\").SetValue(\"1\");\noWorksheet.GetRange(\"A3\").SetValue(\"2+2=\");\noWorksheet.GetRange(\"B3\").SetValue(\"=SUM(A1:B1)\");\noRange = oWorksheet.GetRange(\"A1:B1\");\noRange.ForEach(function (range) {\n    var sValue = range.GetValue();\n    if (sValue != \"1\") {\n        range.SetBold(true);\n    }\n});\nvar sAddress = oWorksheet.GetRange(\"A1\").GetAddress(true, true, \"xlA1\", false);\noWorksheet.GetRange(\"A2\").SetValue(\"Address: \" + sAddress);\nvar sClassType = oRange.GetClassType();\noWorksheet.GetRange('A7').SetValue(\"Class type: \" + sClassType);\noRange = oWorksheet.GetRange(\"A4:B4\");\noRange.SetValue(\"1\");\noRange.Clear();\noWorksheet.GetRange(\"A5\").SetValue(\"The range A4:B4 was just cleared.\");\noRange = oWorksheet.GetRange(\"C6:D7\");\noRange.End(\"xlToLeft\").SetFillColor(Api.CreateColorFromRGB(255, 224, 204));\noRange.GetCells(2, 1).SetFillColor(Api.CreateColorFromRGB(255, 224, 204));\noRange = oWorksheet.GetRange(\"D9\").GetCol();\noWorksheet.GetRange(\"C7\").SetValue(oRange.toString());\noRange = oWorksheet.GetRange(\"A1:C3\");\noRange.GetCols(3).SetFillColor(Api.CreateColorFromRGB(255, 224, 204));\nvar nWidth = oWorksheet.GetRange(\"A1\").GetColumnWidth();\noWorksheet.GetRange(\"A8\").SetValue(\"Width: \" + nWidth);\noWorksheet.GetRange(\"A9\").SetValue(\"Comment: \" + oWorksheet.GetRange(\"A1\").GetComment().GetText());\nvar nCount = oWorksheet.GetRange(\"A9:C9\").GetCount();\noWorksheet.GetRange(\"A10\").SetValue(\"Count: \" + nCount);\nApi.AddDefName(\"numbers\", \"Sheet1!$A$1:$B$1\");\nvar oDefName = oWorksheet.GetRange(\"A1:B1\").GetDefName(\"numbers\");\noWorksheet.GetRange(\"A11\").SetValue(\"DefName of the A1:B1 range: \" + oDefName.GetName());\noRange = oWorksheet.GetRange(\"E1\");\noRange.SetFillColor(Api.CreateColorFromRGB(255, 224, 204));\noRange.SetValue(\"This is the cell with a color set to its background.\");\nvar oFillColor = oRange.GetFillColor();\noWorksheet.GetRange(\"E3\").SetValue(\"This is another cell with the same color set to its background\");\noWorksheet.GetRange(\"E3\").SetFillColor(oFillColor);\noWorksheet.GetRange(\"13:14\").SetHidden(true);\nvar bHidden = oWorksheet.GetRange(\"13:14\").GetHidden();\noWorksheet.GetRange(\"A15\").SetValue(\"The A13:A14 range is hidden: \" + bHidden);\nbuilder.SaveFile(\"xlsx\", \"ApiRange.xlsx\");\nbuilder.CloseFile();"
		},
		"apirgbcolor": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oRGBColor = Api.CreateRGBColor(255, 224, 204);\nvar oGs1 = Api.CreateGradientStop(oRGBColor, 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\noWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 1, 3 * 36000);\nvar sClassType = oRGBColor.GetClassType();\noWorksheet.SetColumnWidth(0, 15);\noWorksheet.SetColumnWidth(1, 10);\noWorksheet.GetRange(\"A1\").SetValue(\"Class Type = \");\noWorksheet.GetRange(\"B1\").SetValue(sClassType);\nbuilder.SaveFile(\"xlsx\", \"ApiRGBColor.xlsx\");\nbuilder.CloseFile();"
		},
		"apirun": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is the text for the first line. Nothing special.\");\noRun.AddLineBreak();\noRun.AddText(\"This is the text which starts from the beginning of the second line. After it three tab stops will be added.\");\noRun.AddTabStop();\noRun.AddTabStop();\noRun.AddTabStop();\noRun.AddText(\"This is the text which starts after the tab stops.\");\noRun.SetItalic(true);\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\nvar oTextPr = oRun.GetTextPr();\noTextPr.SetFontSize(30);\noRun.AddText(\"This is just a sample text. \");\noRun.AddText(\"But you will not see it in the resulting document, as it will be cleared.\");\noParagraph.AddElement(oRun);\noRun.ClearContent();\noParagraph = Api.CreateParagraph();\noRun = Api.CreateRun();\noRun.AddText(\"The text in the previous paragraph cannot be seen, as it has been cleared.\");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.AddLineBreak();\noRun.AddText(\"This is just a sample text that was copied.\");\noParagraph.AddElement(oRun);\nvar oCopyRun = oRun.Copy();\noCopyRun.SetCaps(true);\noCopyRun.SetBold(true);\noCopyRun.SetFontSize(20);\nvar sClassType = oCopyRun.GetClassType();\noCopyRun.AddLineBreak();\noCopyRun.AddText(\"Class Type = \" + sClassType);\noParagraph.AddElement(oCopyRun);\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"ApiRun.xlsx\");\nbuilder.CloseFile();"
		},
		"apischemecolor": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oSchemeColor = Api.CreateSchemeColor(\"accent6\");\nvar oGs1 = Api.CreateGradientStop(oSchemeColor, 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\noWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 1, 3 * 36000);\nvar sClassType = oSchemeColor.GetClassType();\noWorksheet.SetColumnWidth(0, 15);\noWorksheet.SetColumnWidth(1, 10);\noWorksheet.GetRange(\"A1\").SetValue(\"Class Type = \");\noWorksheet.GetRange(\"B1\").SetValue(sClassType);\nbuilder.SaveFile(\"xlsx\", \"ApiSchemeColor.xlsx\");\nbuilder.CloseFile();"
		},
		"apishape": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 50 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\noDocContent.RemoveAllElements();\noShape.SetVerticalTextAlign(\"bottom\");\nvar oParagraph = Api.CreateParagraph();\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"We removed all elements from the shape and added a new paragraph inside it \");\noParagraph.AddText(\"aligning it vertically by the bottom.\");\noDocContent.Push(oParagraph);\nvar sClassType = oShape.GetClassType();\noWorksheet.GetRange(\"A12\").SetValue(\"Class Type = \" + sClassType);\nbuilder.SaveFile(\"xlsx\", \"ApiShape.xlsx\");\nbuilder.CloseFile();"
		},
		"apistroke": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\noWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 1, 3 * 36000);\nvar sClassType = oStroke.GetClassType();\noWorksheet.SetColumnWidth(0, 15);\noWorksheet.SetColumnWidth(1, 10);\noWorksheet.GetRange(\"A1\").SetValue(\"Class Type = \");\noWorksheet.GetRange(\"B1\").SetValue(sClassType);\nbuilder.SaveFile(\"xlsx\", \"ApiStroke.xlsx\");\nbuilder.CloseFile();"
		},
		"apitextpr": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\nvar oTextPr = oRun.GetTextPr();\noTextPr.SetFontSize(30);\noTextPr.SetBold(true);\noTextPr.SetCaps(true);\noFill = Api.CreateSolidFill(Api.CreateRGBColor(255, 255, 0));\noTextPr.SetFill(oFill);\noTextPr.SetFontFamily(\"Comic Sans MS\");\noParagraph.SetJc(\"left\");\noRun.AddText(\"This is a sample text inside the shape with the font size set to 15 points using the text properties.\");\noParagraph.AddElement(oRun);\nvar sClassType = oTextPr.GetClassType();\noRun.AddLineBreak();\noRun.AddText(\"Class Type = \" + sClassType);\nbuilder.SaveFile(\"xlsx\", \"ApiTextPr.xlsx\");\nbuilder.CloseFile();"
		},
		"apiunicolor": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oPresetColor = Api.CreatePresetColor(\"lightYellow\");\nvar oGs1 = Api.CreateGradientStop(oPresetColor, 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\noWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 1, 3 * 36000);\nvar sClassType = oPresetColor.GetClassType();\noWorksheet.SetColumnWidth(0, 15);\noWorksheet.SetColumnWidth(1, 10);\noWorksheet.GetRange(\"A1\").SetValue(\"Class Type = \");\noWorksheet.GetRange(\"B1\").SetValue(sClassType);\nbuilder.SaveFile(\"xlsx\", \"ApiUniColor.xlsx\");\nbuilder.CloseFile();"
		},
		"apiworksheet": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.SetName(\"sheet 1\");\noWorksheet.GetRange(\"B1\").SetValue(\"Row 1\");\noWorksheet.GetRange(\"C1\").SetValue(\"Row 2\");\noWorksheet.GetRange(\"D1\").SetValue(\"Row 3\");\noWorksheet.GetRange(\"A2\").SetValue(\"Category 1\");\noWorksheet.GetRange(\"A3\").SetValue(\"Category 2\");\noWorksheet.GetRange(\"A4\").SetValue(\"Category 3\");\noWorksheet.GetRange(\"A5\").SetValue(\"Category 4\");\noWorksheet.GetRange(\"B2\").SetValue(\"4.3\");\noWorksheet.GetRange(\"B3\").SetValue(\"2.5\");\noWorksheet.GetRange(\"B4\").SetValue(\"3.5\");\noWorksheet.GetRange(\"B5\").SetValue(\"4.5\");\noWorksheet.GetRange(\"C2\").SetValue(\"2.4\");\noWorksheet.GetRange(\"C3\").SetValue(\"4.4\");\noWorksheet.GetRange(\"C4\").SetValue(\"1.8\");\noWorksheet.GetRange(\"C5\").SetValue(\"2.8\");\noWorksheet.GetRange(\"D2\").SetValue(\"2\");\noWorksheet.GetRange(\"D3\").SetValue(\"2\");\noWorksheet.GetRange(\"D4\").SetValue(\"3\");\noWorksheet.GetRange(\"D5\").SetValue(\"5\");\nvar oChart = oWorksheet.AddChart(\"'sheet 1'!$A$1:$D$5\", true, \"bar\", 2, 100 * 36000, 70 * 36000, 0, 2 * 36000, 9, 3 * 36000);\noChart.SetVerAxisTitle(\"Vertical Title\", 10);\noChart.SetHorAxisTitle(\"Horizontal Title\", 11);\noChart.SetLegendPos(\"right\");\noChart.SetShowDataLabels(false, false, true, false);\noChart.SetTitle(\"Main Chart Title\", 13);\noWorksheet.AddDefName(\"chart data\", \"Sheet1!$A$1:$D$5\");\noWorksheet.GetRange(\"A8\").SetValue(\"We defined a name 'chart data' for a range of cells A1:D5.\");\noWorksheet.AddImage(\"https://api.onlyoffice.com/content/img/docbuilder/examples/coordinate_aspects.png\", 60 * 36000, 35 * 36000, 5, 2 * 36000, 0, 3 * 36000);\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\noWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 25, 3 * 36000);\noWorksheet.FormatAsTable(\"A1:D5\");\nbuilder.SaveFile(\"xlsx\", \"ApiWorksheet.xlsx\");\nbuilder.CloseFile();"
		},
		"Api.adddefname": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A1\").SetValue(\"1\");\noWorksheet.GetRange(\"B1\").SetValue(\"2\");\nApi.AddDefName(\"numbers\", \"Sheet1!$A$1:$B$1\");\noWorksheet.GetRange(\"A3\").SetValue(\"We defined a name 'numbers' for a range of cells A1:B1.\");\nbuilder.SaveFile(\"xlsx\", \"AddDefName.xlsx\");\nbuilder.CloseFile();"
		},
		"Api.addsheet": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oSheet = Api.AddSheet(\"New sheet\");\nbuilder.SaveFile(\"xlsx\", \"AddSheet.xlsx\");\nbuilder.CloseFile();"
		},
		"Api.createblipfill": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateBlipFill(\"https://api.onlyoffice.com/content/img/docbuilder/examples/icon_DocumentEditors.png\", \"tile\");\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\noWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 1, 3 * 36000);\nbuilder.SaveFile(\"xlsx\", \"CreateBlipFill.xlsx\");\nbuilder.CloseFile();"
		},
		"Api.createbullet": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oBullet = Api.CreateBullet(\"-\");\noParagraph.SetBullet(oBullet);\noParagraph.AddText(\" This is an example of the bulleted paragraph.\");\nbuilder.SaveFile(\"xlsx\", \"CreateBullet.xlsx\");\nbuilder.CloseFile();"
		},
		"Api.createcolorbyname": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oColor = Api.CreateColorByName(\"ltSteelBlue\");\noWorksheet.GetRange(\"A2\").SetValue(\"Text with color\");\noWorksheet.GetRange(\"A2\").SetFontColor(oColor);\nbuilder.SaveFile(\"xlsx\", \"CreateColorByName.xlsx\");\nbuilder.CloseFile();"
		},
		"Api.createcolorfromrgb": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oColor = Api.CreateColorFromRGB(49, 133, 154);\noWorksheet.GetRange(\"A2\").SetValue(\"Text with color\");\noWorksheet.GetRange(\"A2\").SetFontColor(oColor);\nbuilder.SaveFile(\"xlsx\", \"CreateColorFromRGB.xlsx\");\nbuilder.CloseFile();"
		},
		"Api.creategradientstop": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\noWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 1, 3 * 36000);\nbuilder.SaveFile(\"xlsx\", \"CreateGradientStop.xlsx\");\nbuilder.CloseFile();"
		},
		"Api.createlineargradientfill": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\noWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 1, 3 * 36000);\nbuilder.SaveFile(\"xlsx\", \"CreateLinearGradientFill.xlsx\");\nbuilder.CloseFile();"
		},
		"Api.createnewhistorypoint": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A1\").SetValue(\"This is just a sample text.\");\nApi.CreateNewHistoryPoint();\noWorksheet.GetRange(\"A3\").SetValue(\"New history point was just created.\");\nbuilder.SaveFile(\"xlsx\", \"CreateNewHistoryPoint.xlsx\");\nbuilder.CloseFile();"
		},
		"Api.createnofill": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\noWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 1, 3 * 36000);\nbuilder.SaveFile(\"xlsx\", \"CreateNoFill.xlsx\");\nbuilder.CloseFile();"
		},
		"Api.createnumbering": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oBullet = Api.CreateNumbering(\"ArabicParenR\", 1);\noParagraph.SetBullet(oBullet);\noParagraph.AddText(\" This is an example of the numbered paragraph.\");\noParagraph = Api.CreateParagraph();\noParagraph.SetBullet(oBullet);\noParagraph.AddText(\" This is an example of the numbered paragraph.\");\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"CreateNumbering.xlsx\");\nbuilder.CloseFile();"
		},
		"Api.createparagraph": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\noDocContent.RemoveAllElements();\nvar oParagraph = Api.CreateParagraph();\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"We removed all elements from the shape and added a new paragraph inside it.\");\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"CreateParagraph.xlsx\");\nbuilder.CloseFile();"
		},
		"Api.createpatternfill": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreatePatternFill(\"dashDnDiag\", Api.CreateRGBColor(255, 224, 204), Api.CreateRGBColor(255, 164, 101));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\noWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 1, 3 * 36000);\nbuilder.SaveFile(\"xlsx\", \"CreatePatternFill.xlsx\");\nbuilder.CloseFile();"
		},
		"Api.createpresetcolor": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oPresetColor = Api.CreatePresetColor(\"lightYellow\");\nvar oGs1 = Api.CreateGradientStop(oPresetColor, 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\noWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 1, 3 * 36000);\nbuilder.SaveFile(\"xlsx\", \"CreatePresetColor.xlsx\");\nbuilder.CloseFile();"
		},
		"Api.createradialgradientfill": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\noWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 1, 3 * 36000);\nbuilder.SaveFile(\"xlsx\", \"CreateRadialGradientFill.xlsx\");\nbuilder.CloseFile();"
		},
		"Api.creatergbcolor": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\noWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 1, 3 * 36000);\nbuilder.SaveFile(\"xlsx\", \"CreateGradientStop.xlsx\");\nbuilder.CloseFile();"
		},
		"Api.createrun": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetFontFamily(\"Comic Sans MS\");\noRun.AddText(\"This is a text run with the font family set to 'Comic Sans MS'.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"xlsx\", \"CreateRun.xlsx\");\nbuilder.CloseFile();"
		},
		"Api.createschemecolor": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oSchemeColor = Api.CreateSchemeColor(\"accent6\");\nvar oGs1 = Api.CreateGradientStop(oSchemeColor, 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\noWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 1, 3 * 36000);\nbuilder.SaveFile(\"xlsx\", \"CreateSchemeColor.xlsx\");\nbuilder.CloseFile();"
		},
		"Api.createsolidfill": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oRGBColor = Api.CreateRGBColor(0, 255, 0);\nvar oFill = Api.CreateSolidFill(oRGBColor);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\noWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 1, 3 * 36000);\nbuilder.SaveFile(\"xlsx\", \"CreateSolidFill.xlsx\");\nbuilder.CloseFile();"
		},
		"Api.createstroke": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oFill1 = Api.CreateSolidFill(Api.CreateRGBColor(255, 255, 0));\nvar oStroke = Api.CreateStroke(3 * 36000, oFill1);\noWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 1, 3 * 36000);\nbuilder.SaveFile(\"xlsx\", \"CreateStroke.xlsx\");\nbuilder.CloseFile();"
		},
		"Api.format": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFormat = Api.Format(\"123456\", [\"$#,##0\"]);\noWorksheet.GetRange(\"A1\").SetValue(oFormat);\nbuilder.SaveFile(\"xlsx\", \"Format.xlsx\");\nbuilder.CloseFile();"
		},
		"Api.getactivesheet": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"B1\").SetValue(\"2\");\noWorksheet.GetRange(\"B2\").SetValue(\"2\");\noWorksheet.GetRange(\"A3\").SetValue(\"2x2=\");\noWorksheet.GetRange(\"B3\").SetValue(\"=B1*B2\");\nbuilder.SaveFile(\"xlsx\", \"GetActiveSheet.xlsx\");\nbuilder.CloseFile();"
		},
		"Api.getdefname": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A1\").SetValue(\"1\");\noWorksheet.GetRange(\"B1\").SetValue(\"2\");\nApi.AddDefName(\"numbers\", \"Sheet1!$A$1:$B$1\");\nvar oDefName = Api.GetDefName(\"numbers\");\noWorksheet.GetRange(\"A3\").SetValue(\"DefName: \" + oDefName.GetName());\nbuilder.SaveFile(\"xlsx\", \"GetDefName.xlsx\");\nbuilder.CloseFile();"
		},
		"Api.getlocale": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nApi.SetLocale(\"en-CA\");\nvar nLocale = Api.GetLocale();\noWorksheet.GetRange(\"A1\").SetValue(\"Locale: \" + nLocale);\nbuilder.SaveFile(\"xlsx\", \"GetLocale.xlsx\");\nbuilder.CloseFile();"
		},
		"Api.getmailmergedata": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.SetColumnWidth(0, 20);\noWorksheet.GetRange(\"A1\").SetValue(\"Email address\");\noWorksheet.GetRange(\"B1\").SetValue(\"Greeting\");\noWorksheet.GetRange(\"C1\").SetValue(\"First name\");\noWorksheet.GetRange(\"D1\").SetValue(\"Last name\");\noWorksheet.GetRange(\"A2\").SetValue(\"user1@example.com\");\noWorksheet.GetRange(\"B2\").SetValue(\"Dear\");\noWorksheet.GetRange(\"C2\").SetValue(\"John\");\noWorksheet.GetRange(\"D2\").SetValue(\"Smith\");\noWorksheet.GetRange(\"A3\").SetValue(\"user2@example.com\");\noWorksheet.GetRange(\"B3\").SetValue(\"Hello\");\noWorksheet.GetRange(\"C3\").SetValue(\"Kate\");\noWorksheet.GetRange(\"D3\").SetValue(\"Cage\");\nvar aMailMergeData = Api.GetMailMergeData(0);\noWorksheet.GetRange(\"A5\").SetValue(\"Mail merge data: \" + aMailMergeData);\nbuilder.SaveFile(\"xlsx\", \"GetMailMergeData.xlsx\");\nbuilder.CloseFile();"
		},
		"Api.getrange": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oRange = Api.GetRange(\"A1:C1\");\noRange.SetFillColor(Api.CreateColorFromRGB(255, 224, 204));\noWorksheet.GetRange(\"A3\").SetValue(\"The color was set to the background of cells A1:C1.\");\nbuilder.SaveFile(\"xlsx\", \"GetRange.xlsx\");\nbuilder.CloseFile();"
		},
		"Api.getselection": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nApi.GetSelection().SetValue(\"selected\");\nbuilder.SaveFile(\"xlsx\", \"GetSelection.xlsx\");\nbuilder.CloseFile();"
		},
		"Api.getsheet": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetSheet(\"Sheet1\");\noWorksheet.GetRange(\"A1\").SetValue(\"This is a sample text on 'Sheet1'.\");\nbuilder.SaveFile(\"xlsx\", \"GetSheet.xlsx\");\nbuilder.CloseFile();"
		},
		"Api.getsheets": {
			"script": "builder.CreateFile(\"xlsx\");\nApi.AddSheet(\"new_sheet_name\");\nvar sheets = Api.GetSheets();\nvar sheet_name1 = sheets[0].GetName();\nvar sheet_name2 = sheets[1].GetName();\nsheets[1].GetRange(\"A1\").SetValue(sheet_name1);\nsheets[1].GetRange(\"A2\").SetValue(sheet_name2);\nbuilder.SaveFile(\"xlsx\", \"GetSheets.xlsx\");\nbuilder.CloseFile();"
		},
		"Api.getthemescolors": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar themes = Api.GetThemesColors();\nfor (let i = 0; i < themes.length; ++i) {\n  oWorksheet.GetRange(\"A\" + (i + 1)).SetValue(themes[i]);\n}\nbuilder.SaveFile(\"xlsx\", \"GetThemesColors.xlsx\");\nbuilder.CloseFile();"
		},
		"Api.intersect": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oRange1 = oWorksheet.GetRange(\"A1:C5\");\nvar oRange2 = oWorksheet.GetRange(\"B2:B4\");\nvar oRange = Api.Intersect(oRange1, oRange2);\noRange.SetFillColor(Api.CreateColorFromRGB(255, 224, 204));\nbuilder.SaveFile(\"xlsx\", \"Intersect.xlsx\");\nbuilder.CloseFile();"
		},
		"Api.recalculateallformulas": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"B1\").SetValue(1);\noWorksheet.GetRange(\"C1\").SetValue(2);\nvar oRange = oWorksheet.GetRange(\"A1\");\noRange.SetValue(\"=SUM(B1:C1)\");\noRange = oWorksheet.GetRange(\"E1\");\noRange.SetValue(\"=A1+1\");\noWorksheet.GetRange(\"B1\").SetValue(3);\nApi.RecalculateAllFormulas();\noWorksheet.GetRange(\"A3\").SetValue(\"Formulas from cells A1 and E1 were recalculated with a new value from cell C1.\");\nbuilder.SaveFile(\"xlsx\", \"RecalculateAllFormulas.xlsx\");\nbuilder.CloseFile();"
		},
		"Api.replacetextsmart": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A1\").SetValue(\"1\");\noWorksheet.GetRange(\"A2\").SetValue(\"2\");\nvar oRange = oWorksheet.GetRange(\"A1:A2\");\noRange.Select();\nApi.ReplaceTextSmart([\"Cell 1\", \"Cell 2\"]);\nbuilder.SaveFile(\"xlsx\", \"ReplaceTextSmart.xlsx\");\nbuilder.CloseFile();"
		},
		"Api.save": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A1\").SetValue(\"This sample text is saved to the worksheet.\");\nApi.Save();\nbuilder.SaveFile(\"xlsx\", \"Save.xlsx\");\nbuilder.CloseFile();"
		},
		"Api.setlocale": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nApi.SetLocale(\"en-CA\");\noWorksheet.GetRange(\"A1\").SetValue(\"A sample spreadsheet with the language set to English (Canada).\");\nbuilder.SaveFile(\"xlsx\", \"SetLocale.xlsx\");\nbuilder.CloseFile();"
		},
		"Api.setthemecolors": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar themes = Api.GetThemesColors();\nfor (let i = 0; i < themes.length; ++i) {\n  oWorksheet.GetRange(\"A\" + (i + 1)).SetValue(themes[i]);\n}\nApi.SetThemeColors(themes[3]);\noWorksheet.GetRange(\"C3\").SetValue(\"The 'Apex' theme colors were set to the current spreadsheet.\");\nbuilder.SaveFile(\"xlsx\", \"SetThemeColors.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiAreas.getcount": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oRange = oWorksheet.GetRange(\"B1:D1\");\noRange.SetValue(\"1\");\noRange.Select();\nvar oAreas = oRange.GetAreas();\nvar nCount = oAreas.GetCount();\noRange = oWorksheet.GetRange('A5');\noRange.SetValue(\"The number of ranges in the areas: \");\noRange.AutoFit(false, true);\noWorksheet.GetRange('B5').SetValue(nCount);\nbuilder.SaveFile(\"xlsx\", \"GetCount.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiAreas.getitem": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oRange = oWorksheet.GetRange(\"B1:D1\");\noRange.SetValue(\"1\");\noRange.Select();\nvar oAreas = oRange.GetAreas();\nvar oItem = oAreas.GetItem(1);\noRange = oWorksheet.GetRange('A5');\noRange.SetValue(\"The first item from the areas: \");\noRange.AutoFit(false, true);\noWorksheet.GetRange('B5').Paste(oItem);\nbuilder.SaveFile(\"xlsx\", \"GetItem.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiAreas.getparent": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oRange = oWorksheet.GetRange(\"B1:D1\");\noRange.SetValue(\"1\");\noRange.Select();\nvar oAreas = oRange.GetAreas();\nvar oParent = oAreas.GetParent();\nvar sType = oParent.GetClassType();\noRange = oWorksheet.GetRange('A4');\noRange.SetValue(\"The areas parent: \");\noRange.AutoFit(false, true);\noWorksheet.GetRange('B4').Paste(oParent);\noRange = oWorksheet.GetRange('A5');\noRange.SetValue(\"The type of the areas parent: \");\noRange.AutoFit(false, true);\noWorksheet.GetRange('B5').SetValue(sType);\nbuilder.SaveFile(\"xlsx\", \"GetParent.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiBullet.getclasstype": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oBullet = Api.CreateNumbering(\"ArabicParenR\", 1);\noParagraph.SetBullet(oBullet);\noParagraph.AddText(\" This is an example of the bulleted paragraph.\");\noParagraph = Api.CreateParagraph();\noParagraph.SetBullet(oBullet);\noParagraph.AddText(\" This is an example of the bulleted paragraph.\");\noDocContent.Push(oParagraph);\nvar sClassType = oBullet.GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class Type = \" + sClassType);\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"GetClassType.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiChart.applychartstyle": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"B1\").SetValue(2014);\noWorksheet.GetRange(\"C1\").SetValue(2015);\noWorksheet.GetRange(\"D1\").SetValue(2016);\noWorksheet.GetRange(\"A2\").SetValue(\"Projected Revenue\");\noWorksheet.GetRange(\"A3\").SetValue(\"Estimated Costs\");\noWorksheet.GetRange(\"B2\").SetValue(200);\noWorksheet.GetRange(\"B3\").SetValue(250);\noWorksheet.GetRange(\"C2\").SetValue(240);\noWorksheet.GetRange(\"C3\").SetValue(260);\noWorksheet.GetRange(\"D2\").SetValue(280);\noWorksheet.GetRange(\"D3\").SetValue(280);\nvar oChart = oWorksheet.AddChart(\"'Sheet1'!$A$1:$D$3\", true, \"bar3D\", 2, 100 * 36000, 70 * 36000, 0, 2 * 36000, 5, 3 * 36000);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.ApplyChartStyle(5);\nbuilder.SaveFile(\"xlsx\", \"ApplyChartStyle.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiChart.getclasstype": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"B1\").SetValue(2014);\noWorksheet.GetRange(\"C1\").SetValue(2015);\noWorksheet.GetRange(\"D1\").SetValue(2016);\noWorksheet.GetRange(\"A2\").SetValue(\"Projected Revenue\");\noWorksheet.GetRange(\"A3\").SetValue(\"Estimated Costs\");\noWorksheet.GetRange(\"B2\").SetValue(200);\noWorksheet.GetRange(\"B3\").SetValue(250);\noWorksheet.GetRange(\"C2\").SetValue(240);\noWorksheet.GetRange(\"C3\").SetValue(260);\noWorksheet.GetRange(\"D2\").SetValue(280);\noWorksheet.GetRange(\"D3\").SetValue(280);\nvar oChart = oWorksheet.AddChart(\"'Sheet1'!$A$1:$D$3\", true, \"bar3D\", 2, 100 * 36000, 70 * 36000, 0, 2 * 36000, 5, 3 * 36000);\noChart.SetTitle(\"Financial Overview\", 13);\nvar sClassType = oChart.GetClassType();\noWorksheet.GetRange(\"F1\").SetValue(\"Class Type: \" + sClassType);\nbuilder.SaveFile(\"xlsx\", \"GetClassType.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiChart.sethoraxislablesfontsize": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"B1\").SetValue(2014);\noWorksheet.GetRange(\"C1\").SetValue(2015);\noWorksheet.GetRange(\"D1\").SetValue(2016);\noWorksheet.GetRange(\"A2\").SetValue(\"Projected Revenue\");\noWorksheet.GetRange(\"A3\").SetValue(\"Estimated Costs\");\noWorksheet.GetRange(\"B2\").SetValue(200);\noWorksheet.GetRange(\"B3\").SetValue(250);\noWorksheet.GetRange(\"C2\").SetValue(240);\noWorksheet.GetRange(\"C3\").SetValue(260);\noWorksheet.GetRange(\"D2\").SetValue(280);\noWorksheet.GetRange(\"D3\").SetValue(280);\nvar oChart = oWorksheet.AddChart(\"'Sheet1'!$A$1:$D$3\", true, \"bar3D\", 2, 100 * 36000, 70 * 36000, 0, 2 * 36000, 5, 3 * 36000);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetHorAxisLablesFontSize(10);\nbuilder.SaveFile(\"xlsx\", \"SetHorAxisLablesFontSize.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiChart.sethoraxismajortickmark": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"B1\").SetValue(2014);\noWorksheet.GetRange(\"C1\").SetValue(2015);\noWorksheet.GetRange(\"D1\").SetValue(2016);\noWorksheet.GetRange(\"A2\").SetValue(\"Projected Revenue\");\noWorksheet.GetRange(\"A3\").SetValue(\"Estimated Costs\");\noWorksheet.GetRange(\"B2\").SetValue(200);\noWorksheet.GetRange(\"B3\").SetValue(250);\noWorksheet.GetRange(\"C2\").SetValue(240);\noWorksheet.GetRange(\"C3\").SetValue(260);\noWorksheet.GetRange(\"D2\").SetValue(280);\noWorksheet.GetRange(\"D3\").SetValue(280);\nvar oChart = oWorksheet.AddChart(\"'Sheet1'!$A$1:$D$3\", true, \"scatter\", 2, 100 * 36000, 70 * 36000, 0, 2 * 36000, 5, 3 * 36000);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetHorAxisMajorTickMark(\"cross\");\nbuilder.SaveFile(\"xlsx\", \"SetHorAxisMajorTickMark.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiChart.sethoraxisminortickmark": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"B1\").SetValue(2014);\noWorksheet.GetRange(\"C1\").SetValue(2015);\noWorksheet.GetRange(\"D1\").SetValue(2016);\noWorksheet.GetRange(\"A2\").SetValue(\"Projected Revenue\");\noWorksheet.GetRange(\"A3\").SetValue(\"Estimated Costs\");\noWorksheet.GetRange(\"B2\").SetValue(200);\noWorksheet.GetRange(\"B3\").SetValue(250);\noWorksheet.GetRange(\"C2\").SetValue(240);\noWorksheet.GetRange(\"C3\").SetValue(260);\noWorksheet.GetRange(\"D2\").SetValue(280);\noWorksheet.GetRange(\"D3\").SetValue(280);\nvar oChart = oWorksheet.AddChart(\"'Sheet1'!$A$1:$D$3\", true, \"scatter\", 2, 100 * 36000, 70 * 36000, 0, 2 * 36000, 5, 3 * 36000);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetHorAxisMinorTickMark(\"out\");\nbuilder.SaveFile(\"xlsx\", \"SetHorAxisMinorTickMark.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiChart.sethoraxisorientation": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"B1\").SetValue(2014);\noWorksheet.GetRange(\"C1\").SetValue(2015);\noWorksheet.GetRange(\"D1\").SetValue(2016);\noWorksheet.GetRange(\"A2\").SetValue(\"Projected Revenue\");\noWorksheet.GetRange(\"A3\").SetValue(\"Estimated Costs\");\noWorksheet.GetRange(\"B2\").SetValue(200);\noWorksheet.GetRange(\"B3\").SetValue(250);\noWorksheet.GetRange(\"C2\").SetValue(240);\noWorksheet.GetRange(\"C3\").SetValue(260);\noWorksheet.GetRange(\"D2\").SetValue(280);\noWorksheet.GetRange(\"D3\").SetValue(280);\nvar oChart = oWorksheet.AddChart(\"'Sheet1'!$A$1:$D$3\", true, \"bar3D\", 2, 100 * 36000, 70 * 36000, 0, 2 * 36000, 5, 3 * 36000);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetHorAxisOrientation(false);\nbuilder.SaveFile(\"xlsx\", \"SetHorAxisOrientation.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiChart.sethoraxisticklabelposition": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"B1\").SetValue(2014);\noWorksheet.GetRange(\"C1\").SetValue(2015);\noWorksheet.GetRange(\"D1\").SetValue(2016);\noWorksheet.GetRange(\"A2\").SetValue(\"Projected Revenue\");\noWorksheet.GetRange(\"A3\").SetValue(\"Estimated Costs\");\noWorksheet.GetRange(\"B2\").SetValue(200);\noWorksheet.GetRange(\"B3\").SetValue(250);\noWorksheet.GetRange(\"C2\").SetValue(240);\noWorksheet.GetRange(\"C3\").SetValue(260);\noWorksheet.GetRange(\"D2\").SetValue(280);\noWorksheet.GetRange(\"D3\").SetValue(280);\nvar oChart = oWorksheet.AddChart(\"'Sheet1'!$A$1:$D$3\", true, \"bar3D\", 2, 100 * 36000, 70 * 36000, 0, 2 * 36000, 5, 3 * 36000);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetHorAxisTickLabelPosition(\"high\");\nbuilder.SaveFile(\"xlsx\", \"SetHorAxisTickLabelPosition.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiChart.sethoraxistitle": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"B1\").SetValue(2014);\noWorksheet.GetRange(\"C1\").SetValue(2015);\noWorksheet.GetRange(\"D1\").SetValue(2016);\noWorksheet.GetRange(\"A2\").SetValue(\"Projected Revenue\");\noWorksheet.GetRange(\"A3\").SetValue(\"Estimated Costs\");\noWorksheet.GetRange(\"B2\").SetValue(200);\noWorksheet.GetRange(\"B3\").SetValue(250);\noWorksheet.GetRange(\"C2\").SetValue(240);\noWorksheet.GetRange(\"C3\").SetValue(260);\noWorksheet.GetRange(\"D2\").SetValue(280);\noWorksheet.GetRange(\"D3\").SetValue(280);\nvar oChart = oWorksheet.AddChart(\"'Sheet1'!$A$1:$D$3\", true, \"bar3D\", 2, 100 * 36000, 70 * 36000, 0, 2 * 36000, 5, 3 * 36000);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetHorAxisTitle(\"Year\", 11);\nbuilder.SaveFile(\"xlsx\", \"SetHorAxisTitle.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setlegendfontsize": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"B1\").SetValue(2014);\noWorksheet.GetRange(\"C1\").SetValue(2015);\noWorksheet.GetRange(\"D1\").SetValue(2016);\noWorksheet.GetRange(\"A2\").SetValue(\"Projected Revenue\");\noWorksheet.GetRange(\"A3\").SetValue(\"Estimated Costs\");\noWorksheet.GetRange(\"B2\").SetValue(200);\noWorksheet.GetRange(\"B3\").SetValue(250);\noWorksheet.GetRange(\"C2\").SetValue(240);\noWorksheet.GetRange(\"C3\").SetValue(260);\noWorksheet.GetRange(\"D2\").SetValue(280);\noWorksheet.GetRange(\"D3\").SetValue(280);\nvar oChart = oWorksheet.AddChart(\"'Sheet1'!$A$1:$D$3\", true, \"bar3D\", 2, 100 * 36000, 70 * 36000, 0, 2 * 36000, 5, 3 * 36000);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetLegendFontSize(13);\nbuilder.SaveFile(\"xlsx\", \"SetLegendFontSize.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setlegendpos": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"B1\").SetValue(2014);\noWorksheet.GetRange(\"C1\").SetValue(2015);\noWorksheet.GetRange(\"D1\").SetValue(2016);\noWorksheet.GetRange(\"A2\").SetValue(\"Projected Revenue\");\noWorksheet.GetRange(\"A3\").SetValue(\"Estimated Costs\");\noWorksheet.GetRange(\"B2\").SetValue(200);\noWorksheet.GetRange(\"B3\").SetValue(250);\noWorksheet.GetRange(\"C2\").SetValue(240);\noWorksheet.GetRange(\"C3\").SetValue(260);\noWorksheet.GetRange(\"D2\").SetValue(280);\noWorksheet.GetRange(\"D3\").SetValue(280);\nvar oChart = oWorksheet.AddChart(\"'Sheet1'!$A$1:$D$3\", true, \"bar3D\", 2, 100 * 36000, 70 * 36000, 0, 2 * 36000, 5, 3 * 36000);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetLegendPos(\"right\");\nbuilder.SaveFile(\"xlsx\", \"SetLegendPos.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setmajorhorizontalgridlines": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"B1\").SetValue(2014);\noWorksheet.GetRange(\"C1\").SetValue(2015);\noWorksheet.GetRange(\"D1\").SetValue(2016);\noWorksheet.GetRange(\"A2\").SetValue(\"Projected Revenue\");\noWorksheet.GetRange(\"A3\").SetValue(\"Estimated Costs\");\noWorksheet.GetRange(\"B2\").SetValue(200);\noWorksheet.GetRange(\"B3\").SetValue(250);\noWorksheet.GetRange(\"C2\").SetValue(240);\noWorksheet.GetRange(\"C3\").SetValue(260);\noWorksheet.GetRange(\"D2\").SetValue(280);\noWorksheet.GetRange(\"D3\").SetValue(280);\nvar oChart = oWorksheet.AddChart(\"'Sheet1'!$A$1:$D$3\", true, \"bar3D\", 2, 100 * 36000, 70 * 36000, 0, 2 * 36000, 5, 3 * 36000);\noChart.SetTitle(\"Financial Overview\", 13);\nvar oStroke = Api.CreateStroke(1 * 15000, Api.CreateSolidFill(Api.CreateRGBColor(155, 64, 1)));\noChart.SetMajorHorizontalGridlines(oStroke);\nbuilder.SaveFile(\"xlsx\", \"SetMajorHorizontalGridlines.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setmajorverticalgridlines": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"B1\").SetValue(2014);\noWorksheet.GetRange(\"C1\").SetValue(2015);\noWorksheet.GetRange(\"D1\").SetValue(2016);\noWorksheet.GetRange(\"A2\").SetValue(\"Projected Revenue\");\noWorksheet.GetRange(\"A3\").SetValue(\"Estimated Costs\");\noWorksheet.GetRange(\"B2\").SetValue(200);\noWorksheet.GetRange(\"B3\").SetValue(250);\noWorksheet.GetRange(\"C2\").SetValue(240);\noWorksheet.GetRange(\"C3\").SetValue(260);\noWorksheet.GetRange(\"D2\").SetValue(280);\noWorksheet.GetRange(\"D3\").SetValue(280);\nvar oChart = oWorksheet.AddChart(\"'Sheet1'!$A$1:$D$3\", true, \"bar3D\", 2, 100 * 36000, 70 * 36000, 0, 2 * 36000, 5, 3 * 36000);\noChart.SetTitle(\"Financial Overview\", 13);\nvar oStroke = Api.CreateStroke(1 * 15000, Api.CreateSolidFill(Api.CreateRGBColor(155, 64, 1)));\noChart.SetMajorVerticalGridlines(oStroke);\nbuilder.SaveFile(\"xlsx\", \"SetMajorVerticalGridlines.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setminorhorizontalgridlines": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"B1\").SetValue(2014);\noWorksheet.GetRange(\"C1\").SetValue(2015);\noWorksheet.GetRange(\"D1\").SetValue(2016);\noWorksheet.GetRange(\"A2\").SetValue(\"Projected Revenue\");\noWorksheet.GetRange(\"A3\").SetValue(\"Estimated Costs\");\noWorksheet.GetRange(\"B2\").SetValue(200);\noWorksheet.GetRange(\"B3\").SetValue(250);\noWorksheet.GetRange(\"C2\").SetValue(240);\noWorksheet.GetRange(\"C3\").SetValue(260);\noWorksheet.GetRange(\"D2\").SetValue(280);\noWorksheet.GetRange(\"D3\").SetValue(280);\nvar oChart = oWorksheet.AddChart(\"'Sheet1'!$A$1:$D$3\", true, \"bar3D\", 2, 100 * 36000, 70 * 36000, 0, 2 * 36000, 5, 3 * 36000);\noChart.SetTitle(\"Financial Overview\", 13);\nvar oStroke = Api.CreateStroke(1 * 5000, Api.CreateSolidFill(Api.CreateRGBColor(155, 64, 1)));\noChart.SetMinorHorizontalGridlines(oStroke);\nbuilder.SaveFile(\"xlsx\", \"SetMinorHorizontalGridlines.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setminorverticalgridlines": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"B1\").SetValue(2014);\noWorksheet.GetRange(\"C1\").SetValue(2015);\noWorksheet.GetRange(\"D1\").SetValue(2016);\noWorksheet.GetRange(\"A2\").SetValue(\"Projected Revenue\");\noWorksheet.GetRange(\"A3\").SetValue(\"Estimated Costs\");\noWorksheet.GetRange(\"B2\").SetValue(200);\noWorksheet.GetRange(\"B3\").SetValue(250);\noWorksheet.GetRange(\"C2\").SetValue(240);\noWorksheet.GetRange(\"C3\").SetValue(260);\noWorksheet.GetRange(\"D2\").SetValue(280);\noWorksheet.GetRange(\"D3\").SetValue(280);\nvar oChart = oWorksheet.AddChart(\"'Sheet1'!$A$1:$D$3\", true, \"bar3D\", 2, 100 * 36000, 70 * 36000, 0, 2 * 36000, 5, 3 * 36000);\noChart.SetTitle(\"Financial Overview\", 13);\nvar oStroke = Api.CreateStroke(1 * 5000, Api.CreateSolidFill(Api.CreateRGBColor(155, 64, 1)));\noChart.SetMinorVerticalGridlines(oStroke);\nbuilder.SaveFile(\"xlsx\", \"SetMinorVerticalGridlines.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setshowdatalabels": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"B1\").SetValue(2014);\noWorksheet.GetRange(\"C1\").SetValue(2015);\noWorksheet.GetRange(\"D1\").SetValue(2016);\noWorksheet.GetRange(\"A2\").SetValue(\"Projected Revenue\");\noWorksheet.GetRange(\"A3\").SetValue(\"Estimated Costs\");\noWorksheet.GetRange(\"B2\").SetValue(200);\noWorksheet.GetRange(\"B3\").SetValue(250);\noWorksheet.GetRange(\"C2\").SetValue(240);\noWorksheet.GetRange(\"C3\").SetValue(260);\noWorksheet.GetRange(\"D2\").SetValue(280);\noWorksheet.GetRange(\"D3\").SetValue(280);\nvar oChart = oWorksheet.AddChart(\"'Sheet1'!$A$1:$D$3\", true, \"bar3D\", 2, 100 * 36000, 70 * 36000, 0, 2 * 36000, 5, 3 * 36000);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetShowDataLabels(false, false, true, false);\nbuilder.SaveFile(\"xlsx\", \"SetShowDataLabels.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setshowpointdatalabel": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"B1\").SetValue(2014);\noWorksheet.GetRange(\"C1\").SetValue(2015);\noWorksheet.GetRange(\"D1\").SetValue(2016);\noWorksheet.GetRange(\"A2\").SetValue(\"Projected Revenue\");\noWorksheet.GetRange(\"A3\").SetValue(\"Estimated Costs\");\noWorksheet.GetRange(\"B2\").SetValue(200);\noWorksheet.GetRange(\"B3\").SetValue(250);\noWorksheet.GetRange(\"C2\").SetValue(240);\noWorksheet.GetRange(\"C3\").SetValue(260);\noWorksheet.GetRange(\"D2\").SetValue(280);\noWorksheet.GetRange(\"D3\").SetValue(280);\nvar oChart = oWorksheet.AddChart(\"'Sheet1'!$A$1:$D$3\", true, \"bar3D\", 2, 100 * 36000, 70 * 36000, 0, 2 * 36000, 5, 3 * 36000);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetShowPointDataLabel(1, 0, false, false, true, false);\nbuilder.SaveFile(\"xlsx\", \"SetShowPointDataLabel.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiChart.settitle": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"B1\").SetValue(2014);\noWorksheet.GetRange(\"C1\").SetValue(2015);\noWorksheet.GetRange(\"D1\").SetValue(2016);\noWorksheet.GetRange(\"A2\").SetValue(\"Projected Revenue\");\noWorksheet.GetRange(\"A3\").SetValue(\"Estimated Costs\");\noWorksheet.GetRange(\"B2\").SetValue(200);\noWorksheet.GetRange(\"B3\").SetValue(250);\noWorksheet.GetRange(\"C2\").SetValue(240);\noWorksheet.GetRange(\"C3\").SetValue(260);\noWorksheet.GetRange(\"D2\").SetValue(280);\noWorksheet.GetRange(\"D3\").SetValue(280);\nvar oChart = oWorksheet.AddChart(\"'Sheet1'!$A$1:$D$3\", true, \"bar3D\", 2, 100 * 36000, 70 * 36000, 0, 2 * 36000, 5, 3 * 36000);\noChart.SetTitle(\"Financial Overview\", 13);\nbuilder.SaveFile(\"xlsx\", \"SetTitle.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setveraxisorientation": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"B1\").SetValue(2014);\noWorksheet.GetRange(\"C1\").SetValue(2015);\noWorksheet.GetRange(\"D1\").SetValue(2016);\noWorksheet.GetRange(\"A2\").SetValue(\"Projected Revenue\");\noWorksheet.GetRange(\"A3\").SetValue(\"Estimated Costs\");\noWorksheet.GetRange(\"B2\").SetValue(200);\noWorksheet.GetRange(\"B3\").SetValue(250);\noWorksheet.GetRange(\"C2\").SetValue(240);\noWorksheet.GetRange(\"C3\").SetValue(260);\noWorksheet.GetRange(\"D2\").SetValue(280);\noWorksheet.GetRange(\"D3\").SetValue(280);\nvar oChart = oWorksheet.AddChart(\"'Sheet1'!$A$1:$D$3\", true, \"bar3D\", 2, 100 * 36000, 70 * 36000, 0, 2 * 36000, 5, 3 * 36000);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetVerAxisOrientation(false);\nbuilder.SaveFile(\"xlsx\", \"SetVerAxisOrientation.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setveraxistitle": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"B1\").SetValue(2014);\noWorksheet.GetRange(\"C1\").SetValue(2015);\noWorksheet.GetRange(\"D1\").SetValue(2016);\noWorksheet.GetRange(\"A2\").SetValue(\"Projected Revenue\");\noWorksheet.GetRange(\"A3\").SetValue(\"Estimated Costs\");\noWorksheet.GetRange(\"B2\").SetValue(200);\noWorksheet.GetRange(\"B3\").SetValue(250);\noWorksheet.GetRange(\"C2\").SetValue(240);\noWorksheet.GetRange(\"C3\").SetValue(260);\noWorksheet.GetRange(\"D2\").SetValue(280);\noWorksheet.GetRange(\"D3\").SetValue(280);\nvar oChart = oWorksheet.AddChart(\"'Sheet1'!$A$1:$D$3\", true, \"bar3D\", 2, 100 * 36000, 70 * 36000, 0, 2 * 36000, 5, 3 * 36000);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\nbuilder.SaveFile(\"xlsx\", \"SetVerAxisTitle.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setvertaxislablesfontsize": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"B1\").SetValue(2014);\noWorksheet.GetRange(\"C1\").SetValue(2015);\noWorksheet.GetRange(\"D1\").SetValue(2016);\noWorksheet.GetRange(\"A2\").SetValue(\"Projected Revenue\");\noWorksheet.GetRange(\"A3\").SetValue(\"Estimated Costs\");\noWorksheet.GetRange(\"B2\").SetValue(200);\noWorksheet.GetRange(\"B3\").SetValue(250);\noWorksheet.GetRange(\"C2\").SetValue(240);\noWorksheet.GetRange(\"C3\").SetValue(260);\noWorksheet.GetRange(\"D2\").SetValue(280);\noWorksheet.GetRange(\"D3\").SetValue(280);\nvar oChart = oWorksheet.AddChart(\"'Sheet1'!$A$1:$D$3\", true, \"bar3D\", 2, 100 * 36000, 70 * 36000, 0, 2 * 36000, 5, 3 * 36000);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetVertAxisLablesFontSize(10);\nbuilder.SaveFile(\"xlsx\", \"SetVertAxisLablesFontSize.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setvertaxismajortickmark": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"B1\").SetValue(2014);\noWorksheet.GetRange(\"C1\").SetValue(2015);\noWorksheet.GetRange(\"D1\").SetValue(2016);\noWorksheet.GetRange(\"A2\").SetValue(\"Projected Revenue\");\noWorksheet.GetRange(\"A3\").SetValue(\"Estimated Costs\");\noWorksheet.GetRange(\"B2\").SetValue(200);\noWorksheet.GetRange(\"B3\").SetValue(250);\noWorksheet.GetRange(\"C2\").SetValue(240);\noWorksheet.GetRange(\"C3\").SetValue(260);\noWorksheet.GetRange(\"D2\").SetValue(280);\noWorksheet.GetRange(\"D3\").SetValue(280);\nvar oChart = oWorksheet.AddChart(\"'Sheet1'!$A$1:$D$3\", true, \"scatter\", 2, 100 * 36000, 70 * 36000, 0, 2 * 36000, 5, 3 * 36000);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetVertAxisMajorTickMark(\"cross\");\nbuilder.SaveFile(\"xlsx\", \"SetVertAxisMajorTickMark.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setvertaxisminortickmark": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"B1\").SetValue(2014);\noWorksheet.GetRange(\"C1\").SetValue(2015);\noWorksheet.GetRange(\"D1\").SetValue(2016);\noWorksheet.GetRange(\"A2\").SetValue(\"Projected Revenue\");\noWorksheet.GetRange(\"A3\").SetValue(\"Estimated Costs\");\noWorksheet.GetRange(\"B2\").SetValue(200);\noWorksheet.GetRange(\"B3\").SetValue(250);\noWorksheet.GetRange(\"C2\").SetValue(240);\noWorksheet.GetRange(\"C3\").SetValue(260);\noWorksheet.GetRange(\"D2\").SetValue(280);\noWorksheet.GetRange(\"D3\").SetValue(280);\nvar oChart = oWorksheet.AddChart(\"'Sheet1'!$A$1:$D$3\", true, \"scatter\", 2, 100 * 36000, 70 * 36000, 0, 2 * 36000, 5, 3 * 36000);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetVertAxisMinorTickMark(\"out\");\nbuilder.SaveFile(\"xlsx\", \"SetVertAxisMinorTickMark.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setvertaxisticklabelposition": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"B1\").SetValue(2014);\noWorksheet.GetRange(\"C1\").SetValue(2015);\noWorksheet.GetRange(\"D1\").SetValue(2016);\noWorksheet.GetRange(\"A2\").SetValue(\"Projected Revenue\");\noWorksheet.GetRange(\"A3\").SetValue(\"Estimated Costs\");\noWorksheet.GetRange(\"B2\").SetValue(200);\noWorksheet.GetRange(\"B3\").SetValue(250);\noWorksheet.GetRange(\"C2\").SetValue(240);\noWorksheet.GetRange(\"C3\").SetValue(260);\noWorksheet.GetRange(\"D2\").SetValue(280);\noWorksheet.GetRange(\"D3\").SetValue(280);\nvar oChart = oWorksheet.AddChart(\"'Sheet1'!$A$1:$D$3\", true, \"bar3D\", 2, 100 * 36000, 70 * 36000, 0, 2 * 36000, 5, 3 * 36000);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetVertAxisTickLabelPosition(\"high\");\nbuilder.SaveFile(\"xlsx\", \"SetVertAxisTickLabelPosition.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiColor.getclasstype": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oColor = Api.CreateColorFromRGB(49, 133, 154);\noWorksheet.GetRange(\"A2\").SetValue(\"Text with color\");\noWorksheet.GetRange(\"A2\").SetFontColor(oColor);\nvar sColorClassType = oColor.GetClassType();\noWorksheet.GetRange(\"A4\").SetValue(\"Class type = \" + sColorClassType);\nbuilder.SaveFile(\"xlsx\", \"GetClassType.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiComment.delete": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A1\").SetValue(\"1\");\nvar oRange = oWorksheet.GetRange(\"A1\");\noRange.AddComment(\"This is just a number.\");\nvar oComment = oRange.GetComment();\noComment.Delete();\noWorksheet.GetRange(\"A3\").SetValue(\"The comment was just deleted from A1.\");\nbuilder.SaveFile(\"xlsx\", \"Delete.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiComment.getclasstype": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A1\").SetValue(\"1\");\nvar oRange = oWorksheet.GetRange(\"A1\");\noRange.AddComment(\"This is just a number.\");\nvar oComment = oRange.GetComment();\nvar sType = oComment.GetClassType();\noWorksheet.GetRange(\"A3\").SetValue(\"Type: \" + sType + \" (number of comment data type)\");\nbuilder.SaveFile(\"xlsx\", \"GetClassType.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiComment.gettext": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A1\").SetValue(\"1\");\nvar oRange = oWorksheet.GetRange(\"A1\");\noRange.AddComment(\"This is just a number.\");\noWorksheet.GetRange(\"A3\").SetValue(\"Comment: \");\noWorksheet.GetRange(\"B3\").SetValue(oRange.GetComment().GetText());\nbuilder.SaveFile(\"xlsx\", \"GetText.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiDocumentContent.addelement": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 200 * 36000, 60 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\noDocContent.RemoveAllElements();\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"We removed all elements from the shape and added a new paragraph inside it.\");\noDocContent.AddElement(oParagraph);\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"AddElement.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiDocumentContent.getclasstype": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 200 * 36000, 60 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar sClassType = oDocContent.GetClassType();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class Type = \" + sClassType);\nbuilder.SaveFile(\"xlsx\", \"GetClassType.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiDocumentContent.getelement": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 200 * 36000, 60 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetJc(\"center\");\noParagraph.AddText(\"This is a paragraph with the text in it aligned by the center. \");\noParagraph.AddText(\"The justification is specified in the paragraph style. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\nbuilder.SaveFile(\"xlsx\", \"GetElement.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiDocumentContent.getelementscount": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 200 * 36000, 60 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"We got the first paragraph inside the shape.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"Number of elements inside the shape: \" + oDocContent.GetElementsCount());\noParagraph.AddLineBreak();\noParagraph.AddText(\"Line breaks are NOT counted into the number of elements.\");\nbuilder.SaveFile(\"xlsx\", \"GetElementsCount.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiDocumentContent.push": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\noDocContent.RemoveAllElements();\nvar oParagraph = Api.CreateParagraph();\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"We removed all elements from the shape and added a new paragraph inside it.\");\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"Push.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiDocumentContent.removeallelements": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is just a sample paragraph.\");\noDocContent.RemoveAllElements();\noParagraph = Api.CreateParagraph();\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"We removed all elements from the shape and added a new paragraph inside it.\");\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"RemoveAllElements.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiDocumentContent.removeelement": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 200 * 36000, 60 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is paragraph #1.\");\nfor (let nParaIncrease = 1; nParaIncrease < 5; ++nParaIncrease) {\n  oParagraph = Api.CreateParagraph();\n  oParagraph.AddText(\"This is paragraph #\" + (nParaIncrease + 1) + \".\");\n  oDocContent.Push(oParagraph);\n}\noDocContent.RemoveElement(2);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"We removed paragraph #3, check that out above.\");\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"RemoveElement.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.getclasstype": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = oWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\noDrawing.SetSize(120 * 36000, 70 * 36000);\noDrawing.SetPosition(0, 2 * 36000, 1, 3 * 36000);\nvar sClassType = oDrawing.GetClassType();\noWorksheet.SetColumnWidth(0, 15);\noWorksheet.SetColumnWidth(1, 10);\noWorksheet.GetRange(\"A1\").SetValue(\"Class Type = \" + sClassType);\nbuilder.SaveFile(\"xlsx\", \"GetClassType.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.setposition": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = oWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\noDrawing.SetSize(120 * 36000, 70 * 36000);\noDrawing.SetPosition(0, 2 * 36000, 2, 3 * 36000);\nbuilder.SaveFile(\"xlsx\", \"SetPosition.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.setsize": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = oWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\noDrawing.SetSize(120 * 36000, 70 * 36000);\noDrawing.SetPosition(0, 2 * 36000, 2, 3 * 36000);\nbuilder.SaveFile(\"xlsx\", \"SetSize.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiFill.getclasstype": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\noWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 1, 3 * 36000);\nvar sClassType = oFill.GetClassType();\noWorksheet.SetColumnWidth(0, 15);\noWorksheet.SetColumnWidth(1, 10);\noWorksheet.GetRange(\"A1\").SetValue(\"Class Type = \" + sClassType);\nbuilder.SaveFile(\"xlsx\", \"GetClassType.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiGradientStop.getclasstype": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\noWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 1, 3 * 36000);\nvar sClassType = oGs1.GetClassType();\noWorksheet.SetColumnWidth(0, 15);\noWorksheet.SetColumnWidth(1, 10);\noWorksheet.GetRange(\"A1\").SetValue(\"Class Type = \" + sClassType);\nbuilder.SaveFile(\"xlsx\", \"GetClassType.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiImage.getclasstype": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oImage = oWorksheet.AddImage(\"https://api.onlyoffice.com/content/img/docbuilder/examples/coordinate_aspects.png\", 60 * 36000, 35 * 36000, 0, 2 * 36000, 2, 3 * 36000);\nvar sClassType = oImage.GetClassType();\noWorksheet.SetColumnWidth(0, 15);\noWorksheet.SetColumnWidth(1, 10);\noWorksheet.GetRange(\"A1\").SetValue(\"Class Type = \");\noWorksheet.GetRange(\"B1\").SetValue(sClassType);\nbuilder.SaveFile(\"xlsx\", \"GetClassType.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiName.delete": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A1\").SetValue(\"1\");\noWorksheet.GetRange(\"B1\").SetValue(\"2\");\nApi.AddDefName(\"numbers\", \"Sheet1!$A$1:$B$1\");\nvar oDefName = Api.GetDefName(\"numbers\");\noDefName.Delete();\noWorksheet.GetRange(\"A3\").SetValue(\"The name 'numbers' of the range A1:B1 was deleted.\");\nbuilder.SaveFile(\"xlsx\", \"Delete.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiName.getname": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A1\").SetValue(\"1\");\noWorksheet.GetRange(\"B1\").SetValue(\"2\");\nApi.AddDefName(\"numbers\", \"Sheet1!$A$1:$B$1\");\nvar oDefName = Api.GetDefName(\"numbers\");\noWorksheet.GetRange(\"A3\").SetValue(\"Name: \" + oDefName.GetName());\nbuilder.SaveFile(\"xlsx\", \"GetName.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiName.getrefersto": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A1\").SetValue(\"1\");\noWorksheet.GetRange(\"B1\").SetValue(\"2\");\noWorksheet.GetRange(\"C1\").SetValue(\"=SUM(A1:B1)\");\nApi.AddDefName(\"summa\", \"Sheet1!$A$1:$B$1\");\nvar oDefName = Api.GetDefName(\"summa\");\noDefName.SetRefersTo(\"=SUM(A1:B1)\");\noWorksheet.GetRange(\"A3\").SetValue(\"The name 'summa' refers to the formula from the cell C1.\");\noWorksheet.GetRange(\"A4\").SetValue(\"Formula: \" + oDefName.GetRefersTo());\nbuilder.SaveFile(\"xlsx\", \"GetRefersTo.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiName.getreferstorange": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A1\").SetValue(\"1\");\noWorksheet.GetRange(\"B1\").SetValue(\"2\");\nApi.AddDefName(\"numbers\", \"Sheet1!$A$1:$B$1\");\nvar oDefName = Api.GetDefName(\"numbers\");\nvar oRange = oDefName.GetRefersToRange();\noRange.SetBold(true);\nbuilder.SaveFile(\"xlsx\", \"GetRefersToRange.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiName.setname": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A1\").SetValue(\"1\");\noWorksheet.GetRange(\"B1\").SetValue(\"2\");\nApi.AddDefName(\"name\", \"Sheet1!$A$1:$B$1\");\nvar oDefName = Api.GetDefName(\"name\");\noDefName.SetName(\"new_name\");\nvar oNewDefName = Api.GetDefName(\"new_name\");\noWorksheet.GetRange(\"A3\").SetValue(\"The new name of the range: \" + oNewDefName.GetName());\nbuilder.SaveFile(\"xlsx\", \"SetName.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiName.setrefersto": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A1\").SetValue(\"1\");\noWorksheet.GetRange(\"B1\").SetValue(\"2\");\noWorksheet.GetRange(\"C1\").SetValue(\"=SUM(A1:B1)\");\nApi.AddDefName(\"summa\", \"Sheet1!$A$1:$B$1\");\nvar oDefName = Api.GetDefName(\"summa\");\noDefName.SetRefersTo(\"=SUM(A1:B1)\");\noWorksheet.GetRange(\"A3\").SetValue(\"The name 'summa' refers to the formula from the cell C1.\");\nbuilder.SaveFile(\"xlsx\", \"SetRefersTo.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.addelement": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text run. Nothing special.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"xlsx\", \"AddElement.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.addlinebreak": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"This is a text inside the shape aligned left.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"This is a text after the line break.\");\nbuilder.SaveFile(\"xlsx\", \"AddLineBreak.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.addtabstop": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is just a sample text. After it three tab stops will be added.\");\noParagraph.AddTabStop();\noParagraph.AddTabStop();\noParagraph.AddTabStop();\noParagraph.AddText(\"This is the text which starts after the tab stops.\");\nbuilder.SaveFile(\"xlsx\", \"AddTabStop.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.addtext": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"This is a text inside the shape aligned left.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"This is a text after the line break.\");\nbuilder.SaveFile(\"xlsx\", \"AddText.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.delete": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\noDocContent.RemoveAllElements();\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is just a sample text.\");\noDocContent.Push(oParagraph);\noParagraph.Delete();\noWorksheet.GetRange(\"A9\").SetValue(\"The paragraph from the shape content was removed.\");\nbuilder.SaveFile(\"xlsx\", \"Delete.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getclasstype": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar sClassType = oParagraph.GetClassType();\noParagraph.AddText(\"Class Type = \" + sClassType);\nbuilder.SaveFile(\"xlsx\", \"GetClassType.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getelement": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.RemoveAllElements();\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is the text for the first text run. Do not forget a space at its end to separate from the second one. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.AddText(\"This is the text for the second run. We will set it bold afterwards. It also needs space at its end. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.AddText(\"This is the text for the third run. It ends the paragraph.\");\noParagraph.AddElement(oRun);\noRun = oParagraph.GetElement(2);\noRun.SetBold(true);\nbuilder.SaveFile(\"xlsx\", \"GetElement.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getelementscount": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.RemoveAllElements();\nvar oRun = Api.CreateRun();\noRun.AddText(\"Number of paragraph elements at this point: \");\noRun.AddTabStop();\noRun.AddText(\"\" + oParagraph.GetElementsCount());\noRun.AddLineBreak();\noParagraph.AddElement(oRun);\noRun.AddText(\"Number of paragraph elements after we added a text run: \");\noRun.AddTabStop();\noRun.AddText(\"\" + oParagraph.GetElementsCount());\nbuilder.SaveFile(\"xlsx\", \"GetElementsCount.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getindfirstline": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is a paragraph with the indent of 1 inch set to the first line. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph.SetIndFirstLine(1440);\nvar nIndFirstLine = oParagraph.GetIndFirstLine();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"First line indent: \" + nIndFirstLine);\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"GetIndFirstLine.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getindleft": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is a paragraph with the indent of 2 inches set to it. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.SetIndLeft(2880);\nvar nIndLeft = oParagraph.GetIndLeft();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Left indent: \" + nIndLeft);\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"GetIndLeft.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getindright": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is a paragraph with the right offset of 2 inches set to it. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.SetJc(\"right\");\noParagraph.SetIndRight(2880);\nvar nIndRight = oParagraph.GetIndRight();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Right indent: \" + nIndRight);\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"GetIndRight.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getjc": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is a paragraph with the text in it aligned by the center. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph.SetJc(\"center\");\nvar sJc = oParagraph.GetJc();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Justification: \" + sJc);\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"GetJc.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getnext": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\noDocContent.RemoveAllElements();\nvar oParagraph1 = Api.CreateParagraph();\noParagraph1.AddText(\"This is the first paragraph.\");\noDocContent.Push(oParagraph1);\nvar oParagraph2 = Api.CreateParagraph();\noParagraph2.AddText(\"This is the second paragraph.\");\noDocContent.Push(oParagraph2);\nvar oNextParagraph = oParagraph1.GetNext();\noNextParagraph.SetBold(true);\nbuilder.SaveFile(\"xlsx\", \"GetNext.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getparapr": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetSpacingAfter(1440);\noParagraph.AddText(\"This is an example of setting a space after a paragraph. \");\noParagraph.AddText(\"The second paragraph will have an offset of one inch from the top. \");\noParagraph.AddText(\"This is due to the fact that the first paragraph has this offset enabled.\");\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is the second paragraph and it is one inch away from the first paragraph.\");\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"GetParaPr.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getprevious": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\noDocContent.RemoveAllElements();\nvar oParagraph1 = Api.CreateParagraph();\noParagraph1.AddText(\"This is the first paragraph.\");\noDocContent.Push(oParagraph1);\nvar oParagraph2 = Api.CreateParagraph();\noParagraph2.AddText(\"This is the second paragraph.\");\noDocContent.Push(oParagraph2);\nvar oPreviousParagraph = oParagraph2.GetPrevious();\noPreviousParagraph.SetBold(true);\nbuilder.SaveFile(\"xlsx\", \"GetPrevious.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getspacingafter": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph1 = oDocContent.GetElement(0);\noParagraph1.AddText(\"This is an example of setting a space after a paragraph. \");\noParagraph1.AddText(\"The second paragraph will have an offset of one inch from the top. \");\noParagraph1.AddText(\"This is due to the fact that the first paragraph has this offset enabled.\");\noParagraph1.SetSpacingAfter(1440);\nvar oParagraph2 = Api.CreateParagraph();\noParagraph2.AddText(\"This is the second paragraph and it is one inch away from the first paragraph.\");\noParagraph2.AddLineBreak();\nvar nSpacingAfter = oParagraph1.GetSpacingAfter();\noParagraph2.AddText(\"Spacing after: \" + nSpacingAfter);\noDocContent.Push(oParagraph2);\nbuilder.SaveFile(\"xlsx\", \"GetSpacingAfter.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getspacingbefore": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is an example of setting a space before a paragraph.\");\noParagraph.AddText(\"The second paragraph will have an offset of one inch from the top. \");\noParagraph.AddText(\"This is due to the fact that the second paragraph has this offset enabled.\");\nvar oParagraph2 = Api.CreateParagraph();\noParagraph2.AddText(\"This is the second paragraph and it is one inch away from the first paragraph.\");\noParagraph2.SetSpacingBefore(1440);\noDocContent.Push(oParagraph2);\nvar nSpacingBefore = oParagraph2.GetSpacingBefore();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Spacing before: \" + nSpacingBefore);\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"GetSpacingBefore.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getspacinglinerule": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 80 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetSpacingLine(3 * 240, \"auto\");\noParagraph.AddText(\"Paragraph 1. Spacing: 3 times of a common paragraph line spacing.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddLineBreak();\nvar sSpacingLineRule = oParagraph.GetSpacingLineRule();\noParagraph.AddText(\"Spacing line rule: \" + sSpacingLineRule);\nbuilder.SaveFile(\"xlsx\", \"GetSpacingLineRule.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getspacinglinevalue": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 80 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetSpacingLine(3 * 240, \"auto\");\noParagraph.AddText(\"Paragraph 1. Spacing: 3 times of a common paragraph line spacing.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddLineBreak();\nvar nSpacingLineValue = oParagraph.GetSpacingLineValue();\noParagraph.AddText(\"Spacing line value: \" + nSpacingLineValue);\nbuilder.SaveFile(\"xlsx\", \"GetSpacingLineValue.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.removeallelements": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is the first text run in the current paragraph.\");\noParagraph.AddElement(oRun);\noParagraph.RemoveAllElements();\noRun = Api.CreateRun();\noRun.AddText(\"We removed all the paragraph elements and added a new text run inside it.\");\noParagraph.AddElement(oRun);\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"RemoveAllElements.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.removeelement": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.RemoveAllElements();\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is the first paragraph element. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.AddText(\"This is the second paragraph element. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.AddText(\"This is the third paragraph element (it will be removed from the paragraph and we will not see it). \");\noParagraph.AddElement(oRun);\noParagraph.AddLineBreak();\noRun = Api.CreateRun();\noRun.AddText(\"This is the fourth paragraph element - it became the third, because we removed the previous run from the paragraph. \");\noParagraph.AddElement(oRun);\noParagraph.AddLineBreak();\noRun = Api.CreateRun();\noRun.AddText(\"Please note that line breaks are not counted into paragraph elements!\");\noParagraph.AddElement(oRun);\noParagraph.RemoveElement(3);\nbuilder.SaveFile(\"xlsx\", \"RemoveElement.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setbullet": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oBullet = Api.CreateBullet(\"-\");\noParagraph.SetBullet(oBullet);\noParagraph.AddText(\" This is an example of the bulleted paragraph.\");\nbuilder.SaveFile(\"xlsx\", \"SetBullet.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setindfirstline": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is a paragraph with the indent of 1 inch set to the first line. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph.SetIndFirstLine(1440);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a paragraph without any indent set to the first line. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"SetIndFirstLine.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setindleft": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is a paragraph with the indent of 2 inches set to it. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.SetIndLeft(2880);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a paragraph without any indent set to it. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"SetIndLeft.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setindright": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is a paragraph with the right offset of 2 inches set to it. \");\noParagraph.AddText(\"We also aligned the text in it by the right side. \");\noParagraph.AddText(\"This sentence is used to add lines for demonstrative purposes.\");\noParagraph.SetJc(\"right\");\noParagraph.SetIndRight(2880);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a paragraph without any offset set to it. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"SetIndRight.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setjc": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is a paragraph with the text in it aligned by the center. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph.SetJc(\"center\");\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a paragraph with the text in it aligned by the right side. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph.SetJc(\"right\");\noDocContent.Push(oParagraph);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a paragraph with the text in it aligned by the left side. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph.SetJc(\"left\");\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"SetJc.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setspacingafter": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is an example of setting a space after a paragraph. \");\noParagraph.AddText(\"The second paragraph will have an offset of one inch from the top. \");\noParagraph.AddText(\"This is due to the fact that the first paragraph has this offset enabled.\");\noParagraph.SetSpacingAfter(1440);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is the second paragraph and it is one inch away from the first paragraph.\");\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"SetSpacingAfter.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setspacingbefore": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is an example of setting a space before a paragraph. \");\noParagraph.AddText(\"The second paragraph will have an offset of one inch from the top. \");\noParagraph.AddText(\"This is due to the fact that the second paragraph has this offset enabled.\");\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is the second paragraph and it is one inch away from the first paragraph.\");\noParagraph.SetSpacingBefore(1440);\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"SetSpacingBefore.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setspacingline": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetSpacingLine(2 * 240, \"auto\");\noParagraph.AddText(\"Paragraph 1. Spacing: 2 times of a common paragraph line spacing.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph = Api.CreateParagraph();\noParagraph.SetSpacingLine(200, \"exact\");\noParagraph.AddText(\"Paragraph 2. Spacing: exact 10 points.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"SetSpacingLine.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.settabs": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 150 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetTabs([1440, 2880, 4320], [\"left\", \"center\", \"right\"]);\noParagraph.AddTabStop();\noParagraph.AddText(\"Custom tab - 1 inch left\");\noParagraph.AddLineBreak();\noParagraph.AddTabStop();\noParagraph.AddTabStop();\noParagraph.AddText(\"Custom tab - 2 inches center\");\noParagraph.AddLineBreak();\noParagraph.AddTabStop();\noParagraph.AddTabStop();\noParagraph.AddTabStop();\noParagraph.AddText(\"Custom tab - 3 inches right\");\nbuilder.SaveFile(\"xlsx\", \"SetTabs.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.getclasstype": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\nvar sClassType = oParaPr.GetClassType();\noParaPr.SetIndFirstLine(1440);\noParagraph.AddText(\"This is the first paragraph with the indent of 1 inch set to the first line. \");\noParagraph.AddText(\"This indent is set by the paragraph style. No paragraph inline style is applied. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class Type = \" + sClassType);\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"GetClassType.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.getindfirstline": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetIndFirstLine(1440);\noParagraph.AddText(\"This is the first paragraph with the indent of 1 inch set to the first line. \");\noParagraph.AddText(\"This indent is set by the paragraph style. No paragraph inline style is applied. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\nvar nIndFirstLine = oParaPr.GetIndFirstLine();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"First line indent: \" + nIndFirstLine);\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"GetIndFirstLine.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.getindleft": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetIndLeft(2880);\noParagraph.AddText(\"This is the first paragraph with the indent of 2 inches set to it. \");\noParagraph.AddText(\"This indent is set by the paragraph style. No paragraph inline style is applied. \");\nvar nIndLeft = oParaPr.GetIndLeft();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Left indent: \" + nIndLeft);\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"GetIndLeft.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.getindright": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetIndRight(2880);\noParaPr.SetJc(\"right\");\noParagraph.AddText(\"This is the first paragraph with the right offset of 2 inches set to it. \");\noParagraph.AddText(\"This indent is set by the paragraph style. No paragraph inline style is applied. \");\nvar nIndRight = oParaPr.GetIndRight();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Right indent: \" + nIndRight);\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"GetIndRight.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.getjc": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetJc(\"center\");\noParagraph.AddText(\"This is a paragraph with the text in it aligned by the center. \");\noParagraph.AddText(\"The justification is specified in the paragraph style. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\nvar sJc = oParaPr.GetJc();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Justification: \" + sJc);\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"GetJc.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.getspacingafter": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetSpacingAfter(1440);\noParagraph.AddText(\"This is an example of setting a space after a paragraph. \");\noParagraph.AddText(\"The second paragraph will have an offset of one inch from the top. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\nvar nSpacingAfter = oParaPr.GetSpacingAfter();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Spacing after : \" + nSpacingAfter);\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"GetSpacingAfter.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.getspacingbefore": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is an example of setting a space before a paragraph.\");\noParagraph.AddText(\"The second paragraph will have an offset of one inch from the top. \");\noParagraph.AddText(\"This is due to the fact that the second paragraph has this offset enabled.\");\nvar oParagraph2 = Api.CreateParagraph();\noParagraph2.AddText(\"This is the second paragraph and it is one inch away from the first paragraph.\");\noDocContent.Push(oParagraph2);\nvar oParaPr = oParagraph2.GetParaPr();\noParaPr.SetSpacingBefore(1440);\nvar nSpacingBefore = oParaPr.GetSpacingBefore();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Spacing before: \" + nSpacingBefore);\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"GetSpacingBefore.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.getspacinglinerule": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetSpacingLine(3 * 240, \"auto\");\noParagraph.AddText(\"Paragraph 1. Spacing: 3 times of a common paragraph line spacing.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\nvar sSpacingLineRule = oParaPr.GetSpacingLineRule();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Spacing line rule : \" + sSpacingLineRule);\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"GetSpacingLineRule.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.getspacinglinevalue": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetSpacingLine(3 * 240, \"auto\");\noParagraph.AddText(\"Paragraph 1. Spacing: 3 times of a common paragraph line spacing.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\nvar nSpacingLineValue = oParaPr.GetSpacingLineValue();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Spacing line value : \" + nSpacingLineValue);\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"GetSpacingLineValue.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.setbullet": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\nvar oBullet = Api.CreateBullet(\"-\");\noParaPr.SetBullet(oBullet);\noParagraph.AddText(\" This is an example of the bulleted paragraph.\");\nbuilder.SaveFile(\"xlsx\", \"SetBullet.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.setindfirstline": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetIndFirstLine(1440);\noParagraph.AddText(\"This is the first paragraph with the indent of 1 inch set to the first line. \");\noParagraph.AddText(\"This indent is set by the paragraph style. No paragraph inline style is applied. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\nbuilder.SaveFile(\"xlsx\", \"SetIndFirstLine.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.setindleft": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetIndLeft(2880);\noParagraph.AddText(\"This is the first paragraph with the indent of 2 inches set to it. \");\noParagraph.AddText(\"This indent is set by the paragraph style. No paragraph inline style is applied. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\nbuilder.SaveFile(\"xlsx\", \"SetIndLeft.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.setindright": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetIndRight(2880);\noParagraph.AddText(\"This is the first paragraph with the right offset of 2 inches set to it. \");\noParagraph.AddText(\"This offset is set by the paragraph style. No paragraph inline style is applied. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\nbuilder.SaveFile(\"xlsx\", \"SetIndRight.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.setjc": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetJc(\"center\");\noParagraph.AddText(\"This is a paragraph with the text in it aligned by the center. \");\noParagraph.AddText(\"The justification is specified in the paragraph style. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\nbuilder.SaveFile(\"xlsx\", \"SetJc.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.setspacingafter": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetSpacingAfter(1440);\noParagraph.AddText(\"This is an example of setting a space after a paragraph. \");\noParagraph.AddText(\"The second paragraph will have an offset of one inch from the top. \");\noParagraph.AddText(\"This is due to the fact that the first paragraph has this offset enabled.\");\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is the second paragraph and it is one inch away from the first paragraph.\");\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"SetSpacingAfter.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.setspacingbefore": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is an example of setting a space before a paragraph. \");\noParagraph.AddText(\"The second paragraph will have an offset of one inch from the top. \");\noParagraph.AddText(\"This is due to the fact that the second paragraph has this offset enabled.\");\noParagraph = Api.CreateParagraph();\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetSpacingBefore(1440);\noParagraph.AddText(\"This is the second paragraph and it is one inch away from the first paragraph.\");\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"SetSpacingBefore.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.setspacingline": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetSpacingLine(3 * 240, \"auto\");\noParagraph.AddText(\"Paragraph 1. Spacing: 3 times of a common paragraph line spacing.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\nbuilder.SaveFile(\"xlsx\", \"SetSpacingLine.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.settabs": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 150 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetTabs([1440, 2880, 4320], [\"left\", \"center\", \"right\"]);\noParagraph.AddTabStop();\noParagraph.AddText(\"Custom tab - 1 inch left\");\noParagraph.AddLineBreak();\noParagraph.AddTabStop();\noParagraph.AddTabStop();\noParagraph.AddText(\"Custom tab - 2 inches center\");\noParagraph.AddLineBreak();\noParagraph.AddTabStop();\noParagraph.AddTabStop();\noParagraph.AddTabStop();\noParagraph.AddText(\"Custom tab - 3 inches right\");\nbuilder.SaveFile(\"xlsx\", \"SetTabs.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiPresetColor.getclasstype": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oPresetColor = Api.CreatePresetColor(\"lightYellow\");\nvar oGs1 = Api.CreateGradientStop(oPresetColor, 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\noWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 1, 3 * 36000);\nvar sClassType = oPresetColor.GetClassType();\noWorksheet.SetColumnWidth(0, 15);\noWorksheet.SetColumnWidth(1, 10);\noWorksheet.GetRange(\"A1\").SetValue(\"Class Type = \");\noWorksheet.GetRange(\"B1\").SetValue(sClassType);\nbuilder.SaveFile(\"xlsx\", \"GetClassType.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.addcomment": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oRange = oWorksheet.GetRange(\"A1\");\noRange.SetValue(\"1\");\noRange.AddComment(\"This is just a number.\");\noWorksheet.GetRange(\"A3\").SetValue(\"The comment was added to the cell A1.\");\noWorksheet.GetRange(\"A4\").SetValue(\"Comment: \" + oRange.GetComment().GetText());\nbuilder.SaveFile(\"xlsx\", \"AddComment.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.autofit": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oRange = oWorksheet.GetRange(\"A1\");\noRange.SetValue(\"This is an example of the column width autofit.\");\noRange.AutoFit(false, true);\nbuilder.SaveFile(\"xlsx\", \"AutoFit.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.clear": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oRange = oWorksheet.GetRange(\"A1:B1\");\noRange.SetValue(\"1\");\noRange.Clear();\noWorksheet.GetRange(\"A2\").SetValue(\"The range A1:B1 was just cleared.\");\nbuilder.SaveFile(\"xlsx\", \"Clear.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.copy": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oRange = oWorksheet.GetRange(\"A1\");\noRange.SetValue(\"This is a sample text which is copied to the range A3.\");\noRange.Copy(oWorksheet.GetRange(\"A3\"));\nbuilder.SaveFile(\"xlsx\", \"Copy.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.delete": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"B4\").SetValue(\"1\");\noWorksheet.GetRange(\"C4\").SetValue(\"2\");\noWorksheet.GetRange(\"D4\").SetValue(\"3\");\noWorksheet.GetRange(\"C5\").SetValue(\"5\");\nvar oRange = oWorksheet.GetRange(\"C4\");\noRange.Delete(\"up\");\nbuilder.SaveFile(\"xlsx\", \"Delete.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.end": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oRange = oWorksheet.GetRange(\"C4:D5\");\noRange.End(\"xlToLeft\").SetFillColor(Api.CreateColorFromRGB(255, 224, 204));\nbuilder.SaveFile(\"xlsx\", \"End.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.foreach": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A1\").SetValue(\"1\");\noWorksheet.GetRange(\"B1\").SetValue(\"2\");\noWorksheet.GetRange(\"C1\").SetValue(\"3\");\nvar oRange = oWorksheet.GetRange(\"A1:C1\");\noRange.ForEach(function (range) {\n    var sValue = range.GetValue();\n    if (sValue != \"1\") {\n        range.SetBold(true);\n    }\n});\nbuilder.SaveFile(\"xlsx\", \"ForEach.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.getaddress": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A1\").SetValue(\"1\");\noWorksheet.GetRange(\"B1\").SetValue(\"2\");\nvar sAddress = oWorksheet.GetRange(\"A1\").GetAddress(true, true, \"xlA1\", false);\noWorksheet.GetRange(\"A3\").SetValue(\"Address: \");\noWorksheet.GetRange(\"B3\").SetValue(sAddress);\nbuilder.SaveFile(\"xlsx\", \"GetAddress.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.getareas": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oRange = oWorksheet.GetRange(\"B1:D1\");\noRange.SetValue(\"1\");\noRange.Select();\nvar oAreas = oRange.GetAreas();\nvar nCount = oAreas.GetCount();\noRange = oWorksheet.GetRange(\"A5\");\noRange.SetValue(\"The number of ranges in the areas: \");\noRange.AutoFit(false, true);\noWorksheet.GetRange(\"B5\").SetValue(nCount);\nbuilder.SaveFile(\"xlsx\", \"GetAreas.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.getcells": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oRange = oWorksheet.GetRange(\"A1:C3\");\noRange.GetCells(2, 1).SetFillColor(Api.CreateColorFromRGB(255, 224, 204));\nbuilder.SaveFile(\"xlsx\", \"GetCells.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.getclasstype": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oRange = oWorksheet.GetRange(\"A1\");\noRange.SetValue(\"This is just a sample text in the cell A1.\");\nvar sClassType = oRange.GetClassType();\noWorksheet.GetRange('A3').SetValue(\"Class type: \" + sClassType);\nbuilder.SaveFile(\"xlsx\", \"GetClassType.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.getcol": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oRange = oWorksheet.GetRange(\"D9\").GetCol();\noWorksheet.GetRange(\"A2\").SetValue(oRange.toString());\nbuilder.SaveFile(\"xlsx\", \"GetCol.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.getcols": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oRange = oWorksheet.GetRange(\"A1:C3\");\noRange.GetCols(2).SetFillColor(Api.CreateColorFromRGB(255, 224, 204));\nbuilder.SaveFile(\"xlsx\", \"GetCols.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.getcolumnwidth": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar sWidth = oWorksheet.GetRange(\"A1\").GetColumnWidth();\noWorksheet.GetRange(\"A1\").SetValue(\"Width: \");\noWorksheet.GetRange(\"B1\").SetValue(sWidth);\nbuilder.SaveFile(\"xlsx\", \"GetColumnWidth.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.getcomment": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oRange = oWorksheet.GetRange(\"A1\");\noRange.SetValue(\"1\");\noRange.AddComment(\"This is just a number.\");\noWorksheet.GetRange(\"A3\").SetValue(\"Comment: \" + oRange.GetComment().GetText());\nbuilder.SaveFile(\"xlsx\", \"GetComment.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.getcount": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A1\").SetValue(\"1\");\noWorksheet.GetRange(\"B1\").SetValue(\"2\");\noWorksheet.GetRange(\"C1\").SetValue(\"3\");\nvar nCount = oWorksheet.GetRange(\"A1:C1\").GetCount();\noWorksheet.GetRange(\"A4\").SetValue(\"Count: \");\noWorksheet.GetRange(\"B4\").SetValue(nCount);\nbuilder.SaveFile(\"xlsx\", \"GetCount.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.getdefname": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A1\").SetValue(\"1\");\noWorksheet.GetRange(\"B1\").SetValue(\"2\");\nApi.AddDefName(\"numbers\", \"Sheet1!$A$1:$B$1\");\nvar oRange = oWorksheet.GetRange(\"A1:B1\");\nvar oDefName = oRange.GetDefName(\"numbers\");\noWorksheet.GetRange(\"A3\").SetValue(\"DefName: \" + oDefName.GetName());\nbuilder.SaveFile(\"xlsx\", \"GetDefName.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.getfillcolor": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.SetColumnWidth(0, 60);\nvar oRange = oWorksheet.GetRange(\"A1\");\noRange.SetFillColor(Api.CreateColorFromRGB(255, 224, 204));\noRange.SetValue(\"This is the cell with a color set to its background.\");\nvar oFillColor = oRange.GetFillColor();\noWorksheet.GetRange(\"A3\").SetValue(\"This is another cell with the same color set to its background\");\noWorksheet.GetRange(\"A3\").SetFillColor(oFillColor);\nbuilder.SaveFile(\"xlsx\", \"GetFillColor.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.getformula": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"B1\").SetValue(1);\noWorksheet.GetRange(\"C1\").SetValue(2);\nvar oRange = oWorksheet.GetRange(\"A1\");\noRange.SetValue(\"=SUM(B1:C1)\");\nvar sFormula = oRange.GetFormula();\noWorksheet.GetRange(\"A3\").SetValue(\"Formula from cell A1: \" + sFormula);\nbuilder.SaveFile(\"xlsx\", \"GetFormula.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.gethidden": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oRange = oWorksheet.GetRows(\"1:3\");\noRange.SetHidden(true);\noWorksheet.GetRange(\"A1\").SetValue(\"1\");\noWorksheet.GetRange(\"B1\").SetValue(\"2\");\noWorksheet.GetRange(\"C1\").SetValue(\"3\");\nvar bHidden = oRange.GetHidden();\noWorksheet.GetRange(\"A4\").SetValue(\"The values from A1:C1 are hidden: \" + bHidden);\nbuilder.SaveFile(\"xlsx\", \"GetHidden.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.getorientation": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A1\").SetValue(\"1\");\noWorksheet.GetRange(\"B1\").SetValue(\"2\");\nvar oRange = oWorksheet.GetRange(\"A1:B1\");\noRange.SetOrientation(\"xlUpward\");\nvar sOrientation = oRange.GetOrientation();\noWorksheet.GetRange(\"A3\").SetValue(\"Orientation: \" + sOrientation);\nbuilder.SaveFile(\"xlsx\", \"GetOrientation.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.getrow": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oRange = oWorksheet.GetRange(\"A9\").GetRow();\noWorksheet.GetRange(\"A2\").SetValue(oRange.toString());\nbuilder.SaveFile(\"xlsx\", \"GetRow.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.getrowheight": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar nHeight = oWorksheet.GetRange(\"A1\").GetRowHeight();\noWorksheet.GetRange(\"A1\").SetValue(\"Height: \");\noWorksheet.GetRange(\"B1\").SetValue(nHeight);\nbuilder.SaveFile(\"xlsx\", \"GetRowHeight.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.getrows": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oRange = oWorksheet.GetRange(\"1:3\");\nfor (let i=1; i <= 3; i++) {\n    var oRows = oRange.GetRows(i);    \n    oRows.SetValue(i);\n}\nbuilder.SaveFile(\"xlsx\", \"GetRows.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.gettext": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A1\").SetValue(\"text1\");\noWorksheet.GetRange(\"B1\").SetValue(\"text2\");\noWorksheet.GetRange(\"C1\").SetValue(\"text3\");\nvar oRange = oWorksheet.GetRange(\"A1:C1\");\nvar sText = oRange.GetText();\noWorksheet.GetRange(\"A3\").SetValue(\"Text from the cell A1: \" + sText);\nbuilder.SaveFile(\"xlsx\", \"GetText.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.getvalue": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A1\").SetValue(\"1\");\nvar sValue = oWorksheet.GetRange(\"A1\").GetValue();\noWorksheet.GetRange(\"A3\").SetValue(\"Value of the cell A1: \");\noWorksheet.GetRange(\"B3\").SetValue(sValue);\nbuilder.SaveFile(\"xlsx\", \"GetValue.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.getvalue2": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFormat = Api.Format(\"123456\", [\"$#,##0\"]);\nvar oRange = oWorksheet.GetRange(\"A1\");\noRange.SetValue(oFormat);\nvar sValue2 = oRange.GetValue2();\noWorksheet.GetRange(\"A3\").SetValue(\"Value of the cell A1 without format: \" + sValue2);\nbuilder.SaveFile(\"xlsx\", \"GetValue2.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.getworksheet": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oRange = oWorksheet.GetRange(\"A1:C1\");\noRange.SetValue(\"1\");\nvar oSheet = oRange.GetWorksheet();\noWorksheet.GetRange(\"A3\").SetValue(\"Worksheet name: \" + oSheet.GetName());\nbuilder.SaveFile(\"xlsx\", \"GetWorksheet.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.getwraptext": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oRange = oWorksheet.GetRange(\"A1\");\noRange.SetValue(\"This is the text wrapped to fit the cell size.\");\noRange.SetWrap(true);\noWorksheet.GetRange(\"A3\").SetValue(\"The text in the cell A1 is wrapped: \" + oRange.GetWrapText());\nbuilder.SaveFile(\"xlsx\", \"GetWrapText.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.insert": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"B4\").SetValue(\"1\");\noWorksheet.GetRange(\"C4\").SetValue(\"2\");\noWorksheet.GetRange(\"D4\").SetValue(\"3\");\noWorksheet.GetRange(\"C5\").SetValue(\"5\");\nvar oRange = oWorksheet.GetRange(\"C4\");\noRange.Insert(\"down\");\nbuilder.SaveFile(\"xlsx\", \"Insert.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.merge": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A3:E8\").Merge(true);\noWorksheet.GetRange(\"A9:E14\").Merge(false);\nbuilder.SaveFile(\"xlsx\", \"Merge.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.paste": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"B4\").SetValue(\"1\");\noWorksheet.GetRange(\"C4\").SetValue(\"2\");\noWorksheet.GetRange(\"D4\").SetValue(\"3\");\nvar oRangeFrom = oWorksheet.GetRange(\"B4:D4\");\nvar oRange = oWorksheet.GetRange(\"A1:C1\");\noRange.Paste(oRangeFrom);\nbuilder.SaveFile(\"xlsx\", \"Paste.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.select": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oRange = oWorksheet.GetRange(\"A1:C1\");\noRange.SetValue(\"1\");\noRange.Select();\nApi.GetSelection().SetValue(\"selected\");\nbuilder.SaveFile(\"xlsx\", \"Select.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.setalignhorizontal": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A2\").SetValue(\"2\");\nvar oRange = oWorksheet.GetRange(\"A1:D5\");\noRange.SetAlignHorizontal(\"center\");\nbuilder.SaveFile(\"xlsx\", \"SetAlignHorizontal.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.setalignvertical": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oRange = oWorksheet.GetRange(\"A1:D5\");\noWorksheet.GetRange(\"A2\").SetValue(\"This is just a sample text distributed in the A2 cell.\");\noRange.SetAlignVertical(\"distributed\");\nbuilder.SaveFile(\"xlsx\", \"SetAlignVertical.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.setbold": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A2\").SetValue(\"Bold text\");\noWorksheet.GetRange(\"A2\").SetBold(true);\noWorksheet.GetRange(\"A3\").SetValue(\"Normal text\");\nbuilder.SaveFile(\"xlsx\", \"SetBold.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.setborders": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.SetColumnWidth(0, 50);\noWorksheet.GetRange(\"A2\").SetBorders(\"Bottom\", \"Thick\", Api.CreateColorFromRGB(49, 133, 154));\noWorksheet.GetRange(\"A2\").SetValue(\"This is a cell with a bottom border\");\nbuilder.SaveFile(\"xlsx\", \"SetBorders.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.setcolumnwidth": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A1\").SetColumnWidth(20);\nbuilder.SaveFile(\"xlsx\", \"SetColumnWidth.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.setfillcolor": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.SetColumnWidth(0, 50);\noWorksheet.GetRange(\"A2\").SetFillColor(Api.CreateColorFromRGB(255, 224, 204));\noWorksheet.GetRange(\"A2\").SetValue(\"This is the cell with a color set to its background\");\noWorksheet.GetRange(\"A4\").SetValue(\"This is the cell with a default background color\");\nbuilder.SaveFile(\"xlsx\", \"SetFillColor.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.setfontcolor": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A2\").SetFontColor(Api.CreateColorFromRGB(49, 133, 154));\noWorksheet.GetRange(\"A2\").SetValue(\"This is the text with a color set to it\");\noWorksheet.GetRange(\"A4\").SetValue(\"This is the text with a default color\");\nbuilder.SaveFile(\"xlsx\", \"SetFontColor.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.setfontname": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A2\").SetValue(\"2\");\nvar oRange = oWorksheet.GetRange(\"A1:D5\");\noRange.SetFontName(\"Arial\");\nbuilder.SaveFile(\"xlsx\", \"SetFontName.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.setfontsize": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A2\").SetValue(\"2\");\nvar oRange = oWorksheet.GetRange(\"A1:D5\");\noRange.SetFontSize(20);\nbuilder.SaveFile(\"xlsx\", \"SetFontSize.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.sethidden": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oRange = oWorksheet.GetRows(\"1:3\");\noRange.SetHidden(true);\noWorksheet.GetRange(\"A1\").SetValue(\"1\");\noWorksheet.GetRange(\"B1\").SetValue(\"2\");\noWorksheet.GetRange(\"C1\").SetValue(\"3\");\nvar bHidden = oRange.GetHidden();\noWorksheet.GetRange(\"A4\").SetValue(\"The values from A1:C1 are hidden: \" + bHidden);\nbuilder.SaveFile(\"xlsx\", \"SetHidden.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.setitalic": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A2\").SetValue(\"Italicized text\");\noWorksheet.GetRange(\"A2\").SetItalic(true);\noWorksheet.GetRange(\"A3\").SetValue(\"Normal text\");\nbuilder.SaveFile(\"xlsx\", \"SetItalic.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.setnumberformat": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.SetColumnWidth(0, 30);\noWorksheet.SetColumnWidth(1, 30);\noWorksheet.GetRange(\"A2\").SetNumberFormat(\"General\");\noWorksheet.GetRange(\"A2\").SetValue(\"123456\");\noWorksheet.GetRange(\"B2\").SetValue(\"General\");\noWorksheet.GetRange(\"A3\").SetNumberFormat(\"0.00\");\noWorksheet.GetRange(\"A3\").SetValue(\"123456\");\noWorksheet.GetRange(\"B3\").SetValue(\"Number\");\noWorksheet.GetRange(\"A4\").SetNumberFormat(\"$#,##0.00\");\noWorksheet.GetRange(\"A4\").SetValue(\"123456\");\noWorksheet.GetRange(\"B4\").SetValue(\"Currency\");\noWorksheet.GetRange(\"A5\").SetNumberFormat(\"_($* #,##0.00_)\");\noWorksheet.GetRange(\"A5\").SetValue(\"123456\");\noWorksheet.GetRange(\"B5\").SetValue(\"Accounting\");\noWorksheet.GetRange(\"A6\").SetNumberFormat(\"m/d/yyyy\");\noWorksheet.GetRange(\"A6\").SetValue(\"123456\");\noWorksheet.GetRange(\"B6\").SetValue(\"DateShort\");\noWorksheet.GetRange(\"A7\").SetNumberFormat(\"[$-F800]dddd, mmmm dd, yyyy\");\noWorksheet.GetRange(\"A7\").SetValue(\"123456\");\noWorksheet.GetRange(\"B7\").SetValue(\"DateLong\");\noWorksheet.GetRange(\"A8\").SetNumberFormat(\"[$-F400]h:mm:ss AM/PM\");\noWorksheet.GetRange(\"A8\").SetValue(\"123456\");\noWorksheet.GetRange(\"B8\").SetValue(\"Time\");\noWorksheet.GetRange(\"A9\").SetNumberFormat(\"0.00%\");\noWorksheet.GetRange(\"A9\").SetValue(\"123456\");\noWorksheet.GetRange(\"B9\").SetValue(\"Percentage\");\noWorksheet.GetRange(\"A10\").SetNumberFormat(\"0%\");\noWorksheet.GetRange(\"A10\").SetValue(\"123456\");\noWorksheet.GetRange(\"B10\").SetValue(\"Percent\");\noWorksheet.GetRange(\"A11\").SetNumberFormat(\"# ?/?\");\noWorksheet.GetRange(\"A11\").SetValue(\"123456\");\noWorksheet.GetRange(\"B11\").SetValue(\"Fraction\");\noWorksheet.GetRange(\"A12\").SetNumberFormat(\"0.00E+00\");\noWorksheet.GetRange(\"A12\").SetValue(\"123456\");\noWorksheet.GetRange(\"B12\").SetValue(\"Scientific\");\noWorksheet.GetRange(\"A13\").SetNumberFormat(\"@\");\noWorksheet.GetRange(\"A13\").SetValue(\"123456\");\noWorksheet.GetRange(\"B13\").SetValue(\"Text\");\nbuilder.SaveFile(\"xlsx\", \"SetNumberFormat.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.setoffset": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"B3\").SetValue(\"Old Range\");\nvar oRange = oWorksheet.GetRange(\"B3\");\noRange.SetOffset(2, 2);\noRange.SetValue(\"New Range\");\nbuilder.SaveFile(\"xlsx\", \"SetOffset.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.setorientation": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A1\").SetValue(\"1\");\noWorksheet.GetRange(\"B1\").SetValue(\"2\");\nvar oRange = oWorksheet.GetRange(\"A1:B1\");\noRange.SetOrientation(\"xlUpward\");\nbuilder.SaveFile(\"xlsx\", \"SetOrientation.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.setrowheight": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A1\").SetRowHeight(32);\nbuilder.SaveFile(\"xlsx\", \"SetRowHeight.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.setstrikeout": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A2\").SetValue(\"Struckout text\");\noWorksheet.GetRange(\"A2\").SetStrikeout(true);\noWorksheet.GetRange(\"A3\").SetValue(\"Normal text\");\nbuilder.SaveFile(\"xlsx\", \"SetStrikeout.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.setunderline": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A2\").SetValue(\"The text underlined with a single line\");\noWorksheet.GetRange(\"A2\").SetUnderline(\"single\");\noWorksheet.GetRange(\"A4\").SetValue(\"Normal text\");\nbuilder.SaveFile(\"xlsx\", \"SetUnderline.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.setvalue": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"B1\").SetValue(\"2\");\noWorksheet.GetRange(\"B2\").SetValue(\"2\");\noWorksheet.GetRange(\"A3\").SetValue(\"2x2=\");\noWorksheet.GetRange(\"B3\").SetValue(\"=B1*B2\");\nbuilder.SaveFile(\"xlsx\", \"SetValue.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.setwrap": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oRange = oWorksheet.GetRange(\"A1\");\noRange.SetValue(\"This is the text wrapped to fit the cell size.\");\noRange.SetWrap(true);\noWorksheet.GetRange(\"A3\").SetValue(\"The text in the cell A1 is wrapped: \" + oRange.GetWrapText());\nbuilder.SaveFile(\"xlsx\", \"SetWrap.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRange.unmerge": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A3:E8\").Merge(true);\noWorksheet.GetRange(\"A5:E5\").UnMerge();\nbuilder.SaveFile(\"xlsx\", \"UnMerge.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRGBColor.getclasstype": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oRGBColor = Api.CreateRGBColor(255, 224, 204);\nvar oGs1 = Api.CreateGradientStop(oRGBColor, 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\noWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 1, 3 * 36000);\nvar sClassType = oRGBColor.GetClassType();\noWorksheet.SetColumnWidth(0, 15);\noWorksheet.SetColumnWidth(1, 10);\noWorksheet.GetRange(\"A1\").SetValue(\"Class Type = \");\noWorksheet.GetRange(\"B1\").SetValue(sClassType);\nbuilder.SaveFile(\"xlsx\", \"GetClassType.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRun.addlinebreak": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is the text for the first line. Nothing special.\");\noRun.AddLineBreak();\noRun.AddText(\"This is the text which starts from the beginning of the second line. \");\noRun.AddText(\"It is written in two text runs, you need a space at the end of the first run sentence to separate them.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"xlsx\", \"AddLineBreak.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRun.addtabstop": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.SetFontSize(30);\noRun.AddText(\"This is just a sample text. After it three tab stops will be added.\");\noRun.AddTabStop();\noRun.AddTabStop();\noRun.AddTabStop();\noRun.AddText(\"This is the text which starts after the tab stops.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"xlsx\", \"AddTabStop.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRun.addtext": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.SetFontSize(30);\noRun.AddText(\"This is just a sample text. Nothing special.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"xlsx\", \"AddText.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRun.clearcontent": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.SetFontSize(30);\noRun.AddText(\"This is just a sample text. \");\noRun.AddText(\"But you will not see it in the resulting document, as it will be cleared.\");\noParagraph.AddElement(oRun);\noRun.ClearContent();\noParagraph = Api.CreateParagraph();\noRun = Api.CreateRun();\noRun.AddText(\"The text in the previous paragraph cannot be seen, as it has been cleared.\");\noParagraph.AddElement(oRun);\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"ClearContent.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRun.copy": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text that was copied. \");\noParagraph.AddElement(oRun);\nvar oCopyRun = oRun.Copy();\noParagraph.AddElement(oCopyRun);\nbuilder.SaveFile(\"xlsx\", \"Copy.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRun.delete": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text.\");\noParagraph.AddElement(oRun);\noRun.Delete();\noWorksheet.GetRange(\"A9\").SetValue(\"The run from the shape content was removed.\");\nbuilder.SaveFile(\"xlsx\", \"Delete.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRun.getclasstype": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\nvar sClassType = oRun.GetClassType();\noRun.SetFontSize(30);\noRun.AddText(\"Class Type = \" + sClassType);\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"xlsx\", \"GetClassType.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRun.gettextpr": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\nvar oTextPr = oRun.GetTextPr();\noTextPr.SetFontSize(30);\noParagraph.SetJc(\"left\");\noRun.AddText(\"This is a sample text inside the shape with the font size set to 15 points using the text properties.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"xlsx\", \"GetTextPr.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRun.removeallelements": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text.\");\noRun.RemoveAllElements();\noRun.AddText(\"All elements from this run were removed before adding this text.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"xlsx\", \"RemoveAllElements.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setbold": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetBold(true);\noRun.AddText(\"This is a text run with the font set to bold.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"xlsx\", \"SetBold.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setcaps": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetCaps(true);\noRun.AddText(\"This is a text run with the font set to capitalized letters.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"xlsx\", \"SetCaps.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setcolor": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is a text run with the font color set to blue.\");\noParagraph.AddElement(oRun);\noRun.SetColor(0, 0, 255);\nbuilder.SaveFile(\"xlsx\", \"SetColor.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setdoublestrikeout": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetDoubleStrikeout(true);\noRun.AddText(\"This is a text run with the text struck out with two lines.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"xlsx\", \"SetDoubleStrikeout.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setfill": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noFill = Api.CreateSolidFill(Api.CreateRGBColor(0, 0, 255));\noRun.SetFill(oFill);\noRun.AddText(\"This is a text run with the font color set to blue.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"xlsx\", \"SetFill.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setfontfamily": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetFontFamily(\"Comic Sans MS\");\noRun.AddText(\"This is a text run with the font family set to 'Comic Sans MS'.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"xlsx\", \"SetFontFamily.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setfontsize": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetFontSize(30);\noRun.AddText(\"This is a text run with the font size set to 15 points (30 half-points).\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"xlsx\", \"SetFontSize.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setitalic": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetItalic(true);\noRun.AddText(\"This is a text run with the font set to italicized letters.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"xlsx\", \"SetItalic.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setlanguage": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is a text run with the text language set to English (Canada).\");\noRun.SetLanguage(\"en-CA\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"xlsx\", \"SetLanguage.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setposition": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text.\");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.AddText(\"This is a text run with the text raised 10 half-points.\");\noRun.SetPosition(10);\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.AddText(\"This is a text run with the text lowered 16 half-points.\");\noRun.SetPosition(-16);\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"xlsx\", \"SetPosition.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setsmallcaps": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetSmallCaps(true);\noRun.AddText(\"This is a text run with the font set to small capitalized letters.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"xlsx\", \"SetSmallCaps.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setspacing": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetSpacing(80);\noRun.AddText(\"This is a text run with the text spacing set to 4 points (20 twentieths of a point).\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"xlsx\", \"SetSpacing.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setstrikeout": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetStrikeout(true);\noRun.AddText(\"This is a text run with the text struck out with a single line.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"xlsx\", \"SetStrikeout.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRun.settextpr": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is a sample text with the font size set to 15 points and the font weight set to bold.\");\nvar oTextPr = oRun.GetTextPr();\noTextPr.SetFontSize(30);\noTextPr.SetBold(true);\noRun.SetTextPr(oTextPr);\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"xlsx\", \"SetTextPr.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setunderline": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetUnderline(true);\noRun.AddText(\"This is a text run with the text underlined with a single line.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"xlsx\", \"SetUnderline.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setvertalign": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetVertAlign(\"subscript\");\noRun.AddText(\"This is a text run with the text aligned below the baseline vertically. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetVertAlign(\"baseline\");\noRun.AddText(\"This is a text run with the text aligned by the baseline vertically. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetVertAlign(\"superscript\");\noRun.AddText(\"This is a text run with the text aligned above the baseline vertically.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"xlsx\", \"SetVertAlign.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiSchemeColor.getclasstype": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oSchemeColor = Api.CreateSchemeColor(\"accent6\");\nvar oGs1 = Api.CreateGradientStop(oSchemeColor, 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\noWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 1, 3 * 36000);\nvar sClassType = oSchemeColor.GetClassType();\noWorksheet.SetColumnWidth(0, 15);\noWorksheet.SetColumnWidth(1, 10);\noWorksheet.GetRange(\"A1\").SetValue(\"Class Type = \");\noWorksheet.GetRange(\"B1\").SetValue(sClassType);\nbuilder.SaveFile(\"xlsx\", \"GetClassType.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiShape.getclasstype": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 2, 3 * 36000);\nvar sClassType = oShape.GetClassType();\noWorksheet.SetColumnWidth(0, 15);\noWorksheet.SetColumnWidth(1, 10);\noWorksheet.GetRange(\"A1\").SetValue(\"Class Type = \");\noWorksheet.GetRange(\"B1\").SetValue(sClassType);\nbuilder.SaveFile(\"xlsx\", \"GetClassType.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiShape.getcontent": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oContent = oShape.GetContent();\noContent.RemoveAllElements();\nvar oParagraph = Api.CreateParagraph();\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"We removed all elements from the shape and added a new paragraph inside it.\");\noContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"GetContent.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiShape.getdoccontent": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetDocContent();\noDocContent.RemoveAllElements();\nvar oParagraph = Api.CreateParagraph();\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"We removed all elements from the shape and added a new paragraph inside it.\");\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"GetDocContent.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiShape.setverticaltextalign": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 50 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\noDocContent.RemoveAllElements();\noShape.SetVerticalTextAlign(\"bottom\");\nvar oParagraph = Api.CreateParagraph();\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"We removed all elements from the shape and added a new paragraph inside it \");\noParagraph.AddText(\"aligning it vertically by the bottom.\");\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"xlsx\", \"SetVerticalTextAlign.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiStroke.getclasstype": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\noWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 1, 3 * 36000);\nvar sClassType = oStroke.GetClassType();\noWorksheet.SetColumnWidth(0, 15);\noWorksheet.SetColumnWidth(1, 10);\noWorksheet.GetRange(\"A1\").SetValue(\"Class Type = \");\noWorksheet.GetRange(\"B1\").SetValue(sClassType);\nbuilder.SaveFile(\"xlsx\", \"GetClassType.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.getclasstype": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\nvar oTextPr = oRun.GetTextPr();\noTextPr.SetFontSize(30);\noParagraph.SetJc(\"left\");\nvar sClassType = oTextPr.GetClassType();\noRun.AddText(\"Class Type = \" + sClassType);\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"xlsx\", \"GetClassType.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setbold": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\nvar oTextPr = oRun.GetTextPr();\noTextPr.SetFontSize(30);\noTextPr.SetBold(true);\noParagraph.SetJc(\"left\");\noRun.AddText(\"This is a sample text inside the shape with the font weight set to bold using the text properties.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"xlsx\", \"SetBold.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setcaps": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\nvar oTextPr = oRun.GetTextPr();\noTextPr.SetFontSize(30);\noTextPr.SetCaps(true);\noParagraph.SetJc(\"left\");\noRun.AddText(\"This is a sample text inside the shape set to capital letters using the text properties.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"xlsx\", \"SetCaps.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setdoublestrikeout": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\nvar oTextPr = oRun.GetTextPr();\noTextPr.SetFontSize(30);\noTextPr.SetDoubleStrikeout(true);\noParagraph.SetJc(\"left\");\noRun.AddText(\"This is a sample text inside the shape struck out with two lines using the text properties.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"xlsx\", \"SetDoubleStrikeout.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setfill": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\nvar oTextPr = oRun.GetTextPr();\noFill = Api.CreateSolidFill(Api.CreateRGBColor(255, 255, 0));\noTextPr.SetFill(oFill);\noRun.AddText(\"This is a text run with the font color set to yellow.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"xlsx\", \"SetFill.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setfontfamily": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\nvar oTextPr = oRun.GetTextPr();\noTextPr.SetFontSize(30);\noTextPr.SetFontFamily(\"Comic Sans MS\");\noParagraph.SetJc(\"left\");\noRun.AddText(\"This is a sample text inside the shape with the font family set to 'Comic Sans MS' using the text properties.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"xlsx\", \"SetFontFamily.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setfontsize": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\nvar oTextPr = oRun.GetTextPr();\noTextPr.SetFontSize(30);\noParagraph.SetJc(\"left\");\noRun.AddText(\"This is a sample text inside the shape with the font size set to 15 points using the text properties.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"xlsx\", \"SetFontSize.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setitalic": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\nvar oTextPr = oRun.GetTextPr();\noTextPr.SetFontSize(30);\noTextPr.SetItalic(true);\noParagraph.SetJc(\"left\");\noRun.AddText(\"This is a sample text inside the shape with the font set to italicized letters using the text properties.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"xlsx\", \"SetItalic.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setsmallcaps": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\nvar oTextPr = oRun.GetTextPr();\noTextPr.SetFontSize(30);\noTextPr.SetSmallCaps(true);\noParagraph.SetJc(\"left\");\noRun.AddText(\"This is a sample text inside the shape with the font set to small capitalized letters.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"xlsx\", \"SetSmallCaps.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setspacing": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\nvar oTextPr = oRun.GetTextPr();\noTextPr.SetFontSize(30);\noTextPr.SetSpacing(80);\noParagraph.SetJc(\"left\");\noRun.AddText(\"This is a sample text inside the shape with the spacing set to 4 points (80 twentieths of a point).\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"xlsx\", \"SetSpacing.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setstrikeout": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\nvar oTextPr = oRun.GetTextPr();\noTextPr.SetFontSize(30);\noTextPr.SetStrikeout(true);\noParagraph.SetJc(\"left\");\noRun.AddText(\"This is a struck out text inside the shape.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"xlsx\", \"SetStrikeout.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setunderline": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\nvar oTextPr = oRun.GetTextPr();\noTextPr.SetFontSize(30);\noTextPr.SetUnderline(true);\noParagraph.SetJc(\"left\");\noRun.AddText(\"This is an underlined text inside the shape.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"xlsx\", \"SetUnderline.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setvertalign": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\nvar oTextPr = oRun.GetTextPr();\noTextPr.SetVertAlign(\"superscript\");\noParagraph.SetJc(\"left\");\noRun.AddText(\"This is a text inside the shape with vertical alignment set to 'superscript'.\");\noParagraph.AddElement(oRun);\nbuilder.SaveFile(\"xlsx\", \"SetVertAlign.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiUniColor.getclasstype": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oPresetColor = Api.CreatePresetColor(\"lightYellow\");\nvar oGs1 = Api.CreateGradientStop(oPresetColor, 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\noWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 1, 3 * 36000);\nvar sClassType = oPresetColor.GetClassType();\noWorksheet.SetColumnWidth(0, 15);\noWorksheet.SetColumnWidth(1, 10);\noWorksheet.GetRange(\"A1\").SetValue(\"Class Type = \");\noWorksheet.GetRange(\"B1\").SetValue(sClassType);\nbuilder.SaveFile(\"xlsx\", \"GetClassType.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiWorksheet.addchart": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"B1\").SetValue(2014);\noWorksheet.GetRange(\"C1\").SetValue(2015);\noWorksheet.GetRange(\"D1\").SetValue(2016);\noWorksheet.GetRange(\"A2\").SetValue(\"Projected Revenue\");\noWorksheet.GetRange(\"A3\").SetValue(\"Estimated Costs\");\noWorksheet.GetRange(\"B2\").SetValue(200);\noWorksheet.GetRange(\"B3\").SetValue(250);\noWorksheet.GetRange(\"C2\").SetValue(240);\noWorksheet.GetRange(\"C3\").SetValue(260);\noWorksheet.GetRange(\"D2\").SetValue(280);\noWorksheet.GetRange(\"D3\").SetValue(280);\nvar oChart = oWorksheet.AddChart(\"'Sheet1'!$A$1:$D$3\", true, \"bar3D\", 2, 100 * 36000, 70 * 36000, 0, 2 * 36000, 7, 3 * 36000);\noChart.SetTitle(\"Financial Overview\", 13);\nbuilder.SaveFile(\"xlsx\", \"AddChart.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiWorksheet.adddefname": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A1\").SetValue(\"1\");\noWorksheet.GetRange(\"B1\").SetValue(\"2\");\noWorksheet.AddDefName(\"numbers\", \"Sheet1!$A$1:$B$1\");\noWorksheet.GetRange(\"A3\").SetValue(\"We defined a name 'numbers' for a range of cells A1:B1.\");\nbuilder.SaveFile(\"xlsx\", \"AddDefName.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiWorksheet.addimage": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.AddImage(\"https://api.onlyoffice.com/content/img/docbuilder/examples/coordinate_aspects.png\", 60 * 36000, 35 * 36000, 0, 2 * 36000, 0, 3 * 36000);\nbuilder.SaveFile(\"xlsx\", \"AddImage.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiWorksheet.addshape": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\noWorksheet.AddShape(\"flowChartOnlineStorage\", 60 * 36000, 35 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nbuilder.SaveFile(\"xlsx\", \"AddShape.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiWorksheet.formatastable": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.FormatAsTable(\"A1:E10\");\nbuilder.SaveFile(\"xlsx\", \"FormatAsTable.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiWorksheet.getactivecell": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oActiveCell = oWorksheet.GetActiveCell();\noActiveCell.SetValue(\"This sample text was placed in an active cell.\");\nbuilder.SaveFile(\"xlsx\", \"GetActiveCell.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiWorksheet.getbottommargin": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar nBottomMargin = oWorksheet.GetBottomMargin();\noWorksheet.GetRange(\"A1\").SetValue(\"Bottom margin: \" + nBottomMargin + \" mm\");\nbuilder.SaveFile(\"xlsx\", \"GetBottomMargin.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiWorksheet.getcells": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oCells = oWorksheet.GetCells();\noCells.SetFillColor(Api.CreateColorFromRGB(255, 224, 204));\nbuilder.SaveFile(\"xlsx\", \"GetCells.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiWorksheet.getcols": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oCols = oWorksheet.GetCols(\"A1:C1\");\noCols.SetFillColor(Api.CreateColorFromRGB(255, 224, 204));\nbuilder.SaveFile(\"xlsx\", \"GetCols.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiWorksheet.getcomments": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A1\").SetValue(\"1\");\nvar oRange = oWorksheet.GetRange(\"A1\");\noRange.AddComment(\"This is just a number.\");\nvar aComments = oWorksheet.GetComments();\noWorksheet.GetRange(\"A4\").SetValue(\"Comment: \" + aComments[0].GetText());\nbuilder.SaveFile(\"xlsx\", \"GetComments.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiWorksheet.getdefname": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A1\").SetValue(\"1\");\noWorksheet.GetRange(\"B1\").SetValue(\"2\");\noWorksheet.AddDefName(\"numbers\", \"Sheet1!$A$1:$B$1\");\nvar oDefName = oWorksheet.GetDefName(\"numbers\");\noWorksheet.GetRange(\"A3\").SetValue(\"DefName: \" + oDefName.GetName());\nbuilder.SaveFile(\"xlsx\", \"GetDefName.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiWorksheet.getdefnames": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A1\").SetValue(\"1\");\noWorksheet.GetRange(\"B1\").SetValue(\"2\");\noWorksheet.GetRange(\"A2\").SetValue(\"A\");\noWorksheet.GetRange(\"B2\").SetValue(\"B\");\noWorksheet.AddDefName(\"numbers\", \"Sheet1!$A$1:$B$1\");\noWorksheet.AddDefName(\"letters\", \"Sheet1!$A$2:$B$2\");\nvar aDefNames = oWorksheet.GetDefNames();\noWorksheet.GetRange(\"A4\").SetValue(\"DefNames: \" + aDefNames[0].GetName() + \", \" + aDefNames[1].GetName());\nbuilder.SaveFile(\"xlsx\", \"GetDefNames.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiWorksheet.getindex": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar nIndex = oWorksheet.GetIndex();\noWorksheet.GetRange(\"A1\").SetValue(\"Index: \");\noWorksheet.GetRange(\"B1\").SetValue(nIndex);\nbuilder.SaveFile(\"xlsx\", \"GetIndex.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiWorksheet.getleftmargin": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar nLeftMargin = oWorksheet.GetLeftMargin();\noWorksheet.GetRange(\"A1\").SetValue(\"Left margin: \" + nLeftMargin + \" mm\");\nbuilder.SaveFile(\"xlsx\", \"GetLeftMargin.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiWorksheet.getname": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar sName = oWorksheet.GetName();\noWorksheet.GetRange(\"A1\").SetValue(\"Name: \");\noWorksheet.GetRange(\"B1\").SetValue(sName);\nbuilder.SaveFile(\"xlsx\", \"GetName.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiWorksheet.getpageorientation": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar sPageOrientation = oWorksheet.GetPageOrientation();\noWorksheet.GetRange(\"A1\").SetValue(\"Page orientation: \");\noWorksheet.GetRange(\"C1\").SetValue(sPageOrientation);\nbuilder.SaveFile(\"xlsx\", \"GetPageOrientation.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiWorksheet.getrange": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A2\").SetValue(\"2\");\nvar oRange = oWorksheet.GetRange(\"A1:D5\");\noRange.SetAlignHorizontal(\"center\");\nbuilder.SaveFile(\"xlsx\", \"GetRange.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiWorksheet.getrangebynumber": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRangeByNumber(1, 2).SetValue(\"42\");\nbuilder.SaveFile(\"xlsx\", \"GetRangeByNumber.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiWorksheet.getrightmargin": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar nRightMargin = oWorksheet.GetRightMargin();\noWorksheet.GetRange(\"A1\").SetValue(\"Right margin: \" + nRightMargin + \" mm\");\nbuilder.SaveFile(\"xlsx\", \"GetRightMargin.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiWorksheet.getrows": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRows(\"1:4\").SetFillColor(Api.CreateColorFromRGB(255, 224, 204));\nbuilder.SaveFile(\"xlsx\", \"GetRows.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiWorksheet.getselection": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetSelection().SetValue(\"selected\");\nbuilder.SaveFile(\"xlsx\", \"GetSelection.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiWorksheet.gettopmargin": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar nTopMargin = oWorksheet.GetTopMargin();\noWorksheet.GetRange(\"A1\").SetValue(\"Top margin: \" + nTopMargin + \" mm\");\nbuilder.SaveFile(\"xlsx\", \"GetTopMargin.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiWorksheet.getusedrange": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\nvar oUsedRange = oWorksheet.GetUsedRange();\noUsedRange.SetFillColor(Api.CreateColorFromRGB(255, 224, 204));\nbuilder.SaveFile(\"xlsx\", \"GetUsedRange.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiWorksheet.getvisible": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.SetVisible(true);\nvar bVisible = oWorksheet.GetVisible();\noWorksheet.GetRange(\"A1\").SetValue(\"Visible: \");\noWorksheet.GetRange(\"B1\").SetValue(bVisible);\nbuilder.SaveFile(\"xlsx\", \"GetVisible.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiWorksheet.setactive": {
			"script": "builder.CreateFile(\"xlsx\");\nApi.AddSheet(\"New_sheet\");\nvar oSheet = Api.GetSheet(\"New_sheet\");\noSheet.SetActive();\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A1\").SetValue(\"The current sheet is active.\");\nbuilder.SaveFile(\"xlsx\", \"SetActive.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiWorksheet.setbottommargin": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.SetBottomMargin(25.1);\nvar nBottomMargin = oWorksheet.GetBottomMargin();\noWorksheet.GetRange(\"A1\").SetValue(\"Bottom margin: \" + nBottomMargin  + \" mm\");\nbuilder.SaveFile(\"xlsx\", \"SetBottomMargin.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiWorksheet.setcolumnwidth": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.SetColumnWidth(0, 10);\noWorksheet.SetColumnWidth(1, 20);\nbuilder.SaveFile(\"xlsx\", \"SetColumnWidth.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiWorksheet.setdisplaygridlines": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A2\").SetValue(\"The sheet settings make it display no gridlines\");\noWorksheet.SetDisplayGridlines(false);\nbuilder.SaveFile(\"xlsx\", \"SetDisplayGridlines.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiWorksheet.setdisplayheadings": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.GetRange(\"A2\").SetValue(\"The sheet settings make it display no row/column headers\");\noWorksheet.SetDisplayHeadings(false);\nbuilder.SaveFile(\"xlsx\", \"SetDisplayHeadings.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiWorksheet.sethyperlink": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.SetHyperlink(\"A1\", \"https://api.onlyoffice.com/docbuilder/basic\", \"Api ONLYOFFICE\", \"ONLYOFFICE for developers\");\nbuilder.SaveFile(\"xlsx\", \"SetHyperlink.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiWorksheet.setleftmargin": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.SetLeftMargin(20.8);\nvar nLeftMargin = oWorksheet.GetLeftMargin();\noWorksheet.GetRange(\"A1\").SetValue(\"Left margin: \" + nLeftMargin + \" mm\");\nbuilder.SaveFile(\"xlsx\", \"SetLeftMargin.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiWorksheet.setname": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.SetName(\"sheet 1\");\nvar sName = oWorksheet.GetName();\noWorksheet.GetRange(\"A1\").SetValue(\"Worksheet name: \");\noWorksheet.GetRange(\"A1\").AutoFit(false, true);\noWorksheet.GetRange(\"B1\").SetValue(sName);\nbuilder.SaveFile(\"xlsx\", \"SetName.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiWorksheet.setpageorientation": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.SetPageOrientation(\"xlPortrait\");\nvar sPageOrientation = oWorksheet.GetPageOrientation();\noWorksheet.GetRange(\"A1\").SetValue(\"Page orientation: \");\noWorksheet.GetRange(\"C1\").SetValue(sPageOrientation);\nbuilder.SaveFile(\"xlsx\", \"SetPageOrientation.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiWorksheet.setrightmargin": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.SetRightMargin(20.8);\nvar nRightMargin = oWorksheet.GetRightMargin();\noWorksheet.GetRange(\"A1\").SetValue(\"Right margin: \" + nRightMargin + \" mm\");\nbuilder.SaveFile(\"xlsx\", \"SetRightMargin.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiWorksheet.setrowheight": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.SetRowHeight(0, 30);\nbuilder.SaveFile(\"xlsx\", \"SetRowHeight.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiWorksheet.settopmargin": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.SetTopMargin(25.1);\nvar nTopMargin = oWorksheet.GetTopMargin();\noWorksheet.GetRange(\"A1\").SetValue(\"Top margin: \" + nTopMargin + \" mm\");\nbuilder.SaveFile(\"xlsx\", \"SetTopMargin.xlsx\");\nbuilder.CloseFile();"
		},
		"ApiWorksheet.setvisible": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.SetVisible(true);\noWorksheet.GetRange(\"A1\").SetValue(\"The current worksheet is visible.\");\nbuilder.SaveFile(\"xlsx\", \"SetVisible.xlsx\");\nbuilder.CloseFile();"
		}
	},
	"slide": {
		"api": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = Api.CreateSlide();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\noSlide.SetBackground(oFill);\noPresentation.AddSlide(oSlide);\noSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\noFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is an example for base class methods.\");\nvar oBullet = Api.CreateNumbering(\"ArabicParenR\", 1);\noParagraph = Api.CreateParagraph();\noParagraph.SetBullet(oBullet);\noParagraph.AddText(\" A new slide was created.\");\noDocContent.Push(oParagraph);\noParagraph = Api.CreateParagraph();\noParagraph.SetBullet(oBullet);\noParagraph.AddText(\" The background of the new slide was set to pink.\");\noDocContent.Push(oParagraph);\noParagraph = Api.CreateParagraph();\noParagraph.SetBullet(oBullet);\noParagraph.AddText(\" A blue shape was created with numbered paragraphs in it.\");\noDocContent.Push(oParagraph);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"Api.pptx\");\nbuilder.CloseFile();"
		},
		"apibullet": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oBullet = Api.CreateBullet(\"-\");\noParagraph.SetBullet(oBullet);\noParagraph.AddText(\" This is an example of the bulleted paragraph.\");\nvar sClassType = oBullet.GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class Type = \" + sClassType);\noDocContent.Push(oParagraph);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"ApiBullet.pptx\");\nbuilder.CloseFile();"
		},
		"apichart": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetLegendPos(\"bottom\");\noChart.SetShowDataLabels(false, false, true, false);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"ApiChart.pptx\");\nbuilder.CloseFile();"
		},
		"apidocumentcontent": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is paragraph #1.\");\nfor (let nParaIncrease = 1; nParaIncrease < 5; ++nParaIncrease) {\n  oParagraph = Api.CreateParagraph();\n  oParagraph.AddText(\"This is paragraph #\" + (nParaIncrease + 1) + \".\");\n  oDocContent.Push(oParagraph);\n}\noDocContent.RemoveElement(2);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"We removed paragraph #3, check that out above.\");\noDocContent.Push(oParagraph);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"ApiDocumentContent.pptx\");\nbuilder.CloseFile();"
		},
		"apidrawing": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\noDocContent.RemoveAllElements();\nvar oParagraph = Api.CreateParagraph();\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"This is an example of a paragraph inside a shape. Nothing special.\");\noDocContent.Push(oParagraph);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"ApiDrawing.pptx\");\nbuilder.CloseFile();"
		},
		"apifill": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar sClassType = oFill.GetClassType();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class Type = \" + sClassType);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"ApiFill.pptx\");\nbuilder.CloseFile();"
		},
		"apigradientstop": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar sClassType = oGs1.GetClassType();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class Type = \" + sClassType);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"ApiGradientStop.pptx\");\nbuilder.CloseFile();"
		},
		"apiimage": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oImage = Api.CreateImage(\"https://api.onlyoffice.com/content/img/docbuilder/examples/step2_1.png\", 100 * 36000, 50 * 36000);\noSlide.AddObject(oImage);\nvar oSchemeColor = Api.CreateSchemeColor(\"accent6\");\nvar oGs1 = Api.CreateGradientStop(oSchemeColor, 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar sClassType = oImage.GetClassType();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class Type = \" + sClassType);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"ApiImage.pptx\");\nbuilder.CloseFile();"
		},
		"apilayout": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oMaster = oPresentation.GetMaster(0);\nvar oLayout = oMaster.GetLayout(0);\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 218, 185), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(238, 203, 173), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\noLayout.SetBackground(oFill);\noSlide.FollowLayoutBackground();\noSlide = Api.CreateSlide();\noPresentation.AddSlide(oSlide);\noLayout.ClearBackground();\noSlide.FollowLayoutBackground();\noLayout.SetName(\"New layout\");\nvar sType = oLayout.GetClassType();\noSlide.RemoveAllObjects();\noFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"A new name was set to the current layout.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"Class type = \" + sType);\noLayout.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"ApiLayout.pptx\");\nbuilder.CloseFile();"
		},
		"apimaster": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar sType = oMaster.GetClassType();\nvar nCountBefore = oMaster.GetLayoutsCount();\nvar oLayout = Api.CreateLayout();\noMaster.AddLayout(0, oLayout);\nvar nCountAfterAdding = oMaster.GetLayoutsCount();\noMaster.RemoveLayout(0, 2);\nvar nCountAfterRemoving = oMaster.GetLayoutsCount();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Number of layouts before adding new layout: \" + nCountBefore);\noParagraph.AddLineBreak();\noParagraph.AddText(\"Number of layouts after adding new layout: \" + nCountAfterAdding);\noParagraph.AddLineBreak();\noParagraph.AddText(\"Number of layouts after removing two layouts: \" + nCountAfterRemoving);\noParagraph.AddLineBreak();\noParagraph.AddText(\"Class type = \" + sType);\noSlide.RemoveAllObjects();\noMaster.AddObject(oShape);\noSlide = Api.CreateSlide();\noPresentation.AddSlide(oSlide);\noMaster = oPresentation.GetMaster(0);\nnCountBefore = oPresentation.GetMastersCount();\noMaster.Duplicate(1);\nvar nCountAfter = oPresentation.GetMastersCount();\noFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\noStroke = Api.CreateStroke(0, Api.CreateNoFill());\noShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\noDocContent = oShape.GetDocContent();\noParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Number of masters before duplicating: \" + nCountBefore);\noParagraph.AddLineBreak();\noParagraph.AddText(\"Number of masters after duplicating: \" + nCountAfter);\noSlide.RemoveAllObjects();\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"ApiMaster.pptx\");\nbuilder.CloseFile();"
		},
		"apiparagraph": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\nvar oRun = Api.CreateRun();\noRun.AddText(\"Number of paragraph elements at this point: \");\noRun.AddTabStop();\noRun.AddText(\"\" + oParagraph.GetElementsCount());\noParagraph.AddElement(oRun);\noParagraph.AddLineBreak();\noParagraph.AddText(\"This is a text after the line break.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"This is just a sample text. After it three tab stops will be added.\");\noParagraph.AddTabStop();\noParagraph.AddTabStop();\noParagraph.AddTabStop();\noParagraph.AddText(\"This is the text which starts after the tab stops.\");\noParagraph = Api.CreateParagraph();\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"This is just a sample text that was copied.\");\noDocContent.Push(oParagraph);\nvar oCopyParagraph = oParagraph.Copy();\noDocContent.Push(oCopyParagraph);\nvar sClassType = oParagraph.GetClassType();\noCopyParagraph.AddLineBreak();\noCopyParagraph.AddText(\"Class Type = \" + sClassType);\noParagraph = Api.CreateParagraph();\noDocContent.Push(oParagraph);\noParagraph.SetIndFirstLine(1440);\nvar nIndFirstLine = oParagraph.GetIndFirstLine();\noParagraph.AddText(\"First line indent: \" + nIndFirstLine);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"ApiParagraph.pptx\");\nbuilder.CloseFile();"
		},
		"apiparapr": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetJc(\"center\");\noParaPr.SetIndFirstLine(1440);\noParagraph.AddText(\"This is a paragraph with the text in it aligned by the center. \");\noParagraph.AddText(\"The justification is specified in the paragraph style. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\nvar sClassType = oParaPr.GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class Type = \" + sClassType);\noParagraph.AddLineBreak();\noParagraph.AddText(\"First line indent: \" + oParaPr.GetIndFirstLine());\noDocContent.Push(oParagraph);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"ApiParaPr.pptx\");\nbuilder.CloseFile();"
		},
		"apiplaceholder": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oPlaceholder = Api.CreatePlaceholder(\"picture\");\noShape.SetPlaceholder(oPlaceholder);\nvar sType = oPlaceholder.GetClassType();\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class type = \" + sType);\noPlaceholder.SetType(\"chart\");\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"ApiPlaceholder.pptx\");\nbuilder.CloseFile();"
		},
		"apipresentation": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\noPresentation.SetSizes(254 * 36000, 190 * 36000);\nvar oSlide1 = oPresentation.GetCurrentSlide();\noSlide1.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 200 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is just a sample text.\");\noPresentation.CreateNewHistoryPoint();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"New history point was just created.\");\noParagraph.AddLineBreak();\nvar sClassType = oPresentation.GetClassType();\noParagraph.AddText(\"Class Type = \" + sClassType);\nvar nCurrentSlideIndex = oPresentation.GetCurSlideIndex();\noParagraph.AddLineBreak();\noParagraph.AddText(\"Current Slide Index = \" + nCurrentSlideIndex);\noDocContent.Push(oParagraph);\noSlide1.AddObject(oShape);\nvar oSlide2 = Api.CreateSlide();\noPresentation.AddSlide(oSlide2);\nbuilder.SaveFile(\"pptx\", \"ApiPresentation.pptx\");\nbuilder.CloseFile();"
		},
		"apipresetcolor": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oPresetColor = Api.CreatePresetColor(\"lightYellow\");\nvar oGs1 = Api.CreateGradientStop(oPresetColor, 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(200 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar sClassType = oPresetColor.GetClassType();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class Type = \" + sClassType);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"ApiPresetColor.pptx\");\nbuilder.CloseFile();"
		},
		"apirgbcolor": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oRGBColor = Api.CreateRGBColor(255, 224, 204);\nvar oGs1 = Api.CreateGradientStop(oRGBColor, 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(200 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar sClassType = oRGBColor.GetClassType();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class Type = \" + sClassType);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"ApiRGBColor.pptx\");\nbuilder.CloseFile();"
		},
		"apirun": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.SetItalic(true);\noRun.AddText(\"This is the text for the first line. Nothing special.\");\noRun.AddLineBreak();\noRun.AddText(\"This is the text which starts from the beginning of the second line. \");\noRun.AddText(\"It is written in two text runs, you need a space at the end of the first run sentence to separate them.\");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetFontSize(30);\noRun.SetFontFamily(\"Comic Sans MS\");\noRun.AddText(\"This is just a sample text. After it three tab stops will be added.\");\noRun.SetBold(true);\noRun.AddTabStop();\noRun.AddTabStop();\noRun.AddTabStop();\noRun.AddText(\"This is the text which starts after the tab stops.\");\noParagraph.AddLineBreak();\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text that was copied. \");\noRun.SetColor(255, 0, 0);\noParagraph.AddLineBreak();\noParagraph.AddElement(oRun);\nvar oCopyRun = oRun.Copy();\nvar sClassType = oCopyRun.GetClassType();\noCopyRun.AddLineBreak();\noCopyRun.AddText(\"Class Type = \" + sClassType);\noCopyRun.SetCaps(true);\noParagraph.AddElement(oCopyRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"ApiRun.pptx\");\nbuilder.CloseFile();"
		},
		"apischemecolor": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oSchemeColor = Api.CreateSchemeColor(\"accent6\");\nvar oGs1 = Api.CreateGradientStop(oSchemeColor, 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar sClassType = oSchemeColor.GetClassType();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class Type = \" + sClassType);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"ApiSchemeColor.pptx\");\nbuilder.CloseFile();"
		},
		"apishape": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\noPresentation.SetSizes(254 * 36000, 190 * 36000);\nvar oSlide = oPresentation.GetCurrentSlide();\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartOnlineStorage\", 200 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\noShape.SetVerticalTextAlign(\"bottom\");\nvar oParagraph = Api.CreateParagraph();\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"We removed all elements from the shape and added a new paragraph inside it \");\noParagraph.AddText(\"aligning it vertically by the bottom.\");\noDocContent.Push(oParagraph);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"ApiShape.pptx\");\nbuilder.CloseFile();"
		},
		"apislide": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\noPresentation.SetSizes(254 * 36000, 190 * 36000);\nvar oSlide = oPresentation.GetCurrentSlide();\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"rect\", 200 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar nSlideHeight = oSlide.GetHeight();\noParagraph.AddText(\"The slide height = \" + nSlideHeight / 36000 + \" mm\");\nvar nSlideWidth = oSlide.GetWidth();\noParagraph.AddLineBreak();\noParagraph.AddText(\"The slide width = \" + nSlideWidth / 36000 + \" mm\");\nvar sClassType = oSlide.GetClassType();\noParagraph.AddLineBreak();\noParagraph.AddText(\"Class Type = \" + sClassType);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"ApiSlide.pptx\");\nbuilder.CloseFile();"
		},
		"apistroke": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oFill1 = Api.CreateSolidFill(Api.CreateRGBColor(255, 255, 0));\nvar oStroke = Api.CreateStroke(3 * 36000, oFill1);\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\nvar oDocContent = oShape.GetDocContent();\nvar sClassType = oStroke.GetClassType();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class Type = \" + sClassType);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"ApiStroke.pptx\");\nbuilder.CloseFile();"
		},
		"apitable": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oTable = Api.CreateTable(3, 4);\nvar oRow = oTable.GetRow(0);\nvar oCell = oRow.GetCell(0);\noTable.RemoveColumn(oCell);\noRow = oTable.GetRow(3);\noCell = oRow.GetCell(0);\noTable.RemoveRow(oCell);\noRow = oTable.GetRow(0);\nvar oCell1 = oRow.GetCell(0);\nvar oCell2 = oRow.GetCell(1);\noTable.MergeCells([oCell1, oCell2]);\noCell = oRow.GetCell(0);\nvar oContent = oCell.GetContent();\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The first column was removed. The fourth row was removed. And the cells of the first row were merged.\");\noContent.Push(oParagraph);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(520, 64, 1));\noTable.SetShd(oFill);\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\noSlide.AddObject(oTable);\nbuilder.SaveFile(\"pptx\", \"ApiTable.pptx\");\nbuilder.CloseFile();"
		},
		"apitablecell": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oTable = Api.CreateTable(2, 4);\nvar oRow = oTable.GetRow(0);\nvar oCell = oRow.GetCell(0);\nvar oContent = oCell.GetContent();\nvar oParagraph = Api.CreateParagraph();\nvar sClassType = oCell.GetClassType();\noParagraph.AddText(\"Class type: \" + sClassType);\noContent.Push(oParagraph);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(520, 64, 1));\noCell.SetCellBorderBottom(1, oFill);\noCell.SetCellBorderTop(1, oFill);\noCell.SetCellBorderLeft(1, oFill);\noCell.SetCellBorderRight(1, oFill);\noCell.SetCellMarginTop(500);\noCell.SetCellMarginLeft(1000);\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\noSlide.AddObject(oTable);\nbuilder.SaveFile(\"pptx\", \"ApiTableCell.pptx\");\nbuilder.CloseFile();"
		},
		"apitablerow": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oTable = Api.CreateTable(2, 4);\nvar oRow = oTable.GetRow(0);\noRow.SetHeight(30 * 36000);\nvar oCellsCount = oRow.GetCellsCount();\nvar oCell = oRow.GetCell(0);\nvar oContent = oCell.GetContent();\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The number of cells in the row: \" + oCellsCount);\noContent.Push(oParagraph);\noParagraph = Api.CreateParagraph();\nvar sClassType = oRow.GetClassType();\noParagraph.AddText(\"Class type: \" + sClassType);\noContent.Push(oParagraph);\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\noSlide.AddObject(oTable);\nbuilder.SaveFile(\"pptx\", \"ApiTableRow.pptx\");\nbuilder.CloseFile();"
		},
		"apitextpr": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\nvar oTextPr = oRun.GetTextPr();\noTextPr.SetFontSize(30);\noTextPr.SetCaps(true);\noTextPr.SetBold(true);\noFill = Api.CreateSolidFill(Api.CreateRGBColor(255, 255, 0));\noTextPr.SetFill(oFill);\noTextPr.SetFontFamily(\"Comic Sans MS\");\noParagraph.SetJc(\"left\");\noRun.AddText(\"This is a sample text inside the shape with the font size set to 15 points using the text properties.\");\noRun.AddLineBreak();\nvar sClassType = oTextPr.GetClassType();\noRun.AddText(\"Class Type = \" + sClassType);\noParagraph.AddElement(oRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"ApiTextPr.pptx\");\nbuilder.CloseFile();"
		},
		"apitheme": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar oTheme = oMaster.GetTheme();\nvar sThemeType = oTheme.GetClassType();\nvar oFontScheme = oTheme.GetFontScheme();\nvar sFontSchemeType = oFontScheme.GetClassType();\nvar oFormatScheme = oTheme.GetFormatScheme();\nvar sFormatSchemeType = oFormatScheme.GetClassType();\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class type = \" + sThemeType);\noParagraph.AddLineBreak();\noParagraph.AddText(\"Class type = \" + sFontSchemeType);\noParagraph.AddLineBreak();\noParagraph.AddText(\"Class type = \" + sFormatSchemeType);\noSlide.AddObject(oShape);\noSlide = Api.CreateSlide();\noPresentation.AddSlide(oSlide);\nvar oClrScheme = oTheme.GetColorScheme();\noClrScheme.ChangeColor(0, Api.CreateRGBColor(160, 82, 45));\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"bar3D\", [\n    [200, 240, 280],\n    [250, 260, 280]\n  ], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetLegendPos(\"bottom\");\noChart.SetShowDataLabels(false, false, true, false);\noChart.SetTitle(\"Financial Overview\", 20);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"ApiTheme.pptx\");\nbuilder.CloseFile();"
		},
		"apithemecolorscheme": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide1 = oPresentation.GetSlideByIndex(0);\noSlide1.RemoveAllObjects();\nvar oMaster = oPresentation.GetMaster(0);\nvar oTheme1 = oMaster.GetTheme();\nvar oClrScheme = oTheme1.GetColorScheme();\noClrScheme.ChangeColor(0, Api.CreateRGBColor(160, 82, 45));\noClrScheme.SetSchemeName(\"New color scheme name\");\nvar sType = oClrScheme.GetClassType();\nvar oChart = Api.CreateChart(\"bar3D\", [\n    [200, 240, 280],\n    [250, 260, 280]\n  ], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetLegendPos(\"bottom\");\noChart.SetShowDataLabels(false, false, true, false);\noChart.SetTitle(\"Financial Overview\", 20);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetPosition(608400, 1267200);\noSlide1.AddObject(oChart);\noSlide1.ApplyTheme(oTheme1);\nvar oSlide2 = Api.CreateSlide();\noSlide2.RemoveAllObjects();\noPresentation.AddSlide(oSlide2);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class type = \" + sType);\noParagraph.AddLineBreak();\noParagraph.AddText(\"New name was set to the theme color scheme.\");\noSlide2.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"ApiThemeColorScheme.pptx\");\nbuilder.CloseFile();"
		},
		"apithemefontscheme": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar oTheme = oMaster.GetTheme();\nvar oFontScheme = oTheme.GetFontScheme();\noFontScheme.SetFonts(\"Arial\", \"Noto Sans Simplified Chinese\", \"Arabic\", \"Times New Roman\", \"Noto Serif Simplified Chinese\", \"Arabic\", \"New font scheme\");\noFontScheme.SetSchemeName(\"New font scheme name\");\nvar sType = oFontScheme.GetClassType();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"New font scheme was set to this slide.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"New name was set to the theme font scheme.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"Class type = \" + sType);\noSlide.RemoveAllObjects();\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"ApiThemeFontScheme.pptx\");\nbuilder.CloseFile();"
		},
		"apithemeformatscheme": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar oTheme = oSlide.GetTheme();\nvar oFormatScheme = oTheme.GetFormatScheme();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 218, 185), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(238, 203, 173), 100000);\nvar oFill1 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oBgFill1 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke1 = Api.CreateStroke(3 * 36000, oFill1);\noGs1 = Api.CreateGradientStop(Api.CreateRGBColor(238, 149, 114), 0);\noGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 114, 86), 100000);\nvar oBgFill2 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oFill2 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke2 = Api.CreateStroke(3 * 36000, oFill2);\noGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 127, 36), 0);\noGs2 = Api.CreateGradientStop(Api.CreateRGBColor(238, 118, 33), 100000);\nvar oBgFill3 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oFill3 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke3 = Api.CreateStroke(3 * 36000, oFill3);\noFormatScheme.ChangeFillStyles([oFill1, oFill2, oFill3]);\noFormatScheme.ChangeLineStyles([oStroke1, oStroke2, oFill3]);\noFormatScheme.ChangeBgFillStyles([oBgFill1, oBgFill2, oBgFill3]);\nvar oClrScheme = Api.CreateThemeColorScheme([Api.CreateRGBColor(160, 82, 45), Api.CreateRGBColor(205, 133, 63), Api.CreateRGBColor(222, 184, 135), Api.CreateRGBColor(245, 222, 179), Api.CreateRGBColor(240, 128, 128), \n    Api.CreateRGBColor(255, 69, 0), Api.CreateRGBColor(0, 0, 0), Api.CreateRGBColor(79, 79, 79), Api.CreateRGBColor(65, 105, 225), Api.CreateRGBColor(176, 196, 222), Api.CreateRGBColor(255, 255, 255), Api.CreateRGBColor(255, 222, 173)], \"New color scheme\");\nvar oFontScheme = Api.CreateThemeFontScheme(\"Arial\", \"Noto Sans Simplified Chinese\", \"Arabic\", \"Times New Roman\", \"Noto Serif Simplified Chinese\", \"Arabic\", \"New font scheme\");\noTheme = Api.CreateTheme(\"Theme 1\", oMaster, oClrScheme, oFormatScheme, oFontScheme);\noPresentation.ApplyTheme(oTheme);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Create a shape by yourself to see the stroke style set to this presentation.\");\noParagraph.AddLineBreak();\nvar sType = oFormatScheme.GetClassType();\noParagraph.AddText(\"Class type = \" + sType);\noFormatScheme.SetSchemeName(\"New format scheme name\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"New name was set to the theme format scheme.\");\noSlide.AddObject(oShape);\noSlide = Api.CreateSlide();\noPresentation.AddSlide(oSlide);\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetLegendPos(\"bottom\");\noChart.SetShowDataLabels(false, false, true, false);\noChart.SetTitle(\"Financial Overview\", 20);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"ApiThemeFormatScheme.pptx\");\nbuilder.CloseFile();"
		},
		"apiunicolor": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oPresetColor = Api.CreatePresetColor(\"lightYellow\");\nvar oGs1 = Api.CreateGradientStop(oPresetColor, 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar sClassType = oPresetColor.GetClassType();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class Type = \" + sClassType);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"ApiUniColor.pptx\");\nbuilder.CloseFile();"
		},
		"Api.createblipfill": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oFill = Api.CreateBlipFill(\"https://api.onlyoffice.com/content/img/docbuilder/examples/icon_DocumentEditors.png\", \"tile\");\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"star10\", 5930900, 595605, oFill, oStroke);\noSlide.AddObject(oDrawing);\nbuilder.SaveFile(\"pptx\", \"CreateBlipFill.pptx\");\nbuilder.CloseFile();"
		},
		"Api.createbullet": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oBullet = Api.CreateBullet(\"-\");\noParagraph.SetBullet(oBullet);\noParagraph.AddText(\" This is an example of the bulleted paragraph.\");\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"CreateBullet.pptx\");\nbuilder.CloseFile();"
		},
		"Api.createchart": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"CreateChart.pptx\");\nbuilder.CloseFile();"
		},
		"Api.creategradientstop": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noSlide.AddObject(oDrawing);\nbuilder.SaveFile(\"pptx\", \"CreateGradientStop.pptx\");\nbuilder.CloseFile();"
		},
		"Api.creategroup": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill1 = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oFill2 = Api.CreateSolidFill(Api.CreateRGBColor(100, 0, 0));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape1 = Api.CreateShape(\"rect\", 300 * 36000, 130 * 36000, oFill1, oStroke);\nvar oShape2 = Api.CreateShape(\"rect\", 150 * 36000, 80 * 36000, oFill2, oStroke);\nvar oGroup = Api.CreateGroup([oShape1, oShape2]);\noShape1.SetPosition(608400, 1267200);\noShape2.SetPosition(3100000, 1867200);\noSlide.AddObject(oGroup);\nbuilder.SaveFile(\"pptx\", \"CreateGroup.pptx\");\nbuilder.CloseFile();"
		},
		"Api.createimage": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oShape = Api.CreateImage(\"https://api.onlyoffice.com/content/img/docbuilder/examples/step2_1.png\", 300 * 36000, 150 * 36000);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"CreateImage.pptx\");\nbuilder.CloseFile();"
		},
		"Api.createlayout": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide1 = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar oLayout = Api.CreateLayout(oMaster);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oPlaceholder = Api.CreatePlaceholder(\"picture\");\noShape.SetPlaceholder(oPlaceholder);\noLayout.AddObject(oShape);\noSlide1.ApplyLayout(oLayout);\nvar oSlide2 = Api.CreateSlide();\noPresentation.AddSlide(oSlide2);\noSlide2.ApplyLayout(oLayout);\nbuilder.SaveFile(\"pptx\", \"CreateLayout.pptx\");\nbuilder.CloseFile();"
		},
		"Api.createlineargradientfill": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noSlide.AddObject(oDrawing);\nbuilder.SaveFile(\"pptx\", \"CreateLinearGradientFill.pptx\");\nbuilder.CloseFile();"
		},
		"Api.createmaster": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = Api.CreateMaster();\nvar nCountBefore = oPresentation.GetMastersCount();\noPresentation.AddMaster(nCountBefore, oMaster);\nvar nCountAfter = oPresentation.GetMastersCount();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Number of masters before adding new master: \" + nCountBefore);\noParagraph.AddLineBreak();\noParagraph.AddText(\"Number of masters after adding new master: \" + nCountAfter);\noSlide.RemoveAllObjects();\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"CreateMaster.pptx\");\nbuilder.CloseFile();"
		},
		"Api.createnofill": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"The stroke of this shape is transparent.\");\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"CreateNoFill.pptx\");\nbuilder.CloseFile();"
		},
		"Api.createnumbering": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oBullet = Api.CreateNumbering(\"ArabicParenR\", 1);\noParagraph.SetBullet(oBullet);\noParagraph.AddText(\" This is an example of the numbered paragraph.\");\noParagraph = Api.CreateParagraph();\noParagraph.SetBullet(oBullet);\noParagraph.AddText(\" This is an example of the numbered paragraph.\");\noDocContent.Push(oParagraph);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"CreateNumbering.pptx\");\nbuilder.CloseFile();"
		},
		"Api.createparagraph": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\noDocContent.RemoveAllElements();\nvar oParagraph = Api.CreateParagraph();\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"This is an example of a paragraph inside a shape. Nothing special.\");\noDocContent.Push(oParagraph);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"CreateParagraph.pptx\");\nbuilder.CloseFile();"
		},
		"Api.createpatternfill": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oFill = Api.CreatePatternFill(\"dashDnDiag\", Api.CreateRGBColor(255, 224, 204), Api.CreateRGBColor(255, 164, 101));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noSlide.AddObject(oDrawing);\nbuilder.SaveFile(\"pptx\", \"CreatePatternFill.pptx\");\nbuilder.CloseFile();"
		},
		"Api.createplaceholder": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oPlaceholder = Api.CreatePlaceholder(\"picture\");\noShape.SetPlaceholder(oPlaceholder);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"CreatePlaceholder.pptx\");\nbuilder.CloseFile();"
		},
		"Api.createpresetcolor": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oGs1 = Api.CreateGradientStop(Api.CreatePresetColor(\"lightYellow\"), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noSlide.AddObject(oDrawing);\nbuilder.SaveFile(\"pptx\", \"CreatePresetColor.pptx\");\nbuilder.CloseFile();"
		},
		"Api.createradialgradientfill": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oGs1 = Api.CreateGradientStop(Api.CreatePresetColor(\"lightYellow\"), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noSlide.AddObject(oDrawing);\nbuilder.SaveFile(\"pptx\", \"CreateRadialGradientFill.pptx\");\nbuilder.CloseFile();"
		},
		"Api.creatergbcolor": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oRGBColor = Api.CreateRGBColor(255, 164, 101);\nvar oGs1 = Api.CreateGradientStop(Api.CreatePresetColor(\"lightYellow\"), 0);\nvar oGs2 = Api.CreateGradientStop(oRGBColor, 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noSlide.AddObject(oDrawing);\nbuilder.SaveFile(\"pptx\", \"CreateRGBColor.pptx\");\nbuilder.CloseFile();"
		},
		"Api.createrun": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.SetFontSize(60);\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetFontSize(60);\noRun.SetFontFamily(\"Comic Sans MS\");\noRun.AddText(\"This is a text run with the font family set to 'Comic Sans MS'.\");\noParagraph.AddElement(oRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"CreateRun.pptx\");\nbuilder.CloseFile();"
		},
		"Api.createschemecolor": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oSchemeColor = Api.CreateSchemeColor(\"accent6\");\nvar oGs1 = Api.CreateGradientStop(oSchemeColor, 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noSlide.AddObject(oDrawing);\nbuilder.SaveFile(\"pptx\", \"CreateSchemeColor.pptx\");\nbuilder.CloseFile();"
		},
		"Api.createshape": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.SetFontSize(60);\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetFontSize(60);\noRun.SetFontFamily(\"Comic Sans MS\");\noRun.AddText(\"This is a text run with the font family set to 'Comic Sans MS'.\");\noParagraph.AddElement(oRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"CreateShape.pptx\");\nbuilder.CloseFile();"
		},
		"Api.createslide": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = Api.CreateSlide();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\noSlide.SetBackground(oFill);\noPresentation.AddSlide(oSlide);\nbuilder.SaveFile(\"pptx\", \"CreateSlide.pptx\");\nbuilder.CloseFile();"
		},
		"Api.createsolidfill": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oRGBColor = Api.CreateRGBColor(0, 255, 0);\nvar oFill = Api.CreateSolidFill(oRGBColor);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noSlide.AddObject(oDrawing);\nbuilder.SaveFile(\"pptx\", \"CreateSolidFill.pptx\");\nbuilder.CloseFile();"
		},
		"Api.createstroke": {
			"script": "builder.CreateFile(\"xlsx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oFill1 = Api.CreateSolidFill(Api.CreateRGBColor(255, 255, 0));\nvar oStroke = Api.CreateStroke(3 * 36000, oFill1);\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"xlsx\", \"CreateStroke.xlsx\");\nbuilder.CloseFile();"
		},
		"Api.createtable": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oTable = Api.CreateTable(2, 4);\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\noSlide.AddObject(oTable);\nbuilder.SaveFile(\"pptx\", \"CreateTable.pptx\");\nbuilder.CloseFile();"
		},
		"Api.createtheme": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar oClrScheme = Api.CreateThemeColorScheme([Api.CreateRGBColor(160, 82, 45), Api.CreateRGBColor(205, 133, 63), Api.CreateRGBColor(222, 184, 135), Api.CreateRGBColor(245, 222, 179), Api.CreateRGBColor(240, 128, 128), \n    Api.CreateRGBColor(255, 69, 0), Api.CreateRGBColor(0, 0, 0), Api.CreateRGBColor(79, 79, 79), Api.CreateRGBColor(65, 105, 225), Api.CreateRGBColor(176, 196, 222), Api.CreateRGBColor(255, 255, 255), Api.CreateRGBColor(255, 222, 173)], \"New color scheme\");\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 218, 185), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(238, 203, 173), 100000);\nvar oFill1 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oBgFill1 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke1 = Api.CreateStroke(0, oFill1);\noGs1 = Api.CreateGradientStop(Api.CreateRGBColor(238, 149, 114), 0);\noGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 114, 86), 100000);\nvar oFill2 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oBgFill2 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke2 = Api.CreateStroke(0, oFill2);\noGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 127, 36), 0);\noGs2 = Api.CreateGradientStop(Api.CreateRGBColor(238, 118, 33), 100000);\nvar oFill3 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oBgFill3 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke3 = Api.CreateStroke(0, oFill3);\nvar oFormatScheme = Api.CreateThemeFormatScheme([oFill1, oFill2, oFill3], [oBgFill1, oBgFill2, oBgFill3], [oStroke1, oStroke2, oStroke3], \"New format scheme\");\nvar oFontScheme = Api.CreateThemeFontScheme(\"Arial\", \"Noto Sans Simplified Chinese\", \"Arabic\", \"Times New Roman\", \"Noto Serif Simplified Chinese\", \"Arabic\", \"New font scheme\");\nvar oTheme = Api.CreateTheme(\"New theme\", oMaster, oClrScheme, oFormatScheme, oFontScheme);\noPresentation.ApplyTheme(oTheme);\nbuilder.SaveFile(\"pptx\", \"CreateTheme.pptx\");\nbuilder.CloseFile();"
		},
		"Api.createthemecolorscheme": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oClrScheme = Api.CreateThemeColorScheme([Api.CreateRGBColor(160, 82, 45), Api.CreateRGBColor(205, 133, 63), Api.CreateRGBColor(222, 184, 135), Api.CreateRGBColor(245, 222, 179), Api.CreateRGBColor(240, 128, 128), \n    Api.CreateRGBColor(255, 69, 0), Api.CreateRGBColor(0, 0, 0), Api.CreateRGBColor(79, 79, 79), Api.CreateRGBColor(65, 105, 225), Api.CreateRGBColor(176, 196, 222), Api.CreateRGBColor(255, 255, 255), Api.CreateRGBColor(255, 222, 173)], \"New color scheme\");\nvar oTheme = oSlide.GetTheme();\noTheme.SetColorScheme(oClrScheme);\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetLegendPos(\"bottom\");\noChart.SetShowDataLabels(false, false, true, false);\noChart.SetTitle(\"Financial Overview\", 20);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"CreateThemeColorScheme.pptx\");\nbuilder.CloseFile();"
		},
		"Api.createthemefontscheme": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar oClrScheme = Api.CreateThemeColorScheme([Api.CreateRGBColor(160, 82, 45), Api.CreateRGBColor(205, 133, 63), Api.CreateRGBColor(222, 184, 135), Api.CreateRGBColor(245, 222, 179), Api.CreateRGBColor(240, 128, 128), \n    Api.CreateRGBColor(255, 69, 0), Api.CreateRGBColor(0, 0, 0), Api.CreateRGBColor(79, 79, 79), Api.CreateRGBColor(65, 105, 225), Api.CreateRGBColor(176, 196, 222), Api.CreateRGBColor(255, 255, 255), Api.CreateRGBColor(255, 222, 173)], \"New color scheme\");\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 218, 185), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(238, 203, 173), 100000);\nvar oFill1 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oBgFill1 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke1 = Api.CreateStroke(0, oFill1);\noGs1 = Api.CreateGradientStop(Api.CreateRGBColor(238, 149, 114), 0);\noGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 114, 86), 100000);\nvar oFill2 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oBgFill2 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke2 = Api.CreateStroke(0, oFill2);\noGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 127, 36), 0);\noGs2 = Api.CreateGradientStop(Api.CreateRGBColor(238, 118, 33), 100000);\nvar oFill3 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oBgFill3 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke3 = Api.CreateStroke(0, oFill3);\nvar oFormatScheme = Api.CreateThemeFormatScheme([oFill1, oFill2, oFill3], [oBgFill1, oBgFill2, oBgFill3], [oStroke1, oStroke2, oStroke3], \"New format scheme\");\nvar oFontScheme = Api.CreateThemeFontScheme(\"Arial\", \"Noto Sans Simplified Chinese\", \"Arabic\", \"Times New Roman\", \"Noto Serif Simplified Chinese\", \"Arabic\", \"New font scheme\");\nvar oTheme = Api.CreateTheme(\"New theme\", oMaster, oClrScheme, oFormatScheme, oFontScheme);\noPresentation.ApplyTheme(oTheme);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"This text is written in the Times New Roman font.\");\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"CreateThemeFontScheme.pptx\");\nbuilder.CloseFile();"
		},
		"Api.createthemeformatscheme": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar oClrScheme = Api.CreateThemeColorScheme([Api.CreateRGBColor(160, 82, 45), Api.CreateRGBColor(205, 133, 63), Api.CreateRGBColor(222, 184, 135), Api.CreateRGBColor(245, 222, 179), Api.CreateRGBColor(240, 128, 128), \n    Api.CreateRGBColor(255, 69, 0), Api.CreateRGBColor(0, 0, 0), Api.CreateRGBColor(79, 79, 79), Api.CreateRGBColor(65, 105, 225), Api.CreateRGBColor(176, 196, 222), Api.CreateRGBColor(255, 255, 255), Api.CreateRGBColor(255, 222, 173)], \"New color scheme\");\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 218, 185), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(238, 203, 173), 100000);\nvar oFill1 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oBgFill1 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke1 = Api.CreateStroke(0, oFill1);\noGs1 = Api.CreateGradientStop(Api.CreateRGBColor(238, 149, 114), 0);\noGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 114, 86), 100000);\nvar oFill2 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oBgFill2 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke2 = Api.CreateStroke(0, oFill2);\noGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 127, 36), 0);\noGs2 = Api.CreateGradientStop(Api.CreateRGBColor(238, 118, 33), 100000);\nvar oFill3 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oBgFill3 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke3 = Api.CreateStroke(0, oFill3);\nvar oFormatScheme = Api.CreateThemeFormatScheme([oFill1, oFill2, oFill3], [oBgFill1, oBgFill2, oBgFill3], [oStroke1, oStroke2, oStroke3], \"New format scheme\");\nvar oFontScheme = Api.CreateThemeFontScheme(\"Arial\", \"Noto Sans Simplified Chinese\", \"Arabic\", \"Times New Roman\", \"Noto Serif Simplified Chinese\", \"Arabic\", \"New font scheme\");\nvar oTheme = Api.CreateTheme(\"New theme\", oMaster, oClrScheme, oFormatScheme, oFontScheme);\noPresentation.ApplyTheme(oTheme);\nbuilder.SaveFile(\"pptx\", \"CreateThemeFormatScheme.pptx\");\nbuilder.CloseFile();"
		},
		"Api.getpresentation": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetLegendPos(\"bottom\");\noChart.SetShowDataLabels(false, false, true, false);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"GetPresentation.pptx\");\nbuilder.CloseFile();"
		},
		"Api.save": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\noDocContent.RemoveAllElements();\nvar oParagraph = Api.CreateParagraph();\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"This shape with paragraph in it is saved to the document.\");\noDocContent.Push(oParagraph);\noSlide.AddObject(oShape);\nApi.Save();\nbuilder.SaveFile(\"pptx\", \"Save.pptx\");\nbuilder.CloseFile();"
		},
		"ApiBullet.getclasstype": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oBullet = Api.CreateBullet(\"-\");\noParagraph.SetBullet(oBullet);\noParagraph.AddText(\" This is an example of the bulleted paragraph.\");\nvar sClassType = oBullet.GetClassType();\noParagraph = Api.CreateParagraph();\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class Type = \" + sClassType);\noDocContent.Push(oParagraph);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetClassType.pptx\");\nbuilder.CloseFile();"
		},
		"ApiChart.getclasstype": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\nvar sClassType = oChart.GetClassType();\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetLegendPos(\"bottom\");\noChart.SetShowDataLabels(false, false, true, false);\noChart.SetTitle(\"Financial Overview: Class Type = \" + sClassType, 20);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"GetClassType.pptx\");\nbuilder.CloseFile();"
		},
		"ApiChart.sethoraxislablesfontsize": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetHorAxisLablesFontSize(10);\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"SetHorAxisLablesFontSize.pptx\");\nbuilder.CloseFile();"
		},
		"ApiChart.sethoraxismajortickmark": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"scatter\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetHorAxisMajorTickMark(\"cross\");\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"SetHorAxisMajorTickMark.pptx\");\nbuilder.CloseFile();"
		},
		"ApiChart.sethoraxisminortickmark": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"scatter\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetHorAxisMinorTickMark(\"in\");\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"SetHorAxisMinorTickMark.pptx\");\nbuilder.CloseFile();"
		},
		"ApiChart.sethoraxisorientation": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetHorAxisOrientation(false);\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"SetHorAxisOrientation.pptx\");\nbuilder.CloseFile();"
		},
		"ApiChart.sethoraxisticklabelposition": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetHorAxisTickLabelPosition(\"high\");\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"SetHorAxisTickLabelPosition.pptx\");\nbuilder.CloseFile();"
		},
		"ApiChart.sethoraxistitle": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetLegendPos(\"bottom\");\noChart.SetShowDataLabels(false, false, true, false);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"SetHorAxisTitle.pptx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setlegendfontsize": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetLegendFontSize(16);\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"SetLegendFontSize.pptx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setlegendpos": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetLegendPos(\"bottom\");\noChart.SetShowDataLabels(false, false, true, false);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"SetLegendPos.pptx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setmajorhorizontalgridlines": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetSize(300 * 36000, 130 * 36000);\nvar oStroke = Api.CreateStroke(1 * 15000, Api.CreateSolidFill(Api.CreateRGBColor(155, 64, 1)));\noChart.SetMajorHorizontalGridlines(oStroke);\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"SetMajorHorizontalGridlines.pptx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setmajorverticalgridlines": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetSize(300 * 36000, 130 * 36000);\nvar oStroke = Api.CreateStroke(1 * 15000, Api.CreateSolidFill(Api.CreateRGBColor(155, 64, 1)));\noChart.SetMajorVerticalGridlines(oStroke);\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"SetMajorVerticalGridlines.pptx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setminorhorizontalgridlines": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetSize(300 * 36000, 130 * 36000);\nvar oStroke = Api.CreateStroke(1 * 10000, Api.CreateSolidFill(Api.CreateRGBColor(155, 64, 1)));\noChart.SetMinorHorizontalGridlines(oStroke);\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"SetMinorHorizontalGridlines.pptx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setminorverticalgridlines": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetSize(300 * 36000, 130 * 36000);\nvar oStroke = Api.CreateStroke(1 * 10000, Api.CreateSolidFill(Api.CreateRGBColor(155, 64, 1)));\noChart.SetMinorVerticalGridlines(oStroke);\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"SetMinorVerticalGridlines.pptx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setshowdatalabels": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetLegendPos(\"bottom\");\noChart.SetShowDataLabels(false, false, true, false);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"SetShowDataLabels.pptx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setshowpointdatalabel": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetShowPointDataLabel(0, 0, false, false, true, false);\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"SetShowPointDataLabel.pptx\");\nbuilder.CloseFile();"
		},
		"ApiChart.settitle": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"bar3D\", [\n    [200, 240, 280],\n    [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetLegendPos(\"bottom\");\noChart.SetShowDataLabels(false, false, true, false);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"SetTitle.pptx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setveraxisorientation": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetVerAxisOrientation(false);\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"SetVerAxisOrientation.pptx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setveraxistitle": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetLegendPos(\"bottom\");\noChart.SetShowDataLabels(false, false, true, false);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"SetVerAxisTitle.pptx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setvertaxislablesfontsize": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetVertAxisLablesFontSize(13);\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"SetVertAxisLablesFontSize.pptx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setvertaxismajortickmark": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"scatter\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetVertAxisMajorTickMark(\"cross\");\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"SetVertAxisMajorTickMark.pptx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setvertaxisminortickmark": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"scatter\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetVertAxisMinorTickMark(\"out\");\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"SetVertAxisMinorTickMark.pptx\");\nbuilder.CloseFile();"
		},
		"ApiChart.setvertaxisticklabelposition": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetVertAxisTickLabelPosition(\"high\");\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"SetVertAxisTickLabelPosition.pptx\");\nbuilder.CloseFile();"
		},
		"ApiDocumentContent.addelement": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\noDocContent.RemoveAllElements();\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"We removed all elements from the shape and added a new paragraph inside it.\");\noDocContent.AddElement(oParagraph);\noDocContent.Push(oParagraph);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"AddElement.pptx\");\nbuilder.CloseFile();"
		},
		"ApiDocumentContent.getclasstype": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar sClassType = oDocContent.GetClassType();\noParagraph.AddText(\"Class Type: \" + sClassType);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetClassType.pptx\");\nbuilder.CloseFile();"
		},
		"ApiDocumentContent.getelement": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oBullet = Api.CreateNumbering(\"ArabicParenR\", 1);\noParagraph.SetBullet(oBullet);\noParagraph.AddText(\" This is an example of the numbered paragraph.\");\noParagraph = Api.CreateParagraph();\noParagraph.SetBullet(oBullet);\noParagraph.AddText(\" This is an example of the numbered paragraph.\");\noDocContent.Push(oParagraph);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetElement.pptx\");\nbuilder.CloseFile();"
		},
		"ApiDocumentContent.getelementscount": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"We got the first paragraph inside the shape.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"Number of elements inside the shape: \" + oDocContent.GetElementsCount());\noParagraph.AddLineBreak();\noParagraph.AddText(\"Line breaks are NOT counted into the number of elements.\");\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetElementsCount.pptx\");\nbuilder.CloseFile();"
		},
		"ApiDocumentContent.push": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\noDocContent.RemoveAllElements();\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"We removed all elements from the shape and added a new paragraph inside it.\");\noDocContent.AddElement(oParagraph);\noDocContent.Push(oParagraph);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"Push.pptx\");\nbuilder.CloseFile();"
		},
		"ApiDocumentContent.removeallelements": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is just a sample paragraph.\");\noDocContent.RemoveAllElements();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"We removed all elements from the shape and added a new paragraph inside it.\");\noDocContent.Push(oParagraph);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"RemoveAllElements.pptx\");\nbuilder.CloseFile();"
		},
		"ApiDocumentContent.removeelement": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is the first paragraph.\");\noDocContent.RemoveElement(0);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is the second paragraph. The first paragraph was removed from the document content.\");\noDocContent.Push(oParagraph);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"RemoveElement.pptx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.copy": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\noSlide.AddObject(oShape);\nvar oCopyShape = oShape.Copy();\noSlide = Api.CreateSlide();\noPresentation.AddSlide(oSlide);\noSlide.AddObject(oCopyShape);\nbuilder.SaveFile(\"pptx\", \"Copy.pptx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.delete": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing1 = Api.CreateShape(\"rect\", 3212465, 963295, oFill, oStroke);\noSlide.AddObject(oDrawing1);\nvar oDrawing2 = Api.CreateChart(\"bar3D\", [\n    [200, 240, 280],\n    [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noDrawing2.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noDrawing2.SetHorAxisTitle(\"Year\", 11);\noDrawing2.SetLegendPos(\"bottom\");\noDrawing2.SetShowDataLabels(false, false, true, false);\noDrawing2.SetTitle(\"Financial Overview\", 13);\noSlide.AddObject(oDrawing2);\noDrawing2.Delete();\nvar oDocContent = oDrawing1.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"The chart was deleted from this slide.\");\nbuilder.SaveFile(\"pptx\", \"Delete.pptx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.getclasstype": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noDrawing.SetPosition(608400, 1267200);\noDrawing.SetSize(300 * 36000, 130 * 36000);\noSlide.AddObject(oDrawing);\nvar aDrawings = oSlide.GetAllDrawings();\nvar sType = aDrawings[0].GetClassType();\nvar oDocContent = oDrawing.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class Type = \" + sType);\nbuilder.SaveFile(\"pptx\", \"GetClassType.pptx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.getparent": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\noSlide.RemoveAllObjects();\noSlide.AddObject(oShape);\nvar oParent = oShape.GetParent();\nvar sType = oParent.GetClassType();\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class type of the shape parent = \" + sType);\nbuilder.SaveFile(\"pptx\", \"GetParent.pptx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.getparentlayout": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar oLayout = oMaster.GetLayout(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\noLayout.AddObject(oShape);\nvar oParent = oShape.GetParentLayout();\nvar sType = oParent.GetClassType();\noSlide.RemoveAllObjects();\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class type of the shape parent = \" + sType);\nbuilder.SaveFile(\"pptx\", \"GetParentLayout.pptx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.getparentmaster": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\noMaster.AddObject(oShape);\nvar oParent = oShape.GetParentMaster();\nvar sType = oParent.GetClassType();\noSlide.RemoveAllObjects();\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class type of the shape parent = \" + sType);\nbuilder.SaveFile(\"pptx\", \"GetParentMaster.pptx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.getparentslide": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\noSlide.RemoveAllObjects();\noSlide.AddObject(oShape);\nvar oParent = oShape.GetParentSlide();\nvar sType = oParent.GetClassType();\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class type of the shape parent = \" + sType);\nbuilder.SaveFile(\"pptx\", \"GetParentSlide.pptx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.getplaceholder": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oPlaceholder = Api.CreatePlaceholder(\"chart\");\noShape.SetPlaceholder(oPlaceholder);\noSlide.AddObject(oShape);\noPlaceholder = oShape.GetPlaceholder();\nvar sType = oPlaceholder.GetClassType();\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class type of the element from the shape = \" + sType);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetPlaceholder.pptx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.setplaceholder": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oPlaceholder = Api.CreatePlaceholder(\"picture\");\noShape.SetPlaceholder(oPlaceholder);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetPlaceholder.pptx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.setposition": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\noDocContent.RemoveAllElements();\nvar oParagraph = Api.CreateParagraph();\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"This is an example of a paragraph inside a shape. Nothing special.\");\noDocContent.Push(oParagraph);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetPosition.pptx\");\nbuilder.CloseFile();"
		},
		"ApiDrawing.setsize": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\noDocContent.RemoveAllElements();\nvar oParagraph = Api.CreateParagraph();\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"This is an example of a paragraph inside a shape. Nothing special.\");\noDocContent.Push(oParagraph);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetSize.pptx\");\nbuilder.CloseFile();"
		},
		"ApiFill.getclasstype": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar sClassType = oFill.GetClassType();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class Type = \" + sClassType);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetClassType.pptx\");\nbuilder.CloseFile();"
		},
		"ApiGradientStop.getclasstype": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar sClassType = oGs1.GetClassType();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class Type = \" + sClassType);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetClassType.pptx\");\nbuilder.CloseFile();"
		},
		"ApiImage.getclasstype": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oImage = Api.CreateImage(\"https://api.onlyoffice.com/content/img/docbuilder/examples/step2_1.png\", 100 * 36000, 50 * 36000);\noSlide.AddObject(oImage);\nvar oSchemeColor = Api.CreateSchemeColor(\"accent6\");\nvar oGs1 = Api.CreateGradientStop(oSchemeColor, 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar sClassType = oImage.GetClassType();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class Type = \" + sClassType);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetClassType.pptx\");\nbuilder.CloseFile();"
		},
		"ApiLayout.addobject": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oMaster = oPresentation.GetMaster(0);\nvar oLayout = oMaster.GetLayout(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\noLayout.AddObject(oShape);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"This shape was added to the current layout.\");\nbuilder.SaveFile(\"pptx\", \"AddObject.pptx\");\nbuilder.CloseFile();"
		},
		"ApiLayout.clearbackground": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar oLayout = oMaster.GetLayout(0);\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 218, 185), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(238, 203, 173), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\noLayout.SetBackground(oFill);\noSlide.FollowLayoutBackground();\noSlide = Api.CreateSlide();\noPresentation.AddSlide(oSlide);\noLayout.ClearBackground();\noSlide.FollowLayoutBackground();\nbuilder.SaveFile(\"pptx\", \"ClearBackground.pptx\");\nbuilder.CloseFile();"
		},
		"ApiLayout.copy": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar oLayout = oMaster.GetLayout(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\noLayout.AddObject(oShape);\noSlide = Api.CreateSlide();\noPresentation.AddSlide(oSlide);\nvar oCopyLayout = oLayout.Copy();\noMaster.AddLayout(1, oCopyLayout);\noSlide.ApplyLayout(oCopyLayout);\nbuilder.SaveFile(\"pptx\", \"Copy.pptx\");\nbuilder.CloseFile();"
		},
		"ApiLayout.delete": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar nCountBefore = oMaster.GetLayoutsCount();\nvar oLayout = oMaster.GetLayout(0);\noLayout.Delete();\nvar nCountAfter = oMaster.GetLayoutsCount();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Number of layouts before deletion: \" + nCountBefore);\noParagraph.AddLineBreak();\noParagraph.AddText(\"Number of layouts after deletion: \" + nCountAfter);\noSlide.RemoveAllObjects();\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"Delete.pptx\");\nbuilder.CloseFile();"
		},
		"ApiLayout.duplicate": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar oLayout = oMaster.GetLayout(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\noLayout.AddObject(oShape);\noSlide = Api.CreateSlide();\noPresentation.AddSlide(oSlide);\nvar oDuplicateLayout = oLayout.Duplicate(1);\noSlide.ApplyLayout(oDuplicateLayout);\nbuilder.SaveFile(\"pptx\", \"Duplicate.pptx\");\nbuilder.CloseFile();"
		},
		"ApiLayout.followmasterbackground": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\noMaster.SetBackground(oFill);\nvar oLayout = oMaster.GetLayout(0);\noLayout.FollowMasterBackground();\noSlide.FollowLayoutBackground();\nbuilder.SaveFile(\"pptx\", \"FollowMasterBackground.pptx\");\nbuilder.CloseFile();"
		},
		"ApiLayout.getallcharts": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oMaster = oPresentation.GetMaster(0);\nvar oLayout = oMaster.GetLayout(0);\nvar oChart = Api.CreateChart(\"bar3D\", [\n    [200, 240, 280],\n    [250, 260, 280]\n  ], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetLegendPos(\"bottom\");\noChart.SetShowDataLabels(false, false, true, false);\noChart.SetTitle(\"Financial Overview\", 20);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetPosition(608400, 1267200);\noLayout.AddObject(oChart);\nvar aCharts = oLayout.GetAllCharts();\nvar oStroke = Api.CreateStroke(1 * 150, Api.CreateSolidFill(Api.CreateRGBColor(155, 64, 1)));\naCharts[0].SetMinorHorizontalGridlines(oStroke);\nbuilder.SaveFile(\"pptx\", \"GetAllCharts.pptx\");\nbuilder.CloseFile();"
		},
		"ApiLayout.getalldrawings": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar oLayout = oMaster.GetLayout(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noDrawing.SetPosition(608400, 1267200);\noDrawing.SetSize(300 * 36000, 130 * 36000);\noSlide.RemoveAllObjects();\noLayout.AddObject(oDrawing);\nvar aDrawings = oLayout.GetAllDrawings();\nvar oPlaceholder = Api.CreatePlaceholder(\"picture\");\naDrawings[0].SetPlaceholder(oPlaceholder);\nbuilder.SaveFile(\"pptx\", \"GetAllDrawings.pptx\");\nbuilder.CloseFile();"
		},
		"ApiLayout.getallshapes": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar oLayout = oMaster.GetLayout(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\noSlide.RemoveAllObjects();\noLayout.AddObject(oShape);\nvar aShapes = oLayout.GetAllShapes();\nvar oDocContent = aShapes[0].GetContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"This is a sample shape which was added to the current layout.\");\nbuilder.SaveFile(\"pptx\", \"GetAllShapes.pptx\");\nbuilder.CloseFile();"
		},
		"ApiLayout.getclasstype": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar oLayout = oMaster.GetLayout(0);\nvar sType = oLayout.GetClassType();\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class type = \" + sType);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetClassType.pptx\");\nbuilder.CloseFile();"
		},
		"ApiLayout.getmaster": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oLayout = oSlide.GetLayout();\nvar oMaster = oLayout.GetMaster();\nvar sType = oMaster.GetClassType();\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class type = \" + sType);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetMaster.pptx\");\nbuilder.CloseFile();"
		},
		"ApiLayout.moveto": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide1 = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar oLayout1 = oMaster.GetLayout(3);\noSlide1.ApplyLayout(oLayout1);\noLayout1.MoveTo(7);\nvar oLayout2 = oMaster.GetLayout(7);\nvar oSlide2 = Api.CreateSlide();\noPresentation.AddSlide(oSlide2);\noSlide2.ApplyLayout(oLayout2);\nvar oSlide3 = Api.CreateSlide();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\noSlide3.AddObject(oShape);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"The third layout was moved to the seventh position within the same collection.\");\noPresentation.AddSlide(oSlide3);\nbuilder.SaveFile(\"pptx\", \"MoveTo.pptx\");\nbuilder.CloseFile();"
		},
		"ApiLayout.removeobject": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar oLayout = oMaster.GetLayout(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"cube\", 3212465, 963295, oFill, oStroke);\noDrawing.SetPosition(30 * 36000, 1267200);\noDrawing.SetSize(150 * 36000, 130 * 36000);\nvar oCopyDrawing = oDrawing.Copy();\noCopyDrawing.SetPosition(160 * 36000, 1267200);\noCopyDrawing.SetSize(150 * 36000, 130 * 36000);\noLayout.AddObject(oDrawing);\noLayout.AddObject(oCopyDrawing);\noLayout.RemoveObject(1, 1);\nvar oDocContent = oDrawing.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"The second cube was removed from this layout.\");\nbuilder.SaveFile(\"pptx\", \"RemoveObject.pptx\");\nbuilder.CloseFile();"
		},
		"ApiLayout.setbackground": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar oLayout = oMaster.GetLayout(0);\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 218, 185), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(238, 203, 173), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\noLayout.SetBackground(oFill);\noSlide.FollowLayoutBackground();\nbuilder.SaveFile(\"pptx\", \"SetBackground.pptx\");\nbuilder.CloseFile();"
		},
		"ApiLayout.setname": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar oLayout = oMaster.GetLayout(0);\noLayout.SetName(\"New layout\");\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"A new name was set to the current layout.\");\noLayout.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetName.pptx\");\nbuilder.CloseFile();"
		},
		"ApiMaster.addlayout": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar nCountBefore = oMaster.GetLayoutsCount();\nvar oLayout = Api.CreateLayout();\noMaster.AddLayout(0, oLayout);\nvar nCountAfter = oMaster.GetLayoutsCount();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Number of layouts before adding new layout: \" + nCountBefore);\noParagraph.AddLineBreak();\noParagraph.AddText(\"Number of layouts after adding new layout: \" + nCountAfter);\noSlide.RemoveAllObjects();\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"AddLayout.pptx\");\nbuilder.CloseFile();"
		},
		"ApiMaster.addobject": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\noMaster.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"AddObject.pptx\");\nbuilder.CloseFile();"
		},
		"ApiMaster.copy": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar nCountBefore = oPresentation.GetMastersCount();\nvar oCopyMaster = oMaster.Copy();\noPresentation.AddMaster(1, oCopyMaster);\nvar nCountAfter = oPresentation.GetMastersCount();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Number of masters before adding the copied master: \" + nCountBefore);\noParagraph.AddLineBreak();\noParagraph.AddText(\"Number of masters after adding the copied master: \" + nCountAfter);\noSlide.RemoveAllObjects();\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"Copy.pptx\");\nbuilder.CloseFile();"
		},
		"ApiMaster.delete": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar nCountBefore = oPresentation.GetMastersCount();\noMaster.Delete();\nvar nCountAfter = oPresentation.GetMastersCount();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Number of masters before deletion: \" + nCountBefore);\noParagraph.AddLineBreak();\noParagraph.AddText(\"Number of masters after deletion: \" + nCountAfter);\noSlide.RemoveAllObjects();\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"Delete.pptx\");\nbuilder.CloseFile();"
		},
		"ApiMaster.duplicate": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar nCountBefore = oPresentation.GetMastersCount();\noMaster.Duplicate(1);\nvar nCountAfter = oPresentation.GetMastersCount();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Number of masters before duplicating: \" + nCountBefore);\noParagraph.AddLineBreak();\noParagraph.AddText(\"Number of masters after duplicating: \" + nCountAfter);\noSlide.RemoveAllObjects();\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"Duplicate.pptx\");\nbuilder.CloseFile();"
		},
		"ApiMaster.getallcharts": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar oChart = Api.CreateChart(\"bar3D\", [\n    [200, 240, 280],\n    [250, 260, 280]\n  ], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetLegendPos(\"bottom\");\noChart.SetShowDataLabels(false, false, true, false);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetPosition(608400, 1267200);\noMaster.AddObject(oChart);\noSlide.RemoveAllObjects();\nvar aCharts = oMaster.GetAllCharts();\nvar oStroke = Api.CreateStroke(1 * 150, Api.CreateSolidFill(Api.CreateRGBColor(155, 64, 1)));\naCharts[0].SetMinorHorizontalGridlines(oStroke);\nbuilder.SaveFile(\"pptx\", \"GetAllCharts.pptx\");\nbuilder.CloseFile();"
		},
		"ApiMaster.getalldrawings": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noDrawing.SetPosition(608400, 1267200);\noDrawing.SetSize(300 * 36000, 130 * 36000);\noSlide.RemoveAllObjects();\noMaster.AddObject(oDrawing);\nvar aDrawings = oMaster.GetAllDrawings();\nvar oPlaceholder = Api.CreatePlaceholder(\"picture\");\naDrawings[0].SetPlaceholder(oPlaceholder);\nbuilder.SaveFile(\"pptx\", \"GetAllDrawings.pptx\");\nbuilder.CloseFile();"
		},
		"ApiMaster.getallshapes": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\noMaster.AddObject(oShape);\nvar aShapes = oMaster.GetAllShapes();\nvar sType = aShapes[0].GetClassType();\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class type = \" + sType);\noShape.SetVerticalTextAlign(\"center\");\nbuilder.SaveFile(\"pptx\", \"GetAllShapes.pptx\");\nbuilder.CloseFile();"
		},
		"ApiMaster.getclasstype": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar sType = oMaster.GetClassType();\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class type = \" + sType);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetClassType.pptx\");\nbuilder.CloseFile();"
		},
		"ApiMaster.getlayout": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar oLayout = Api.CreateLayout();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\noLayout.AddObject(oShape);\noMaster.AddLayout(0, oLayout);\noSlide.ApplyLayout(oMaster.GetLayout(0));\nbuilder.SaveFile(\"pptx\", \"GetLayout.pptx\");\nbuilder.CloseFile();"
		},
		"ApiMaster.getlayoutscount": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar nLayouts = oMaster.GetLayoutsCount();\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Number of layouts = \" + nLayouts);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetLayoutsCount.pptx\");\nbuilder.CloseFile();"
		},
		"ApiMaster.gettheme": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar oTheme = oMaster.GetTheme();\nvar oClrScheme = Api.CreateThemeColorScheme([Api.CreateRGBColor(160, 82, 45), Api.CreateRGBColor(205, 133, 63), Api.CreateRGBColor(222, 184, 135), Api.CreateRGBColor(245, 222, 179), Api.CreateRGBColor(240, 128, 128), \n    Api.CreateRGBColor(255, 69, 0), Api.CreateRGBColor(0, 0, 0), Api.CreateRGBColor(79, 79, 79), Api.CreateRGBColor(65, 105, 225), Api.CreateRGBColor(176, 196, 222), Api.CreateRGBColor(255, 255, 255), Api.CreateRGBColor(255, 222, 173)], \"New color scheme\");\noTheme.SetColorScheme(oClrScheme);\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetLegendPos(\"bottom\");\noChart.SetShowDataLabels(false, false, true, false);\noChart.SetTitle(\"Financial Overview\", 20);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"GetTheme.pptx\");\nbuilder.CloseFile();"
		},
		"ApiMaster.removelayout": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar nCountBefore = oMaster.GetLayoutsCount();\noMaster.RemoveLayout(0, 2);\nvar nCountAfter = oMaster.GetLayoutsCount();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Number of layouts before deletion: \" + nCountBefore);\noParagraph.AddLineBreak();\noParagraph.AddText(\"Number of layouts after deletion: \" + nCountAfter);\noSlide.RemoveAllObjects();\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"RemoveLayout.pptx\");\nbuilder.CloseFile();"
		},
		"ApiMaster.removeobject": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"cube\", 3212465, 963295, oFill, oStroke);\noDrawing.SetPosition(30 * 36000, 1267200);\noDrawing.SetSize(150 * 36000, 130 * 36000);\nvar oCopyDrawing = oDrawing.Copy();\noCopyDrawing.SetPosition(170 * 36000, 1267200);\noCopyDrawing.SetSize(150 * 36000, 130 * 36000);\noMaster.AddObject(oDrawing);\noMaster.AddObject(oCopyDrawing);\noMaster.RemoveObject(1, 1);\nvar oDocContent = oDrawing.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"The second cube was removed from this master.\");\nbuilder.SaveFile(\"pptx\", \"RemoveObject.pptx\");\nbuilder.CloseFile();"
		},
		"ApiMaster.settheme": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar oClrScheme = Api.CreateThemeColorScheme([Api.CreateRGBColor(160, 82, 45), Api.CreateRGBColor(205, 133, 63), Api.CreateRGBColor(222, 184, 135), Api.CreateRGBColor(245, 222, 179), Api.CreateRGBColor(240, 128, 128), \n    Api.CreateRGBColor(255, 69, 0), Api.CreateRGBColor(0, 0, 0), Api.CreateRGBColor(79, 79, 79), Api.CreateRGBColor(65, 105, 225), Api.CreateRGBColor(176, 196, 222), Api.CreateRGBColor(255, 255, 255), Api.CreateRGBColor(255, 222, 173)], \"New color scheme\");\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 218, 185), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(238, 203, 173), 100000);\nvar oFill1 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oBgFill1 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke1 = Api.CreateStroke(0, oFill1);\noGs1 = Api.CreateGradientStop(Api.CreateRGBColor(238, 149, 114), 0);\noGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 114, 86), 100000);\nvar oFill2 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oBgFill2 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke2 = Api.CreateStroke(0, oFill2);\noGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 127, 36), 0);\noGs2 = Api.CreateGradientStop(Api.CreateRGBColor(238, 118, 33), 100000);\nvar oFill3 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oBgFill3 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke3 = Api.CreateStroke(0, oFill3);\nvar oFormatScheme = Api.CreateThemeFormatScheme([oFill1, oFill2, oFill3], [oBgFill1, oBgFill2, oBgFill3], [oStroke1, oStroke2, oStroke3], \"New format scheme\");\nvar oFontScheme = Api.CreateThemeFontScheme(\"Arial\", \"Noto Sans Simplified Chinese\", \"Arabic\", \"Times New Roman\", \"Noto Serif Simplified Chinese\", \"Arabic\", \"New font scheme\");\nvar oTheme = Api.CreateTheme(\"New theme\", oMaster, oClrScheme, oFormatScheme, oFontScheme);\noMaster.SetTheme(oTheme);\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetLegendPos(\"bottom\");\noChart.SetShowDataLabels(false, false, true, false);\noChart.SetTitle(\"Financial Overview\", 20);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"SetTheme.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.addelement": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is the text for a text run. Nothing special.\");\noParagraph.AddElement(oRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"AddElement.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.addlinebreak": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"This is a text inside the shape aligned left.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"This is a text after the line break.\");\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"AddLineBreak.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.addtabstop": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is just a sample text. After it three tab stops will be added.\");\noParagraph.AddTabStop();\noParagraph.AddTabStop();\noParagraph.AddTabStop();\noParagraph.AddText(\"This is the text which starts after the tab stops.\");\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"AddTabStop.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.addtext": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"This is a text inside the shape aligned left.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"This is a text after the line break.\");\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"AddText.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.copy": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\noDocContent.RemoveAllElements();\nvar oParagraph = Api.CreateParagraph();\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"This is just a sample text that was copied.\");\noDocContent.Push(oParagraph);\nvar oCopyParagraph = oParagraph.Copy();\noDocContent.Push(oCopyParagraph);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"Copy.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.delete": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\noDocContent.RemoveAllElements();\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is just a sample text.\");\noDocContent.Push(oParagraph);\noParagraph.Delete();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is the second paragraph. The first paragraph was removed from the shape content.\");\noDocContent.Push(oParagraph);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"Delete.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getclasstype": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar sClassType = oParagraph.GetClassType();\noParagraph.AddText(\"Class Type = \" + sClassType);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetClassType.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getelement": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.RemoveAllElements();\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is the text for the first text run. Do not forget a space at its end to separate from the second one. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.AddText(\"This is the text for the second run. We will set it bold afterwards. It also needs space at its end. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.AddText(\"This is the text for the third run. It ends the paragraph.\");\noParagraph.AddElement(oRun);\noRun = oParagraph.GetElement(2);\noRun.SetBold(true);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetElement.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getelementscount": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.RemoveAllElements();\nvar oRun = Api.CreateRun();\noRun.AddText(\"Number of paragraph elements at this point: \");\noRun.AddTabStop();\noRun.AddText(\"\" + oParagraph.GetElementsCount());\noRun.AddLineBreak();\noParagraph.AddElement(oRun);\noRun.AddText(\"Number of paragraph elements after we added a text run: \");\noRun.AddTabStop();\noRun.AddText(\"\" + oParagraph.GetElementsCount());\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetElementsCount.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getindfirstline": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noSlide.AddObject(oShape);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is a paragraph with the indent of 1 inch set to the first line. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph.SetIndFirstLine(1440);\nvar nIndFirstLine = oParagraph.GetIndFirstLine();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"First line indent: \" + nIndFirstLine);\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"pptx\", \"GetIndFirstLine.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getindleft": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noSlide.AddObject(oShape);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is a paragraph with the indent of 2 inches set to it. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph.SetIndLeft(2880);\nvar nIndLeft = oParagraph.GetIndLeft();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Left indent: \" + nIndLeft);\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"pptx\", \"GetIndLeft.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getindright": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noSlide.AddObject(oShape);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is a paragraph with the right offset of 2 inches set to it. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph.SetJc(\"right\");\noParagraph.SetIndRight(2880);\nvar nIndRight = oParagraph.GetIndRight();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Right indent: \" + nIndRight);\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"pptx\", \"GetIndRight.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getjc": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noSlide.AddObject(oShape);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is a paragraph with the text in it aligned by the center. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph.SetJc(\"center\");\nvar sJc = oParagraph.GetJc();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Justification: \" + sJc);\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"pptx\", \"GetJc.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getnext": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\noDocContent.RemoveAllElements();\nvar oParagraph1 = Api.CreateParagraph();\noParagraph1.AddText(\"This is the first paragraph.\");\noDocContent.Push(oParagraph1);\nvar oParagraph2 = Api.CreateParagraph();\noParagraph2.AddText(\"This is the second paragraph.\");\noDocContent.Push(oParagraph2);\noSlide.AddObject(oShape);\nvar oNextParagraph = oParagraph1.GetNext();\noNextParagraph.SetBold(true);\nbuilder.SaveFile(\"pptx\", \"GetNext.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getparapr": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetSpacingAfter(1440);\noParagraph.AddText(\"This is an example of setting a space after a paragraph. \");\noParagraph.AddText(\"The second paragraph will have an offset of one inch from the top. \");\noParagraph.AddText(\"This is due to the fact that the first paragraph has this offset enabled.\");\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is the second paragraph and it is one inch away from the first paragraph.\");\noDocContent.Push(oParagraph);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetParaPr.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getprevious": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\noDocContent.RemoveAllElements();\nvar oParagraph1 = Api.CreateParagraph();\noParagraph1.AddText(\"This is the first paragraph.\");\noDocContent.Push(oParagraph1);\nvar oParagraph2 = Api.CreateParagraph();\noParagraph2.AddText(\"This is the second paragraph.\");\noDocContent.Push(oParagraph2);\noSlide.AddObject(oShape);\nvar oPreviousParagraph = oParagraph2.GetPrevious();\noPreviousParagraph.SetBold(true);\nbuilder.SaveFile(\"pptx\", \"GetPrevious.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getspacingafter": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noSlide.AddObject(oShape);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph1 = oDocContent.GetElement(0);\noParagraph1.AddText(\"This is an example of setting a space after a paragraph. \");\noParagraph1.AddText(\"The second paragraph will have an offset of one inch from the top. \");\noParagraph1.AddText(\"This is due to the fact that the first paragraph has this offset enabled.\");\noParagraph1.SetSpacingAfter(1440);\nvar oParagraph2 = Api.CreateParagraph();\noParagraph2.AddText(\"This is the second paragraph and it is one inch away from the first paragraph.\");\noParagraph2.AddLineBreak();\nvar nSpacingAfter = oParagraph1.GetSpacingAfter();\noParagraph2.AddText(\"Spacing after: \" + nSpacingAfter);\noDocContent.Push(oParagraph2);\nbuilder.SaveFile(\"pptx\", \"GetSpacingAfter.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getspacingbefore": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noSlide.AddObject(oShape);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is an example of setting a space before a paragraph. \");\noParagraph.AddText(\"The second paragraph will have an offset of one inch from the top. \");\noParagraph.AddText(\"This is due to the fact that the second paragraph has this offset enabled.\");\nvar oParagraph2 = Api.CreateParagraph();\noParagraph2.AddText(\"This is the second paragraph and it is one inch away from the first paragraph.\");\noParagraph2.SetSpacingBefore(1440);\noDocContent.Push(oParagraph2);\nvar nSpacingBefore = oParagraph2.GetSpacingBefore();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Spacing before: \" + nSpacingBefore);\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"pptx\", \"GetSpacingBefore.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getspacinglinerule": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noSlide.AddObject(oShape);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetSpacingLine(3 * 240, \"auto\");\noParagraph.AddText(\"Paragraph 1. Spacing: 3 times of a common paragraph line spacing.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddLineBreak();\nvar sSpacingLineRule = oParagraph.GetSpacingLineRule();\noParagraph.AddText(\"Spacing line rule: \" + sSpacingLineRule);\nbuilder.SaveFile(\"pptx\", \"GetSpacingLineRule.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.getspacinglinevalue": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noSlide.AddObject(oShape);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetSpacingLine(3 * 240, \"auto\");\noParagraph.AddText(\"Paragraph 1. Spacing: 3 times of a common paragraph line spacing.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddLineBreak();\nvar nSpacingLineValue = oParagraph.GetSpacingLineValue();\noParagraph.AddText(\"Spacing line value: \" + nSpacingLineValue);\nbuilder.SaveFile(\"pptx\", \"GetSpacingLineValue.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.removeallelements": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is the first text run in the current paragraph.\");\noParagraph.RemoveAllElements();\noParagraph.AddText(\"We removed all the paragraph elements and added a new text run inside it.\");\noDocContent.Push(oParagraph);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"RemoveAllElements.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.removeelement": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph = oDocContent.GetElement(0);\noParagraph.RemoveAllElements();\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is the first paragraph element. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.AddText(\"This is the second paragraph element. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.AddText(\"This is the third paragraph element (it will be removed from the paragraph and we will not see it). \");\noParagraph.AddElement(oRun);\noParagraph.AddLineBreak();\noRun = Api.CreateRun();\noRun.AddText(\"This is the fourth paragraph element - it became the third, because we removed the previous run from the paragraph. \");\noParagraph.AddElement(oRun);\noParagraph.AddLineBreak();\noRun = Api.CreateRun();\noRun.AddText(\"Please note that line breaks are not counted into paragraph elements!\");\noParagraph.AddElement(oRun);\noParagraph.RemoveElement(3);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"RemoveElement.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setbullet": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oBullet = Api.CreateBullet(\"-\");\noParagraph.SetBullet(oBullet);\noParagraph.AddText(\" This is an example of the bulleted paragraph.\");\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetBullet.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setindfirstline": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is a paragraph with the indent of 1 inch set to the first line. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph.SetIndFirstLine(1440);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a paragraph without any indent set to the first line. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noDocContent.Push(oParagraph);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetIndFirstLine.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setindleft": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is a paragraph with the indent of 2 inches set to it. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.SetIndLeft(2880);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a paragraph without any indent set to it. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noDocContent.Push(oParagraph);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetIndLeft.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setindright": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is a paragraph with the right offset of 2 inches set to it. \");\noParagraph.AddText(\"We also aligned the text in it by the right side. \");\noParagraph.AddText(\"This sentence is used to add lines for demonstrative purposes.\");\noParagraph.SetJc(\"right\");\noParagraph.SetIndRight(2880);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a paragraph without any offset set to it. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noDocContent.Push(oParagraph);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetIndRight.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setjc": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is a paragraph with the text in it aligned by the center. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph.SetJc(\"center\");\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a paragraph with the text in it aligned by the right side. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph.SetJc(\"right\");\noDocContent.Push(oParagraph);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a paragraph with the text in it aligned by the left side. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph.SetJc(\"left\");\noDocContent.Push(oParagraph);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetJc.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setspacingafter": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is an example of setting a space after a paragraph. \");\noParagraph.AddText(\"The second paragraph will have an offset of one inch from the top. \");\noParagraph.AddText(\"This is due to the fact that the first paragraph has this offset enabled.\");\noParagraph.SetSpacingAfter(1440);\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is the second paragraph and it is one inch away from the first paragraph.\");\noDocContent.Push(oParagraph);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetSpacingAfter.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setspacingbefore": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is an example of setting a space before a paragraph. \");\noParagraph.AddText(\"The second paragraph will have an offset of one inch from the top. \");\noParagraph.AddText(\"This is due to the fact that the second paragraph has this offset enabled.\");\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is the second paragraph and it is one inch away from the first paragraph.\");\noParagraph.SetSpacingBefore(1440);\noDocContent.Push(oParagraph);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetSpacingBefore.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.setspacingline": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetSpacingLine(2 * 240, \"auto\");\noParagraph.AddText(\"Paragraph 1. Spacing: 2 times of a common paragraph line spacing.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph = Api.CreateParagraph();\noParagraph.SetSpacingLine(200, \"exact\");\noParagraph.AddText(\"Paragraph 2. Spacing: exact 10 points.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noDocContent.Push(oParagraph);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetSpacingLine.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParagraph.settabs": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetTabs([1440, 4320, 7200], [\"left\", \"center\", \"right\"]);\noParagraph.AddTabStop();\noParagraph.AddText(\"Custom tab - 1 inch left\");\noParagraph.AddLineBreak();\noParagraph.AddTabStop();\noParagraph.AddTabStop();\noParagraph.AddText(\"Custom tab - 3 inches center\");\noParagraph.AddLineBreak();\noParagraph.AddTabStop();\noParagraph.AddTabStop();\noParagraph.AddTabStop();\noParagraph.AddText(\"Custom tab - 5 inches right\");\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetTabs.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.getclasstype": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\nvar sClassType = oParaPr.GetClassType();\noParaPr.SetIndFirstLine(1440);\noParagraph.AddText(\"This is the first paragraph with the indent of 1 inch set to the first line. \");\noParagraph.AddText(\"This indent is set by the paragraph style. No paragraph inline style is applied. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Class Type = \" + sClassType);\noDocContent.Push(oParagraph);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetClassType.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.getindfirstline": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noSlide.AddObject(oShape);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetIndFirstLine(1440);\noParagraph.AddText(\"This is the first paragraph with the indent of 1 inch set to the first line. \");\noParagraph.AddText(\"This indent is set by the paragraph style. No paragraph inline style is applied. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\nvar nIndFirstLine = oParaPr.GetIndFirstLine();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"First line indent: \" + nIndFirstLine);\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"pptx\", \"GetIndFirstLine.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.getindleft": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noSlide.AddObject(oShape);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetIndLeft(2880);\noParagraph.AddText(\"This is the first paragraph with the indent of 2 inches set to it. \");\noParagraph.AddText(\"This indent is set by the paragraph style. No paragraph inline style is applied. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\nvar nIndLeft = oParaPr.GetIndLeft();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Left indent: \" + nIndLeft);\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"pptx\", \"GetIndLeft.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.getindright": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noSlide.AddObject(oShape);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetIndRight(2880);\noParaPr.SetJc(\"right\");\noParagraph.AddText(\"This is the first paragraph with the right offset of 2 inches set to it. \");\noParagraph.AddText(\"This indent is set by the paragraph style. No paragraph inline style is applied. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\nvar nIndRight = oParaPr.GetIndRight();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Right indent: \" + nIndRight);\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"pptx\", \"GetIndRight.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.getjc": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noSlide.AddObject(oShape);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetJc(\"center\");\noParagraph.AddText(\"This is a paragraph with the text in it aligned by the center. \");\noParagraph.AddText(\"The justification is specified in the paragraph style. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\nvar sJc = oParaPr.GetJc();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Justification: \" + sJc);\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"pptx\", \"GetJc.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.getspacingafter": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noSlide.AddObject(oShape);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetSpacingAfter(1440);\noParagraph.AddText(\"This is an example of setting a space after a paragraph. \");\noParagraph.AddText(\"The second paragraph will have an offset of one inch from the top. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\nvar nSpacingAfter = oParaPr.GetSpacingAfter();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Spacing after : \" + nSpacingAfter);\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"pptx\", \"GetSpacingAfter.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.getspacingbefore": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noSlide.AddObject(oShape);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is an example of setting a space before a paragraph. \");\noParagraph.AddText(\"The second paragraph will have an offset of one inch from the top. \");\noParagraph.AddText(\"This is due to the fact that the second paragraph has this offset enabled.\");\nvar oParagraph2 = Api.CreateParagraph();\noParagraph2.AddText(\"This is the second paragraph and it is one inch away from the first paragraph.\");\nvar oParaPr = oParagraph2.GetParaPr();\noParaPr.SetSpacingBefore(1440);\noDocContent.Push(oParagraph2);\nvar nSpacingBefore = oParaPr.GetSpacingBefore();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Spacing before: \" + nSpacingBefore);\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"pptx\", \"GetSpacingBefore.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.getspacinglinerule": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noSlide.AddObject(oShape);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetSpacingLine(3 * 240, \"auto\");\noParagraph.AddText(\"Paragraph 1. Spacing: 3 times of a common paragraph line spacing.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\nvar sSpacingLineRule = oParaPr.GetSpacingLineRule();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Spacing line rule : \" + sSpacingLineRule);\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"pptx\", \"GetSpacingLineRule.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.getspacinglinevalue": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noSlide.AddObject(oShape);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetSpacingLine(3 * 240, \"auto\");\noParagraph.AddText(\"Paragraph 1. Spacing: 3 times of a common paragraph line spacing.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\nvar nSpacingLineValue = oParaPr.GetSpacingLineValue();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"Spacing line value : \" + nSpacingLineValue);\noDocContent.Push(oParagraph);\nbuilder.SaveFile(\"pptx\", \"GetSpacingLineValue.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.setbullet": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\nvar oBullet = Api.CreateBullet(\"-\");\noParaPr.SetBullet(oBullet);\noParagraph.AddText(\" This is an example of the bulleted paragraph.\");\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetBullet.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.setindfirstline": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetIndFirstLine(1440);\noParagraph.AddText(\"This is the first paragraph with the indent of 1 inch set to the first line. \");\noParagraph.AddText(\"This indent is set by the paragraph style. No paragraph inline style is applied. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetIndFirstLine.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.setindleft": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetIndLeft(2880);\noParagraph.AddText(\"This is the first paragraph with the indent of 2 inches set to it. \");\noParagraph.AddText(\"This indent is set by the paragraph style. No paragraph inline style is applied. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetIndLeft.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.setindright": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetIndRight(2880);\noParagraph.AddText(\"This is the first paragraph with the right offset of 2 inches set to it. \");\noParagraph.AddText(\"This offset is set by the paragraph style. No paragraph inline style is applied. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetIndRight.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.setjc": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetJc(\"center\");\noParagraph.AddText(\"This is a paragraph with the text in it aligned by the center. \");\noParagraph.AddText(\"The justification is specified in the paragraph style. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes.\");\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetJc.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.setspacingafter": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetSpacingAfter(1440);\noParagraph.AddText(\"This is an example of setting a space after a paragraph. \");\noParagraph.AddText(\"The second paragraph will have an offset of one inch from the top. \");\noParagraph.AddText(\"This is due to the fact that the first paragraph has this offset enabled.\");\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is the second paragraph and it is one inch away from the first paragraph.\");\noDocContent.Push(oParagraph);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetSpacingAfter.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.setspacingbefore": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParagraph.AddText(\"This is an example of setting a space before a paragraph. \");\noParagraph.AddText(\"The second paragraph will have an offset of one inch from the top. \");\noParagraph.AddText(\"This is due to the fact that the second paragraph has this offset enabled.\");\noParagraph = Api.CreateParagraph();\noParaPr = oParagraph.GetParaPr();\noParaPr.SetSpacingBefore(1440);\noParagraph.AddText(\"This is the second paragraph and it is one inch away from the first paragraph.\");\noDocContent.Push(oParagraph);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetSpacingBefore.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.setspacingline": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetSpacingLine(3 * 240, \"auto\");\noParagraph.AddText(\"Paragraph 1. Spacing: 3 times of a common paragraph line spacing.\");\noParagraph.AddLineBreak();\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noParagraph.AddText(\"These sentences are used to add lines for demonstrative purposes. \");\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetSpacingLine.pptx\");\nbuilder.CloseFile();"
		},
		"ApiParaPr.settabs": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oParaPr = oParagraph.GetParaPr();\noParaPr.SetTabs([1440, 4320, 7200], [\"left\", \"center\", \"right\"]);\noParagraph.AddTabStop();\noParagraph.AddText(\"Custom tab - 1 inch left\");\noParagraph.AddLineBreak();\noParagraph.AddTabStop();\noParagraph.AddTabStop();\noParagraph.AddText(\"Custom tab - 3 inches center\");\noParagraph.AddLineBreak();\noParagraph.AddTabStop();\noParagraph.AddTabStop();\noParagraph.AddTabStop();\noParagraph.AddText(\"Custom tab - 5 inches right\");\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetTabs.pptx\");\nbuilder.CloseFile();"
		},
		"ApiPlaceholder.getclasstype": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oPlaceholder = Api.CreatePlaceholder(\"chart\");\noShape.SetPlaceholder(oPlaceholder);\nvar sType = oPlaceholder.GetClassType();\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class type = \" + sType);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetClassType.pptx\");\nbuilder.CloseFile();"
		},
		"ApiPlaceholder.settype": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oPlaceholder = Api.CreatePlaceholder(\"chart\");\noShape.SetPlaceholder(oPlaceholder);\noPlaceholder.SetType(\"picture\");\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetType.pptx\");\nbuilder.CloseFile();"
		},
		"ApiPresentation.addmaster": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = Api.CreateMaster();\nvar nCountBefore = oPresentation.GetMastersCount();\noPresentation.AddMaster(nCountBefore, oMaster);\nvar nCountAfter = oPresentation.GetMastersCount();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Number of masters before adding new master: \" + nCountBefore);\noParagraph.AddLineBreak();\noParagraph.AddText(\"Number of masters after adding new master: \" + nCountAfter);\noSlide.RemoveAllObjects();\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"AddMaster.pptx\");\nbuilder.CloseFile();"
		},
		"ApiPresentation.addslide": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = Api.CreateSlide();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\noSlide.SetBackground(oFill);\noPresentation.AddSlide(oSlide);\nbuilder.SaveFile(\"pptx\", \"AddSlide.pptx\");\nbuilder.CloseFile();"
		},
		"ApiPresentation.applytheme": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar oClrScheme = Api.CreateThemeColorScheme([Api.CreateRGBColor(160, 82, 45), Api.CreateRGBColor(205, 133, 63), Api.CreateRGBColor(222, 184, 135), Api.CreateRGBColor(245, 222, 179), Api.CreateRGBColor(240, 128, 128), \n    Api.CreateRGBColor(255, 69, 0), Api.CreateRGBColor(0, 0, 0), Api.CreateRGBColor(79, 79, 79), Api.CreateRGBColor(65, 105, 225), Api.CreateRGBColor(176, 196, 222), Api.CreateRGBColor(255, 255, 255), Api.CreateRGBColor(255, 222, 173)], \"New color scheme\");\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 218, 185), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(238, 203, 173), 100000);\nvar oFill1 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oBgFill1 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke1 = Api.CreateStroke(0, oFill1);\noGs1 = Api.CreateGradientStop(Api.CreateRGBColor(238, 149, 114), 0);\noGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 114, 86), 100000);\nvar oFill2 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oBgFill2 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke2 = Api.CreateStroke(0, oFill2);\noGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 127, 36), 0);\noGs2 = Api.CreateGradientStop(Api.CreateRGBColor(238, 118, 33), 100000);\nvar oFill3 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oBgFill3 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke3 = Api.CreateStroke(0, oFill3);\nvar oFormatScheme = Api.CreateThemeFormatScheme([oFill1, oFill2, oFill3], [oBgFill1, oBgFill2, oBgFill3], [oStroke1, oStroke2, oStroke3], \"New format scheme\");\nvar oFontScheme = Api.CreateThemeFontScheme(\"Arial\", \"Noto Sans Simplified Chinese\", \"Arabic\", \"Times New Roman\", \"Noto Serif Simplified Chinese\", \"Arabic\", \"New font scheme\");\nvar oTheme = Api.CreateTheme(\"New theme\", oMaster, oClrScheme, oFormatScheme, oFontScheme);\noPresentation.ApplyTheme(oTheme);\nbuilder.SaveFile(\"pptx\", \"ApplyTheme.pptx\");\nbuilder.CloseFile();"
		},
		"ApiPresentation.createnewhistorypoint": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"This is just a sample text.\");\noPresentation.CreateNewHistoryPoint();\noParagraph = Api.CreateParagraph();\noParagraph.AddText(\"New history point was just created.\");\noDocContent.Push(oParagraph);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"CreateNewHistoryPoint.pptx\");\nbuilder.CloseFile();"
		},
		"ApiPresentation.getclasstype": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar sClassType = oPresentation.GetClassType();\noParagraph.AddText(\"Class Type = \" + sClassType);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetClassType.pptx\");\nbuilder.CloseFile();"
		},
		"ApiPresentation.getcurrentslide": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetCurrentSlide();\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetCurrentSlide.pptx\");\nbuilder.CloseFile();"
		},
		"ApiPresentation.getcurslideindex": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar nCurrentSlideIndex = oPresentation.GetCurSlideIndex();\noParagraph.AddText(\"Current Slide Index = \" + nCurrentSlideIndex);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetCurSlideIndex.pptx\");\nbuilder.CloseFile();"
		},
		"ApiPresentation.getmaster": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar sType = oMaster.GetClassType();\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class type = \" + sType);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetMaster.pptx\");\nbuilder.CloseFile();"
		},
		"ApiPresentation.getmasterscount": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar nMasters = oPresentation.GetMastersCount();\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Number of masters = \" + nMasters);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetMastersCount.pptx\");\nbuilder.CloseFile();"
		},
		"ApiPresentation.getslidebyindex": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetSlideByIndex.pptx\");\nbuilder.CloseFile();"
		},
		"ApiPresentation.getslidescount": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide1 = oPresentation.GetSlideByIndex(0);\nvar oSlide2 = Api.CreateSlide();\noPresentation.AddSlide(oSlide2);\nvar nSlides = oPresentation.GetSlidesCount();\noSlide1.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Number of slides = \" + nSlides);\noSlide1.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetSlidesCount.pptx\");\nbuilder.CloseFile();"
		},
		"ApiPresentation.removeslides": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = Api.CreateSlide();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\noSlide.SetBackground(oFill);\noPresentation.AddSlide(oSlide);\noPresentation.RemoveSlides(0, 1);\noSlide.RemoveAllObjects();\noFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar sClassType = oPresentation.GetClassType();\noParagraph.AddText(\"A slide with no background was removed from this presentation.\");\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"RemoveSlides.pptx\");\nbuilder.CloseFile();"
		},
		"ApiPresentation.setlanguage": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\noPresentation.SetLanguage(\"en-CA\");\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"English (Canada) will be used to check spelling and grammar in this presentation (if requested).\");\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetLanguage.pptx\");\nbuilder.CloseFile();"
		},
		"ApiPresentation.setsizes": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\noPresentation.SetSizes(254 * 36000, 190 * 36000);\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 200 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"The size of this presentation was changed: width - 254 mm, height - 190 mm.\");\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetSizes.pptx\");\nbuilder.CloseFile();"
		},
		"ApiPresetColor.getclasstype": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oPresetColor = Api.CreatePresetColor(\"lightYellow\");\nvar oGs1 = Api.CreateGradientStop(oPresetColor, 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar sClassType = oPresetColor.GetClassType();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class Type = \" + sClassType);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetClassType.pptx\");\nbuilder.CloseFile();"
		},
		"ApiRGBColor.getclasstype": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oRGBColor = Api.CreateRGBColor(255, 224, 204);\nvar oGs1 = Api.CreateGradientStop(oRGBColor, 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar sClassType = oRGBColor.GetClassType();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class Type = \" + sClassType);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetClassType.pptx\");\nbuilder.CloseFile();"
		},
		"ApiRun.addlinebreak": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is the text for the first line. Nothing special.\");\noRun.AddLineBreak();\noRun.AddText(\"This is the text which starts from the beginning of the second line. \");\noRun.AddText(\"It is written in two text runs, you need a space at the end of the first run sentence to separate them.\");\noParagraph.AddElement(oRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"AddLineBreak.pptx\");\nbuilder.CloseFile();"
		},
		"ApiRun.addtabstop": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.SetFontSize(30);\noRun.AddText(\"This is just a sample text. After it three tab stops will be added.\");\noRun.AddTabStop();\noRun.AddTabStop();\noRun.AddTabStop();\noRun.AddText(\"This is the text which starts after the tab stops.\");\noParagraph.AddElement(oRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"AddTabStop.pptx\");\nbuilder.CloseFile();"
		},
		"ApiRun.addtext": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.SetFontSize(30);\noRun.AddText(\"This is just a sample text. Nothing special.\");\noParagraph.AddElement(oRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"AddText.pptx\");\nbuilder.CloseFile();"
		},
		"ApiRun.clearcontent": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.SetFontSize(30);\noRun.AddText(\"This is just a sample text. \");\noRun.AddText(\"But you will not see it in the resulting document, as it will be cleared.\");\noParagraph.AddElement(oRun);\noRun.ClearContent();\noParagraph = Api.CreateParagraph();\noRun = Api.CreateRun();\noRun.AddText(\"The text in the previous paragraph cannot be seen, as it has been cleared.\");\noParagraph.AddElement(oRun);\noDocContent.Push(oParagraph);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"ClearContent.pptx\");\nbuilder.CloseFile();"
		},
		"ApiRun.copy": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text that was copied. \");\noParagraph.AddElement(oRun);\nvar oCopyRun = oRun.Copy();\noParagraph.AddElement(oCopyRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"Copy.pptx\");\nbuilder.CloseFile();"
		},
		"ApiRun.delete": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun.Delete();\noRun = Api.CreateRun();\noRun.AddText(\"This is the second run. The first run was removed from the paragraph.\");\noParagraph.AddElement(oRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"Delete.pptx\");\nbuilder.CloseFile();"
		},
		"ApiRun.getclasstype": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\nvar sClassType = oRun.GetClassType();\noRun.SetFontSize(30);\noRun.AddText(\"Class Type = \" + sClassType);\noParagraph.AddElement(oRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetClassType.pptx\");\nbuilder.CloseFile();"
		},
		"ApiRun.gettextpr": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\nvar oTextPr = oRun.GetTextPr();\noTextPr.SetFontSize(30);\noParagraph.SetJc(\"left\");\noRun.AddText(\"This is a sample text inside the shape with the font size set to 15 points using the text properties.\");\noParagraph.AddElement(oRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetTextPr.pptx\");\nbuilder.CloseFile();"
		},
		"ApiRun.removeallelements": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text.\");\noRun.RemoveAllElements();\noRun.AddText(\"All elements from this run were removed before adding this text.\");\noParagraph.AddElement(oRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"RemoveAllElements.pptx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setbold": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetBold(true);\noRun.AddText(\"This is a text run with the font set to bold.\");\noParagraph.AddElement(oRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetBold.pptx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setcaps": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetCaps(true);\noRun.AddText(\"This is a text run with the font set to capitalized letters.\");\noParagraph.AddElement(oRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetCaps.pptx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setcolor": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is a text run with the font color set to red.\");\noParagraph.AddElement(oRun);\noRun.SetColor(255, 0, 0);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetColor.pptx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setdoublestrikeout": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetDoubleStrikeout(true);\noRun.AddText(\"This is a text run with the text struck out with two lines.\");\noParagraph.AddElement(oRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetDoubleStrikeout.pptx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setfill": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noFill = Api.CreateSolidFill(Api.CreateRGBColor(255, 255, 0));\noRun.SetFill(oFill);\noRun.AddText(\"This is a text run with the font color set to yellow.\");\noParagraph.AddElement(oRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetFill.pptx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setfontfamily": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetFontFamily(\"Comic Sans MS\");\noRun.AddText(\"This is a text run with the font family set to 'Comic Sans MS'.\");\noParagraph.AddElement(oRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetFontFamily.pptx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setfontsize": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetFontSize(50);\noRun.AddText(\"This is a text run with the font size set to 25 points (50 half-points).\");\noParagraph.AddElement(oRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetFontSize.pptx\");\nbuilder.CloseFile();"
		},
		"ApiRun.sethighlight": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is a text run with the text highlighted with red color.\");\noParagraph.AddElement(oRun);\noRun.SetHighlight(\"red\");\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetHighlight.pptx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setitalic": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetItalic(true);\noRun.AddText(\"This is a text run with the font set to italicized letters.\");\noParagraph.AddElement(oRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetItalic.pptx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setlanguage": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is a text run with the text language set to English (Canada).\");\noParagraph.AddElement(oRun);\noRun.SetLanguage(\"en-CA\");\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetLanguage.pptx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setposition": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"rect\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is a text run with the text raised 10 half-points.\");\noParagraph.AddElement(oRun);\noRun.SetPosition(10);\noRun = Api.CreateRun();\noRun.AddText(\"This is a text run with the text lowered 16 half-points.\");\noParagraph.AddElement(oRun);\noRun.SetPosition(-16);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetPosition.pptx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setshd": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is a text run with the text shading set to green.\");\noParagraph.AddElement(oRun);\noRun.SetShd(\"clear\", 0, 255, 0);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetShd.pptx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setsmallcaps": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetSmallCaps(true);\noRun.AddText(\"This is a text run with the font set to small capitalized letters.\");\noParagraph.AddElement(oRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetSmallCaps.pptx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setspacing": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetSpacing(80);\noRun.AddText(\"This is a text run with the text spacing set to 4 points (20 twentieths of a point).\");\noParagraph.AddElement(oRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetSpacing.pptx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setstrikeout": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetStrikeout(true);\noRun.AddText(\"This is a text run with the text struck out with a single line.\");\noParagraph.AddElement(oRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetStrikeout.pptx\");\nbuilder.CloseFile();"
		},
		"ApiRun.settextpr": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is a sample text with the font size set to 15 points and the font weight set to bold.\");\nvar oTextPr = oRun.GetTextPr();\noTextPr.SetFontSize(30);\noTextPr.SetBold(true);\noRun.SetTextPr(oTextPr);\noParagraph.AddElement(oRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetTextPr.pptx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setunderline": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetUnderline(true);\noRun.AddText(\"This is a text run with the text underlined with a single line.\");\noParagraph.AddElement(oRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetUnderline.pptx\");\nbuilder.CloseFile();"
		},
		"ApiRun.setvertalign": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is just a sample text. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetVertAlign(\"subscript\");\noRun.AddText(\"This is a text run with the text aligned below the baseline vertically. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetVertAlign(\"baseline\");\noRun.AddText(\"This is a text run with the text aligned by the baseline vertically. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.SetVertAlign(\"superscript\");\noRun.AddText(\"This is a text run with the text aligned above the baseline vertically.\");\noParagraph.AddElement(oRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetVertAlign.pptx\");\nbuilder.CloseFile();"
		},
		"ApiSchemeColor.getclasstype": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oSchemeColor = Api.CreateSchemeColor(\"accent6\");\nvar oGs1 = Api.CreateGradientStop(oSchemeColor, 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar sClassType = oSchemeColor.GetClassType();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class Type = \" + sClassType);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetClassType.pptx\");\nbuilder.CloseFile();"
		},
		"ApiShape.getclasstype": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\noPresentation.SetSizes(254 * 36000, 190 * 36000);\nvar oSlide = oPresentation.GetCurrentSlide();\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartOnlineStorage\", 200 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar sClassType = oShape.GetClassType();\noParagraph.AddText(\"Class Type = \" + sClassType);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetClassType.pptx\");\nbuilder.CloseFile();"
		},
		"ApiShape.getcontent": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\noPresentation.SetSizes(254 * 36000, 190 * 36000);\nvar oSlide = oPresentation.GetCurrentSlide();\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartOnlineStorage\", 200 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetContent();\noShape.SetVerticalTextAlign(\"bottom\");\nvar oParagraph = Api.CreateParagraph();\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"We removed all elements from the shape and added a new paragraph inside it \");\noParagraph.AddText(\"aligning it vertically by the bottom.\");\noDocContent.Push(oParagraph);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetDocContent.pptx\");\nbuilder.CloseFile();"
		},
		"ApiShape.getdoccontent": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\noPresentation.SetSizes(254 * 36000, 190 * 36000);\nvar oSlide = oPresentation.GetCurrentSlide();\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartOnlineStorage\", 200 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\noShape.SetVerticalTextAlign(\"bottom\");\nvar oParagraph = Api.CreateParagraph();\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"We removed all elements from the shape and added a new paragraph inside it \");\noParagraph.AddText(\"aligning it vertically by the bottom.\");\noDocContent.Push(oParagraph);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetDocContent.pptx\");\nbuilder.CloseFile();"
		},
		"ApiShape.setverticaltextalign": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\noPresentation.SetSizes(254 * 36000, 190 * 36000);\nvar oSlide = oPresentation.GetCurrentSlide();\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartOnlineStorage\", 200 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\noShape.SetVerticalTextAlign(\"bottom\");\nvar oParagraph = Api.CreateParagraph();\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"We removed all elements from the shape and added a new paragraph inside it \");\noParagraph.AddText(\"aligning it vertically by the bottom.\");\noDocContent.Push(oParagraph);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetVerticalTextAlign.pptx\");\nbuilder.CloseFile();"
		},
		"ApiSlide.addobject": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetLegendPos(\"bottom\");\noChart.SetShowDataLabels(false, false, true, false);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"AddObject.pptx\");\nbuilder.CloseFile();"
		},
		"ApiSlide.applylayout": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar oLayout = oMaster.GetLayout(4);\noSlide.ApplyLayout(oLayout);\nbuilder.SaveFile(\"pptx\", \"ApplyLayout.pptx\");\nbuilder.CloseFile();"
		},
		"ApiSlide.applytheme": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar oClrScheme = Api.CreateThemeColorScheme([Api.CreateRGBColor(160, 82, 45), Api.CreateRGBColor(205, 133, 63), Api.CreateRGBColor(222, 184, 135), Api.CreateRGBColor(245, 222, 179), Api.CreateRGBColor(240, 128, 128), \n    Api.CreateRGBColor(255, 69, 0), Api.CreateRGBColor(0, 0, 0), Api.CreateRGBColor(79, 79, 79), Api.CreateRGBColor(65, 105, 225), Api.CreateRGBColor(176, 196, 222), Api.CreateRGBColor(255, 255, 255), Api.CreateRGBColor(255, 222, 173)], \"New color scheme\");\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 218, 185), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(238, 203, 173), 100000);\nvar oFill1 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oBgFill1 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke1 = Api.CreateStroke(0, oFill1);\noGs1 = Api.CreateGradientStop(Api.CreateRGBColor(238, 149, 114), 0);\noGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 114, 86), 100000);\nvar oFill2 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oBgFill2 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke2 = Api.CreateStroke(0, oFill2);\noGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 127, 36), 0);\noGs2 = Api.CreateGradientStop(Api.CreateRGBColor(238, 118, 33), 100000);\nvar oFill3 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oBgFill3 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke3 = Api.CreateStroke(0, oFill3);\nvar oFormatScheme = Api.CreateThemeFormatScheme([oFill1, oFill2, oFill3], [oBgFill1, oBgFill2, oBgFill3], [oStroke1, oStroke2, oStroke3], \"New format scheme\");\nvar oFontScheme = Api.CreateThemeFontScheme(\"Arial\", \"Noto Sans Simplified Chinese\", \"Arabic\", \"Times New Roman\", \"Noto Serif Simplified Chinese\", \"Arabic\", \"New font scheme\");\nvar oTheme = Api.CreateTheme(\"New theme\", oMaster, oClrScheme, oFormatScheme, oFontScheme);\noSlide.ApplyTheme(oTheme);\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetLegendPos(\"bottom\");\noChart.SetShowDataLabels(false, false, true, false);\noChart.SetTitle(\"Financial Overview\", 20);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"ApplyTheme.pptx\");\nbuilder.CloseFile();"
		},
		"ApiSlide.clearbackground": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\noSlide.SetBackground(oFill);\nvar oDuplicateSlide = oSlide.Duplicate(1);\noDuplicateSlide.ClearBackground();\nbuilder.SaveFile(\"pptx\", \"ClearBackground.pptx\");\nbuilder.CloseFile();"
		},
		"ApiSlide.copy": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\noSlide.SetBackground(oFill);\nvar oCopySlide = oSlide.Copy();\noPresentation.AddSlide(oCopySlide);\nbuilder.SaveFile(\"pptx\", \"Copy.pptx\");\nbuilder.CloseFile();"
		},
		"ApiSlide.delete": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = Api.CreateSlide();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\noSlide.SetBackground(oFill);\noPresentation.AddSlide(oSlide);\noSlide = oPresentation.GetSlideByIndex(0);\noSlide.Delete();\nbuilder.SaveFile(\"pptx\", \"Delete.pptx\");\nbuilder.CloseFile();"
		},
		"ApiSlide.duplicate": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\noSlide.SetBackground(oFill);\nvar oDuplicateSlide = oSlide.Duplicate(1);\nbuilder.SaveFile(\"pptx\", \"Duplicate.pptx\");\nbuilder.CloseFile();"
		},
		"ApiSlide.followlayoutbackground": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar oLayout = oMaster.GetLayout(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\noLayout.SetBackground(oFill);\noSlide.FollowLayoutBackground();\nbuilder.SaveFile(\"pptx\", \"FollowLayoutBackground.pptx\");\nbuilder.CloseFile();"
		},
		"ApiSlide.getallcharts": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"bar3D\", [\n    [200, 240, 280],\n    [250, 260, 280]\n  ], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetLegendPos(\"bottom\");\noChart.SetShowDataLabels(false, false, true, false);\noChart.SetTitle(\"Financial Overview\", 13);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nvar aCharts = oSlide.GetAllCharts();\nvar oStroke = Api.CreateStroke(1 * 150, Api.CreateSolidFill(Api.CreateRGBColor(155, 64, 1)));\naCharts[0].SetMinorHorizontalGridlines(oStroke);\nbuilder.SaveFile(\"pptx\", \"GetAllCharts.pptx\");\nbuilder.CloseFile();"
		},
		"ApiSlide.getalldrawings": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noDrawing.SetPosition(608400, 1267200);\noDrawing.SetSize(300 * 36000, 130 * 36000);\noSlide.AddObject(oDrawing);\nvar aDrawings = oSlide.GetAllDrawings();\nvar oPlaceholder = Api.CreatePlaceholder(\"chart\");\naDrawings[0].SetPlaceholder(oPlaceholder);\nbuilder.SaveFile(\"pptx\", \"GetAllDrawings.pptx\");\nbuilder.CloseFile();"
		},
		"ApiSlide.getallimages": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oImage = Api.CreateImage(\"https://api.onlyoffice.com/content/img/docbuilder/examples/coordinate_aspects.png\", 60 * 36000, 35 * 36000);\noSlide.AddObject(oImage);\nvar aImages = oSlide.GetAllImages();\nvar sType = aImages[0].GetClassType();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class type = \" + sType);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetAllImages.pptx\");\nbuilder.CloseFile();"
		},
		"ApiSlide.getallshapes": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\noSlide.AddObject(oShape);\nvar aShapes = oSlide.GetAllShapes();\naShapes[0].SetSize(150 * 36000, 65 * 36000);\nbuilder.SaveFile(\"pptx\", \"GetAllShapes.pptx\");\nbuilder.CloseFile();"
		},
		"ApiSlide.getclasstype": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar sClassType = oSlide.GetClassType();\noParagraph.AddText(\"Class Type = \" + sClassType);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetClassType.pptx\");\nbuilder.CloseFile();"
		},
		"ApiSlide.getheight": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\noPresentation.SetSizes(254 * 36000, 190 * 36000);\nvar oSlide = oPresentation.GetCurrentSlide();\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"rect\", 200 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar nSlideHeight = oSlide.GetHeight();\noParagraph.AddText(\"The slide height = \" + nSlideHeight / 36000 + \" mm\");\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetHeight.pptx\");\nbuilder.CloseFile();"
		},
		"ApiSlide.getlayout": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oLayout = oSlide.GetLayout();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\noLayout.SetBackground(oFill);\noSlide.FollowLayoutBackground();\nbuilder.SaveFile(\"pptx\", \"GetLayout.pptx\");\nbuilder.CloseFile();"
		},
		"ApiSlide.getslideindex": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar nIndex = oSlide.GetSlideIndex();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Slide index = \" + nIndex);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetSlideIndex.pptx\");\nbuilder.CloseFile();"
		},
		"ApiSlide.gettheme": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oTheme = oSlide.GetTheme();\nvar oClrScheme = Api.CreateThemeColorScheme([Api.CreateRGBColor(160, 82, 45), Api.CreateRGBColor(205, 133, 63), Api.CreateRGBColor(222, 184, 135), Api.CreateRGBColor(245, 222, 179), Api.CreateRGBColor(240, 128, 128), \n    Api.CreateRGBColor(255, 69, 0), Api.CreateRGBColor(0, 0, 0), Api.CreateRGBColor(79, 79, 79), Api.CreateRGBColor(65, 105, 225), Api.CreateRGBColor(176, 196, 222), Api.CreateRGBColor(255, 255, 255), Api.CreateRGBColor(255, 222, 173)], \"New color scheme\");\noTheme.SetColorScheme(oClrScheme);\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetLegendPos(\"bottom\");\noChart.SetShowDataLabels(false, false, true, false);\noChart.SetTitle(\"Financial Overview\", 20);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"GetTheme.pptx\");\nbuilder.CloseFile();"
		},
		"ApiSlide.getwidth": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\noPresentation.SetSizes(254 * 36000, 190 * 36000);\nvar oSlide = oPresentation.GetCurrentSlide();\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"rect\", 200 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar nSlideWidth = oSlide.GetWidth();\noParagraph.AddText(\"The slide width = \" + nSlideWidth / 36000 + \" mm\");\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetWidth.pptx\");\nbuilder.CloseFile();"
		},
		"ApiSlide.moveto": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = Api.CreateSlide();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\noSlide.SetBackground(oFill);\noPresentation.AddSlide(oSlide);\noSlide.MoveTo(0);\nbuilder.SaveFile(\"pptx\", \"MoveTo.pptx\");\nbuilder.CloseFile();"
		},
		"ApiSlide.removeallobjects": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\noPresentation.SetSizes(254 * 36000, 190 * 36000);\nvar oSlide = oPresentation.GetCurrentSlide();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"rect\", 200 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(0, 0, 255), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\noFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\noStroke = Api.CreateStroke(0, Api.CreateNoFill());\noShape = Api.CreateShape(\"flowChartMagneticTape\", 200 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.AddText(\"All objects were removed from this slide before adding this shape.\");\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"RemoveAllObjects.pptx\");\nbuilder.CloseFile();"
		},
		"ApiSlide.removeobject": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(104, 155, 104));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oDrawing = Api.CreateShape(\"cube\", 3212465, 963295, oFill, oStroke);\noDrawing.SetPosition(30 * 36000, 1267200);\noDrawing.SetSize(150 * 36000, 130 * 36000);\nvar oCopyDrawing = oDrawing.Copy();\noCopyDrawing.SetPosition(170 * 36000, 1267200);\noCopyDrawing.SetSize(150 * 36000, 130 * 36000);\noSlide.AddObject(oDrawing);\noSlide.AddObject(oCopyDrawing);\noSlide.RemoveObject(1, 1);\nbuilder.SaveFile(\"pptx\", \"RemoveObject.pptx\");\nbuilder.CloseFile();"
		},
		"ApiSlide.setbackground": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = Api.CreateSlide();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\noSlide.SetBackground(oFill);\noPresentation.AddSlide(oSlide);\nbuilder.SaveFile(\"pptx\", \"SetBackground.pptx\");\nbuilder.CloseFile();"
		},
		"ApiStroke.getclasstype": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 224, 204), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);\nvar oFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);\nvar oFill1 = Api.CreateSolidFill(Api.CreateRGBColor(255, 255, 0));\nvar oStroke = Api.CreateStroke(3 * 36000, oFill1);\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\nvar oDocContent = oShape.GetDocContent();\nvar sClassType = oStroke.GetClassType();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class Type = \" + sClassType);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetClassType.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTable.addcolumn": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\noPresentation.SetSizes(300 * 36000, 190 * 36000);\nvar oTable = Api.CreateTable(2, 4);\noTable.SetPosition(0 * 36000, 60 * 36000);\noTable.AddColumn(1, true);\nvar oRow = oTable.GetRow(0);\nvar oCell = oRow.GetCell(1);\nvar oContent = oCell.GetContent();\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"New column was added here.\");\noContent.Push(oParagraph);\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\noSlide.AddObject(oTable);\nbuilder.SaveFile(\"pptx\", \"AddColumn.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTable.addrow": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oTable = Api.CreateTable(2, 4);\noTable.AddRow(1, true);\nvar oRow = oTable.GetRow(1);\nvar oCell = oRow.GetCell(0);\nvar oContent = oCell.GetContent();\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"New row was added here.\");\noContent.Push(oParagraph);\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\noSlide.AddObject(oTable);\nbuilder.SaveFile(\"pptx\", \"AddRow.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTable.getclasstype": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oTable = Api.CreateTable(2, 4);\nvar oRow = oTable.GetRow(0);\nvar oCell = oRow.GetCell(0);\nvar oContent = oCell.GetContent();\nvar oParagraph = Api.CreateParagraph();\nvar sClassType = oTable.GetClassType();\noParagraph.AddText(\"Class type: \" + sClassType);\noContent.Push(oParagraph);\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\noSlide.AddObject(oTable);\nbuilder.SaveFile(\"pptx\", \"GetClassType.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTable.getrow": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oTable = Api.CreateTable(2, 4);\noTable.AddRow(1, true);\nvar oRow = oTable.GetRow(0);\nvar oCell = oRow.GetCell(0);\nvar oContent = oCell.GetContent();\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a sample text in the first row.\");\noContent.Push(oParagraph);\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\noSlide.AddObject(oTable);\nbuilder.SaveFile(\"pptx\", \"GetRow.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTable.mergecells": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oTable = Api.CreateTable(2, 4);\nvar oRow = oTable.GetRow(0);\nvar oCell1 = oRow.GetCell(0);\nvar oCell2 = oRow.GetCell(1);\noTable.MergeCells([oCell1, oCell2]);\nvar oCell = oRow.GetCell(0);\nvar oContent = oCell.GetContent();\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This cell was formed by merging two cells.\");\noContent.Push(oParagraph);\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\noSlide.AddObject(oTable);\nbuilder.SaveFile(\"pptx\", \"MergeCells.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTable.removecolumn": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oTable = Api.CreateTable(2, 4);\nvar oRow = oTable.GetRow(0);\nvar oCell = oRow.GetCell(1);\noTable.RemoveColumn(oCell);\noCell = oRow.GetCell(0);\nvar oContent = oCell.GetContent();\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The second column was removed.\");\noContent.Push(oParagraph);\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\noSlide.AddObject(oTable);\nbuilder.SaveFile(\"pptx\", \"RemoveColumn.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTable.removerow": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oTable = Api.CreateTable(2, 4);\nvar oRow = oTable.GetRow(0);\nvar oCell = oRow.GetCell(0);\noTable.RemoveRow(oCell);\noRow = oTable.GetRow(0);\noCell = oRow.GetCell(0);\nvar oContent = oCell.GetContent();\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The first row was removed.\");\noContent.Push(oParagraph);\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\noSlide.AddObject(oTable);\nbuilder.SaveFile(\"pptx\", \"RemoveRow.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTable.setshd": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oTable = Api.CreateTable(2, 4);\noTable.SetShd(\"clear\", 255, 0, 0);\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\noSlide.AddObject(oTable);\nbuilder.SaveFile(\"pptx\", \"SetShd.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTable.settablelook": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oTable = Api.CreateTable(2, 4);\noTable.SetTableLook(true, false, false, false, false, true);\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\noSlide.AddObject(oTable);\nbuilder.SaveFile(\"pptx\", \"SetTableLook.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.getclasstype": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oTable = Api.CreateTable(2, 4);\nvar oRow = oTable.GetRow(0);\nvar oCell = oRow.GetCell(0);\nvar oContent = oCell.GetContent();\nvar oParagraph = Api.CreateParagraph();\nvar sClassType = oCell.GetClassType();\noParagraph.AddText(\"Class type: \" + sClassType);\noContent.Push(oParagraph);\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\noSlide.AddObject(oTable);\nbuilder.SaveFile(\"pptx\", \"GetClassType.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.getcontent": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oTable = Api.CreateTable(2, 4);\nvar oRow = oTable.GetRow(0);\nvar oCell = oRow.GetCell(0);\nvar oContent = oCell.GetContent();\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a sample text in the cell.\");\noContent.Push(oParagraph);\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\noSlide.AddObject(oTable);\nbuilder.SaveFile(\"pptx\", \"GetContent.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.setcellborderbottom": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oTable = Api.CreateTable(2, 4);\nvar oRow = oTable.GetRow(0);\nvar oCell = oRow.GetCell(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(520, 64, 1));\noCell.SetCellBorderBottom(2, oFill);\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\noSlide.AddObject(oTable);\nbuilder.SaveFile(\"pptx\", \"SetCellBorderBottom.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.setcellborderleft": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oTable = Api.CreateTable(2, 4);\nvar oRow = oTable.GetRow(0);\nvar oCell = oRow.GetCell(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(520, 64, 1));\noCell.SetCellBorderLeft(2, oFill);\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\noSlide.AddObject(oTable);\nbuilder.SaveFile(\"pptx\", \"SetCellBorderLeft.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.setcellborderright": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oTable = Api.CreateTable(2, 4);\nvar oRow = oTable.GetRow(0);\nvar oCell = oRow.GetCell(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(520, 64, 1));\noCell.SetCellBorderRight(2, oFill);\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\noSlide.AddObject(oTable);\nbuilder.SaveFile(\"pptx\", \"SetCellBorderRight.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.setcellbordertop": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oTable = Api.CreateTable(2, 4);\nvar oRow = oTable.GetRow(0);\nvar oCell = oRow.GetCell(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(520, 64, 1));\noCell.SetCellBorderTop(2, oFill);\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\noSlide.AddObject(oTable);\nbuilder.SaveFile(\"pptx\", \"SetCellBorderTop.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.setcellmarginbottom": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oTable = Api.CreateTable(2, 4);\nvar oRow = oTable.GetRow(0);\nvar oCell = oRow.GetCell(0);\nvar oContent = oCell.GetContent();\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is just a sample text.\");\noContent.Push(oParagraph);\noCell.SetCellMarginBottom(600);\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\noSlide.AddObject(oTable);\nbuilder.SaveFile(\"pptx\", \"SetCellMarginBottom.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.setcellmarginleft": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oTable = Api.CreateTable(2, 4);\nvar oRow = oTable.GetRow(0);\nvar oCell = oRow.GetCell(0);\nvar oContent = oCell.GetContent();\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is just a sample text.\");\noContent.Push(oParagraph);\noCell.SetCellMarginLeft(720);\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\noSlide.AddObject(oTable);\nbuilder.SaveFile(\"pptx\", \"SetCellMarginLeft.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.setcellmarginright": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oTable = Api.CreateTable(2, 4);\nvar oRow = oTable.GetRow(0);\nvar oCell = oRow.GetCell(0);\nvar oContent = oCell.GetContent();\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is just a sample text.\");\noContent.Push(oParagraph);\noCell.SetCellMarginRight(600);\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\noSlide.AddObject(oTable);\nbuilder.SaveFile(\"pptx\", \"SetCellMarginRight.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.setcellmargintop": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oTable = Api.CreateTable(2, 4);\nvar oRow = oTable.GetRow(0);\nvar oCell = oRow.GetCell(0);\nvar oContent = oCell.GetContent();\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is just a sample text.\");\noContent.Push(oParagraph);\noCell.SetCellMarginTop(720);\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\noSlide.AddObject(oTable);\nbuilder.SaveFile(\"pptx\", \"SetCellMarginTop.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.setshd": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oTable = Api.CreateTable(2, 4);\nvar oRow = oTable.GetRow(0);\nvar oCell = oRow.GetCell(0);\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(520, 64, 1));\noCell.SetShd(oFill);\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\noSlide.AddObject(oTable);\nbuilder.SaveFile(\"pptx\", \"SetShd.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.settextdirection": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oTable = Api.CreateTable(2, 4);\nvar oRow = oTable.GetRow(0);\noRow.SetHeight(30 * 36000);\nvar oCell = oRow.GetCell(0);\noCell.SetTextDirection(\"tbrl\");\nvar oContent = oCell.GetContent();\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is just a sample text.\");\noContent.Push(oParagraph);\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\noSlide.AddObject(oTable);\nbuilder.SaveFile(\"pptx\", \"SetTextDirection.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTableCell.setverticalalign": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oTable = Api.CreateTable(2, 4);\nvar oRow = oTable.GetRow(1);\noRow.SetHeight(30 * 36000);\nvar oCell = oRow.GetCell(0);\nvar oContent = oCell.GetContent();\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is just a sample text.\");\noContent.Push(oParagraph);\noCell.SetVerticalAlign(\"bottom\");\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\noSlide.AddObject(oTable);\nbuilder.SaveFile(\"pptx\", \"SetVerticalAlign.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTableRow.getcell": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oTable = Api.CreateTable(2, 4);\nvar oRow = oTable.GetRow(0);\nvar oCell = oRow.GetCell(0);\nvar oContent = oCell.GetContent();\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"This is a sample text in the cell of the first row.\");\noContent.Push(oParagraph);\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\noSlide.AddObject(oTable);\nbuilder.SaveFile(\"pptx\", \"GetCell.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTableRow.getcellscount": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oTable = Api.CreateTable(2, 4);\nvar oRow = oTable.GetRow(0);\nvar nCellsCount = oRow.GetCellsCount();\nvar oCell = oRow.GetCell(0);\nvar oContent = oCell.GetContent();\nvar oParagraph = Api.CreateParagraph();\noParagraph.AddText(\"The number of cells in the row: \" + nCellsCount);\noContent.Push(oParagraph);\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\noSlide.AddObject(oTable);\nbuilder.SaveFile(\"pptx\", \"GetCellsCount.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTableRow.getclasstype": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oTable = Api.CreateTable(2, 4);\nvar oRow = oTable.GetRow(0);\nvar oCell = oRow.GetCell(0);\nvar oContent = oCell.GetContent();\nvar oParagraph = Api.CreateParagraph();\nvar sClassType = oRow.GetClassType();\noParagraph.AddText(\"Class type: \" + sClassType);\noContent.Push(oParagraph);\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\noSlide.AddObject(oTable);\nbuilder.SaveFile(\"pptx\", \"GetClassType.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTableRow.setheight": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oTable = Api.CreateTable(2, 4);\nvar oRow = oTable.GetRow(0);\noRow.SetHeight(30 * 36000);\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\noSlide.AddObject(oTable);\nbuilder.SaveFile(\"pptx\", \"SetHeight.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.getclasstype": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\nvar oTextPr = oRun.GetTextPr();\noTextPr.SetFontSize(50);\noParagraph.SetJc(\"left\");\nvar sClassType = oTextPr.GetClassType();\noRun.AddText(\"Class Type = \" + sClassType);\noParagraph.AddElement(oRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetClassType.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setbold": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\nvar oTextPr = oRun.GetTextPr();\noTextPr.SetFontSize(50);\noTextPr.SetBold(true);\noParagraph.SetJc(\"left\");\noRun.AddText(\"This is a sample text inside the shape with the font weight set to bold using the text properties.\");\noParagraph.AddElement(oRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetBold.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setcaps": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\nvar oTextPr = oRun.GetTextPr();\noTextPr.SetFontSize(50);\noTextPr.SetCaps(true);\noParagraph.SetJc(\"left\");\noRun.AddText(\"This is a sample text inside the shape set to capital letters using the text properties.\");\noParagraph.AddElement(oRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetCaps.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setdoublestrikeout": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\nvar oTextPr = oRun.GetTextPr();\noTextPr.SetFontSize(50);\noTextPr.SetDoubleStrikeout(true);\noParagraph.SetJc(\"left\");\noRun.AddText(\"This is a sample text inside the shape struck out with two lines using the text properties.\");\noParagraph.AddElement(oRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetDoubleStrikeout.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setfill": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\nvar oTextPr = oRun.GetTextPr();\noTextPr.SetFontSize(50);\noFill = Api.CreateSolidFill(Api.CreateRGBColor(255, 255, 0));\noTextPr.SetFill(oFill);\noRun.AddText(\"This is a text run with the font color set to yellow using the text properties.\");\noParagraph.AddElement(oRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetFill.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setfontfamily": {
			"script": "builder.CreateFile(\"pptx\");\nar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\nvar oTextPr = oRun.GetTextPr();\noTextPr.SetFontSize(50);\noTextPr.SetFontFamily(\"Comic Sans MS\");\noParagraph.SetJc(\"left\");\noRun.AddText(\"This is a sample text inside the shape with the font family set to 'Comic Sans MS' using the text properties.\");\noParagraph.AddElement(oRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetFontFamily.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setfontsize": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\nvar oTextPr = oRun.GetTextPr();\noTextPr.SetFontSize(30);\noParagraph.SetJc(\"left\");\noRun.AddText(\"This is a sample text inside the shape with the font size set to 15 points using the text properties.\");\noParagraph.AddElement(oRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetFontSize.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setitalic": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\nvar oTextPr = oRun.GetTextPr();\noTextPr.SetFontSize(50);\noTextPr.SetItalic(true);\noParagraph.SetJc(\"left\");\noRun.AddText(\"This is a sample text inside the shape with the font set to italicized letters using the text properties.\");\noParagraph.AddElement(oRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetItalic.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setsmallcaps": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\nvar oTextPr = oRun.GetTextPr();\noTextPr.SetFontSize(50);\noTextPr.SetSmallCaps(true);\noParagraph.SetJc(\"left\");\noRun.AddText(\"This is a sample text inside the shape with the font set to small capitalized letters using the text properties.\");\noParagraph.AddElement(oRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetSmallCaps.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setspacing": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\nvar oTextPr = oRun.GetTextPr();\noTextPr.SetFontSize(50);\noTextPr.SetSpacing(80);\noParagraph.SetJc(\"left\");\noRun.AddText(\"This is a sample text inside the shape with the spacing set to 4 points (80 twentieths of a point) using the text properties.\");\noParagraph.AddElement(oRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetSpacing.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setstrikeout": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\nvar oTextPr = oRun.GetTextPr();\noTextPr.SetFontSize(50);\noTextPr.SetStrikeout(true);\noParagraph.SetJc(\"left\");\noRun.AddText(\"This is a struck out text inside the shape.\");\noParagraph.AddElement(oRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetStrikeout.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setunderline": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\nvar oTextPr = oRun.GetTextPr();\noTextPr.SetFontSize(50);\noTextPr.SetUnderline(true);\noParagraph.SetJc(\"left\");\noRun.AddText(\"This is an underlined text inside the shape.\");\noParagraph.AddElement(oRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetUnderline.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTextPr.setvertalign": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\nvar oRun = Api.CreateRun();\nvar oTextPr = oRun.GetTextPr();\noTextPr.SetFontSize(50);\noTextPr.SetVertAlign(\"superscript\");\noParagraph.SetJc(\"left\");\noRun.AddText(\"This is a text inside the shape with vertical alignment set to 'superscript'.\");\noParagraph.AddElement(oRun);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetVertAlign.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTheme.getclasstype": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar oTheme = oMaster.GetTheme();\nvar sType = oTheme.GetClassType();\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class type = \" + sType);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetClassType.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTheme.getcolorscheme": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar oTheme = oMaster.GetTheme();\nvar oClrScheme = oTheme.GetColorScheme();\noClrScheme.ChangeColor(0, Api.CreateRGBColor(160, 82, 45));\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"bar3D\", [\n    [200, 240, 280],\n    [250, 260, 280]\n  ], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetLegendPos(\"bottom\");\noChart.SetShowDataLabels(false, false, true, false);\noChart.SetTitle(\"Financial Overview\", 20);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"GetColorScheme.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTheme.getfontscheme": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oMaster = oPresentation.GetMaster(0);\nvar oTheme = oMaster.GetTheme();\nvar oFontScheme = oTheme.GetFontScheme();\nvar sType = oFontScheme.GetClassType();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class type = \" + sType);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetFontScheme.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTheme.getformatscheme": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oMaster = oPresentation.GetMaster(0);\nvar oTheme = oMaster.GetTheme();\nvar oFormatScheme = oTheme.GetFormatScheme();\nvar sType = oFormatScheme.GetClassType();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class type = \" + sType);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetFormatScheme.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTheme.getmaster": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oTheme = oSlide.GetTheme();\nvar oMaster = oTheme.GetMaster();\nvar sType = oMaster.GetClassType();\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class type = \" + sType);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetMaster.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTheme.setcolorscheme": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oClrScheme = Api.CreateThemeColorScheme([Api.CreateRGBColor(160, 82, 45), Api.CreateRGBColor(205, 133, 63), Api.CreateRGBColor(222, 184, 135), Api.CreateRGBColor(245, 222, 179), Api.CreateRGBColor(240, 128, 128), \n  Api.CreateRGBColor(255, 69, 0), Api.CreateRGBColor(0, 0, 0), Api.CreateRGBColor(79, 79, 79), Api.CreateRGBColor(65, 105, 225), Api.CreateRGBColor(176, 196, 222), Api.CreateRGBColor(255, 255, 255), Api.CreateRGBColor(255, 222, 173)], \"New color scheme\");\nvar oTheme = oSlide.GetTheme();\noTheme.SetColorScheme(oClrScheme);\nvar oChart = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetLegendPos(\"bottom\");\noChart.SetShowDataLabels(false, false, true, false);\noChart.SetTitle(\"Financial Overview\", 20);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"SetColorScheme.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTheme.setfontscheme": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oFontScheme = Api.CreateThemeFontScheme(\"Arial\", \"Noto Sans Simplified Chinese\", \"Arabic\", \"Times New Roman\", \"Noto Serif Simplified Chinese\", \"Arabic\", \"New font scheme\");\nvar oTheme = oSlide.GetTheme();\noTheme.SetFontScheme(oFontScheme);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\nvar oDocContent = oShape.GetDocContent();\noDocContent.RemoveAllElements();\nvar oParagraph = Api.CreateParagraph();\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"This is an example of a paragraph with a new font scheme set.\");\noDocContent.Push(oParagraph);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetFontScheme.pptx\");\nbuilder.CloseFile();"
		},
		"ApiTheme.setformatscheme": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 218, 185), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(238, 203, 173), 100000);\nvar oFill1 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oBgFill1 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke1 = Api.CreateStroke(0, oFill1);\noGs1 = Api.CreateGradientStop(Api.CreateRGBColor(238, 149, 114), 0);\noGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 114, 86), 100000);\nvar oFill2 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oBgFill2 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke2 = Api.CreateStroke(0, oFill2);\noGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 127, 36), 0);\noGs2 = Api.CreateGradientStop(Api.CreateRGBColor(238, 118, 33), 100000);\nvar oFill3 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oBgFill3 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke3 = Api.CreateStroke(0, oFill3);\nvar oFormatScheme = Api.CreateThemeFormatScheme([oFill1, oFill2, oFill3], [oBgFill1, oBgFill2, oBgFill3], [oStroke1, oStroke2, oStroke3], \"New format scheme\");\nvar oTheme = oSlide.GetTheme();\noTheme.SetFormatScheme(oFormatScheme);\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetLegendPos(\"bottom\");\noChart.SetShowDataLabels(false, false, true, false);\noChart.SetTitle(\"Financial Overview\", 20);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"SetFormatScheme.pptx\");\nbuilder.CloseFile();"
		},
		"ApiThemeColorScheme.changecolor": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar oTheme = oMaster.GetTheme();\nvar oClrScheme = oTheme.GetColorScheme();\noClrScheme.ChangeColor(0, Api.CreateRGBColor(160, 82, 45));\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"bar3D\", [\n    [200, 240, 280],\n    [250, 260, 280]\n  ], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetLegendPos(\"bottom\");\noChart.SetShowDataLabels(false, false, true, false);\noChart.SetTitle(\"Financial Overview\", 20);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"ChangeColor.pptx\");\nbuilder.CloseFile();"
		},
		"ApiThemeColorScheme.getclasstype": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oMaster = oPresentation.GetMaster(0);\nvar oTheme = oMaster.GetTheme();\nvar oClrScheme = Api.CreateThemeColorScheme([Api.CreateRGBColor(160, 82, 45), Api.CreateRGBColor(205, 133, 63), Api.CreateRGBColor(222, 184, 135), Api.CreateRGBColor(245, 222, 179), Api.CreateRGBColor(240, 128, 128), \n    Api.CreateRGBColor(255, 69, 0), Api.CreateRGBColor(0, 0, 0), Api.CreateRGBColor(79, 79, 79), Api.CreateRGBColor(65, 105, 225), Api.CreateRGBColor(176, 196, 222), Api.CreateRGBColor(255, 255, 255), Api.CreateRGBColor(255, 222, 173)], \"New color scheme\");\noTheme.SetColorScheme(oClrScheme);\nvar sType = oClrScheme.GetClassType();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class type = \" + sType);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetClassType.pptx\");\nbuilder.CloseFile();"
		},
		"ApiThemeColorScheme.setschemename": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oMaster = oPresentation.GetMaster(0);\nvar oTheme = oMaster.GetTheme();\nvar oClrScheme = Api.CreateThemeColorScheme([Api.CreateRGBColor(160, 82, 45), Api.CreateRGBColor(205, 133, 63), Api.CreateRGBColor(222, 184, 135), Api.CreateRGBColor(245, 222, 179), Api.CreateRGBColor(240, 128, 128), \n    Api.CreateRGBColor(255, 69, 0), Api.CreateRGBColor(0, 0, 0), Api.CreateRGBColor(79, 79, 79), Api.CreateRGBColor(65, 105, 225), Api.CreateRGBColor(176, 196, 222), Api.CreateRGBColor(255, 255, 255), Api.CreateRGBColor(255, 222, 173)], \"New color scheme\");\noTheme.SetColorScheme(oClrScheme);\noClrScheme.SetSchemeName(\"New color scheme name\");\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"New name was set to the theme color scheme.\");\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetSchemeName.pptx\");\nbuilder.CloseFile();"
		},
		"ApiThemeFontScheme.getclasstype": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oMaster = oPresentation.GetMaster();\nvar oFontScheme = Api.CreateThemeFontScheme(\"Arial\", \"Noto Sans Simplified Chinese\", \"Arabic\", \"Times New Roman\", \"Noto Serif Simplified Chinese\", \"Arabic\", \"New font scheme\");\nvar sType = oFontScheme.GetClassType();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class type = \" + sType);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetClassType.pptx\");\nbuilder.CloseFile();"
		},
		"ApiThemeFontScheme.setfonts": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar oTheme = oMaster.GetTheme();\nvar oFontScheme = oTheme.GetFontScheme();\noFontScheme.SetFonts(\"Arial\", \"Noto Sans Simplified Chinese\", \"Arabic\", \"Times New Roman\", \"Noto Serif Simplified Chinese\", \"Arabic\", \"New font scheme\");\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"New font scheme was set to this slide.\");\noSlide.RemoveAllObjects();\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetFonts.pptx\");\nbuilder.CloseFile();"
		},
		"ApiThemeFontScheme.setschemename": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar oTheme = oMaster.GetTheme();\nvar oFontScheme = oTheme.GetFontScheme();\noFontScheme.SetFonts(\"Arial\", \"Noto Sans Simplified Chinese\", \"Arabic\", \"Times New Roman\", \"Noto Serif Simplified Chinese\", \"Arabic\", \"New font scheme\");\noFontScheme.SetSchemeName(\"New font scheme name\");\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"New name was set to the theme font scheme.\");\noSlide.RemoveAllObjects();\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetSchemeName.pptx\");\nbuilder.CloseFile();"
		},
		"ApiThemeFormatScheme.changebgfillstyles": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar oTheme = oSlide.GetTheme();\nvar oFormatScheme = oTheme.GetFormatScheme();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 218, 185), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(238, 203, 173), 100000);\nvar oBgFill1 = Api.CreateRadialGradientFill([oGs1, oGs2]);\noGs1 = Api.CreateGradientStop(Api.CreateRGBColor(238, 149, 114), 0);\noGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 114, 86), 100000);\nvar oBgFill2 = Api.CreateRadialGradientFill([oGs1, oGs2]);\noGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 127, 36), 0);\noGs2 = Api.CreateGradientStop(Api.CreateRGBColor(238, 118, 33), 100000);\nvar oBgFill3 = Api.CreateRadialGradientFill([oGs1, oGs2]);\noFormatScheme.ChangeBgFillStyles([oBgFill1, oBgFill2, oBgFill3]);\nvar oClrScheme = Api.CreateThemeColorScheme([Api.CreateRGBColor(160, 82, 45), Api.CreateRGBColor(205, 133, 63), Api.CreateRGBColor(222, 184, 135), Api.CreateRGBColor(245, 222, 179), Api.CreateRGBColor(240, 128, 128), \n    Api.CreateRGBColor(255, 69, 0), Api.CreateRGBColor(0, 0, 0), Api.CreateRGBColor(79, 79, 79), Api.CreateRGBColor(65, 105, 225), Api.CreateRGBColor(176, 196, 222), Api.CreateRGBColor(255, 255, 255), Api.CreateRGBColor(255, 222, 173)], \"New color scheme\");\nvar oFontScheme = Api.CreateThemeFontScheme(\"Arial\", \"Noto Sans Simplified Chinese\", \"Arabic\", \"Times New Roman\", \"Noto Serif Simplified Chinese\", \"Arabic\", \"New font scheme\");\noTheme = Api.CreateTheme(\"Theme 1\", oMaster, oClrScheme, oFormatScheme, oFontScheme);\noPresentation.ApplyTheme(oTheme);\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetLegendPos(\"bottom\");\noChart.SetShowDataLabels(false, false, true, false);\noChart.SetTitle(\"Financial Overview\", 20);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"ChangeBgFillStyles.pptx\");\nbuilder.CloseFile();"
		},
		"ApiThemeFormatScheme.changefillstyles": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar oTheme = oSlide.GetTheme();\nvar oFormatScheme = oTheme.GetFormatScheme();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 218, 185), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(238, 203, 173), 100000);\nvar oFill1 = Api.CreateRadialGradientFill([oGs1, oGs2]);\noGs1 = Api.CreateGradientStop(Api.CreateRGBColor(238, 149, 114), 0);\noGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 114, 86), 100000);\nvar oFill2 = Api.CreateRadialGradientFill([oGs1, oGs2]);\noGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 127, 36), 0);\noGs2 = Api.CreateGradientStop(Api.CreateRGBColor(238, 118, 33), 100000);\nvar oFill3 = Api.CreateRadialGradientFill([oGs1, oGs2]);\noFormatScheme.ChangeFillStyles([oFill1, oFill2, oFill3]);\nvar oClrScheme = Api.CreateThemeColorScheme([Api.CreateRGBColor(160, 82, 45), Api.CreateRGBColor(205, 133, 63), Api.CreateRGBColor(222, 184, 135), Api.CreateRGBColor(245, 222, 179), Api.CreateRGBColor(240, 128, 128), \n    Api.CreateRGBColor(255, 69, 0), Api.CreateRGBColor(0, 0, 0), Api.CreateRGBColor(79, 79, 79), Api.CreateRGBColor(65, 105, 225), Api.CreateRGBColor(176, 196, 222), Api.CreateRGBColor(255, 255, 255), Api.CreateRGBColor(255, 222, 173)], \"New color scheme\");\nvar oFontScheme = Api.CreateThemeFontScheme(\"Arial\", \"Noto Sans Simplified Chinese\", \"Arabic\", \"Times New Roman\", \"Noto Serif Simplified Chinese\", \"Arabic\", \"New font scheme\");\noTheme = Api.CreateTheme(\"Theme 1\", oMaster, oClrScheme, oFormatScheme, oFontScheme);\noPresentation.ApplyTheme(oTheme);\noSlide.RemoveAllObjects();\nvar oChart = Api.CreateChart(\"bar3D\", [\n  [200, 240, 280],\n  [250, 260, 280]\n], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\noChart.SetVerAxisTitle(\"USD In Hundred Thousands\", 10);\noChart.SetHorAxisTitle(\"Year\", 11);\noChart.SetLegendPos(\"bottom\");\noChart.SetShowDataLabels(false, false, true, false);\noChart.SetTitle(\"Financial Overview\", 20);\noChart.SetSize(300 * 36000, 130 * 36000);\noChart.SetPosition(608400, 1267200);\noSlide.AddObject(oChart);\nbuilder.SaveFile(\"pptx\", \"ChangeFillStyles.pptx\");\nbuilder.CloseFile();"
		},
		"ApiThemeFormatScheme.changelinestyles": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar oTheme = oSlide.GetTheme();\nvar oFormatScheme = oTheme.GetFormatScheme();\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 218, 185), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(238, 203, 173), 100000);\nvar oFill1 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke1 = Api.CreateStroke(3 * 36000, oFill1);\noGs1 = Api.CreateGradientStop(Api.CreateRGBColor(238, 149, 114), 0);\noGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 114, 86), 100000);\nvar oFill2 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke2 = Api.CreateStroke(3 * 36000, oFill2);\noGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 127, 36), 0);\noGs2 = Api.CreateGradientStop(Api.CreateRGBColor(238, 118, 33), 100000);\nvar oFill3 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke3 = Api.CreateStroke(3 * 36000, oFill3);\noFormatScheme.ChangeLineStyles([oStroke1, oStroke2, oFill3]);\nvar oClrScheme = Api.CreateThemeColorScheme([Api.CreateRGBColor(160, 82, 45), Api.CreateRGBColor(205, 133, 63), Api.CreateRGBColor(222, 184, 135), Api.CreateRGBColor(245, 222, 179), Api.CreateRGBColor(240, 128, 128), \n    Api.CreateRGBColor(255, 69, 0), Api.CreateRGBColor(0, 0, 0), Api.CreateRGBColor(79, 79, 79), Api.CreateRGBColor(65, 105, 225), Api.CreateRGBColor(176, 196, 222), Api.CreateRGBColor(255, 255, 255), Api.CreateRGBColor(255, 222, 173)], \"New color scheme\");\nvar oFontScheme = Api.CreateThemeFontScheme(\"Arial\", \"Noto Sans Simplified Chinese\", \"Arabic\", \"Times New Roman\", \"Noto Serif Simplified Chinese\", \"Arabic\", \"New font scheme\");\noTheme = Api.CreateTheme(\"Theme 1\", oMaster, oClrScheme, oFormatScheme, oFontScheme);\noPresentation.ApplyTheme(oTheme);\noSlide.RemoveAllObjects();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Create a shape by yourself to see the stroke style set to this presentation.\");\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"ChangeLineStyles.pptx\");\nbuilder.CloseFile();"
		},
		"ApiThemeFormatScheme.copy": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oMaster = oPresentation.GetMaster(0);\nvar oSlide1 = oPresentation.GetSlideByIndex(0);\nvar oGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 218, 185), 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(238, 203, 173), 100000);\nvar oFill1 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oBgFill1 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke1 = Api.CreateStroke(0, oFill1);\noGs1 = Api.CreateGradientStop(Api.CreateRGBColor(238, 149, 114), 0);\noGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 114, 86), 100000);\nvar oFill2 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oBgFill2 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke2 = Api.CreateStroke(0, oFill2);\noGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 127, 36), 0);\noGs2 = Api.CreateGradientStop(Api.CreateRGBColor(238, 118, 33), 100000);\nvar oFill3 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oBgFill3 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke3 = Api.CreateStroke(0, oFill3);\nvar oFormatScheme = Api.CreateThemeFormatScheme([oFill1, oFill2, oFill3], [oBgFill1, oBgFill2, oBgFill3], [oStroke1, oStroke2, oStroke3], \"New format scheme\");\nvar oClrScheme = Api.CreateThemeColorScheme([Api.CreateRGBColor(160, 82, 45), Api.CreateRGBColor(205, 133, 63), Api.CreateRGBColor(222, 184, 135), Api.CreateRGBColor(245, 222, 179), Api.CreateRGBColor(240, 128, 128), \n    Api.CreateRGBColor(255, 69, 0), Api.CreateRGBColor(0, 0, 0), Api.CreateRGBColor(79, 79, 79), Api.CreateRGBColor(65, 105, 225), Api.CreateRGBColor(176, 196, 222), Api.CreateRGBColor(255, 255, 255), Api.CreateRGBColor(255, 222, 173)], \"New color scheme\");\nvar oFontScheme = Api.CreateThemeFontScheme(\"Arial\", \"Noto Sans Simplified Chinese\", \"Arabic\", \"Times New Roman\", \"Noto Serif Simplified Chinese\", \"Arabic\", \"New font scheme\");\nvar oTheme1 = Api.CreateTheme(\"Theme 1\", oMaster, oClrScheme, oFormatScheme, oFontScheme);\noPresentation.ApplyTheme(oTheme1);\nvar oSlide2 = Api.CreateSlide();\noPresentation.AddSlide(oSlide2);\noGs1 = Api.CreateGradientStop(Api.CreateRGBColor(238, 149, 114), 0);\noGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 114, 86), 100000);\nvar oNewBgFill1 = Api.CreateRadialGradientFill([oGs1, oGs2]);\noGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 127, 36), 0);\noGs2 = Api.CreateGradientStop(Api.CreateRGBColor(238, 118, 33), 100000);\nvar oNewBgFill2 = Api.CreateRadialGradientFill([oGs1, oGs2]);\noGs1 = Api.CreateGradientStop(Api.CreateRGBColor(255, 218, 185), 0);\noGs2 = Api.CreateGradientStop(Api.CreateRGBColor(238, 203, 173), 100000);\nvar oNewBgFill3 = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oCopyFormatScheme = oFormatScheme.Copy();\noCopyFormatScheme.ChangeBgFillStyles([oNewBgFill1, oNewBgFill2, oNewBgFill3]);\nvar oTheme2 = Api.CreateTheme(\"Theme 2\", oMaster, oClrScheme, oCopyFormatScheme, oFontScheme);\noSlide2.ApplyTheme(oTheme2);\nbuilder.SaveFile(\"pptx\", \"Copy.pptx\");\nbuilder.CloseFile();"
		},
		"ApiThemeFormatScheme.getclasstype": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\nvar oMaster = oPresentation.GetMaster(0);\nvar oTheme = oMaster.GetTheme();\nvar oFormatScheme = oTheme.GetFormatScheme();\nvar sType = oFormatScheme.GetClassType();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class type = \" + sType);\noSlide.RemoveAllObjects();\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetClassType.pptx\");\nbuilder.CloseFile();"
		},
		"ApiThemeFormatScheme.setschemename": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oMaster = oPresentation.GetMaster(0);\nvar oTheme = oMaster.GetTheme();\nvar oFormatScheme = oTheme.GetFormatScheme();\noFormatScheme.SetSchemeName(\"New format scheme name\");\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(61, 74, 107));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"New name was set to the theme format scheme.\");\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"SetSchemeName.pptx\");\nbuilder.CloseFile();"
		},
		"ApiUniColor.getclasstype": {
			"script": "builder.CreateFile(\"pptx\");\nvar oPresentation = Api.GetPresentation();\nvar oSlide = oPresentation.GetSlideByIndex(0);\noSlide.RemoveAllObjects();\nvar oPresetColor = Api.CreatePresetColor(\"lightYellow\");\nvar oGs1 = Api.CreateGradientStop(oPresetColor, 0);\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(61, 74, 107), 100000);\nvar oFill = Api.CreateRadialGradientFill([oGs1, oGs2]);\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = Api.CreateShape(\"flowChartMagneticTape\", 300 * 36000, 130 * 36000, oFill, oStroke);\noShape.SetPosition(608400, 1267200);\noShape.SetSize(300 * 36000, 130 * 36000);\nvar oDocContent = oShape.GetDocContent();\nvar sClassType = oPresetColor.GetClassType();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.SetJc(\"left\");\noParagraph.AddText(\"Class Type = \" + sClassType);\noSlide.AddObject(oShape);\nbuilder.SaveFile(\"pptx\", \"GetClassType.pptx\");\nbuilder.CloseFile();"
		}
	},
	"form": {
		"Api.createcheckboxform": {
		    "script": "builder.CreateFile(\"docxf\");\nvar oDocument = Api.GetDocument();\nvar oCheckBoxForm = Api.CreateCheckBoxForm({\"key\": \"Marital status\", \"tip\": \"Specify your marital status\", \"required\": true, \"placeholder\": \"Marital status\", \"radio\": true});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oCheckBoxForm);\noParagraph.AddText(\" Married\");\noParagraph.AddLineBreak();\noCheckBoxForm = Api.CreateCheckBoxForm({\"key\": \"Marital status\", \"tip\": \"Specify your marital status\", \"required\": true, \"placeholder\": \"Marital status\", \"radio\": true});\noParagraph.AddElement(oCheckBoxForm);\noParagraph.AddText(\" Single\");\nbuilder.SaveFile(\"docxf\", \"CreateCheckBoxForm.docxf\");\nbuilder.CloseFile();"
		},
		"Api.createcomboboxform": {
			"script": "builder.CreateFile(\"docxf\");\nvar oDocument = Api.GetDocument();\nvar oComboBoxForm = Api.CreateComboBoxForm({\"key\": \"Personal information\", \"tip\": \"Choose your country\", \"required\": true, \"placeholder\": \"Country\", \"editable\": false, \"autoFit\": false, \"items\": [\"Latvia\", \"USA\", \"UK\"]});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oComboBoxForm);\nbuilder.SaveFile(\"docxf\", \"CreateComboBoxForm.docxf\");\nbuilder.CloseFile();"
		},
		"Api.createpictureform": {
			"script": "builder.CreateFile(\"docxf\");\nvar oDocument = Api.GetDocument();\nvar oPictureForm = Api.CreatePictureForm({\"key\": \"Personal information\", \"tip\": \"Upload your photo\", \"required\": true, \"placeholder\": \"Photo\", \"scaleFlag\": \"tooBig\", \"lockAspectRatio\": true, \"respectBorders\": false, \"shiftX\": 50, \"shiftY\": 50});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oPictureForm);\nbuilder.SaveFile(\"docxf\", \"CreatePictureForm.docxf\");\nbuilder.CloseFile();"
		},
		"Api.createtextform": {
			"script": "builder.CreateFile(\"docxf\");\nvar oDocument = Api.GetDocument();\nvar oTextForm = Api.CreateTextForm({\"key\": \"Personal information\", \"tip\": \"Enter your first name\", \"required\": true, \"placeholder\": \"First name\", \"comb\": true, \"maxCharacters\": 10, \"cellWidth\": 3, \"multiLine\": false, \"autoFit\": false});\nvar oParagraph = oDocument.GetElement(0);\noParagraph.AddElement(oTextForm);\nbuilder.SaveFile(\"docxf\", \"CreateTextForm.docxf\");\nbuilder.CloseFile();"
		}
	}
}
