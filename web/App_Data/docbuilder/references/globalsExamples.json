{
  "blipfilltype": "// Create a blip fill with an image which is tiled all over the created shape:\noFill = Api.CreateBlipFill(\"https://example.com/myimage.png\", \"tile\");",
  "bordersindex": "// The cell will have a bottom black dotted border:\noWorksheet.GetRange(\"E2\").SetBorders(\"Bottom\", \"Dotted\", Api.CreateColorFromRGB(0, 0, 0));",
  "bordertype": "// The paragraph will have a single 3 point wide green bottom border with a zero offset from the bottom paragraph edge:\noParaPr.SetBottomBorder(\"single\", 24, 0, 0, 255, 0);",
  "bullettype": "// The paragraph will be starting with the Arabic numeral which has parenthesis:\noBullet = Api.CreateNumbering(\"ArabicParenR\");",
  "byte": "// The resulting color is green, the bytes are measured in decimal numbers:\noRGBColor = Api.CreateRGBColor(0, 255, 0);\n// The resulting color is green, the bytes are measured in hexadecimal numbers:\noRGBColor = Api.CreateRGBColor(0, 0xff, 0);",
  "charttype": "// ChartType used in text documents\n// The resulting chart will have a 'bar3D' type:\noDrawing = Api.CreateChart(\"bar3D\", [[200, 240, 280],[250, 260, 280]], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);\n\n// ChartType used in spreadsheets\n// The resulting chart will have a 'bar3D' type:\noDrawing = Api.CreateChart(\"bar3D\", [[200, 240, 280],[250, 260, 280]], [\"Projected Revenue\", \"Estimated Costs\"], [2014, 2015, 2016], 4051300, 2347595, 24);",
  "documentelement": "// Add a document element called 'paragraph' to the document:\noDocument.AddElement(oParagraph);",
  "emu": "// Set the size of the drawing to be created as 100 mm (10 cm) in width and 100 mm (10 cm) in height:\noDrawing.SetSize(100 * 36000, 100 * 36000);",
  "hdrftrtype": "// Remove the header of the 'title' type from the final document section:\nvar oDocContent = oFinalSection.RemoveHeader(\"title\");",
  "hps": "// Set the text font size to 11 points:\noTextPr.SetFontSize(22);",
  "line240": "// The paragraph line spacing is set to 1 line:\noParaPr.SetSpacingLine(240, \"auto\");",
  "linestyle": "// The cell will have a bottom black dotted border:\noWorksheet.GetRange(\"E2\").SetBorders(\"Bottom\", \"Dotted\", Api.CreateColorFromRGB(0, 0, 0));",
  "paragraphcontent": "// Add an element called 'text run' to the paragraph:\noParagraph.AddElement(oRun,0);",
  "patterntype": "// Create a fill with a 'dashDnDiag' pattern which has two colors - green and red:\noFill = Api.CreatePatternFill(\"dashDnDiag\", Api.CreateRGBColor(0, 225, 0), Api.CreateRGBColor(255, 0, 0));",
  "positivefixedangle": "// The resulting gradient direction angle is 90 degrees:\noFill = Api.CreateLinearGradientFill([oGs1, oGs2], 5400000);",
  "positivepercentage": "// The resulting gradient stop position is 100%:\nvar oGs2 = Api.CreateGradientStop(Api.CreateRGBColor(255, 164, 101), 100000);",
  "presetcolor": "// Create a scheme color using the 'lightYellow' color preset:\noSchemeColor = Api.CreatePresetColor(\"lightYellow\");",
  "pt": "// The paragraph will have a single 3 point wide green bottom border with a 1 point offset from the bottom paragraph edge:\noParaPr.SetBottomBorder(\"single\", 24, 1, 0, 255, 0);",
  "pt_8": "// The paragraph will have a single 6 point wide green bottom border with a zero offset from the bottom paragraph edge:\noParaPr.SetBottomBorder(\"single\", 48, 0, 0, 255, 0);",
  "relfromh": "// The created drawing will be centered horizontally relative to the page width:\noDrawing.SetHorAlign(\"page\", \"center\");",
  "relfromv": "// The created drawing will be centered vertically relative to the paragraph height:\noDrawing.SetHorAlign(\"paragraph\", \"center\");",
  "schemecolorid": "// Create a scheme color with the 'accent2' identifier:\noSchemeColor = Api.CreateSchemeColor(\"accent2\");",
  "shapetype": "// Create a shape using the 'diamond' preset:\noDrawing = Api.CreateShape(\"diamond\", 100 * 36000, 100 * 36000, oFill, oStroke);",
  "shdtype": "// Add a green shadow to the table:\noTablePr.SetShd(\"clear\", 0, 255, 0, false);",
  "styletype": "// Assign the default document paragraph style to the 'oNormalStyle' variable:\nvar oNormalStyle = oDocument.GetDefaultStyle(\"paragraph\");",
  "tabjc": "// Set tab positions at 50, 75 and 150 points with the text aligned center, left and right at each tab stop accordingly:\noParaPr.SetTabs([1000, 1500, 3000], [\"center\", \"left\", \"right\"]);",
  "tablestyleoverridetype": "// Apply the created style (set shadow) to the top left cell of the table:\noTableStyle.GetConditionalTableStyle(\"topLeftCell\").GetTableCellPr().SetShd(\"clear\", 255, 0, 0);",
  "tablewidth": "// Set the width of the table cell equal to 100 points (2000 twips):\noTableCell.SetWidth(\"twips\", 2000);",
  "ticklabelposition": "// Set the position of the vertical tick labels next to the main vertical label:\noChart.SetVertAxisTickLabelPosition(\"nextTo\");",
  "twips": "// Set the distance between columns equal to 36 points:\noParagraph.SetEqualColumns(2, 720);",
  "verticaltextalign": "// The inner text for the created shape will be added aligned vertically closer to the shape upper part:\noDrawing.SetVerticalTextAlign(\"top\");"
}