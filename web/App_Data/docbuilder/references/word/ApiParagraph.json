{
  "methods": {
    "GetClassType": {
      "memberof": "ApiParagraph",
      "name": "GetClassType",
      "description": "<p>Get the type of this class.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "\"document\""
        ]
      ],
      "see": null,
      "inherits": null
    },
    "AddText": {
      "memberof": "ApiParagraph",
      "name": "AddText",
      "description": "<p>Add some text to the element.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "ApiRun"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "string",
          "name": "sText",
          "description": "<p>The text that we want to insert into the current document element.</p>",
          "optional": true,
          "defaultValue": "\"\""
        }
      ]
    },
    "AddPageBreak": {
      "memberof": "ApiParagraph",
      "name": "AddPageBreak",
      "description": "<p>Add page break and start the next element from the next page.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiRun"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "AddLineBreak": {
      "memberof": "ApiParagraph",
      "name": "AddLineBreak",
      "description": "<p>Add line break to the current position and start the next element from a new line.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "ApiRun"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "AddColumnBreak": {
      "memberof": "ApiParagraph",
      "name": "AddColumnBreak",
      "description": "<p>Add column break to the current position and start the next element from a new column.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiRun"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "AddPageNumber": {
      "memberof": "ApiParagraph",
      "name": "AddPageNumber",
      "description": "<p>Insert the number of the current document page into the paragraph.</p>\n<note>This method works for the paragraphs in the document header/footer only.</note>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiRun"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "AddPagesCount": {
      "memberof": "ApiParagraph",
      "name": "AddPagesCount",
      "description": "<p>Insert the number of pages in the current document into the paragraph.</p>\n<note>This method works for the paragraphs in the document header/footer only.</note>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiRun"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "GetParagraphMarkTextPr": {
      "memberof": "ApiParagraph",
      "name": "GetParagraphMarkTextPr",
      "description": "<p>Get the text properties of the paragraph mark which is used to mark the paragraph end. The mark can also acquire<br>common text properties like bold, italic, underline, etc.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiTextPr"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "GetParaPr": {
      "memberof": "ApiParagraph",
      "name": "GetParaPr",
      "description": "<p>Get paragraph properties.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "ApiParaPr"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "GetNumbering": {
      "memberof": "ApiParagraph",
      "name": "GetNumbering",
      "description": "<p>Get a numbering definition and numbering level for the numbered list.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiNumberingLevel"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "SetNumbering": {
      "memberof": "ApiParagraph",
      "name": "SetNumbering",
      "description": "<p>Specify that the current paragraph references a numbering definition instance in the current document.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": "Same as {@link ApiParagraph#SetNumPr}",
      "inherits": null,
      "params": [
        {
          "type": "ApiNumberingLevel",
          "name": "oNumberingLevel",
          "description": "<p>The numbering level which will be used for assigning the numbers to the paragraph.</p>",
          "optional": false
        }
      ]
    },
    "GetElementsCount": {
      "memberof": "ApiParagraph",
      "name": "GetElementsCount",
      "description": "<p>Get the number of elements in the current paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "number"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "GetElement": {
      "memberof": "ApiParagraph",
      "name": "GetElement",
      "description": "<p>Get the element of the paragraph using the position specified.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "ParagraphContent"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "number",
          "name": "nPos",
          "description": "<p>The position where the element which content we want to get must be located.</p>",
          "optional": false
        }
      ]
    },
    "RemoveElement": {
      "memberof": "ApiParagraph",
      "name": "RemoveElement",
      "description": "<p>Remove the element using the position specified.</p>\n<note>If the element you remove is the last paragraph element (i.e. all elements are removed from the paragraph),<br>a new empty run is automatically created. If you want to add<br>content to this run, use the {@link ApiParagraph#GetElement} method.</note>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "number",
          "name": "nPos",
          "description": "<p>The position of the element which we want to remove in the paragraph.</p>",
          "optional": false
        }
      ]
    },
    "RemoveAllElements": {
      "memberof": "ApiParagraph",
      "name": "RemoveAllElements",
      "description": "<p>Remove all elements from the current paragraph.</p>\n<note>When all elements are removed from the paragraph, a new empty run is automatically created. If you want to add<br>content to this run, use the {@link ApiParagraph#GetElement} method.</note>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null
    },
    "AddElement": {
      "memberof": "ApiParagraph",
      "name": "AddElement",
      "description": "<p>Add an element to the current paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "boolean"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "ParagraphContent",
          "name": "oElement",
          "description": "<p>The document element which will be added at the current position. Returns false if the<br>type of oElement is not supported by a paragraph.</p>",
          "optional": false
        },
        {
          "type": "number",
          "name": "nPos",
          "description": "<p>The number of the paragraph where the current element will be added. If this value is not<br>specified then the element will be added at the end of the current paragraph.</p>",
          "optional": true
        }
      ]
    },
    "AddTabStop": {
      "memberof": "ApiParagraph",
      "name": "AddTabStop",
      "description": "<p>Add a tab stop to the current paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "ApiRun"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "AddDrawing": {
      "memberof": "ApiParagraph",
      "name": "AddDrawing",
      "description": "<p>Add an object (image, shape or chart) to the current paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiRun"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "ApiDrawing",
          "name": "oDrawing",
          "description": "<p>The object which will be added to the current paragraph.</p>",
          "optional": false
        }
      ]
    },
    "AddInlineLvlSdt": {
      "memberof": "ApiParagraph",
      "name": "AddInlineLvlSdt",
      "description": "<p>Add a inline container</p>",
      "tags": {},
      "returns": [
        [
          "ApiInlineLvlSdt"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "ApiInlineLvlSdt",
          "name": "oSdt",
          "description": "<p>if undefined or null, then new class ApiInlineLvlSdt will be created and added to paragraph.</p>",
          "optional": false
        }
      ]
    },
    "SetStyle": {
      "memberof": "ApiParagraph",
      "name": "SetStyle",
      "description": "<p>The paragraph style base method.</p>\n<note>This method is not used by itself, as it only forms the basis for the {@link ApiParagraph#SetStyle} method which sets the selected or created style for the paragraph.</note>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetStyle}",
      "params": [
        {
          "type": "ApiStyle",
          "name": "oStyle",
          "description": "<p>The style of the paragraph to be set.</p>",
          "optional": false
        }
      ]
    },
    "SetContextualSpacing": {
      "memberof": "ApiParagraph",
      "name": "SetContextualSpacing",
      "description": "<p>Specify that any space before or after this paragraph set using the<br>{@link ApiParaPr#SetSpacingBefore} or {@link ApiParaPr#SetSpacingAfter} spacing element, should not be applied when the preceding and<br>following paragraphs are of the same paragraph style, affecting the top and bottom spacing respectively.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetContextualSpacing}",
      "params": [
        {
          "type": "boolean",
          "name": "isContextualSpacing",
          "description": "<p>The true value will enable the paragraph contextual spacing.</p>",
          "optional": false
        }
      ]
    },
    "SetIndLeft": {
      "memberof": "ApiParagraph",
      "name": "SetIndLeft",
      "description": "<p>Set the paragraph left side indentation.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetIndLeft}",
      "params": [
        {
          "type": "twips",
          "name": "nValue",
          "description": "<p>The paragraph left side indentation value measured in twentieths of a point (1/1440 of an inch).</p>",
          "optional": false
        }
      ]
    },
    "SetIndRight": {
      "memberof": "ApiParagraph",
      "name": "SetIndRight",
      "description": "<p>Set the paragraph right side indentation.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetIndRight}",
      "params": [
        {
          "type": "twips",
          "name": "nValue",
          "description": "<p>The paragraph right side indentation value measured in twentieths of a point (1/1440 of an inch).</p>",
          "optional": false
        }
      ]
    },
    "SetIndFirstLine": {
      "memberof": "ApiParagraph",
      "name": "SetIndFirstLine",
      "description": "<p>Set the paragraph first line indentation.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetIndFirstLine}",
      "params": [
        {
          "type": "twips",
          "name": "nValue",
          "description": "<p>The paragraph first line indentation value measured in twentieths of a point (1/1440 of an inch).</p>",
          "optional": false
        }
      ]
    },
    "SetJc": {
      "memberof": "ApiParagraph",
      "name": "SetJc",
      "description": "<p>Set paragraph contents justification.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetJc}",
      "params": [
        {
          "type": "\"left\" | \"right\" | \"both\" | \"center\"",
          "name": "sJc",
          "description": "<p>The parameters will define the justification type that<br>will be applied to the paragraph contents.</p>",
          "optional": false
        }
      ]
    },
    "SetKeepLines": {
      "memberof": "ApiParagraph",
      "name": "SetKeepLines",
      "description": "<p>Specify that when rendering this document using a page view, all lines of this paragraph are maintained on a single page whenever possible.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetKeepLines}",
      "params": [
        {
          "type": "boolean",
          "name": "isKeepLines",
          "description": "<p>The true value will enable the option to keep lines of the paragraph on a single page.</p>",
          "optional": false
        }
      ]
    },
    "SetKeepNext": {
      "memberof": "ApiParagraph",
      "name": "SetKeepNext",
      "description": "<p>Specify that when rendering this document using a paginated view, the contents of this paragraph are at least<br>partly rendered on the same page as the following paragraph whenever possible.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetKeepNext}",
      "params": [
        {
          "type": "boolean",
          "name": "isKeepNext",
          "description": "<p>The true value will enable the option to keep lines of the paragraph on the same<br>page as the following paragraph.</p>",
          "optional": false
        }
      ]
    },
    "SetPageBreakBefore": {
      "memberof": "ApiParagraph",
      "name": "SetPageBreakBefore",
      "description": "<p>Specify that when rendering this document using a paginated view, the contents of this paragraph are rendered at<br>the beginning of a new page in the document.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetPageBreakBefore}",
      "params": [
        {
          "type": "boolean",
          "name": "isPageBreakBefore",
          "description": "<p>The true value will enable the option to render the contents of the paragraph<br>at the beginning of the a new page in the document.</p>",
          "optional": false
        }
      ]
    },
    "SetSpacingLine": {
      "memberof": "ApiParagraph",
      "name": "SetSpacingLine",
      "description": "<p>Set the paragraph line spacing. If the value of the sLineRule parameter is either<br>&quot;atLeast&quot; or &quot;exact&quot;, then the value of nLine will be interpreted as twentieths of a point. If<br>the value of the sLineRule parameter is &quot;auto&quot;, then the value of the<br>nLine parameter will be interpreted as 240ths of a line.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetSpacingLine}",
      "params": [
        {
          "type": "twips | line240",
          "name": "nLine",
          "description": "<p>The line spacing value measured either in twentieths of a point (1/1440 of an inch) or in 240ths of a line.</p>",
          "optional": false
        },
        {
          "type": "\"auto\" | \"atLeast\" | \"exact\"",
          "name": "sLineRule",
          "description": "<p>The rule that determines the measuring units of the nLine parameter.</p>",
          "optional": false
        }
      ]
    },
    "SetSpacingBefore": {
      "memberof": "ApiParagraph",
      "name": "SetSpacingBefore",
      "description": "<p>Set the spacing before the current paragraph. If the value of the isBeforeAuto parameter is true, then<br>any value of the nBefore is ignored. If isBeforeAuto parameter is not specified, then<br>it will be interpreted as false.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetSpacingBefore}",
      "params": [
        {
          "type": "twips",
          "name": "nBefore",
          "description": "<p>The value of the spacing before the current paragraph measured in twentieths of a point (1/1440 of an inch).</p>",
          "optional": false
        },
        {
          "type": "boolean",
          "name": "isBeforeAuto",
          "description": "<p>The true value will disable the nBefore parameter.</p>",
          "optional": true,
          "defaultValue": false
        }
      ]
    },
    "SetSpacingAfter": {
      "memberof": "ApiParagraph",
      "name": "SetSpacingAfter",
      "description": "<p>Set the spacing after the current paragraph. If the value of the isAfterAuto parameter is true, then<br>any value of the nAfter is ignored. If isAfterAuto parameter is not specified, then it<br>will be interpreted as false.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetSpacingAfter}",
      "params": [
        {
          "type": "twips",
          "name": "nAfter",
          "description": "<p>The value of the spacing after the current paragraph measured in twentieths of a point (1/1440 of an inch).</p>",
          "optional": false
        },
        {
          "type": "boolean",
          "name": "isAfterAuto",
          "description": "<p>The true value will disable the nAfter parameter.</p>",
          "optional": true,
          "defaultValue": false
        }
      ]
    },
    "SetShd": {
      "memberof": "ApiParagraph",
      "name": "SetShd",
      "description": "<p>Specify the shading applied to the contents of the paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetShd}",
      "params": [
        {
          "type": "ShdType",
          "name": "sType",
          "description": "<p>The shading type which will be applied to the contents of the current paragraph.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "r",
          "description": "<p>Red color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "g",
          "description": "<p>Green color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "b",
          "description": "<p>Blue color component value.</p>",
          "optional": false
        },
        {
          "type": "boolean",
          "name": "isAuto",
          "description": "<p>The true value will disable paragraph contents shading.</p>",
          "optional": true,
          "defaultValue": false
        }
      ]
    },
    "SetBottomBorder": {
      "memberof": "ApiParagraph",
      "name": "SetBottomBorder",
      "description": "<p>Specify the border which will be displayed below a set of paragraphs which have the same paragraph border settings.</p>\n<note>The paragraphs of the same style going one by one are considered as a single block, so the border is added<br>to the whole block rather than to every paragraph in this block.</note>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetBottomBorder}",
      "params": [
        {
          "type": "BorderType",
          "name": "sType",
          "description": "<p>The border style.</p>",
          "optional": false
        },
        {
          "type": "pt_8",
          "name": "nSize",
          "description": "<p>The width of the current bottom border measured in eighths of a point.</p>",
          "optional": false
        },
        {
          "type": "pt",
          "name": "nSpace",
          "description": "<p>The spacing offset below the paragraph measured in points used to place this border.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "r",
          "description": "<p>Red color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "g",
          "description": "<p>Green color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "b",
          "description": "<p>Blue color component value.</p>",
          "optional": false
        }
      ]
    },
    "SetLeftBorder": {
      "memberof": "ApiParagraph",
      "name": "SetLeftBorder",
      "description": "<p>Specify the border which will be displayed at the left side of the page around the specified paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetLeftBorder}",
      "params": [
        {
          "type": "BorderType",
          "name": "sType",
          "description": "<p>The border style.</p>",
          "optional": false
        },
        {
          "type": "pt_8",
          "name": "nSize",
          "description": "<p>The width of the current left border measured in eighths of a point.</p>",
          "optional": false
        },
        {
          "type": "pt",
          "name": "nSpace",
          "description": "<p>The spacing offset to the left of the paragraph measured in points used to place this border.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "r",
          "description": "<p>Red color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "g",
          "description": "<p>Green color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "b",
          "description": "<p>Blue color component value.</p>",
          "optional": false
        }
      ]
    },
    "SetRightBorder": {
      "memberof": "ApiParagraph",
      "name": "SetRightBorder",
      "description": "<p>Specify the border which will be displayed at the right side of the page around the specified paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetRightBorder}",
      "params": [
        {
          "type": "BorderType",
          "name": "sType",
          "description": "<p>The border style.</p>",
          "optional": false
        },
        {
          "type": "pt_8",
          "name": "nSize",
          "description": "<p>The width of the current right border measured in eighths of a point.</p>",
          "optional": false
        },
        {
          "type": "pt",
          "name": "nSpace",
          "description": "<p>The spacing offset to the right of the paragraph measured in points used to place this border.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "r",
          "description": "<p>Red color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "g",
          "description": "<p>Green color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "b",
          "description": "<p>Blue color component value.</p>",
          "optional": false
        }
      ]
    },
    "SetTopBorder": {
      "memberof": "ApiParagraph",
      "name": "SetTopBorder",
      "description": "<p>Specify the border which will be displayed above a set of paragraphs which have the same set of paragraph border settings.</p>\n<note>The paragraphs of the same style going one by one are considered as a single block, so the border is added to the whole block rather than to every paragraph in this block.</note>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetTopBorder}",
      "params": [
        {
          "type": "BorderType",
          "name": "sType",
          "description": "<p>The border style.</p>",
          "optional": false
        },
        {
          "type": "pt_8",
          "name": "nSize",
          "description": "<p>The width of the current top border measured in eighths of a point.</p>",
          "optional": false
        },
        {
          "type": "pt",
          "name": "nSpace",
          "description": "<p>The spacing offset above the paragraph measured in points used to place this border.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "r",
          "description": "<p>Red color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "g",
          "description": "<p>Green color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "b",
          "description": "<p>Blue color component value.</p>",
          "optional": false
        }
      ]
    },
    "SetBetweenBorder": {
      "memberof": "ApiParagraph",
      "name": "SetBetweenBorder",
      "description": "<p>Specify the border which will be displayed between each paragraph in a set of paragraphs which have the same set of paragraph border settings.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetBetweenBorder}",
      "params": [
        {
          "type": "BorderType",
          "name": "sType",
          "description": "<p>The border style.</p>",
          "optional": false
        },
        {
          "type": "pt_8",
          "name": "nSize",
          "description": "<p>The width of the current border measured in eighths of a point.</p>",
          "optional": false
        },
        {
          "type": "pt",
          "name": "nSpace",
          "description": "<p>The spacing offset between the paragraphs measured in points used to place this border.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "r",
          "description": "<p>Red color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "g",
          "description": "<p>Green color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "b",
          "description": "<p>Blue color component value.</p>",
          "optional": false
        }
      ]
    },
    "SetWidowControl": {
      "memberof": "ApiParagraph",
      "name": "SetWidowControl",
      "description": "<p>Specify whether a single line of this paragraph will be prevented from being displayed on a separate page from the remaining content at display time by moving the line onto the following page.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetWidowControl}",
      "params": [
        {
          "type": "boolean",
          "name": "isWidowControl",
          "description": "<p>The true value will enable the SetWidowControl method use.</p>",
          "optional": false
        }
      ]
    },
    "SetTabs": {
      "memberof": "ApiParagraph",
      "name": "SetTabs",
      "description": "<p>Specify a sequence of custom tab stops which will be used for any tab characters in the current paragraph.<br><b>Warning</b>: The lengths of aPos array and aVal array <b>MUST BE</b> equal to each other.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetTabs}",
      "params": [
        {
          "type": "Array.<twips>",
          "name": "aPos",
          "description": "<p>An array of the positions of custom tab stops with respect to the current page margins<br>measured in twentieths of a point (1/1440 of an inch).</p>",
          "optional": false
        },
        {
          "type": "Array.<TabJc>",
          "name": "aVal",
          "description": "<p>An array of the styles of custom tab stops, which determines the behavior of the tab<br>stop and the alignment which will be applied to text entered at the current custom tab stop.</p>",
          "optional": false
        }
      ]
    },
    "SetNumPr": {
      "memberof": "ApiParagraph",
      "name": "SetNumPr",
      "description": "<p>Specify that the current paragraph references a numbering definition instance in the current document.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetNumPr}",
      "params": [
        {
          "type": "ApiNumbering",
          "name": "oNumPr",
          "description": "<p>Specifies a numbering definition.</p>",
          "optional": false
        },
        {
          "type": "number",
          "name": "nLvl",
          "description": "<p>Specifies a numbering level reference. If the current instance of the ApiParaPr class is direct<br>formatting of a paragraph, then this parameter MUST BE specified. Otherwise if the current instance of the ApiParaPr class<br>is the part of ApiStyle properties, this parameter will be ignored.</p>",
          "optional": true,
          "defaultValue": 0
        }
      ]
    },
    "SetBullet": {
      "memberof": "ApiParagraph",
      "name": "SetBullet",
      "description": "<p>Set the bullet or numbering to the current paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetBullet}",
      "params": [
        {
          "type": "ApiBullet",
          "name": "oBullet",
          "description": "<p>The bullet object created using either the {@link Api#CreateBullet} or {@link Api#CreateNumbering} method.</p>",
          "optional": false
        }
      ]
    }
  },
  "comment": "/**\r\n\t * Class representing a paragraph.\r\n\t * @constructor\r\n\t * @extends {ApiParaPr}\r\n\t */",
  "description": "<p>Class representing a paragraph.</p>",
  "scope": "global",
  "params": []
}