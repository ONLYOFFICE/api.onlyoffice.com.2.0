{
  "Config": {
    "name": "Config",
    "description": "<p>Plugin config.</p>",
    "type": [
      "Object"
    ],
    "properties": [
      {
        "type": "string",
        "name": "name",
        "description": "<p>Plugin name which will be visible at the plugin toolbar.</p>"
      },
      {
        "type": "Object",
        "name": "nameLocale",
        "description": "<p>Translations for the name field. The object keys are the two letter language codes (ru, de, it, etc.) and the values are the plugin name translation for each language. Example: { &quot;fr&quot; : &quot;trFr&quot;, &quot;de&quot; : &quot;deTr&quot; }.</p>"
      },
      {
        "type": "string",
        "name": "guid",
        "description": "<p>Plugin identifier. It must be of the asc.{UUID} type.</p>"
      },
      {
        "type": "string",
        "name": "baseUrl",
        "description": "<p>Path to the plugin. All the other paths are calculated relative to this path. In case the plugin is installed on the server, an additional parameter (path to the plugins) is added there. If baseUrl == &quot;&quot;, the path to all plugins will be used.</p>"
      },
      {
        "type": "Array.<Variation>",
        "name": "variations",
        "description": "<p>Plugin variations, or subplugins, that are created inside the origin plugin.</p>"
      }
    ]
  },
  "EditorType": {
    "name": "EditorType",
    "description": "<p>The editors which the plugin is available for (&quot;word&quot; - text document editor, &quot;cell&quot; - spreadsheet editor, &quot;slide&quot; - presentation editor).</p>",
    "type": [
      "\"word\"",
      "\"slide\"",
      "\"cell\""
    ]
  },
  "InitDataType": {
    "name": "InitDataType",
    "description": "<p>The data type selected in the editor and sent to the plugin: &quot;text&quot; - the text data, &quot;html&quot; - HTML formatted code, &quot;ole&quot; - OLE object data, &quot;desktop&quot; - the desktop editor data, &quot;destop-external&quot; - the main page data of the desktop app (system messages), &quot;none&quot; - no data will be send to the plugin from the editor.</p>",
    "type": [
      "\"none\"",
      "\"text\"",
      "\"ole\"",
      "\"html\"",
      "\"desktop\""
    ]
  },
  "EventType": {
    "name": "EventType",
    "description": "<p>Plugin event.</p>",
    "type": [
      "\"onDocumentContentReady\"",
      "\"onTargetPositionChanged\"",
      "\"onClick\"",
      "\"onInputHelperClear\"",
      "\"onInputHelperInput\""
    ]
  },
  "Variation": {
    "name": "Variation",
    "description": "<p>Plugin variations, or subplugins, that are created inside the origin plugin.</p>",
    "type": [
      "Object"
    ],
    "properties": [
      {
        "type": "string",
        "name": "description",
        "description": "<p>The description, i.e. what describes your plugin the best way.</p>"
      },
      {
        "type": "Object",
        "name": "descriptionLocale",
        "description": "<p>Translations for the description field. The object keys are the two letter language codes (ru, de, it, etc.) and the values are the plugin description translation for each language.</p>"
      },
      {
        "type": "string",
        "name": "url",
        "description": "<p>Plugin entry point, i.e. an HTML file which connects the plugin.js file (the base file needed for work with plugins) and launches the plugin code.</p>"
      },
      {
        "type": "Array.<string>",
        "name": "icons",
        "description": "<p>(with support HiDPI)\nPlugin icon image files used in the editors. There can be several scaling types for plugin icons: 100%, 125%, 150%, 175%, 200%, etc.</p>"
      },
      {
        "type": "boolean",
        "name": "isViewer",
        "description": "<p>Specifies if the plugin is working when the document is available in the viewer mode only or not.</p>"
      },
      {
        "type": "boolean",
        "name": "isDisplayedInViewer",
        "description": "<p>Specifies if the plugin will be displayed in the viewer mode as well as in the editor mode (isDisplayedInViewer == true) or in the editor mode only (isDisplayedInViewer == false).</p>"
      },
      {
        "type": "Array.<EditorType>",
        "name": "EditorsSupport",
        "description": "<p>The editors which the plugin is available for (&quot;word&quot; - text document editor, &quot;cell&quot; - spreadsheet editor, &quot;slide&quot; - presentation editor).</p>"
      },
      {
        "type": "boolean",
        "name": "isVisual",
        "description": "<p>Specifies if the plugin is visual (will open a window for some action, or introduce some additions to the editor panel interface) or non-visual (will provide a button (or buttons) which is going to apply some transformations or manipulations to the document).</p>"
      },
      {
        "type": "boolean",
        "name": "isModal",
        "description": "<p>Specifies if the opened plugin window is modal (used for visual plugins only, and if isInsideMode is not true).</p>"
      },
      {
        "type": "boolean",
        "name": "isInsideMode",
        "description": "<p>Specifies if the plugin must be displayed inside the editor panel instead of its own window.</p>"
      },
      {
        "type": "boolean",
        "name": "isCustomWindow",
        "description": "<p>Specifies if the plugin uses a custom window, without standard borders and buttons (used for modal plugins only).</p>"
      },
      {
        "type": "boolean",
        "name": "isSystem",
        "description": "<p>Specifies if the plugin is not displayed in the editor interface and is started in the background with the server (or desktop editors start) not interfering with the other plugins, so that they can work simultaneously.</p>"
      },
      {
        "type": "InitDataType",
        "name": "initDataType",
        "description": "<p>The data type selected in the editor and sent to the plugin: &quot;text&quot; - the text data, &quot;html&quot; - HTML formatted code, &quot;ole&quot; - OLE object data, &quot;desktop&quot; - the desktop editor data, &quot;destop-external&quot; - the main page data of the desktop app (system messages), &quot;none&quot; - no data will be send to the plugin from the editor.</p>"
      },
      {
        "type": "string",
        "name": "initData",
        "description": "<p>Is usually equal to &quot;&quot; - this is the data which is sent from the editor to the plugin at the plugin start (e.g. if initDataType == &quot;text&quot;, the plugin will receive the selected text when run). It may also be equal to encryption in the encryption plugins.</p>"
      },
      {
        "type": "boolean",
        "name": "isUpdateOleOnResize",
        "description": "<p>Specifies if an OLE object must be redrawn when resized in the editor using the vector object draw type or not (used for OLE objects only, i.e. initDataType == &quot;ole&quot;).</p>"
      },
      {
        "type": "Array.<Button>",
        "name": "buttons",
        "description": "<p>The list of skinnable plugin buttons used in the plugin interface (used for visual plugins with their own window only, i.e. isVisual == true &amp;&amp; isInsideMode == false).</p>"
      },
      {
        "type": "boolean",
        "name": "initOnSelectionChanged",
        "description": "<p>Specifies if the plugin watches the text selection events in the editor window.</p>"
      },
      {
        "type": "Array.<number>",
        "name": "size",
        "description": "<p>Plugin window size.</p>"
      },
      {
        "type": "Array.<EventType>",
        "name": "events",
        "description": "<p>Plugin events.</p>"
      }
    ]
  },
  "Button": {
    "name": "Button",
    "description": "<p>The skinnable plugin button used in the plugin interface (used for visual plugins with their own window only, i.e. isVisual == true &amp;&amp; isInsideMode == false).</p>",
    "type": [
      "object"
    ],
    "properties": [
      {
        "type": "string",
        "name": "text",
        "description": "<p>The label which is displayed on the button.</p>"
      },
      {
        "type": "string",
        "name": "textLocale",
        "description": "<p>Translations for the text field. The object keys are the two letter language codes (ru, de, it, etc.) and the values are the button label translation for each language.</p>"
      },
      {
        "type": "boolean",
        "name": "primary",
        "description": "<p>Defines if the button is primary or not. The primary flag affects the button skin only.</p>"
      }
    ]
  },
  "FontInfo": {
    "name": "FontInfo",
    "description": "<p>An object containing the font information.</p>",
    "type": [
      "Object"
    ],
    "properties": [
      {
        "type": "string",
        "name": "m_wsFontName"
      },
      {
        "type": "string",
        "name": "m_wsFontPath"
      },
      {
        "type": "number",
        "name": "m_lIndex"
      },
      {
        "type": "boolean",
        "name": "m_bBold"
      },
      {
        "type": "boolean",
        "name": "m_bItalic"
      },
      {
        "type": "boolean",
        "name": "m_bIsFixed"
      },
      {
        "type": "Array.<number>",
        "name": "m_aPanose"
      },
      {
        "type": "number",
        "name": "m_ulUnicodeRange1"
      },
      {
        "type": "number",
        "name": "m_ulUnicodeRange2"
      },
      {
        "type": "number",
        "name": "m_ulUnicodeRange3"
      },
      {
        "type": "number",
        "name": "m_ulUnicodeRange4"
      },
      {
        "type": "number",
        "name": "m_ulCodePageRange1"
      },
      {
        "type": "number",
        "name": "m_ulCodePageRange2"
      },
      {
        "type": "number",
        "name": "m_usWeigth"
      },
      {
        "type": "number",
        "name": "m_usWidth"
      },
      {
        "type": "string",
        "name": "m_sFamilyClass"
      },
      {
        "type": "string",
        "name": "m_eFontFormat"
      },
      {
        "type": "number",
        "name": "m_shAvgCharWidth"
      },
      {
        "type": "number",
        "name": "m_shAscent"
      },
      {
        "type": "number",
        "name": "m_shDescent"
      },
      {
        "type": "number",
        "name": "m_shLineGap"
      },
      {
        "type": "number",
        "name": "m_shXHeight"
      },
      {
        "type": "number",
        "name": "m_shCapHeight"
      }
    ]
  },
  "Macros": {
    "name": "Macros",
    "description": "<p>An object containing the macros data.</p>",
    "type": [
      "Object"
    ],
    "properties": [
      {
        "type": "Array.<string>",
        "name": "macrosArray",
        "description": "<p>An array of macros codes ([{&quot;name&quot;: &quot;Macros1&quot;, &quot;value&quot;: &quot;{macrosCode}&quot;}]).</p>"
      },
      {
        "type": "number",
        "name": "current",
        "description": "<p>A current macro index.</p>"
      }
    ]
  },
  "SelectionType": {
    "name": "SelectionType",
    "description": "<p>The current selection type.</p>",
    "type": [
      "\"none\"",
      "\"text\"",
      "\"drawing\"",
      "\"slide\""
    ]
  },
  "ImageData": {
    "name": "ImageData",
    "description": "<p>An object containing the font information.</p>",
    "type": [
      "Object"
    ],
    "properties": [
      {
        "type": "string",
        "name": "src"
      },
      {
        "type": "number",
        "name": "width"
      },
      {
        "type": "number",
        "name": "height"
      }
    ]
  }
}