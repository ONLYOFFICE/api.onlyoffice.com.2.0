{
  "methods": {
    "GetVersion": {
      "memberof": "Api",
      "name": "GetVersion",
      "description": "<p>Returns the editor version.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "string"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "AddOleObject": {
      "memberof": "Api",
      "name": "AddOleObject",
      "description": "<p>Adds an OLE object to the current document position.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "Object",
          "name": "data",
          "description": "<p>The OLE object properties.</p>",
          "optional": false
        },
        {
          "type": "string",
          "name": "data.data",
          "description": "<p>OLE object data (internal format).</p>",
          "optional": false
        },
        {
          "type": "string",
          "name": "data.imgSrc",
          "description": "<p>A link to the image (its visual representation) stored in the OLE object and used by the plugin.</p>",
          "optional": false
        },
        {
          "type": "string",
          "name": "data.guid",
          "description": "<p>An identifier of the plugin which can edit the current OLE object and must be of the <em>asc.{UUID}</em> type.</p>",
          "optional": false
        },
        {
          "type": "number",
          "name": "data.width",
          "description": "<p>The OLE object width measured in millimeters.</p>",
          "optional": false
        },
        {
          "type": "number",
          "name": "data.height",
          "description": "<p>The OLE object height measured in millimeters.</p>",
          "optional": false
        },
        {
          "type": "number",
          "name": "data.widthPix",
          "description": "<p>The OLE object image width in pixels.</p>",
          "optional": false
        },
        {
          "type": "number",
          "name": "data.heightPix",
          "description": "<p>The OLE object image height in pixels.</p>",
          "optional": false
        }
      ]
    },
    "EditOleObject": {
      "memberof": "Api",
      "name": "EditOleObject",
      "description": "<p>Edits an OLE object in the document.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "Object",
          "name": "data",
          "description": "<p>The OLE object properties.</p>",
          "optional": false
        },
        {
          "type": "string",
          "name": "data.data",
          "description": "<p>OLE object data (internal format).</p>",
          "optional": false
        },
        {
          "type": "string",
          "name": "data.imgSrc",
          "description": "<p>A link to the image (its visual representation) stored in the OLE object and used by the plugin.</p>",
          "optional": false
        },
        {
          "type": "string",
          "name": "data.objectId",
          "description": "<p>The OLE object identifier.</p>",
          "optional": false
        },
        {
          "type": "number",
          "name": "data.width",
          "description": "<p>The OLE object width measured in millimeters.</p>",
          "optional": false
        },
        {
          "type": "number",
          "name": "data.height",
          "description": "<p>The OLE object height measured in millimeters.</p>",
          "optional": false
        },
        {
          "type": "number",
          "name": "data.widthPix",
          "description": "<p>The OLE object image width in pixels.</p>",
          "optional": false
        },
        {
          "type": "number",
          "name": "data.heightPix",
          "description": "<p>The OLE object image height in pixels.</p>",
          "optional": false
        }
      ]
    },
    "GetFontList": {
      "memberof": "Api",
      "name": "GetFontList",
      "description": "<p>Returns the fonts list.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "Array.<FontInfo>"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "InputText": {
      "memberof": "Api",
      "name": "InputText",
      "description": "<p>Inserts text into the document.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "string",
          "name": "text",
          "description": "<p>A string value that specifies the text to be inserted into the document.</p>",
          "optional": false
        },
        {
          "type": "string",
          "name": "textReplace",
          "description": "<p>A string value that specifies the text to be replaced with a new text.</p>",
          "optional": false
        }
      ]
    },
    "PasteHtml": {
      "memberof": "Api",
      "name": "PasteHtml",
      "description": "<p>Pastes text in the HTML format into the document.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "string",
          "name": "htmlText",
          "description": "<p>A string value that specifies the text in the <em>HTML</em> format to be pasted into the document.</p>",
          "optional": false
        }
      ]
    },
    "PasteText": {
      "memberof": "Api",
      "name": "PasteText",
      "description": "<p>Pastes text into the document.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "string",
          "name": "text",
          "description": "<p>A string value that specifies the text to be pasted into the document.</p>",
          "optional": false
        }
      ]
    },
    "GetMacros": {
      "memberof": "Api",
      "name": "GetMacros",
      "description": "<p>Returns the document macros.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "Macros"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "SetMacros": {
      "memberof": "Api",
      "name": "SetMacros",
      "description": "<p>Sets macros to the document.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "Macros",
          "name": "data",
          "description": "<p>The <em>Macros</em> object containing the data about all the macros from the document.</p>",
          "optional": false
        }
      ]
    },
    "GetVBAMacros": {
      "memberof": "Api",
      "name": "GetVBAMacros",
      "description": "<p>Returns all VBA macros from the document.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "string",
          "null"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "StartAction": {
      "memberof": "Api",
      "name": "StartAction",
      "description": "<p>Specifies the start action for long operations.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "number",
          "name": "type",
          "description": "<p>A value which defines an action type which can take <b>0</b> if this is an <em>Information</em> action or <b>1</b> if this is a <em>BlockInteraction</em> action.</p>",
          "optional": false
        },
        {
          "type": "string",
          "name": "description",
          "description": "<p>A string value that specifies the description text for the start action of the operation.</p>",
          "optional": false
        }
      ]
    },
    "EndAction": {
      "memberof": "Api",
      "name": "EndAction",
      "description": "<p>Specifies the end action for long operations.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "number",
          "name": "type",
          "description": "<p>A value which defines an action type which can take <b>0</b> if this is the <em>Information</em> action or <b>1</b> if this is the <em>BlockInteraction</em> action.</p>",
          "optional": false
        },
        {
          "type": "string",
          "name": "description",
          "description": "<p>A string value that specifies the description text for the operation end action.</p>",
          "optional": false
        }
      ]
    },
    "OnEncryption": {
      "memberof": "Api",
      "name": "OnEncryption",
      "description": "<p>Encrypts the document.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "object",
          "name": "obj",
          "description": "<p>The encryption properties.</p>",
          "optional": false
        },
        {
          "type": "string",
          "name": "obj.type",
          "description": "<p>The type of encrypting operation:</p>\n<ul>\n<li><b>generatePassword</b> - generates a password for the document,</li>\n<li><b>getPasswordByFile</b> - sends the password when opening the document,</li>\n<li><b>setPasswordByFile</b> - sets a password to the document,</li>\n<li><b>encryptData</b> - encrypts changes when co-editing,</li>\n<li><b>decryptData</b> - decrypts changes when co-editing.</li>\n</ul>",
          "optional": false
        },
        {
          "type": "string",
          "name": "obj.password",
          "description": "<p>A string value specifying the password to access the document.</p>",
          "optional": false
        },
        {
          "type": "string",
          "name": "obj.data",
          "description": "<p>Encrypted/decrypted changes.</p>",
          "optional": false
        },
        {
          "type": "boolean",
          "name": "obj.check",
          "description": "<p>Checks if the encryption/decryption operation is successful or not (used only for <em>encryptData</em> or <em>decryptData</em> types).</p>",
          "optional": false
        },
        {
          "type": "string",
          "name": "obj.docinfo",
          "description": "<p>An unencrypted part of the encrypted file.</p>",
          "optional": false
        },
        {
          "type": "string",
          "name": "obj.hash",
          "description": "<p>A string value specifying a file hash (<em>sha256</em> by default).</p>",
          "optional": false
        },
        {
          "type": "string",
          "name": "obj.error",
          "description": "<p>A string value specifying an error that occurs (the &quot;&quot; value means that the operation is successful).</p>",
          "optional": false
        }
      ]
    },
    "SetProperties": {
      "memberof": "Api",
      "name": "SetProperties",
      "description": "<p>Sets the properties to the document.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "object",
          "name": "obj",
          "description": "<p>The document properties.</p>",
          "optional": false
        },
        {
          "type": "boolean",
          "name": "obj.copyoutenabled",
          "description": "<p>Disables copying from the editor if it is set to <strong>false</strong>.</p>",
          "optional": false
        },
        {
          "type": "boolean",
          "name": "obj.hideContentControlTrack",
          "description": "<p>Disables tracking the content control if it is set to <strong>true</strong>.</p>",
          "optional": false
        },
        {
          "type": "string",
          "name": "obj.watermark_on_draw",
          "description": "<p>A string value for {@link global#watermark_on_draw watermark properties} in JSON format.</p>",
          "optional": false
        },
        {
          "type": "boolean",
          "name": "obj.disableAutostartMacros",
          "description": "<p>Sets a flag that specifies that macros are started automatically when the editor opens.</p>",
          "optional": false
        },
        {
          "type": "string",
          "name": "obj.fillForms",
          "description": "<p>Sets rules in JSON format for filling document {@link global#fillForms forms} by tags.</p>",
          "optional": false
        }
      ]
    },
    "ShowInputHelper": {
      "memberof": "Api",
      "name": "ShowInputHelper",
      "description": "<p>Shows the input helper.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "string",
          "name": "guid",
          "description": "<p>A string value which specifies a plugin identifier which must be of the <em>asc.{UUID}</em> type.</p>",
          "optional": false
        },
        {
          "type": "number",
          "name": "w",
          "description": "<p>A number which specifies the window width measured in millimeters.</p>",
          "optional": false
        },
        {
          "type": "number",
          "name": "h",
          "description": "<p>A number which specifies the window height measured in millimeters.</p>",
          "optional": false
        },
        {
          "type": "boolean",
          "name": "isKeyboardTake",
          "description": "<p>Defines if the keyboard is caught (<strong>true</strong>) or not (<strong>alse</strong>).</p>",
          "optional": false
        }
      ]
    },
    "UnShowInputHelper": {
      "memberof": "Api",
      "name": "UnShowInputHelper",
      "description": "<p>Unshows the input helper.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "string",
          "name": "guid",
          "description": "<p>A string value which specifies a plugin identifier which must be of the <em>asc.{UUID}</em> type.</p>",
          "optional": false
        },
        {
          "type": "string",
          "name": "isclear",
          "description": "<p>Defines if the input context will be cleared (<strong>true</strong>) or not (<strong>false</strong>).</p>",
          "optional": false
        }
      ]
    },
    "CoAuthoringChatSendMessage": {
      "memberof": "Api",
      "name": "CoAuthoringChatSendMessage",
      "description": "<p>Sends a message to the co-authoring chat.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "string",
          "name": "sText",
          "description": "<p>Message text.</p>",
          "optional": false
        }
      ]
    },
    "GetSelectionType": {
      "memberof": "Api",
      "name": "GetSelectionType",
      "description": "<p>Returns the type of the current selection.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "SelectionType"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "ConvertDocument": {
      "memberof": "Api",
      "name": "ConvertDocument",
      "description": "<p>Converts a document to Markdown or HTML text.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "string"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "\"markdown\" | \"html\"",
          "name": "sConvertType",
          "description": "<p>Conversion type (&quot;markdown&quot; or &quot;html&quot;).</p>",
          "optional": true,
          "defaultValue": "\"markdown\""
        },
        {
          "type": "boolean",
          "name": "bHtmlHeadings",
          "description": "<p>Defines if the HTML headings and IDs will be generated when the Markdown renderer of your target platform does not handle Markdown-style IDs.</p>",
          "optional": true,
          "defaultValue": false
        },
        {
          "type": "boolean",
          "name": "bBase64img",
          "description": "<p>Defines if the images will be created in the base64 format.</p>",
          "optional": true,
          "defaultValue": false
        },
        {
          "type": "boolean",
          "name": "bDemoteHeadings",
          "description": "<p>Defines if all heading levels in your document will be demoted to conform with the following standard: single H1 as title, H2 as top-level heading in the text body.</p>",
          "optional": true,
          "defaultValue": false
        },
        {
          "type": "boolean",
          "name": "bRenderHTMLTags",
          "description": "<p>Defines if HTML tags will be preserved in your Markdown. If you just want to use an occasional HTML tag, you can avoid using the opening angle bracket in the following way: &lt;tag&gt;text&lt;/tag&gt;. By default, the opening angle brackets will be replaced with the special characters.</p>",
          "optional": true,
          "defaultValue": false
        }
      ]
    },
    "GetSelectedText": {
      "memberof": "Api",
      "name": "GetSelectedText",
      "description": "<p>Returns the selected text from the document.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CPE",
          "CSE"
        ]
      },
      "returns": [
        [
          "string"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "object",
          "name": "numbering",
          "description": "<p>The resulting string display properties.</p>",
          "optional": false
        },
        {
          "type": "boolean",
          "name": "numbering.NewLine",
          "description": "<p>Defines if the resulting string will include line boundaries or not.</p>",
          "optional": false
        },
        {
          "type": "boolean",
          "name": "numbering.NewLineParagraph",
          "description": "<p>Defines if the resulting string will include paragraph line boundaries or not.</p>",
          "optional": false
        },
        {
          "type": "boolean",
          "name": "numbering.Numbering",
          "description": "<p>Defines if the resulting string will include numbering or not.</p>",
          "optional": false
        },
        {
          "type": "boolean",
          "name": "numbering.Math",
          "description": "<p>Defines if the resulting string will include mathematical expressions or not.</p>",
          "optional": false
        },
        {
          "type": "string",
          "name": "numbering.TableCellSeparator",
          "description": "<p>Defines how the table cell separator will be specified in the resulting string.</p>",
          "optional": false
        },
        {
          "type": "string",
          "name": "numbering.TableRowSeparator",
          "description": "<p>Defines how the table row separator will be specified in the resulting string.</p>",
          "optional": false
        },
        {
          "type": "string",
          "name": "numbering.ParaSeparator",
          "description": "<p>Defines how the paragraph separator will be specified in the resulting string.</p>",
          "optional": false
        },
        {
          "type": "string",
          "name": "numbering.TabSymbol",
          "description": "<p>Defines how the tab will be specified in the resulting string.</p>",
          "optional": false
        }
      ]
    },
    "ReplaceTextSmart": {
      "memberof": "Api",
      "name": "ReplaceTextSmart",
      "description": "<p>Replaces each paragraph (or text in cell) in the select with the corresponding text from an array of strings.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "boolean"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "Array",
          "name": "arrString",
          "description": "<p>An array of replacement strings.</p>",
          "optional": false
        },
        {
          "type": "string",
          "name": "sParaTab",
          "description": "<p>A character which is used to specify the tab in the source text.</p>",
          "optional": true,
          "defaultValue": "\" \""
        },
        {
          "type": "string",
          "name": "sParaNewLine",
          "description": "<p>A character which is used to specify the line break character in the source text.</p>",
          "optional": true,
          "defaultValue": "\" \""
        }
      ]
    },
    "GetFileToDownload": {
      "memberof": "Api",
      "name": "GetFileToDownload",
      "description": "<p>Returns the current file to download in the specified format.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "string"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "string",
          "name": "format",
          "description": "<p>A format in which you need to download a file.</p>",
          "optional": true,
          "defaultValue": "\" \""
        }
      ]
    },
    "GetImageDataFromSelection": {
      "memberof": "Api",
      "name": "GetImageDataFromSelection",
      "description": "<p>Returns the image data from the first of the selected drawings. If there are no drawings selected, the method returns a white rectangle.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "ImageData"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "PutImageDataToSelection": {
      "memberof": "Api",
      "name": "PutImageDataToSelection",
      "description": "<p>Replaces the first selected drawing with the image specified in the parameters.\nIf there are no drawings selected, the method inserts the image at the current position.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "ImageData",
          "name": "oImageData",
          "description": "<p>The information about the base64 encoded <em>png</em> image.</p>",
          "optional": false
        }
      ]
    },
    "GetInstalledPlugins": {
      "memberof": "Api",
      "name": "GetInstalledPlugins",
      "description": "<p>Returns all the installed plugins.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "Array.<PluginData>"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "RemovePlugin": {
      "memberof": "Api",
      "name": "RemovePlugin",
      "description": "<p>Removes a plugin with the specified GUID.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "object"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "string",
          "name": "guid",
          "description": "<p>The plugin identifier. It must be of the <em>asc.{UUID}</em> type.</p>",
          "optional": true
        }
      ]
    },
    "InstallPlugin": {
      "memberof": "Api",
      "name": "InstallPlugin",
      "description": "<p>Installs a plugin by the URL to the plugin config.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "object"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "object",
          "name": "config",
          "description": "<p>The plugin config for installing.</p>",
          "optional": true
        }
      ]
    },
    "UpdatePlugin": {
      "memberof": "Api",
      "name": "UpdatePlugin",
      "description": "<p>Updates a plugin by the URL to the plugin config.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "object"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "object",
          "name": "config",
          "description": "<p>The plugin config for updating.</p>",
          "optional": true
        }
      ]
    },
    "ShowButton": {
      "memberof": "Api",
      "name": "ShowButton",
      "description": "<p>Shows or hides buttons in the header.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "string",
          "name": "id",
          "description": "<p>The button ID.</p>",
          "optional": true
        },
        {
          "type": "boolean",
          "name": "bShow",
          "description": "<p>The flag specifies whether the button is shown (<strong>true</strong>) or hidden (<strong>false</strong>).</p>",
          "optional": true
        }
      ]
    },
    "OnDropEvent": {
      "memberof": "Api",
      "name": "OnDropEvent",
      "description": "<p>Implements the external drag&amp;drop emulation.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "object",
          "name": "obj",
          "description": "<p>The drag&amp;drop emulation properties.</p>",
          "optional": false
        },
        {
          "type": "string",
          "name": "obj.type",
          "description": "<p>The drag&amp;drop event type:</p>\n<ul>\n<li><b>onbeforedrop</b> - an event that is fired when the selected text or element is dragged;</li>\n<li><b>ondrop</b> - an event that is fired when the selected text or element is dropped on a valid drop target.</li>\n</ul>",
          "optional": false
        },
        {
          "type": "number",
          "name": "obj.x",
          "description": "<p>The horizontal coordinate (in pixels) at which the mouse was clicked, relative to the left edge of the entire document.</p>",
          "optional": false
        },
        {
          "type": "number",
          "name": "obj.y",
          "description": "<p>The vertical coordinate (in pixels) at which the mouse was clicked, relative to the top edge of the entire document.</p>",
          "optional": false
        },
        {
          "type": "string",
          "name": "obj.html",
          "description": "<p>The dragged HTML element.</p>",
          "optional": false
        },
        {
          "type": "string",
          "name": "obj.text",
          "description": "<p>The dragged text.</p>",
          "optional": false
        }
      ]
    }
  },
  "events": {},
  "comment": "/**\n     * Base class\n     * @global\n     * @class\n     * @name Api\n     */",
  "description": "<p>Base class</p>",
  "scope": "global"
}