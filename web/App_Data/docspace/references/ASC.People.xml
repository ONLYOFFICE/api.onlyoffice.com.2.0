<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ASC.People</name>
    </assembly>
    <members>
        <member name="T:ASC.People.ApiModels.RequestDto.DarkThemeSettingsRequestDto">
            <summary>
            </summary>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.DarkThemeSettingsRequestDto.Theme">
            <summary>Portal theme (Base, System, or Dark)</summary>
            <type>ASC.Web.Core.Users.DarkThemeSettingsType, ASC.Core.Common</type>
        </member>
        <member name="T:ASC.People.ApiModels.RequestDto.GroupRequestDto">
            <summary>
            </summary>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.GroupRequestDto.Members">
            <summary>List of group member IDs</summary>
            <type>System.Collections.Generic.IEnumerable{System.Guid}, System.Collections.Generic</type>
        </member>
        <member name="T:ASC.People.ApiModels.RequestDto.GroupRequestDtoBase">
            <summary>
            
            </summary>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.GroupRequestDtoBase.GroupManager">
            <summary>Group manager ID</summary>
            <type>System.Guid, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.GroupRequestDtoBase.GroupName">
            <summary>Group name</summary>
            <type>System.String, System</type>
        </member>
        <member name="T:ASC.People.ApiModels.RequestDto.InviteUsersRequestDto">
            <summary>
            </summary>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.InviteUsersRequestDto.Invitations">
            <summary>List of user invitations</summary>
            <type>System.Collections.Generic.IEnumerable{ASC.People.ApiModels.RequestDto.UserInvitation}, System.Collections.Generic</type>
        </member>
        <member name="T:ASC.People.ApiModels.RequestDto.UserInvitation">
            <summary>
            </summary>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.UserInvitation.Email">
            <summary>Email address</summary>
            <type>System.String, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.UserInvitation.Type">
            <summary>Employee type</summary>
            <type>ASC.Core.Users.EmployeeType, ASC.Core.Common</type>
        </member>
        <member name="T:ASC.People.ApiModels.RequestDto.LinkAccountRequestDto">
            <summary>
            </summary>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.LinkAccountRequestDto.SerializedProfile">
            <summary>Third-party profile in the serialized format</summary>
            <type>System.String, System</type>
        </member>
        <member name="T:ASC.People.ApiModels.RequestDto.SignupAccountRequestDto">
            <summary>
            </summary>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.SignupAccountRequestDto.EmployeeType">
            <summary>Employee type (All, RoomAdmin, User, DocSpaceAdmin, Collaborator)</summary>
            <type>System.Nullable{ASC.Core.Users.EmployeeType}, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.SignupAccountRequestDto.FirstName">
            <summary>First name</summary>
            <type>System.String, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.SignupAccountRequestDto.LastName">
            <summary>Last name</summary>
            <type>System.String, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.SignupAccountRequestDto.Email">
            <summary>Email address</summary>
            <type>System.String, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.SignupAccountRequestDto.PasswordHash">
            <summary>Password hash</summary>
            <type>System.String, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.SignupAccountRequestDto.Key">
            <summary>Link key</summary>
            <type>System.String, System</type>
        </member>
        <member name="T:ASC.People.ApiModels.RequestDto.MemberRequestDto">
            <summary>
            </summary>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.MemberRequestDto.Type">
            <summary>Employee type (All, RoomAdmin, User, DocSpaceAdmin, Collaborator)</summary>
            <type>ASC.Core.Users.EmployeeType, ASC.Core.Common</type>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.MemberRequestDto.IsUser">
            <summary>Specifies if this is a guest or a user</summary>
            <type>System.Boolean, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.MemberRequestDto.Email">
            <summary>Email</summary>
            <type>System.String, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.MemberRequestDto.Firstname">
            <summary>First name</summary>
            <type>System.String, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.MemberRequestDto.Lastname">
            <summary>Last name</summary>
            <type>System.String, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.MemberRequestDto.Department">
            <summary>List of user departments</summary>
            <type>System.Guid[], System</type>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.MemberRequestDto.Title">
            <summary>Title</summary>
            <type>System.String, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.MemberRequestDto.Location">
            <summary>Location</summary>
            <type>System.String, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.MemberRequestDto.Sex">
            <summary>Sex (male or female)</summary>
            <type>System.String, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.MemberRequestDto.Birthday">
            <summary>Birthday</summary>
            <type>ASC.Api.Core.ApiDateTime, ASC.Api.Core</type>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.MemberRequestDto.Worksfrom">
            <summary>Registration date (if it is not specified, then the current date will be set)</summary>
            <type>ASC.Api.Core.ApiDateTime, ASC.Api.Core</type>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.MemberRequestDto.Comment">
            <summary>Comment</summary>
            <type>System.String, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.MemberRequestDto.Contacts">
            <summary>List of user contacts</summary>
            <type>System.Collections.Generic.IEnumerable{ASC.Web.Api.Models.Contact}, System.Collections.Generic</type>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.MemberRequestDto.Files">
            <summary>Avatar photo URL</summary>
            <type>System.String, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.MemberRequestDto.Password">
            <summary>Password</summary>
            <type>System.String, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.MemberRequestDto.PasswordHash">
            <summary>Password hash</summary>
            <type>System.String, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.MemberRequestDto.FromInviteLink">
            <summary>Specifies if the user is added via the invitation link or not</summary>
            <type>System.Boolean, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.MemberRequestDto.Key">
            <summary>Key</summary>
            <type>System.String, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.MemberRequestDto.CultureName">
            <summary>Language</summary>
            <type>System.String, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.MemberRequestDto.Target">
            <summary>Target</summary>
            <type>System.Guid, System</type>
        </member>
        <member name="T:ASC.People.ApiModels.RequestDto.UpdateMemberRequestDto">
            <summary>
            </summary>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.UpdateMemberRequestDto.UserId">
            <summary>User ID</summary>
            <type>System.String, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.UpdateMemberRequestDto.Disable">
            <summary>Specifies whether to disable a user or not</summary>
            <type>System.Nullable{System.Boolean}, System</type>
        </member>
        <member name="T:ASC.People.ApiModels.RequestDto.SetManagerRequestDto">
            <summary>
            </summary>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.SetManagerRequestDto.UserId">
            <summary>User ID</summary>
            <type>System.Guid, System</type>
        </member>
        <member name="T:ASC.People.ApiModels.RequestDto.StartReassignRequestDto">
            <summary>
            </summary>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.StartReassignRequestDto.FromUserId">
            <summary>User ID whose data will be reassigned to another user</summary>
            <type>System.Guid, System</type>
            <example>9924256A-739C-462b-AF15-E652A3B1B6EB</example>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.StartReassignRequestDto.ToUserId">
            <summary>User ID to whom all the data will be reassigned</summary>
            <type>System.Guid, System</type>
            <example>9924256A-739C-462b-AF15-E652A3B1B6EB</example>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.StartReassignRequestDto.DeleteProfile">
            <summary>Specifies whether to delete a profile when the data reassignment will be finished or not</summary>
            <type>System.Boolean, System</type>
            <example>true</example>
        </member>
        <member name="T:ASC.People.ApiModels.RequestDto.TerminateRequestDto">
            <summary>
            </summary>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.TerminateRequestDto.UserId">
            <summary>User ID whose data is reassigned/removed</summary>
            <type>System.Guid, System</type>
            <example>9924256A-739C-462b-AF15-E652A3B1B6EB</example>
        </member>
        <member name="T:ASC.People.ApiModels.RequestDto.ThumbnailsRequestDto">
            <summary>
            </summary>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.ThumbnailsRequestDto.TmpFile">
            <summary>Path to the temporary file</summary>
            <type>System.String, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.ThumbnailsRequestDto.X">
            <summary>Horizontal coordinate</summary>
            <type>System.Int32, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.ThumbnailsRequestDto.Y">
            <summary>Vertical coordinate</summary>
            <type>System.Int32, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.ThumbnailsRequestDto.Width">
            <summary>Thumbnail width</summary>
            <type>System.Int32, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.ThumbnailsRequestDto.Height">
            <summary>Thumbnail height</summary>
            <type>System.Int32, System</type>
        </member>
        <member name="T:ASC.People.ApiModels.RequestDto.UpdateGroupRequestDto">
            <summary>
            </summary>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.UpdateGroupRequestDto.MembersToAdd">
            <summary>List of user IDs to add to the group</summary>
            <type>System.Collections.Generic.IEnumerable{System.Guid}, System.Collections.Generic</type>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.UpdateGroupRequestDto.MembersToRemove">
            <summary>List of user IDs to remove from the group</summary>
            <type>System.Collections.Generic.IEnumerable{System.Guid}, System.Collections.Generic</type>
        </member>
        <member name="T:ASC.People.ApiModels.RequestDto.UpdateMembersQuotaRequestDto">
            <summary>
            </summary>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.UpdateMembersQuotaRequestDto.UserIds">
            <summary>List of user IDs</summary>
            <type>System.Collections.Generic.IEnumerable{System.Guid}, System.Collections.Generic</type>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.UpdateMembersQuotaRequestDto.Quota">
            <summary>User quota</summary>
            <type>System.Int64, System</type>
        </member>
        <member name="T:ASC.People.ApiModels.RequestDto.UpdateMembersRequestDto">
            <summary>
            </summary>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.UpdateMembersRequestDto.UserIds">
            <summary>List of user IDs</summary>
            <type>System.Collections.Generic.IEnumerable{System.Guid}, System.Collections.Generic</type>
            <example>9924256A-739C-462b-AF15-E652A3B1B6EB</example>
            <collection>list</collection>
        </member>
        <member name="P:ASC.People.ApiModels.RequestDto.UpdateMembersRequestDto.ResendAll">
            <summary>Specifies whether to resend invitation letters to all the users or not</summary>
            <type>System.Boolean, System</type>
            <example>true</example>
        </member>
        <member name="T:ASC.People.ApiModels.ResponseDto.AccountInfoDto">
            <summary>
            </summary>
        </member>
        <member name="P:ASC.People.ApiModels.ResponseDto.AccountInfoDto.Provider">
            <summary>Provider</summary>
            <type>System.String, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.ResponseDto.AccountInfoDto.Url">
            <summary>URL</summary>
            <type>System.String, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.ResponseDto.AccountInfoDto.Linked">
            <summary>Specifies if an account is linked or not</summary>
            <type>System.Boolean, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.ResponseDto.AccountInfoDto.Class">
            <summary>Class</summary>
            <type>System.String, System</type>
        </member>
        <member name="T:ASC.People.ApiModels.ResponseDto.FileUploadResultDto">
            <summary>
            </summary>
        </member>
        <member name="P:ASC.People.ApiModels.ResponseDto.FileUploadResultDto.Success">
            <summary>Specifies if the operation is successful or not</summary>
            <type>System.Boolean, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.ResponseDto.FileUploadResultDto.Data">
            <summary>Data</summary>
            <type>System.Object, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.ResponseDto.FileUploadResultDto.Message">
            <summary>Message</summary>
            <type>System.String, System</type>
        </member>
        <member name="T:ASC.People.ApiModels.ResponseDto.GroupDto">
            <summary>
            </summary>
        </member>
        <member name="P:ASC.People.ApiModels.ResponseDto.GroupDto.Name">
            <summary>Name</summary>
            <type>System.String, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.ResponseDto.GroupDto.Parent">
            <summary>Parent</summary>
            <type>System.Nullable{System.Guid}, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.ResponseDto.GroupDto.Category">
            <summary>Category</summary>
            <type>System.Guid, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.ResponseDto.GroupDto.Id">
            <summary>ID</summary>
            <type>System.Guid, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.ResponseDto.GroupDto.Manager">
            <summary>Manager</summary>
            <type>ASC.Web.Api.Models.EmployeeDto, ASC.Api.Core</type>
        </member>
        <member name="P:ASC.People.ApiModels.ResponseDto.GroupDto.Members">
            <summary>List of members</summary>
            <type>System.Collections.Generic.List{ASC.Web.Api.Models.EmployeeDto,}, System.Collections.Generic</type>
        </member>
        <member name="T:ASC.People.ApiModels.ResponseDto.ThumbnailsDataDto">
            <summary>
            </summary>
        </member>
        <member name="P:ASC.People.ApiModels.ResponseDto.ThumbnailsDataDto.Original">
            <summary>Original photo</summary>
            <type>System.String, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.ResponseDto.ThumbnailsDataDto.Retina">
            <summary>Retina</summary>
            <type>System.String, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.ResponseDto.ThumbnailsDataDto.Max">
            <summary>Maximum size</summary>
            <type>System.String, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.ResponseDto.ThumbnailsDataDto.Big">
            <summary>Big</summary>
            <type>System.String, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.ResponseDto.ThumbnailsDataDto.Medium">
            <summary>Medium</summary>
            <type>System.String, System</type>
        </member>
        <member name="P:ASC.People.ApiModels.ResponseDto.ThumbnailsDataDto.Small">
            <summary>Small</summary>
            <type>System.String, System</type>
        </member>
        <member name="T:ASC.People.Api.ApiControllerBase">
            <summary>
            People API.
            </summary>
            <name>people</name>
        </member>
        <member name="M:ASC.People.Api.ContactsController.DeleteMemberContacts(System.String,ASC.People.ApiModels.RequestDto.UpdateMemberRequestDto)">
            <summary>
            Deletes the contacts of the user with the ID specified in the request from the portal.
            </summary>
            <short>
            Delete user contacts
            </short>
            <category>Contacts</category>
            <param type="System.String, System" method="url" name="userid">User ID</param>
            <param type="ASC.People.ApiModels.RequestDto.UpdateMemberRequestDto, ASC.People" name="inDto">Request parameters for updating user contacts</param>
            <returns type="ASC.Web.Api.Models.EmployeeFullDto, ASC.Web.Api">Deleted user profile with the detailed information</returns>
            <path>api/2.0/people/{userid}/contacts</path>
            <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.People.Api.ContactsController.SetMemberContacts(System.String,ASC.People.ApiModels.RequestDto.UpdateMemberRequestDto)">
            <summary>
            Sets the contacts of the user with the ID specified in the request replacing the current portal data with the new data.
            </summary>
            <short>
            Set user contacts
            </short>
            <category>Contacts</category>
            <param type="System.String, System" method="url" name="userid">User ID</param>
            <param type="ASC.People.ApiModels.RequestDto.UpdateMemberRequestDto, ASC.People" name="inDto">Request parameters for updating user contacts</param>
            <returns type="ASC.Web.Api.Models.EmployeeFullDto, ASC.Web.Api">Updated user profile with the detailed information</returns>
            <path>api/2.0/people/{userid}/contacts</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.People.Api.ContactsController.UpdateMemberContacts(System.String,ASC.People.ApiModels.RequestDto.UpdateMemberRequestDto)">
            <summary>
            Updates the contact information of the user with the ID specified in the request merging the new data into the current portal data.
            </summary>
            <short>
            Update user contacts
            </short>
            <category>Contacts</category>
            <param type="System.String, System" method="url" name="userid">User ID</param>
            <param type="ASC.People.ApiModels.RequestDto.UpdateMemberRequestDto, ASC.People" name="inDto">Request parameters for updating user contacts</param>
            <returns type="ASC.Web.Api.Models.EmployeeFullDto, ASC.Web.Api">Updated user profile with the detailed information</returns>
            <path>api/2.0/people/{userid}/contacts</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="T:ASC.People.Api.GroupController">
            <summary>
             Groups API.
            </summary>
            <name>group</name>
            <visible>false</visible>
        </member>
        <member name="M:ASC.People.Api.GroupController.#ctor(ASC.Core.UserManager,ASC.Api.Core.ApiContext,ASC.People.ApiModels.ResponseDto.GroupFullDtoHelper,ASC.MessagingSystem.Core.MessageService,ASC.MessagingSystem.EF.Model.MessageTarget,ASC.Core.PermissionContext,ASC.Files.Core.Security.FileSecurity)">
            <summary>
             Groups API.
            </summary>
            <name>group</name>
            <visible>false</visible>
        </member>
        <member name="M:ASC.People.Api.GroupController.GetGroupsAsync(System.Nullable{System.Guid},System.Nullable{System.Boolean})">
            <summary>
            Returns the general information about all the groups, such as group ID and group manager.
            </summary>
            <short>
            Get groups
            </short>
            <param type="System.Nullable{System.Guid}, System" name="userId">User ID</param>
            <param type="System.Nullable{System.Boolean}, System" name="manager">Specifies if the user is a manager or not</param>
            <returns type="ASC.People.ApiModels.ResponseDto.GroupDto, ASC.People">List of groups</returns>
            <remarks>
            This method returns partial group information.
            </remarks>
            <path>api/2.0/groups</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.People.Api.GroupController.GetGroupAsync(System.Guid)">
            <summary>
            Returns the detailed information about the selected group.
            </summary>
            <short>
            Get a group
            </short>
            <param type="System.Guid, System" method="url" name="id">Group ID</param>
            <returns type="ASC.People.ApiModels.ResponseDto.GroupDto, ASC.People">Group with the detailed information</returns>
            <remarks>
            This method returns full group information.
            </remarks>
            <path>api/2.0/groups/{id}</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.People.Api.GroupController.GetByUserIdAsync(System.Guid)">
            <summary>
            Returns a list of groups for the user with the ID specified in the request.
            </summary>
            <short>
            Get user groups
            </short>
            <param type="System.Guid, System" method="url" name="userid">User ID</param>
            <returns type="ASC.Web.Api.Models.GroupSummaryDto, ASC.Api.Core">List of groups</returns>
            <path>api/2.0/groups/user/{userid}</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.People.Api.GroupController.AddGroupAsync(ASC.People.ApiModels.RequestDto.GroupRequestDto)">
            <summary>
            Adds a new group with the group manager, name, and members specified in the request.
            </summary>
            <short>
            Add a new group
            </short>
            <param type="ASC.People.ApiModels.RequestDto.GroupRequestDto, ASC.People" name="inDto">Group request parameters</param>
            <returns type="ASC.People.ApiModels.ResponseDto.GroupDto, ASC.People">Newly created group with the detailed information</returns>
            <path>api/2.0/groups</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.People.Api.GroupController.UpdateGroupAsync(System.Guid,ASC.People.ApiModels.RequestDto.UpdateGroupRequestDto)">
            <summary>
            Updates the existing group changing the group manager, name, and/or members.
            </summary>
            <short>
            Update a group
            </short>
            <param type="System.Guid, System" method="url" name="id">Group ID</param>
            <param type="ASC.People.ApiModels.RequestDto.UpdateGroupRequestDto, ASC.People" name="inDto">Group request parameters</param>
            <returns type="ASC.People.ApiModels.ResponseDto.GroupDto, ASC.People">Updated group with the detailed information</returns>
            <path>api/2.0/groups/{id}</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.People.Api.GroupController.DeleteGroupAsync(System.Guid)">
            <summary>
            Deletes a group with the ID specified in the request from the list of groups on the portal.
            </summary>
            <short>
            Delete a group
            </short>
            <param type="System.Guid, System" method="url" name="id">Group ID</param>
            <returns type="Microsoft.AspNetCore.Mvc.NoContentResult, Microsoft.AspNetCore.Mvc">No content</returns>
            <path>api/2.0/groups/{id}</path>
            <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.People.Api.GroupController.TransferMembersToAsync(System.Guid,System.Guid)">
            <summary>
            Moves all the members from the selected group to another one specified in the request.
            </summary>
            <short>
            Move group members
            </short>
            <param type="System.Guid, System" method="url" name="fromId">Group ID to move from</param>
            <param type="System.Guid, System" method="url" name="toId">Group ID to move to</param>
            <returns type="ASC.People.ApiModels.ResponseDto.GroupDto, ASC.People">Group with the detailed information</returns>
            <path>api/2.0/groups/{fromId}/members/{toId}</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.People.Api.GroupController.SetMembersToAsync(System.Guid,ASC.People.ApiModels.RequestDto.GroupRequestDto)">
            <summary>
            Replaces the group members with those specified in the request.
            </summary>
            <short>
            Replace group members
            </short>
            <param type="System.Guid, System" method="url" name="id">Group ID</param>
            <param type="ASC.People.ApiModels.RequestDto.GroupRequestDto, ASC.People" name="inDto">Group request parameters</param>
            <returns type="ASC.People.ApiModels.ResponseDto.GroupDto, ASC.People">Group with the detailed information</returns>
            <path>api/2.0/groups/{id}/members</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.People.Api.GroupController.AddMembersToAsync(System.Guid,ASC.People.ApiModels.RequestDto.GroupRequestDto)">
            <summary>
            Adds new group members to the group with the ID specified in the request.
            </summary>
            <short>
            Add group members
            </short>
            <param type="System.Guid, System" method="url" name="id">Group ID</param>
            <param type="ASC.People.ApiModels.RequestDto.GroupRequestDto, ASC.People" name="inDto">Group request parameters</param>
            <returns type="ASC.People.ApiModels.ResponseDto.GroupDto, ASC.People">Group with the detailed information</returns>
            <path>api/2.0/groups/{id}/members</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.People.Api.GroupController.SetManagerAsync(System.Guid,ASC.People.ApiModels.RequestDto.SetManagerRequestDto)">
            <summary>
            Sets a user with the ID specified in the request as a group manager.
            </summary>
            <short>
            Set a group manager
            </short>
            <param type="System.Guid, System" method="url" name="id">Group ID</param>
            <param type="ASC.People.ApiModels.RequestDto.SetManagerRequestDto, ASC.People" name="inDto">Request parameters for setting a group manager</param>
            <returns type="ASC.People.ApiModels.ResponseDto.GroupDto, ASC.People">Group with the detailed information</returns>
            <path>api/2.0/groups/{id}/manager</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.People.Api.GroupController.RemoveMembersFromAsync(System.Guid,ASC.People.ApiModels.RequestDto.GroupRequestDto)">
            <summary>
            Removes the group members specified in the request from the selected group.
            </summary>
            <short>
            Remove group members
            </short>
            <param type="System.Guid, System" method="url" name="id">Group ID</param>
            <param type="ASC.People.ApiModels.RequestDto.GroupRequestDto, ASC.People" name="inDto">Group request parameters</param>
            <returns type="ASC.People.ApiModels.ResponseDto.GroupDto, ASC.People">Group with the detailed information</returns>
            <path>api/2.0/groups/{id}/members</path>
            <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.People.Api.NotificationController.SendNotificationToChangeAsync(ASC.People.ApiModels.RequestDto.UpdateMemberRequestDto)">
            <summary>
            Sends a notification to the user with the ID specified in the request to change their phone number.
            </summary>
            <short>
            Send a notification to change a phone
            </short>
            <category>Profiles</category>
            <param type="ASC.People.ApiModels.RequestDto.UpdateMemberRequestDto, ASC.People" name="inDto">Request parameters for updating user contacts</param>
            <returns type="System.Object, System">Notification</returns>
            <path>api/2.0/people/phone</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.People.Api.PhotoController.CreateMemberPhotoThumbnails(System.String,ASC.People.ApiModels.RequestDto.ThumbnailsRequestDto)">
            <summary>
            Creates photo thumbnails by coordinates of the original image specified in the request.
            </summary>
            <short>
            Create photo thumbnails
            </short>
            <category>Photos</category>
            <param type="System.String, System" method="url" name="userid">User ID</param>
            <param type="ASC.People.ApiModels.RequestDto.ThumbnailsRequestDto, ASC.People" name="inDto">Thumbnail request parameters</param>
            <path>api/2.0/people/{userid}/photo/thumbnails</path>
            <httpMethod>POST</httpMethod>
            <returns type="ASC.People.ApiModels.ResponseDto.ThumbnailsDataDto, ASC.People">Thumbnail parameters</returns>
        </member>
        <member name="M:ASC.People.Api.PhotoController.DeleteMemberPhotoAsync(System.String)">
            <summary>
            Deletes a photo of the user with the ID specified in the request.
            </summary>
            <short>
            Delete a user photo
            </short>
            <category>Photos</category>
            <param type="System.String, System" method="url" name="userid">User ID</param>
            <returns type="ASC.People.ApiModels.ResponseDto.ThumbnailsDataDto, ASC.People">Thumbnail parameters: original photo, retina, maximum size photo, big, medium, small</returns>
            <path>api/2.0/people/{userid}/photo</path>
            <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.People.Api.PhotoController.GetMemberPhoto(System.String)">
            <summary>
            Returns a photo of the user with the ID specified in the request.
            </summary>
            <short>
            Get a user photo
            </short>
            <category>Photos</category>
            <param type="System.String, System" method="url" name="userid">User ID</param>
            <returns type="ASC.People.ApiModels.ResponseDto.ThumbnailsDataDto, ASC.People">Thumbnail parameters: original photo, retina, maximum size photo, big, medium, small</returns>
            <path>api/2.0/people/{userid}/photo</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.People.Api.PhotoController.UpdateMemberPhoto(System.String,ASC.People.ApiModels.RequestDto.UpdateMemberRequestDto)">
            <summary>
            Updates a photo of the user with the ID specified in the request.
            </summary>
            <short>
            Update a user photo
            </short>
            <category>Photos</category>
            <param type="System.String, System" method="url" name="userid">User ID</param>
            <param type="ASC.People.ApiModels.RequestDto.UpdateMemberRequestDto, ASC.People" name="inDto">Request parameters for updating user photo</param>
            <returns type="ASC.People.ApiModels.ResponseDto.ThumbnailsDataDto, ASC.People">Updated thumbnail parameters: original photo, retina, maximum size photo, big, medium, small</returns>
            <path>api/2.0/people/{userid}/photo</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.People.Api.PhotoController.UploadMemberPhoto(System.String,Microsoft.AspNetCore.Http.IFormCollection)">
            <summary>
            Uploads a photo of the user with the ID specified in the request.
            </summary>
            <short>
            Upload a user photo
            </short>
            <category>Photos</category>
            <param type="System.String, System" method="url" name="userid">User ID</param>
            <param type="Microsoft.AspNetCore.Http.IFormCollection, Microsoft.AspNetCore.Http" name="formCollection">Image data</param>
            <path>api/2.0/people/{userid}/photo</path>
            <httpMethod>POST</httpMethod>
            <returns type="ASC.People.ApiModels.ResponseDto.FileUploadResultDto, ASC.People">Result of file uploading</returns>
        </member>
        <member name="M:ASC.People.Api.ReassignController.GetReassignProgressAsync(System.Guid)">
            <summary>
            Returns the progress of the started data reassignment for the user with the ID specified in the request.
            </summary>
            <short>Get the reassignment progress</short>
            <param type="System.Guid, System" name="userId">User ID whose data is reassigned</param>
            <category>User data</category>
            <returns type="ASC.People.ApiModels.ResponseDto.TaskProgressResponseDto, ASC.People">Reassignment progress</returns>
            <path>api/2.0/people/reassign/progress/{userid}</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.People.Api.ReassignController.StartReassignAsync(ASC.People.ApiModels.RequestDto.StartReassignRequestDto)">
            <summary>
            Starts the data reassignment for the user with the ID specified in the request.
            </summary>
            <short>Start the data reassignment</short>
            <param type="ASC.People.ApiModels.RequestDto.StartReassignRequestDto, ASC.People" name="inDto">Request parameters for starting the reassignment process</param>
            <category>User data</category>
            <returns type="ASC.People.ApiModels.ResponseDto.TaskProgressResponseDto, ASC.People">Reassignment progress</returns>
            <path>api/2.0/people/reassign/start</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.People.Api.ReassignController.TerminateReassignAsync(ASC.People.ApiModels.RequestDto.TerminateRequestDto)">
            <summary>
            Terminates the data reassignment for the user with the ID specified in the request.
            </summary>
            <short>Terminate the data reassignment</short>
            <param type="ASC.People.ApiModels.RequestDto.TerminateRequestDto, ASC.People" name="inDto">Request parameters for terminating the reassignment process</param>
            <category>User data</category>
            <path>api/2.0/people/reassign/terminate</path>
            <httpMethod>PUT</httpMethod>
            <returns></returns>
        </member>
        <member name="M:ASC.People.Api.RemoveUserDataController.GetRemoveProgressAsync(System.Guid)">
            <summary>
            Returns the progress of the started data deletion for the user with the ID specified in the request.
            </summary>
            <short>Get the deletion progress</short>
            <param type="System.Guid, System" name="userId">User ID</param>
            <category>User data</category>
            <returns type="ASC.People.ApiModels.ResponseDto.TaskProgressResponseDto, ASC.People">Deletion progress</returns>
            <path>api/2.0/people/remove/progress/{userid}</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.People.Api.RemoveUserDataController.SendInstructionsToDeleteAsync">
            <summary>
            Sends instructions for deleting a user profile.
            </summary>
            <short>
            Send the deletion instructions
            </short>
            <category>Profiles</category>
            <returns type="System.Object, System">Information message</returns>
            <path>api/2.0/people/self/delete</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.People.Api.RemoveUserDataController.StartRemoveAsync(ASC.People.ApiModels.RequestDto.TerminateRequestDto)">
            <summary>
            Starts the data deletion for the user with the ID specified in the request.
            </summary>
            <short>Start the data deletion</short>
            <param type="ASC.People.ApiModels.RequestDto.TerminateRequestDto, ASC.People" name="inDto">Request parameters for starting the deletion process</param>
            <category>User data</category>
            <returns type="ASC.People.ApiModels.ResponseDto.TaskProgressResponseDto, ASC.People">Deletion progress</returns>
            <path>api/2.0/people/remove/start</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.People.Api.RemoveUserDataController.TerminateRemoveAsync(ASC.People.ApiModels.RequestDto.TerminateRequestDto)">
            <summary>
            Terminates the data deletion for the user with the ID specified in the request.
            </summary>
            <short>Terminate the data deletion</short>
            <param type="ASC.People.ApiModels.RequestDto.TerminateRequestDto, ASC.People" name="inDto">Request parameters for terminating the deletion process</param>
            <category>User data</category>
            <path>api/2.0/people/remove/terminate</path>
            <httpMethod>PUT</httpMethod>
            <returns></returns>
        </member>
        <member name="M:ASC.People.Api.ThirdpartyController.GetAuthProvidersAsync(System.Boolean,System.Boolean,System.String,System.String)">
            <summary>
            Returns a list of the available third-party accounts.
            </summary>
            <short>Get third-party accounts</short>
            <category>Third-party accounts</category>
            <param type="System.Boolean, System" name="inviteView">Specifies whether to return providers that are available for invitation links, i.e. the user can login or register through these providers</param>
            <param type="System.Boolean, System" name="settingsView">Specifies whether to return URLs in the format that is used on the Settings page</param>
            <param type="System.String, System" name="clientCallback">Method that is called after authorization</param>
            <param type="System.String, System" name="fromOnly">Provider name if the response only from this provider is needed</param>
            <returns type="ASC.People.ApiModels.ResponseDto.AccountInfoDto, ASC.People">List of third-party accounts</returns>
            <path>api/2.0/people/thirdparty/providers</path>
            <httpMethod>GET</httpMethod>
            <requiresAuthorization>false</requiresAuthorization>
            <collection>list</collection>
        </member>
        <member name="M:ASC.People.Api.ThirdpartyController.LinkAccountAsync(ASC.People.ApiModels.RequestDto.LinkAccountRequestDto)">
            <summary>
            Links a third-party account specified in the request to the user profile.
            </summary>
            <short>
            Link a third-pary account
            </short>
            <category>Third-party accounts</category>
            <param type="ASC.People.ApiModels.RequestDto.LinkAccountRequestDto, ASC.People" name="inDto">Request parameters for linking accounts</param>
            <path>api/2.0/people/thirdparty/linkaccount</path>
            <httpMethod>PUT</httpMethod>
            <returns></returns>
        </member>
        <member name="M:ASC.People.Api.ThirdpartyController.SignupAccountAsync(ASC.People.ApiModels.RequestDto.SignupAccountRequestDto)">
            <summary>
            Creates a third-party account with the parameters specified in the request.
            </summary>
            <short>
            Create a third-pary account
            </short>
            <category>Third-party accounts</category>
            <param type="ASC.People.ApiModels.RequestDto.SignupAccountRequestDto, ASC.People" name="inDto">Request parameters for creating a third-party account</param>
            <path>api/2.0/people/thirdparty/signup</path>
            <httpMethod>POST</httpMethod>
            <returns></returns>
            <requiresAuthorization>false</requiresAuthorization>
        </member>
        <member name="M:ASC.People.Api.ThirdpartyController.UnlinkAccountAsync(System.String)">
            <summary>
            Unlinks a third-party account specified in the request from the user profile.
            </summary>
            <short>
            Unlink a third-pary account
            </short>
            <category>Third-party accounts</category>
            <param type="System.String, System" name="provider">Provider name</param>
            <path>api/2.0/people/thirdparty/unlinkaccount</path>
            <httpMethod>DELETE</httpMethod>
            <returns></returns>
        </member>
        <member name="M:ASC.People.Api.UserController.AddMemberAsActivatedAsync(ASC.People.ApiModels.RequestDto.MemberRequestDto)">
            <summary>
            Adds an activated portal user with the first name, last name, email address, and several optional parameters specified in the request.
            </summary>
            <short>
            Add an activated user
            </short>
            <category>Profiles</category>
            <param type="ASC.People.ApiModels.RequestDto.MemberRequestDto, ASC.People" name="inDto">Member request parameters</param>
            <returns type="ASC.Web.Api.Models.EmployeeFullDto, ASC.Api.Core">Newly added user with the detailed information</returns>
            <path>api/2.0/people/active</path>
            <httpMethod>POST</httpMethod>
            <visible>false</visible>
        </member>
        <member name="M:ASC.People.Api.UserController.AddMember(ASC.People.ApiModels.RequestDto.MemberRequestDto)">
            <summary>
            Adds a new portal user with the first name, last name, email address, and several optional parameters specified in the request.
            </summary>
            <short>
            Add a user
            </short>
            <category>Profiles</category>
            <param type="ASC.People.ApiModels.RequestDto.MemberRequestDto, ASC.People" name="inDto">Member request parameters</param>
            <returns type="ASC.Web.Api.Models.EmployeeFullDto, ASC.Api.Core">Newly added user with the detailed information</returns>
            <path>api/2.0/people</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.People.Api.UserController.InviteUsersAsync(ASC.People.ApiModels.RequestDto.InviteUsersRequestDto)">
            <summary>
            Invites users specified in the request to the current portal.
            </summary>
            <short>
            Invite users
            </short>
            <category>Profiles</category>
            <param type="ASC.People.ApiModels.RequestDto.InviteUsersRequestDto, ASC.People" name="inDto">Request parameters for inviting users</param>
            <returns type="ASC.Web.Api.Models.EmployeeDto, ASC.Api.Core">List of users</returns>
            <path>api/2.0/people/invite</path>
            <httpMethod>POST</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.People.Api.UserController.ChangeUserPassword(System.Guid,ASC.People.ApiModels.RequestDto.MemberRequestDto)">
            <summary>
            Sets a new password to the user with the ID specified in the request.
            </summary>
            <short>Change a user password</short>
            <category>Password</category>
            <param type="System.Guid, System" method="url" name="userid">User ID</param>
            <param type="ASC.People.ApiModels.RequestDto.MemberRequestDto, ASC.People" name="inDto">Request parameters for setting new password</param>
            <returns type="ASC.Web.Api.Models.EmployeeFullDto, ASC.Api.Core">Detailed user information</returns>
            <path>api/2.0/people/{userid}/password</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.People.Api.UserController.DeleteMemberAsync(System.String)">
            <summary>
            Deletes a user with the ID specified in the request from the portal.
            </summary>
            <short>
            Delete a user
            </short>
            <category>Profiles</category>
            <param type="System.String, System" method="url" name="userid">User ID</param>
            <returns type="ASC.Web.Api.Models.EmployeeFullDto, ASC.Api.Core">Deleted user detailed information</returns>
            <path>api/2.0/people/{userid}</path>
            <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.People.Api.UserController.DeleteProfile">
            <summary>
            Deletes the current user profile.
            </summary>
            <short>
            Delete my profile
            </short>
            <category>Profiles</category>
            <returns type="ASC.Web.Api.Models.EmployeeFullDto, ASC.Api.Core">Detailed information about my profile</returns>
            <path>api/2.0/people/@self</path>
            <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.People.Api.UserController.GetAdvanced(ASC.Core.Users.EmployeeStatus,System.String)">
            <summary>
            Returns a list of users matching the status filter and search query.
            </summary>
            <short>
            Search users by status filter
            </short>
            <category>Search</category>
            <param type="ASC.Core.Users.EmployeeStatus, ASC.Core.Common" method="url" name="status">User status</param>
            <param type="System.String, System" name="query">Search query</param>
            <returns type="ASC.Web.Api.Models.EmployeeFullDto, ASC.Api.Core">List of users with the detailed information</returns>
            <path>api/2.0/people/status/{status}/search</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.People.Api.UserController.GetAll">
            <summary>
            Returns a list of profiles for all the portal users.
            </summary>
            <short>
            Get profiles
            </short>
            <category>Profiles</category>
            <returns type="ASC.Web.Api.Models.EmployeeFullDto, ASC.Api.Core">List of users with the detailed information</returns>
            <path>api/2.0/people</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.People.Api.UserController.GetByEmailAsync(System.String)">
            <summary>
            Returns the detailed information about a profile of the user with the email specified in the request.
            </summary>
            <short>
            Get a profile by user email
            </short>
            <category>Profiles</category>
            <param type="System.String, System" method="url" name="email">User email address</param>
            <returns type="ASC.Web.Api.Models.EmployeeFullDto, ASC.Api.Core">Detailed profile information</returns>
            <path>api/2.0/people/email</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.People.Api.UserController.GetById(System.String)">
            <summary>
            Returns the detailed information about a profile of the user with the name specified in the request.
            </summary>
            <short>
            Get a profile by user name
            </short>
            <category>Profiles</category>
            <param type="System.String, System" method="url" name="username">User name</param>
            <returns type="ASC.Web.Api.Models.EmployeeFullDto, ASC.Api.Core">Detailed profile information</returns>
            <path>api/2.0/people/{username}</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.People.Api.UserController.GetByStatus(ASC.Core.Users.EmployeeStatus)">
            <summary>
            Returns a list of profiles filtered by user status.
            </summary>
            <short>
            Get profiles by status
            </short>
            <param type="ASC.Core.Users.EmployeeStatus, ASC.Core.Common" method="url" name="status">User status</param>
            <returns type="ASC.Web.Api.Models.EmployeeFullDto, ASC.Api.Core">List of users with the detailed information</returns>
            <category>User status</category>
            <path>api/2.0/people/status/{status}</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.People.Api.UserController.GetFullByFilter(System.Nullable{ASC.Core.Users.EmployeeStatus},System.Nullable{System.Guid},System.Nullable{ASC.Core.Users.EmployeeActivationStatus},System.Nullable{ASC.Core.Users.EmployeeType},ASC.Core.Users.EmployeeType[],System.Nullable{System.Boolean},System.Nullable{ASC.Core.Payments},System.Nullable{ASC.Core.AccountLoginType},System.Nullable{ASC.Core.QuotaFilter},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Returns a list of users with full information about them matching the parameters specified in the request.
            </summary>
            <short>
            Search users and their information by extended filter
            </short>
            <category>Search</category>
            <param type="System.Nullable{ASC.Core.Users.EmployeeStatus}, System" name="employeeStatus">User status</param>
            <param type="System.Nullable{System.Guid}, System" name="groupId">Group ID</param>
            <param type="System.Nullable{ASC.Core.Users.EmployeeActivationStatus}, System" name="activationStatus">Activation status</param>
            <param type="System.Nullable{ASC.Core.Users.EmployeeType}, System" name="employeeType">User type</param>
            <param type="ASC.Core.Users.EmployeeType[], ASC.Core.Common" name="employeeTypes">List of user types</param>
            <param type="System.Nullable{System.Boolean}, System" name="isAdministrator">Specifies if the user is an administrator or not</param>
            <param type="System.Nullable{ASC.Core.Payments}, System" name="payments">User payment status</param>
            <param type="System.Nullable{ASC.Core.AccountLoginType}, System" name="accountLoginType">Account login type</param>
            <param type="System.Nullable{ASC.Core.QuotaFilter}, System" name="quotaFilter">Filter by quota (Default - 1, Custom - 2)</param>
            <param type="System.Nullable{System.Boolean}, System" name="withoutGroup">Specifies whether the user should be a member of a group or not</param>
            <param type="System.Nullable{System.Boolean}, System" name="excludeGroup">Specifies whether or not the user should be a member of the group with the specified ID</param>
            <returns type="ASC.Web.Api.Models.EmployeeFullDto, ASC.Api.Core">List of users with the detailed information</returns>
            <path>api/2.0/people/filter</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.People.Api.UserController.GetModule">
            <summary>
            Returns the information about the People module.
            </summary>
            <short>Get the People information</short>
            <category>Module</category>
            <returns type="ASC.Api.Core.Module, ASC.Api.Core">Module information</returns>
            <path>api/2.0/people/info</path>
            <httpMethod>GET</httpMethod>
            <visible>false</visible>
        </member>
        <member name="M:ASC.People.Api.UserController.GetPeopleSearch(System.String)">
            <summary>
            Returns a list of users matching the search query. This method uses the query parameters.
            </summary>
            <short>Search users (using query parameters)</short>
            <category>Search</category>
            <param type="System.String, System" name="query">Search query</param>
            <returns type="ASC.Web.Api.Models.EmployeeDto, ASC.Api.Core">List of users</returns>
            <path>api/2.0/people/search</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.People.Api.UserController.GetSearch(System.String)">
            <summary>
            Returns a list of users matching the search query.
            </summary>
            <short>Search users</short>
            <category>Search</category>
            <param type="System.String, System" method="url" name="query">Search query</param>
            <returns type="ASC.Web.Api.Models.EmployeeFullDto, ASC.Api.Core">List of users with the detailed information</returns>
            <path>api/2.0/people/@search/{query}</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.People.Api.UserController.GetSimpleByFilter(System.Nullable{ASC.Core.Users.EmployeeStatus},System.Nullable{System.Guid},System.Nullable{ASC.Core.Users.EmployeeActivationStatus},System.Nullable{ASC.Core.Users.EmployeeType},ASC.Core.Users.EmployeeType[],System.Nullable{System.Boolean},System.Nullable{ASC.Core.Payments},System.Nullable{ASC.Core.AccountLoginType},System.Nullable{ASC.Core.QuotaFilter},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Returns a list of users matching the parameters specified in the request.
            </summary>
            <short>
            Search users by extended filter
            </short>
            <category>Search</category>
            <param type="System.Nullable{ASC.Core.Users.EmployeeStatus}, System" name="employeeStatus">User status</param>
            <param type="System.Nullable{System.Guid}, System" name="groupId">Group ID</param>
            <param type="System.Nullable{ASC.Core.Users.EmployeeActivationStatus}, System" name="activationStatus">Activation status</param>
            <param type="System.Nullable{ASC.Core.Users.EmployeeType}, System" name="employeeType">User type</param>
            <param type="ASC.Core.Users.EmployeeType[], ASC.Core.Common" name="employeeTypes">List of user types</param>
            <param type="System.Nullable{System.Boolean}, System" name="isAdministrator">Specifies if the user is an administrator or not</param>
            <param type="System.Nullable{ASC.Core.Payments}, System" name="payments">User payment status</param>
            <param type="System.Nullable{ASC.Core.AccountLoginType}, System" name="accountLoginType">Account login type</param>
            <param type="System.Nullable{ASC.Core.QuotaFilter}, System" name="quotaFilter">Filter by quota (Default - 1, Custom - 2)</param>
            <param type="System.Nullable{System.Boolean}, System" name="withoutGroup">Specifies whether the user should be a member of a group or not</param>
            <param type="System.Nullable{System.Boolean}, System" name="excludeGroup">Specifies whether or not the user should be a member of the group with the specified ID</param>
            <returns type="ASC.Web.Api.Models.EmployeeDto, ASC.Api.Core">List of users</returns>
            <path>api/2.0/people/simple/filter</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.People.Api.UserController.RemoveUsers(ASC.People.ApiModels.RequestDto.UpdateMembersRequestDto)">
            <summary>
            Deletes a list of the users with the IDs specified in the request.
            </summary>
            <short>
            Delete users
            </short>
            <category>Profiles</category>
            <param type="ASC.People.ApiModels.RequestDto.UpdateMembersRequestDto, ASC.People" name="inDto">Request parameters for updating portal users</param>
            <returns type="ASC.Web.Api.Models.EmployeeFullDto, ASC.Api.Core">List of users with the detailed information</returns>
            <path>api/2.0/people/delete</path>
            <httpMethod>PUT</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.People.Api.UserController.ResendUserInvitesAsync(ASC.People.ApiModels.RequestDto.UpdateMembersRequestDto)">
            <summary>
            Resends emails to the users who have not activated their emails.
            </summary>
            <short>
            Resend activation emails
            </short>
            <category>Profiles</category>
            <param type="ASC.People.ApiModels.RequestDto.UpdateMembersRequestDto, ASC.People" name="inDto">Request parameters for updating portal users</param>
            <returns type="ASC.Web.Api.Models.EmployeeFullDto, ASC.Api.Core">List of users with the detailed information</returns>
            <path>api/2.0/people/invite</path>
            <httpMethod>PUT</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.People.Api.UserController.GetThemeAsync">
            <summary>
            Returns a theme which is set to the current portal.
            </summary>
            <short>
            Get portal theme
            </short>
            <category>Theme</category>
            <returns type="ASC.Web.Core.Users.DarkThemeSettings, ASC.Web.Core">Theme</returns>
            <path>api/2.0/people/theme</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.People.Api.UserController.ChangeThemeAsync(ASC.People.ApiModels.RequestDto.DarkThemeSettingsRequestDto)">
            <summary>
            Changes the current portal theme.
            </summary>
            <short>
            Change portal theme
            </short>
            <category>Theme</category>
            <param type="ASC.People.ApiModels.RequestDto.DarkThemeSettingsRequestDto, ASC.People" name="inDto">Theme settings request parameters</param>
            <returns type="ASC.Web.Core.Users.DarkThemeSettings, ASC.Web.Core">Theme</returns>
            <path>api/2.0/people/theme</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.People.Api.UserController.SelfAsync">
            <summary>
            Returns the detailed information about the current user profile.
            </summary>
            <short>
            Get my profile
            </short>
            <category>Profiles</category>
            <returns type="ASC.Web.Api.Models.EmployeeFullDto, ASC.Api.Core">Detailed information about my profile</returns>
            <path>api/2.0/people/@self</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.People.Api.UserController.SendEmailChangeInstructionsAsync(ASC.People.ApiModels.RequestDto.UpdateMemberRequestDto)">
            <summary>
            Sends a message to the user email with the instructions to change the email address connected to the portal.
            </summary>
            <short>
            Send instructions to change email
            </short>
            <category>Profiles</category>
            <param type="ASC.People.ApiModels.RequestDto.UpdateMemberRequestDto, ASC.People" name="inDto">Request parameters for updating user information</param>
            <returns type="System.Object, System">Message text</returns>
            <path>api/2.0/people/email</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.People.Api.UserController.SendUserPasswordAsync(ASC.People.ApiModels.RequestDto.MemberRequestDto)">
            <summary>
            Reminds a password to the user using the email address specified in the request.
            </summary>
            <short>
            Remind a user password
            </short>
            <category>Password</category>
            <param type="ASC.People.ApiModels.RequestDto.MemberRequestDto, ASC.People" name="inDto">Member request parameters</param>
            <returns type="System.Object, System">Email with the password</returns>
            <path>api/2.0/people/password</path>
            <httpMethod>POST</httpMethod>
            <requiresAuthorization>false</requiresAuthorization>
        </member>
        <member name="M:ASC.People.Api.UserController.UpdateEmployeeActivationStatus(ASC.Core.Users.EmployeeActivationStatus,ASC.People.ApiModels.RequestDto.UpdateMembersRequestDto)">
            <summary>
            Sets the required activation status to the list of users with the IDs specified in the request.
            </summary>
            <short>
            Set an activation status to the users
            </short>
            <category>User status</category>
            <param type="ASC.Core.Users.EmployeeActivationStatus, ASC.Core.Common" method="url" name="activationstatus">Activation status</param>
            <param type="ASC.People.ApiModels.RequestDto.UpdateMembersRequestDto, ASC.People" name="inDto">Request parameters for updating user information</param>
            <returns type="ASC.Web.Api.Models.EmployeeFullDto, ASC.Api.Core">List of users with the detailed information</returns>
            <path>api/2.0/people/activationstatus/{activationstatus}</path>
            <httpMethod>PUT</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.People.Api.UserController.UpdateMemberCulture(System.String,ASC.People.ApiModels.RequestDto.UpdateMemberRequestDto)">
            <summary>
            Updates the user language with the parameter specified in the request.
            </summary>
            <short>
            Update user language
            </short>
            <category>Profiles</category>
            <param type="System.String, System" method="url" name="userid">User ID</param>
            <param type="ASC.People.ApiModels.RequestDto.UpdateMemberRequestDto, ASC.People" name="inDto">Request parameters for updating user information</param>
            <returns type="ASC.Web.Api.Models.EmployeeFullDto, ASC.Api.Core">Detailed user information</returns>
            <path>api/2.0/people/{userid}/culture</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.People.Api.UserController.UpdateMember(System.String,ASC.People.ApiModels.RequestDto.UpdateMemberRequestDto)">
            <summary>
            Updates the data for the selected portal user with the first name, last name, email address, and/or optional parameters specified in the request.
            </summary>
            <short>
            Update a user
            </short>
            <category>Profiles</category>
            <param type="System.String, System" method="url" name="userid">User ID</param>
            <param type="ASC.People.ApiModels.RequestDto.UpdateMemberRequestDto, ASC.People" name="inDto">Member request parameters</param>
            <returns type="ASC.Web.Api.Models.EmployeeFullDto, ASC.Api.Core">Updated user with the detailed information</returns>
            <path>api/2.0/people/{userid}</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.People.Api.UserController.UpdateUserStatus(ASC.Core.Users.EmployeeStatus,ASC.People.ApiModels.RequestDto.UpdateMembersRequestDto)">
            <summary>
            Changes a status for the users with the IDs specified in the request.
            </summary>
            <short>
            Change a user status
            </short>
            <category>User status</category>
            <param type="ASC.Core.Users.EmployeeStatus, ASC.Core.Common" method="url" name="status">New user status</param>
            <param type="ASC.People.ApiModels.RequestDto.UpdateMembersRequestDto, ASC.People" name="inDto">Request parameters for updating user information</param>
            <returns type="ASC.Web.Api.Models.EmployeeFullDto, ASC.Api.Core">List of users with the detailed information</returns>
            <path>api/2.0/people/status/{status}</path>
            <httpMethod>PUT</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.People.Api.UserController.UpdateUserTypeAsync(ASC.Core.Users.EmployeeType,ASC.People.ApiModels.RequestDto.UpdateMembersRequestDto)">
            <summary>
            Changes a type for the users with the IDs specified in the request.
            </summary>
            <short>
            Change a user type
            </short>
            <category>User type</category>
            <param type="ASC.Core.Users.EmployeeType, ASC.Core.Common" method="url" name="type">New user type</param>
            <param type="ASC.People.ApiModels.RequestDto.UpdateMembersRequestDto, ASC.People" name="inDto">Request parameters for updating user information</param>
            <returns type="ASC.Web.Api.Models.EmployeeFullDto, ASC.Api.Core">List of users with the detailed information</returns>
            <path>api/2.0/people/type/{type}</path>
            <httpMethod>PUT</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.People.Api.UserController.RecalculateQuotaAsync">
            <summary>
             Starts the process of recalculating quota.
             </summary>
             <short>
             Recalculate quota 
             </short>
             <category>Quota</category>
             <path>api/2.0/people/recalculatequota</path>
             <httpMethod>GET</httpMethod>
             <returns></returns>
             <visible>false</visible>
        </member>
        <member name="M:ASC.People.Api.UserController.CheckRecalculateQuotaAsync">
            <summary>
            Checks the process of recalculating quota.
            </summary>
            <short>
            Check quota recalculation
            </short>
            <category>Quota</category>
            <returns type="ASC.Api.Core.Model.TaskProgressDto, ASC.Api.Core.Model">Task progress</returns>
            <path>api/2.0/people/checkrecalculatequota</path>
            <httpMethod>GET</httpMethod>
            <visible>false</visible>
        </member>
        <member name="M:ASC.People.Api.UserController.UpdateUserQuotaAsync(ASC.People.ApiModels.RequestDto.UpdateMembersQuotaRequestDto)">
            <summary>
            Changes a quota limit for the users with the IDs specified in the request.
            </summary>
            <short>
            Change a user quota limit
            </short>
            <category>Quota</category>
            <param type="ASC.People.ApiModels.RequestDto.UpdateMembersRequestDto, ASC.People" name="inDto">Request parameters for updating user information</param>
            <returns type="ASC.Web.Api.Models.EmployeeFullDto, ASC.Api.Core">List of users with the detailed information</returns>
            <path>api/2.0/people/userquota</path>
            <httpMethod>PUT</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.People.Api.UserController.ResetUsersQuota(ASC.People.ApiModels.RequestDto.UpdateMembersQuotaRequestDto)">
            <summary>
            Resets a user quota limit with the ID specified in the request from the portal.
            </summary>
            <short>
            Reset a user quota limit
            </short>
            <category>Quota</category>
            <param type="ASC.People.ApiModels.RequestDto.UpdateMembersQuotaRequestDto, ASC.People" name="inDto">Request parameters for updating user information</param>
            <returns type="ASC.Web.Api.Models.EmployeeFullDto, ASC.Api.Core">User detailed information</returns>
            <path>api/2.0/people/resetquota</path>
            <httpMethod>PUT</httpMethod>
            <collection>list</collection>
        </member>
        <member name="T:ASC.People.Resources.PeopleResource">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ASC.People.Resources.PeopleResource.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ASC.People.Resources.PeopleResource.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:ASC.People.Resources.PeopleResource.ErrorEmptyUploadFileSelected">
            <summary>
              Looks up a localized string similar to The uploaded file could not be found.
            </summary>
        </member>
        <member name="P:ASC.People.Resources.PeopleResource.ErrorImageSizetLimit">
            <summary>
              Looks up a localized string similar to Image size is too large.
            </summary>
        </member>
        <member name="P:ASC.People.Resources.PeopleResource.ErrorImageWeightLimit">
            <summary>
              Looks up a localized string similar to Image file size is too large.
            </summary>
        </member>
        <member name="P:ASC.People.Resources.PeopleResource.ErrorUnknownFileImageType">
            <summary>
              Looks up a localized string similar to Unknown image file type.
            </summary>
        </member>
        <member name="P:ASC.People.Resources.PeopleResource.ProductAdminOpportunities">
            <summary>
              Looks up a localized string similar to Do the same as a user|Create profiles and groups|Import profiles|Invite users.
            </summary>
        </member>
        <member name="P:ASC.People.Resources.PeopleResource.ProductDescription">
            <summary>
              Looks up a localized string similar to Add new users, invite or import them. Manage users and view their detailed information..
            </summary>
        </member>
        <member name="P:ASC.People.Resources.PeopleResource.ProductName">
            <summary>
              Looks up a localized string similar to People.
            </summary>
        </member>
        <member name="P:ASC.People.Resources.PeopleResource.ProductUserOpportunities">
            <summary>
              Looks up a localized string similar to View profiles and groups.
            </summary>
        </member>
    </members>
</doc>
