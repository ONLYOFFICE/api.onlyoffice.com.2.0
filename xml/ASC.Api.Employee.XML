<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ASC.Api.Employee</name>
    </assembly>
    <members>
        <member name="P:ASC.Api.Employee.Contact.Type">
            <example>GTalk</example>
            <order>1</order>
        </member>
        <member name="P:ASC.Api.Employee.Contact.Value">
            <example>my@gmail.com</example>
            <order>2</order>
        </member>
        <member name="P:ASC.Api.Employee.ThumbnailsDataWrapper.Original">
            <example>default_user_photo_size_1280-1280.png</example>
        </member>
        <member name="P:ASC.Api.Employee.ThumbnailsDataWrapper.Retina">
            <example>default_user_photo_size_360-360.png</example>
        </member>
        <member name="P:ASC.Api.Employee.ThumbnailsDataWrapper.Max">
            <example>default_user_photo_size_200-200.png</example>
        </member>
        <member name="P:ASC.Api.Employee.ThumbnailsDataWrapper.Big">
            <example>default_user_photo_size_82-82.png</example>
        </member>
        <member name="P:ASC.Api.Employee.ThumbnailsDataWrapper.Medium">
            <example>"default_user_photo_size_48-48.png</example>
        </member>
        <member name="P:ASC.Api.Employee.ThumbnailsDataWrapper.Small">
            <example>default_user_photo_size_32-32.png</example>
        </member>
        <member name="P:ASC.Api.Employee.GroupWrapperSummary.Name">
            <example>Group Name</example>
            <order>2</order>
        </member>
        <member name="P:ASC.Api.Employee.GroupWrapperSummary.Id">
            <example>00000000-0000-0000-0000-000000000000</example>
            <order>1</order>
        </member>
        <member name="P:ASC.Api.Employee.GroupWrapperSummary.Manager">
            <example>Jake.Zazhitski</example>
            <order>9</order>
        </member>
        <member name="T:ASC.Api.Employee.EmployeeApi">
            <summary>
            User profiles access
            </summary>
            <name>people</name>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetMe">
            <summary>
            Returns the detailed information about the current user profile
            </summary>
            <short>
            My profile
            </short>
            <returns type="ASC.Api.Employee.EmployeeWraperFull, ASC.Api.Employee">Profile</returns>
            <path>api/2.0/people/@self</path>
            <httpMethod>GET</httpMethod>
            <requiresAuthorization>true</requiresAuthorization>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetAll">
            <summary>
            Returns the list of profiles for all portal users
            </summary>
            <short>
            All profiles
            </short>
            <returns type="ASC.Api.Employee.EmployeeWraperFull, ASC.Api.Employee">List of profiles</returns>
             <remarks>This method returns a partial profile. Use more specific method to get full profile</remarks>
             <path>api/2.0/people</path>
             <httpMethod>GET</httpMethod>
             <requiresAuthorization>true</requiresAuthorization>
             <collection>list</collection>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetByStatus(ASC.Core.Users.EmployeeStatus)">
            <summary>
            
            </summary>
            <param method="url" name="status"></param>
            <returns type="ASC.Api.Employee.EmployeeWraperFull, ASC.Api.Employee"></returns>
            <path>api/2.0/people/status/{status}</path>
            <httpMethod>GET</httpMethod>
            <requiresAuthorization>true</requiresAuthorization>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetById(System.String)">
            <summary>
            Returns the detailed information about the profile of the user with the name specified in the request
            </summary>
            <short>
            Specific profile
            </short>
            <param method="url" name="username">User name</param>
            <returns type="ASC.Api.Employee.EmployeeWraperFull, ASC.Api.Employee">User profile</returns>
            <path>api/2.0/people/{username}</path>
            <httpMethod>GET</httpMethod>
            <requiresAuthorization>true</requiresAuthorization>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetByEmail(System.String)">
            <summary>
            Returns the detailed information about the profile of the user with the name specified in the request
            </summary>
            <short>
            Specific profile
            </short>
            <param method="url" name="email">User email</param>
            <returns type="ASC.Api.Employee.EmployeeWraperFull, ASC.Api.Employee">User profile</returns>
            <path>api/2.0/people/email</path>
            <httpMethod>GET</httpMethod>
            <requiresAuthorization>true</requiresAuthorization>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetSearch(System.String)">
            <summary>
            Returns the list of profiles for all portal users matching the search query
            </summary>
            <short>
            Search users
            </short>
            <param method="url" name="query">Query</param>
            <returns type="ASC.Api.Employee.EmployeeWraperFull, ASC.Api.Employee">List of users</returns>
            <path>api/2.0/people/@search/{query}</path>
            <httpMethod>GET</httpMethod>
            <requiresAuthorization>true</requiresAuthorization>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetPeopleSearch(System.String)">
            <summary>
            Returns the list of users matching the search criteria
            </summary>
            <short>
            User search
            </short>
            <param method="url" name="query">Search text</param>
            <returns type="ASC.Api.Employee.EmployeeWraperFull, ASC.Api.Employee">User list</returns>
            <path>api/2.0/people/search</path>
            <httpMethod>GET</httpMethod>
            <requiresAuthorization>true</requiresAuthorization>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetAdvanced(ASC.Core.Users.EmployeeStatus,System.String)">
            <summary>
            Returns the list of users matching the status filter and text search
            </summary>
            <short>
            User search by filter
            </short>
            <param method="url" name="status">User status</param>
            <param method="url" name="query">Search text</param>
            <returns type="ASC.Api.Employee.EmployeeWraperFull, ASC.Api.Employee">User list</returns>
            <path>api/2.0/people/status/{status}/search</path>
            <httpMethod>GET</httpMethod>
             <requiresAuthorization>true</requiresAuthorization>
             <collection>list</collection>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.SaveUsers(System.String,System.Boolean)">
            <summary>
            Adds a new portal user from import with the first and last name, email address
            </summary>
            <short>
            Add new import user
            </short>
            <param name="userList">The list of users to add</param>
            <param name="importUsersAsCollaborators" optional="true">Add users as guests (bool type: false|true)</param>
            <returns>Newly created users</returns>
            <path>api/2.0/people/import/save</path>
            <httpMethod>POST</httpMethod>
            <requiresAuthorization>true</requiresAuthorization>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetStatus">
            <summary>
            
            </summary>
            <returns></returns>
            <path>api/2.0/people/import/status</path>
            <httpMethod>GET</httpMethod>
            <requiresAuthorization>true</requiresAuthorization>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetFullByFilter(System.Nullable{ASC.Core.Users.EmployeeStatus},System.Nullable{System.Guid},System.Nullable{ASC.Core.Users.EmployeeActivationStatus},System.Nullable{ASC.Core.Users.EmployeeType},System.Nullable{System.Boolean})">
            <summary>
               Returns the list of users matching the filter with the parameters specified in the request
            </summary>
            <short>
               User search by extended filter
            </short>
            <param method="url" optional="true" name="employeeStatus">User status</param>
            <param method="url" optional="true" name="groupId">Group ID</param>
            <param method="url" optional="true" name="activationStatus">Activation status</param>
            <param method="url" optional="true" name="employeeType">User type</param>
            <param method="url" optional="true" name="isAdministrator">Administrator(bool type)</param>
            <returns type="ASC.Api.Employee.EmployeeWraper, ASC.Api.Employee">
               User list
            </returns>
            <path>api/2.0/people/filter</path>
            <httpMethod>GET</httpMethod>
            <requiresAuthorization>true</requiresAuthorization>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetSimpleByFilter(System.Nullable{ASC.Core.Users.EmployeeStatus},System.Nullable{System.Guid},System.Nullable{ASC.Core.Users.EmployeeActivationStatus},System.Nullable{ASC.Core.Users.EmployeeType},System.Nullable{System.Boolean})">
            <summary>
               Returns the list of users matching the filter with the parameters specified in the request
            </summary>
            <short>
               User search by extended filter
            </short>
            <param method="url" optional="true" name="employeeStatus">User status</param>
            <param method="url" optional="true" name="groupId">Group ID</param>
            <param method="url" optional="true" name="activationStatus">Activation status</param>
            <param method="url" optional="true" name="employeeType">User type</param>
            <param method="url" optional="true" name="isAdministrator">Administrator(bool type)</param>
            <returns type="ASC.Api.Employee.EmployeeWraper, ASC.Api.Employee">
               User list
            </returns>
            <path>api/2.0/people/simple/filter</path>
            <httpMethod>GET</httpMethod>
            <requiresAuthorization>true</requiresAuthorization>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.AddMember(System.Boolean,System.String,System.String,System.String,System.Guid[],System.String,System.String,System.String,ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime,System.String,System.Collections.Generic.IEnumerable{ASC.Api.Employee.Contact},System.String,System.String,System.String)">
            <summary>
            Adds a new portal user with the first and last name, email address and several optional parameters specified in the request
            </summary>
            <short>
            Add new user
            </short>
            <param name="isVisitor">User or Visitor (bool type: false|true)</param>
            <param name="email">Email</param>
            <param name="firstname">First name</param>
            <param name="lastname">Last name</param>
            <param name="department" optional="true">Department</param>
            <param name="title" optional="true">Title</param>
            <param name="location" optional="true">Location</param>
            <param name="sex" optional="true">Sex (male|female)</param>
            <param name="birthday" optional="true">Birthday</param>
            <param name="worksfrom" optional="true">Works from date. If not specified - current will be set</param>
            <param name="comment" optional="true">Comment for user</param>
            <param name="contacts">List of contacts</param>
            <param name="files">Avatar photo url</param>
            <param name="password" optional="true">User Password</param>
            <param name="passwordHash" visible="false"></param>
            <returns type="ASC.Api.Employee.EmployeeWraperFull, ASC.Api.Employee">Newly created user</returns>
            <path>api/2.0/people</path>
            <httpMethod>POST</httpMethod>
            <requiresAuthorization>true</requiresAuthorization>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.AddMemberAsActivated(System.Boolean,System.String,System.String,System.String,System.Guid[],System.String,System.String,System.String,ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime,System.String,System.Collections.Generic.IEnumerable{ASC.Api.Employee.Contact},System.String,System.String)">
            <summary>
            Adds a new portal user with the first and last name, email address and several optional parameters specified in the request
            </summary>
            <short>
            Add new user
            </short>
            <param name="isVisitor">User or Visitor (bool type: false|true)</param>
            <param name="email">Email</param>
            <param name="firstname">First name</param>
            <param name="lastname">Last name</param>
            <param name="department" optional="true">Department</param>
            <param name="title" optional="true">Title</param>
            <param name="location" optional="true">Location</param>
            <param name="sex" optional="true">Sex (male|female)</param>
            <param name="birthday" optional="true">Birthday</param>
            <param name="worksfrom" optional="true">Works from date. If not specified - current will be set</param>
            <param name="comment" optional="true">Comment for user</param>
            <param name="contacts">List of contacts</param>
            <param name="files">Avatar photo url</param>
            <param name="password">User Password</param>
            <returns>Newly created user</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.UpdateMember(System.Boolean,System.String,System.String,System.String,System.String,System.Guid[],System.String,System.String,System.String,ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime,System.Collections.Generic.IEnumerable{ASC.Api.Employee.Contact},System.String,System.Nullable{System.Boolean})">
            <summary>
            Updates the data for the selected portal user with the first and last name, email address and/or optional parameters specified in the request
            </summary>
            <short>
            Update user
            </short>
            <param name="isVisitor">User or Visitor (bool type: false|true)</param>
            <param method="url" name="userid">User ID to update</param>
            <param name="firstname">First name</param>
            <param name="lastname">Last name</param>
            <param name="comment" optional="true">Comment for user</param>
            <param name="department" optional="true">Department</param>
            <param name="title" optional="true">Title</param>
            <param name="location" optional="true">Location</param>
            <param name="sex" optional="true">Sex (male|female)</param>
            <param name="birthday" optional="true">Birthday</param>
            <param name="worksfrom" optional="true">Works from date. If not specified - current will be set</param>
            <param name="contacts">List fo contacts</param>
            <param name="files">Avatar photo url</param>
            <param name="disable"></param>
            <returns type="ASC.Api.Employee.EmployeeWraperFull, ASC.Api.Employee">Newly created user</returns>
            <path>api/2.0/people/{userid}</path>
            <httpMethod>PUT</httpMethod>
            <requiresAuthorization>true</requiresAuthorization>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.DeleteMember(System.String)">
            <summary>
            Deletes the user with the ID specified in the request from the portal
            </summary>
            <short>
            Delete user
            </short>
            <param method="url" name="userid">ID of user to delete</param>
            <returns type="ASC.Api.Employee.EmployeeWraperFull, ASC.Api.Employee"></returns>
            <path>api/2.0/people/{userid}</path>
            <httpMethod>DELETE</httpMethod>
            <requiresAuthorization>true</requiresAuthorization>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.UpdateMemberContacts(System.String,System.Collections.Generic.IEnumerable{ASC.Api.Employee.Contact})">
            <summary>
            Updates the specified user contact information merging the sent data with the present on the portal
            </summary>
            <short>
            Update user contacts
            </short>
            <param method="url" name="userid">User ID</param>
            <param name="contacts">Contacts list</param>
            <returns type="ASC.Api.Employee.EmployeeWraperFull, ASC.Api.Employee">Updated user profile</returns>
            <path>api/2.0/people/{userid}/contacts</path>
            <httpMethod>PUT</httpMethod>
            <requiresAuthorization>true</requiresAuthorization>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.SetMemberContacts(System.String,System.Collections.Generic.IEnumerable{ASC.Api.Employee.Contact})">
            <summary>
            Updates the specified user contact information changing the data present on the portal for the sent data
            </summary>
            <short>
            Set user contacts
            </short>
            <param method="url" name="userid">User ID</param>
            <param name="contacts">Contacts list</param>
            <returns type="ASC.Api.Employee.EmployeeWraperFull, ASC.Api.Employee">Updated user profile</returns>
            <path>api/2.0/people/{userid}/contacts</path>
            <httpMethod>POST</httpMethod>
            <requiresAuthorization>true</requiresAuthorization>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.DeleteMemberContacts(System.String,System.Collections.Generic.IEnumerable{ASC.Api.Employee.Contact})">
            <summary>
            Updates the specified user contact information deleting the data specified in the request from the portal
            </summary>
            <short>
            Delete user contacts
            </short>
            <param method="url" name="userid">User ID</param>
            <param name="contacts">Contacts list</param>
            <returns type="ASC.Api.Employee.EmployeeWraperFull, ASC.Api.Employee">Updated user profile</returns>
            <path>api/2.0/people/{userid}/contacts</path>
            <httpMethod>DELETE</httpMethod>
            <requiresAuthorization>true</requiresAuthorization>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetMemberPhoto(System.String)">
            <summary>
            Get user photoes
            </summary>
            <short>
            Get user photoes
            </short>
            <param method="url" name="userid">User ID</param>
            <returns type="ASC.Api.Employee.ThumbnailsDataWrapper, ASC.Api.Employee"></returns>
            <path>api/2.0/people/{userid}/photo</path>
            <httpMethod>GET</httpMethod>
            <requiresAuthorization>true</requiresAuthorization>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.UpdateMemberPhoto(System.String,System.String)">
            <summary>
            Updates the specified user photo with the pathname
            </summary>
            <short>
            Update user photo
            </short>
            <param method="url" name="userid">User ID</param>
            <param name="files">Avatar photo url</param>
            <returns type="ASC.Api.Employee.ThumbnailsDataWrapper, ASC.Api.Employee"></returns>
            <path>api/2.0/people/{userid}/photo</path>
            <httpMethod>PUT</httpMethod>
            <requiresAuthorization>true</requiresAuthorization>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.DeleteMemberPhoto(System.String)">
            <summary>
            Deletes the photo of the user with the ID specified in the request
            </summary>
            <short>
            Delete user photo
            </short>
            <param method="url" name="userid">User ID</param>
            <returns type="ASC.Api.Employee.ThumbnailsDataWrapper,  ASC.Api.Employee"></returns>
            <path>api/2.0/people/{userid}/photo</path>
            <httpMethod>DELETE</httpMethod>
            <requiresAuthorization>true</requiresAuthorization>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.CreateMemberPhotoThumbnails(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Create photo thumbnails by coordinates of original image
            </summary>
            <short>
            Create user photo thumbnails
            </short>
            <param method="url" name="userid">User ID</param>
            <param name="tmpFile">Path to the temporary file</param>
            <param name="x">X</param>
            <param name="y">Y</param>
            <param name="width">Width</param>
            <param name="height">Height</param>
            <path>api/2.0/people/{userid}/photo/thumbnails</path>
            <httpMethod>POST</httpMethod>
            <requiresAuthorization>true</requiresAuthorization>
            <returns type="ASC.Api.Employee.ThumbnailsDataWrapper, ASC.Api.Employee"></returns>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.SendUserPassword(System.String)">
            <summary>
            Remind password for the user with email specified in the request
            </summary>
            <short>
            Remind user password
            </short>
            <param name="email">User email</param>     
            <returns></returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.ChangeUserPassword(System.Guid,System.String,System.String)">
            <summary>
              Sets the password and email for the user with the ID specified in the request
            </summary>
            <param name="userid">User ID</param>
            <param name="password">Password</param>
            <param name="email">New email</param>
            <returns>Detailed user information</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.UpdateEmployeeActivationStatus(ASC.Core.Users.EmployeeActivationStatus,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
              Sets the required activation status to the list of users with the ID specified in the request
            </summary>
            <summary>
              Set activation status
            </summary>
            <param name="userIds">User list ID</param>
            <param name="activationstatus">Required status</param>
            <returns>List of users</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.UpdateUserType(ASC.Core.Users.EmployeeType,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Changes the type between user and guest for the user with the ID specified in the request
            </summary>
            <short>
            User type change
            </short>
            <param method="url" name="type">New user type</param>
            <param name="userIds">User ID list</param>
            <returns type="ASC.Api.Employee.EmployeeWraperFull, ASC.Api.Employee">User list</returns>
            <path>api/2.0/people/type/{type}</path>
            <httpMethod>PUT</httpMethod>
            <requiresAuthorization>true</requiresAuthorization>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.UpdateUserStatus(ASC.Core.Users.EmployeeStatus,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Changes the status between active and disabled for the user with the ID specified in the request
            </summary>
            <short>
            User status change
            </short>
            <param method="url" name="status">New user status</param>
            <param name="userIds">User ID list</param>
            <returns type="ASC.Api.Employee.EmployeeWraperFull, ASC.Api.Employee">User list</returns>
            <path>api/2.0/people/status/{status}</path>
            <httpMethod>PUT</httpMethod>
            <collection>list</collection>
            <requiresAuthorization>true</requiresAuthorization>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.ResendUserInvites(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Sends emails once again for the users who have not activated their emails
            </summary>
            <short>
            Send activation email
            </short>
            <param name="userIds">User ID list</param>
            <returns type="ASC.Api.Employee.EmployeeWraperFull, ASC.Api.Employee">User list</returns>
            <path>api/2.0/people/invite</path>
            <httpMethod>PUT</httpMethod>
            <requiresAuthorization>true</requiresAuthorization>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.RemoveUsers(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Delete the list of selected users
            </summary>
            <short>
            Delete users
            </short>
            <param name="userIds">User ID list</param>
            <returns type="ASC.Api.Employee.EmployeeWraperFull, ASC.Api.Employee">User list</returns>
            <path>api/2.0/people/delete</path>
            <httpMethod>PUT</httpMethod>
            <requiresAuthorization>true</requiresAuthorization>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.SendInstructionsToDelete">
            <summary>
            Send instructions for delete user own profile
            </summary>
            <short>
            Send delete instructions
            </short>
            <returns>Info message</returns>
            <path>api/2.0/people/self/delete</path>
            <httpMethod>PUT</httpMethod>
            <requiresAuthorization>true</requiresAuthorization>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.JoinToAffiliateProgram">
            <summary>
            Join to affiliate programm
            </summary>
            <short>
            Join to affiliate programm
            </short>
            <returns>Link to affiliate programm</returns>
            <path>api/2.0/people/self/joinaffiliate</path>
            <httpMethod>PUT</httpMethod>
            <requiresAuthorization>true</requiresAuthorization>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.LinkAccount(System.String)">
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.UnlinkAccount(System.String)">
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetReassignProgress(System.Guid)">
            <summary>
            Returns the progress of the started reassign process
            </summary>
            <param method="url" name="userId">User ID whose data is reassigned</param>
            <category>Reassign user data</category>
            <returns type="ASC.Data.Reassigns.ReassignProgressItem, ASC.Data.Reassigns">Reassign Progress</returns>
            <path>api/2.0/people/reassign/progress</path>
            <httpMethod>GET</httpMethod>
            <requiresAuthorization>true</requiresAuthorization>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.TerminateReassign(System.Guid)">
            <summary>
            Terminate reassign process
            </summary>
            <param name="userId">User ID whose data is reassigned</param>
            <category>Reassign user data</category>
            <path>api/2.0/people/reassign/terminate</path>
            <httpMethod>PUT</httpMethod>
            <requiresAuthorization>true</requiresAuthorization>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.StartReassign(System.Guid,System.Guid,System.Boolean)">
            <summary>
            Start a reassign process
            </summary>
            <param name="fromUserId">From User ID</param>
            <param name="toUserId">To User ID</param>
            <param name="deleteProfile">Delete profile when reassignment will be finished</param>
            <category>Reassign user data</category>
            <returns type="ASC.Data.Reassigns.ReassignProgressItem, ASC.Data.Reassigns">Reassign Progress</returns>
            <path>api/2.0/people/reassign/start</path>
            <httpMethod>POST</httpMethod>
            <requiresAuthorization>true</requiresAuthorization>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetRemoveProgress(System.Guid)">
            <summary>
            Returns the progress of the started remove process
            </summary>
            <param method="url" name="userId">User ID</param>
            <category>Remove user data</category>
            <returns type="ASC.Data.Reassigns.RemoveProgressItem, ASC.Data.Reassigns">Remove Progress</returns>
            <path>api/2.0/people/remove/progress</path>
            <httpMethod>GET</httpMethod>
            <requiresAuthorization>true</requiresAuthorization>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.TerminateRemove(System.Guid)">
            <summary>
            Terminate remove process
            </summary>
            <param name="userId">User ID</param>
            <category>Remove user data</category>
            <path>api/2.0/people/remove/terminate</path>
            <httpMethod>PUT</httpMethod>
            <requiresAuthorization>true</requiresAuthorization>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.StartRemove(System.Guid)">
            <summary>
            Start a remove process
            </summary>
            <param name="userId">User ID</param>
            <category>Remove user data</category>
            <returns type="ASC.Data.Reassigns.RemoveProgressItem, ASC.Data.Reassigns">Remove Progress</returns>
            <path>api/2.0/people/remove/start</path>
            <httpMethod>POST</httpMethod>
            <requiresAuthorization>true</requiresAuthorization>
        </member>
        <member name="T:ASC.Api.Employee.EmployeeWraperFull">
            <inherited>ASC.Api.Employee.EmployeeWraper, ASC.Api.Employee</inherited>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.FirstName">
            <example>Mike</example>
            <order>10</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.LastName">
            <example>Zanyatski</example>
            <order>10</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.UserName">
            <example>Mike.Zanyatski</example>
            <order>2</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.Email">
            <example>my@domain.com</example>
            <order>10</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.Contacts">
            <type>ASC.Api.Employee.Contact, ASC.Api.Employee</type>
            <order>12</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.Birthday">
            <example>2008-04-10T06-30-00.000Z</example>
            <order>10</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.Sex">
            <example>male</example>
            <order>10</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.Status">
            <example type="int">1</example>
            <order>10</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.ActivationStatus">
            <example type="int">0</example>
            <order>10</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.Terminated">
            <example>2008-04-10T06-30-00.000Z</example>
            <order>10</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.Department">
            <example>Marketing</example>
            <order>10</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.WorkFrom">
            <example>2008-04-10T06-30-00.000Z</example>
            <order>10</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.Groups">
            <type>ASC.Api.Employee.GroupWrapperSummary, ASC.Api.Employee</type>
            <order>20</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.Location">
            <example>Palo Alto</example>
            <order>10</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.Notes">
            <example>Notes to worker</example>
            <order>10</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.AvatarMedium">
            <example>url to medium avatar</example>
            <order>20</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.Avatar">
            <example>url to big avatar</example>
            <order>20</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.IsAdmin">
            <example>false</example>
            <order>20</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.IsLDAP">
            <example>false</example>
            <order>20</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.ListAdminModules">
            <example>projects,crm</example>
            <order>20</order>
            <collection split=",">list</collection>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.IsOwner">
            <example>false</example>
            <order>20</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.IsVisitor">
            <example>false</example>
            <order>2</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.CultureName">
            <example>en-EN</example>
            <order>20</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.MobilePhone">
            <example>MobilePhone</example>
            <order>11</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.MobilePhoneActivationStatus">
            <example>1</example>
            <order>11</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.IsSSO">
            <example>false</example>
            <order>20</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraper.Id">
            <example>00000000-0000-0000-0000-000000000000</example>
            <order>1</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraper.DisplayName">
            <example>Mike Zanyatski</example>
            <order>10</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraper.Title">
            <example>Manager</example>
            <order>11</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraper.AvatarSmall">
            <example>url to small avatar</example>
            <order>20</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraper.ProfileUrl">
            <example>\/Products\/People\/Profile.aspx?user=administrator</example>
            <order>30</order>
        </member>
        <member name="T:ASC.Api.Employee.GroupsApi">
            <summary>
            Groups access
            </summary>
            <name>group</name>
        </member>
        <member name="M:ASC.Api.Employee.GroupsApi.GetAll">
            <summary>
            Returns the general information about all groups, such as group ID and group manager
            </summary>
            <short>
            All groups
            </short>
            <returns type="ASC.Api.Employee.GroupWrapperSummary, ASC.Api.Employee">List of groups</returns>
             <remarks>
             This method returns partial group info
             </remarks>
             <path>api/2.0/group</path>
             <httpMethod>GET</httpMethod>
             <requiresAuthorization>true</requiresAuthorization>
             <collection>list</collection>
        </member>
        <member name="M:ASC.Api.Employee.GroupsApi.GetById(System.Guid)">
            <summary>
            Returns the detailed information about the selected group: group name, category, description, manager, users and parent group if any
            </summary>
            <short>
            Specific group
            </short>
            <param method="url" name="groupid">Group ID</param>
            <returns type="ASC.Api.Employee.GroupWrapperFull, ASC.Api.Employee">Group</returns>
             <remarks>
             That method returns full group info
             </remarks>
             <path>api/2.0/group/{groupid}</path>
             <httpMethod>GET</httpMethod>
             <requiresAuthorization>true</requiresAuthorization>
        </member>
        <member name="M:ASC.Api.Employee.GroupsApi.GetByUserId(System.Guid)">
            <summary>
            Returns the group list for user
            </summary>
            <short>
            User groups
            </short>
            <param method="url" name="userid">User ID</param>
            <returns type="ASC.Api.Employee.GroupWrapperSummary, ASC.Api.Employee">Group</returns>
             <remarks>
             That method returns user groups
             </remarks>
             <path>api/2.0/group/user/{userid}</path>
             <httpMethod>GET</httpMethod>
              <requiresAuthorization>true</requiresAuthorization>
              <collection>list</collection>
        </member>
        <member name="M:ASC.Api.Employee.GroupsApi.AddGroup(System.Guid,System.String,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Adds a new group with the group manager, name and users specified
            </summary>
            <short>
            Add new group
            </short>
            <param name="groupManager">Group manager</param>
            <param name="groupName">Group name</param>
            <param name="members">List of group users</param>
            <returns type="ASC.Api.Employee.GroupWrapperFull, ASC.Api.Employee">Newly created group</returns>
            <path>api/2.0/group</path>
            <httpMethod>POST</httpMethod>
            <requiresAuthorization>true</requiresAuthorization>
        </member>
        <member name="M:ASC.Api.Employee.GroupsApi.UpdateGroup(System.Guid,System.Guid,System.String,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Updates an existing group changing the group manager, name and/or users
            </summary>
            <short>
            Update existing group
            </short>
            <param method="url" name="groupid">Group ID</param>
            <param name="groupManager">Group manager</param>
            <param name="groupName">Group name</param>
            <param name="members">List of group users</param>
            <returns type="ASC.Api.Employee.GroupWrapperFull, ASC.Api.Employee">Newly created group</returns>
            <path>api/2.0/group/{groupid}</path>
            <httpMethod>PUT</httpMethod>
             <requiresAuthorization>true</requiresAuthorization>
        </member>
        <member name="M:ASC.Api.Employee.GroupsApi.DeleteGroup(System.Guid)">
            <summary>
            Deletes the selected group from the list of groups on the portal
            </summary>
            <short>
            Delete group
            </short>
            <param method="url" name="groupid">Group ID</param>
            <returns type="ASC.Api.Employee.GroupWrapperFull, ASC.Api.Employee"></returns>
            <path>api/2.0/group/{groupid}</path>
            <httpMethod>DELETE</httpMethod>
             <requiresAuthorization>true</requiresAuthorization>
        </member>
        <member name="M:ASC.Api.Employee.GroupsApi.TransferMembersTo(System.Guid,System.Guid)">
            <summary>
            Move all the users from the selected group to another one specified
            </summary>
            <short>
            Move group users
            </short>
            <param method="url" name="groupid">ID of group to move from</param>
            <param method="url" name="newgroupid">ID of group to move to</param>
            <returns type="ASC.Api.Employee.GroupWrapperFull, ASC.Api.Employee">Group info which users were moved</returns>
            <path>api/2.0/group/{groupid}/members/{newgroupid}</path>
            <httpMethod>PUT</httpMethod>
            <requiresAuthorization>true</requiresAuthorization>
        </member>
        <member name="M:ASC.Api.Employee.GroupsApi.SetMembersTo(System.Guid,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>Add new group users keeping the current users and adding new ones
            Manages the group users deleting the current users and setting new ones instead
            </summary>
            <short>
            Set group users
            </short>
            <param method="url" name="groupid">Group ID</param>
            <param name="members">User list</param>
            <returns type="ASC.Api.Employee.GroupWrapperFull, ASC.Api.Employee"></returns>
            <path>api/2.0/group/{groupid}/members</path>
            <httpMethod>POST</httpMethod>
            <requiresAuthorization>true</requiresAuthorization>
        </member>
        <member name="M:ASC.Api.Employee.GroupsApi.AddMembersTo(System.Guid,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Add new group users keeping the current users and adding new ones
            </summary>
            <short>
            Add group users
            </short>
            <param method="url" name="groupid">Group ID</param>
            <param name="members">User list</param>
            <returns type="ASC.Api.Employee.GroupWrapperFull, ASC.Api.Employee"></returns>
            <path>api/2.0/group/{groupid}/members</path>
            <httpMethod>PUT</httpMethod>
            <requiresAuthorization>true</requiresAuthorization>
        </member>
        <member name="M:ASC.Api.Employee.GroupsApi.SetManager(System.Guid,System.Guid)">
            <summary>
            Sets the user with the ID sent as a manager to the selected group
            </summary>
            <short>
            Set group manager
            </short>
            <param method="url" name="groupid">Group ID</param>
            <param name="userid">User ID to become manager</param>
            <returns type="ASC.Api.Employee.GroupWrapperFull, ASC.Api.Employee"></returns>
            <path>api/2.0/group/{groupid}/manager</path>
            <httpMethod>PUT</httpMethod>
             <requiresAuthorization>true</requiresAuthorization>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
        </member>
        <member name="M:ASC.Api.Employee.GroupsApi.RemoveMembersFrom(System.Guid,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Removes the specified group users with all the rest current group users retained
            </summary>
            <short>
            Remove group users
            </short>
            <param method="url" name="groupid">Group ID</param>
            <param name="members">User list</param>
            <path>api/2.0/group/{groupid}/members</path>
            <httpMethod>DELETE</httpMethod>
            <requiresAuthorization>true</requiresAuthorization>
            <returns type="ASC.Api.Employee.GroupWrapperFull, ASC.Api.Employee"></returns>
        </member>
        <member name="P:ASC.Api.Employee.GroupWrapperFull.Description">
            <example>Description</example>
            <order>5</order>
        </member>
        <member name="P:ASC.Api.Employee.GroupWrapperFull.Name">
            <example>Sample group</example>
            <order>2</order>
        </member>
        <member name="P:ASC.Api.Employee.GroupWrapperFull.Parent">
            <example>852d4b63-997a-4bae-aa7b-89bb87d85dbf</example>
            <order>4</order>
        </member>
        <member name="P:ASC.Api.Employee.GroupWrapperFull.Category">
            <example>74f31a85-991b-4e9b-b9e8-ae8e80d468f5</example>
            <order>3</order>
        </member>
        <member name="P:ASC.Api.Employee.GroupWrapperFull.Id">
            <example>fadd9f49-2431-4610-a518-3ca9b3843c88</example>
            <order>1</order>
        </member>
        <member name="P:ASC.Api.Employee.GroupWrapperFull.Manager">
            <type>ASC.Api.Employee.EmployeeWraper, ASC.Api.Employee</type>
            <order>9</order>
        </member>
        <member name="P:ASC.Api.Employee.GroupWrapperFull.Members">
            <type>ASC.Api.Employee.EmployeeWraper, ASC.Api.Employee</type>
            <order>10</order>
            <collection>list</collection>
        </member>
    </members>
</doc>
